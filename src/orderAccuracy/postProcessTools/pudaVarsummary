#!/bin/csh -f
#______________________________________________________________________
# This script runs puda -varsummary on the uda and reports 
# the min/max for that variable

set path = (`cat scriptPath` $path )  # update path

set temp = (getopt -a -s tcsh --long uda,ts,var -- $argv:q)

if($#argv == 0) then
  echo "Usage: $0 "
  echo "   -ts timestep"
  echo "   -var <variable to examine"
  echo "   -uda"
  exit 1
endif

set hardcopy = "n"
set depth = 1
while ($#argv)
   switch ($1:q)
     case -uda:
        set uda = $2
        shift; shift;
        breaksw
     case -ts:
        set ts = "$2"
        shift; shift
        breaksw
     case -var:
        set var = "$2"
        shift; shift
        breaksw
     case -o:        # ignore this option for now
        shift; shift
        breaksw    
     case " ":
        shift
        break
     default:
        echo "Error parsing data: "
        echo "$argv"
        exit 1
   endsw
end

echo "__________________________________" >> results
echo "timestep: $ts, uda: $uda, variable: $var" >> results

#__________________________________
# bulletproofing
which puda > /dev/null

if($status != "0" ) then
  echo "ERROR: Could not find puda"
  echo "path is: $path"
  exit(-1)
endif


#__________________________________
# run puda
puda -timesteplow $ts -timestephigh $ts -varsummary $uda > out.puda

# find the number of levels for this timestep
set n = `puda  -timesteplow $ts -timestephigh $ts -gridStats $uda | grep "Number of levels" | tr -d "[:alpha:][:punct:]"`


#__________________________________
# parse output
grep "$var" -A $n out.puda | grep Level | grep Min >> results

/bin/rm out.puda
exit
