#!/usr/bin/perl
#______________________________________________________________________
#   MAKEMENU
#
#   Warning: Make sure that perl lives in path shown above or is won't work
#
#   Todd Harman     12/15/99
#   This perl script is used to automatically extract documentation out 
#   of an existing  code provided that it contains certain keywords.  This 
#   script is one of three that is necessary to extract the code.
#
#   In particular this script examines every file in a make file and looks 
#   for a line that has the following format
#  
#------------------------------------------------------------------------
#   Function:  find_delta_time--This is an example of a long long description 
#   |^^^^^^|^| |^^^^^^^^^^^^^|^^|^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...|
#      A    B         C        D                     E
#   Filename:
#   |^^^^^^^|
#       F
#
#       CODE
#
#   /*STOP_DOC*/
#     |^^^^^^|
#        G
#------------------------------------------------------------------------
#   A = $KW_function
#   B = $KW_separator1
#   C = $Function
#   D = $KW_description
#   E = $Description
#   F = $KW_startextract
#   G = $KW_stopextract
#
#   When it finds (A) it prints (C) to a temporary file that is later 
#   sorted.  This script generates the the left frame of the web page
#   
#   Script Steps
#   1) Write HTML Header information to ICE_menu.html
#   2) Extract all of the function names from the .c files and write
#       that to the file JUNK. Sort JUNK and concatenate the output to
#       ICE_menu.html
#   3) Concatenate some closing HTML statements to ICE_menu.html   
#______________________________________________________________________
# PERL SCRIPT VARIABLE DECLARATIONS

$,                      = ' ';          # set output field separator
$\                      = "\n";         # set output record separator
$KW_function            = "Function:";  # see description above
$KW_separator1          = ":  ";
$KW_description         = "--";

#______________________________________________________________________
#   STEP 1
#   - HTML header information
#_______________________________________________________________________*/
open(HEAD,">ICE_menu.html");
print HEAD <<'EOD';
<HTML>
<HEAD><TITLE>UINTAH-ICE CFD FUNCTION DESCRIPTIONS</TITLE></HEAD>
<BODY BGCOLOR="#F5DEB3">
<FONT SIZE="3">

    <UL>
    <center><h2>
        FUNCTIONS
    </h2></center><PRE>
<LI><BOLD><A HREF="ICE_body.html#topofpage" TARGET="main">TOP</A></BOLD>
EOD
close(HEAD);

#______________________________________________________________________
#   STEP 2
#   Now pull out the function names and sort the entries
#   After sorting all the entries are placed in ICE_menu.html
#______________________________________________________________________
    open(TEMP,">JUNK");
    while (<>) 
    {
        chop;	# strip record separator
        if (/$KW_function/) 
        {                              
              ($description, $function) = split ($KW_separator1, $_, 0);
              ($function,$description)  = split($KW_description,$function);

             print TEMP "<LI><A HREF=\"ICE_body.html#$function\" TARGET=\"main\">$function</A>";        
             $ref{$function} = "<A href=\"#$function\">$function</A>";
             
              $function                 = substr($function,0)."(";
             push (@function, $function);
        }
    }
    close(TEMP);
    system("sort JUNK >> ICE_menu.html");
    system("rm JUNK");

#______________________________________________________________________
#   STEP 3 
#   Write some tail HTML code
#______________________________________________________________________
open(TAIL,">>ICE_menu.html");
print TAIL '</UL>';
print TAIL '</PRE>';
print TAIL '</BODY></HTML>';
close(TAIL);


 

   
