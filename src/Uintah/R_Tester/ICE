#!/usr/bin/python

from sys import argv,exit
from helpers.runSusTests import runSusTests, inputs_root
from helpers.modUPS import modUPS

hotBlob_AMR_3L_ups = modUPS("%s/ICE" % inputs_root(), \
                           "hotBlob_AMR.ups", \
                           ["<max_levels>3</max_levels>",\
                            "<lattice_refinement_ratio> [[5,5,1],[2,2,1]]  </lattice_refinement_ratio>",\
                            "<filebase>AMR_HotBlob_3L.uda</filebase>"])

UNUSED = [  ]

#  Test syntax: ( "name", "input file", # processors, "OS", ["flags1","flag2"])
#  flags: 
#       no_uda_comparison:      - skip the uda comparisons
#       no_memoryTest:          - skip all memory checks
#       no_restart:             - skip the restart tests
#       no_dbg:                 - skip all debug compilation tests
#       no_opt:                 - skip all optimized compilation tests
#       do_performance_test:    - Run the performance test
#       doesTestRun:            - Checks if a test successfully runs
#       abs_tolerance=[double]  - absolute tolerance used in comparisons
#       rel_tolerance=[double]  - relative tolerance used in comparisons
#       exactComparison         - set absolute/relative tolerance = 0  for uda comparisons
#       startFromCheckpoint     - start test from checkpoint. (/home/csafe-tester/CheckPoints/..../testname.uda.000) 

TESTS = [   ("advect",          "advect.ups",           1, "Linux", ["exactComparison"]),      \
            ("advect",          "advect.ups",           1, "Darwin", ["doesTestRun"]),  \
            ("rieman_sm",       "rieman_sm.ups",        1, "Linux", ["exactComparison"]),      \
            ("rieman_sm",       "rieman_sm.ups",        1, "Darwin", ["doesTestRun"]),  \
            ("hotBlob2mat",     "hotBlob2mat.ups",      1, "Linux", ["exactComparison"]),      \
            ("hotBlob2mat",     "hotBlob2mat.ups",      1, "Darwin", ["doesTestRun"]),  \
            ("hotBlob2mat_sym", "hotBlob2mat_sym.ups",  1, "Linux", ["exactComparison"]),      \
            ("hotBlob2mat_sym", "hotBlob2mat_sym.ups",  1, "Darwin", ["doesTestRun"]),  \
            ("impHotBlob",      "impHotBlob.ups",       1, "Linux", ["exactComparison"]),      \
            ("impHotBlob",      "impHotBlob.ups",       1, "Darwin", ["doesTestRun"]),  \
            ("hotBlob2mat8patch","hotBlob2mat8patch.ups", 8, "Linux",["exactComparison"]),     \
            ("advect2matAMR",   "advect2matAMR.ups",    1, "Linux", ["exactComparison"]),      \
            ("advect2matAMR",   "advect2matAMR.ups",    1, "Darwin", ["doesTestRun"]),  \
            ("hotBlob_AMR",     "hotBlob_AMR.ups",      4, "Linux", ["exactComparison"]),  \
            ("hotBlob_AMR_3L", hotBlob_AMR_3L_ups,      4, "Linux", ["exactComparison"]),  \
            ("impAdvectAMR",    "impAdvectAMR.ups", 1.1, "Linux", ["exactComparison"])
        ]

exit(runSusTests(argv, TESTS, "ICE"))
