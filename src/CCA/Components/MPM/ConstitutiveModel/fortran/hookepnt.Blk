C This include block defines pointers and dimensioning information
C for the Hookes law model.
C
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!! important !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C  CODE OWNERS: This file is your primary reference for how things should
C  be ordered in calling arguments!  
C
C  Search this file for the string "CODE OWNERS" for further instructions.
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C
C
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@   d i m e n s i o n i n g    p a r a m e t e r s @@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C  NBASICINPUTS: length of PROP array 
C  NHOOKEPROP: length of the PROP array including extra "add-on" properties
C  -----------------------------------------------------------------------
#ifdef BRANNON_IMPLNONE
      INTEGER NBASICINPUTS,NEOSINPUT,NHOOKEPROP
#endif
C----------------------------------------------------------------------------
C
      PARAMETER (NBASICINPUTS=2)
#ifdef HOOKE_EOS
      PARAMETER (NUIEOSMG=22,NDCEOSMG=13,NVIEOSMG=5)
      PARAMETER (NEOSINPUTS=NUIEOSMG+NDCEOSMG+NVIEOSMG)
#endif
C
C
C     Total number of properties
#ifdef HOOKE_EOS
      PARAMETER (NHOOKEPROP=NBASICINPUTS+NEOSINPUTS)
#else
      PARAMETER (NHOOKEPROP=NBASICINPUTS)
#endif
C
C
C
C
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@   p o i n t e r s   t o  p r o p e r t i e s @@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C  IP[propname]: pointers to property array
C                Examples: the property B0 is in PROP(IPB0)
C                          the property FSLOPEI is in PROP(IPFSLOPI)
C                          and so on...
C-------------------------------------------------------------------------
#ifdef BRANNON_IMPLNONE
      INTEGER IPB0, IPG0
#ifdef HOOKE_EOS
     $ ,IPRHO0,IPTMPR0,IPSNDSP0,IPS1MG,IPGRPAR,IPCV,IPESFT,
     $ IPRP,IPPS,IPPE,IPCE,IPRNSUB,IPS2MG,IPTYP,IPRO,IPTO,IPSMG,
     $ IPGRPARO,IPBMG,IPXB,IPRNBMG,IPRPWR,IPA1MG,IPA2MG,IPA3MG,
     $ IPA4MG,IPA5MG,IPA0MG,IPAEMG,IPFK0,IPAF,IPPF,IPXF,IPCF,IPRMX,
     $ IPVI1MG,IPVI2MG,IPVI3MG,IPVI4MG,IPVI5MG
#endif
#endif

C-------------------------------------------------------------------------
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!! important !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C     CODE OWNERS: The host code is expected to read user inputs and
C     save them into a single array using the ordering indicated below.
C     The list below defines pointers to the property array. Every entry
C     is of the form "IPname", where 'name' is the string that we suggest
C     should be used as the property name. For example, the user input
C     that is called "B0" in the Hookes law model  should be read
C     from the user with the keyword "B0" and, as indicated below,
C     this parameter should be saved in 14th spot of the property array.
C     Note that some pointers farther down this list are wrapped in
C     ifdefs. Therefore your input parser will need similar ifdefs.
C
C   NBASICINPUTS points to last regular user input. 
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      PARAMETER(IPB0       =  1) !Initial intact elastic bulk modulus (stress)
      PARAMETER(IPG0       =  2) !Initial intact elastic shear modulus (stress)
#ifdef HOOKE_EOS
      PARAMETER(IEOSMGCT   = NBASICINPUTS)
      PARAMETER(IPRHO0     = IEOSMGCT +  1)
      PARAMETER(IPTMPR0    = IEOSMGCT +  2)
      PARAMETER(IPSNDSP0   = IEOSMGCT +  3)
      PARAMETER(IPS1MG     = IEOSMGCT +  4)
      PARAMETER(IPGRPAR    = IEOSMGCT +  5)
      PARAMETER(IPCV       = IEOSMGCT +  6)
      PARAMETER(IPESFT     = IEOSMGCT +  7)
      PARAMETER(IPRP       = IEOSMGCT +  8)
      PARAMETER(IPPS       = IEOSMGCT +  9)
      PARAMETER(IPPE       = IEOSMGCT + 10)
      PARAMETER(IPCE       = IEOSMGCT + 11)
      PARAMETER(IPNSUB     = IEOSMGCT + 12)
      PARAMETER(IPS2MG     = IEOSMGCT + 13)
      PARAMETER(IPTYP      = IEOSMGCT + 14)
      PARAMETER(IPRO       = IEOSMGCT + 15)
      PARAMETER(IPTO       = IEOSMGCT + 16)
      PARAMETER(IPS        = IEOSMGCT + 17)
      PARAMETER(IPGRPARO   = IEOSMGCT + 18)
      PARAMETER(IPB        = IEOSMGCT + 19)
      PARAMETER(IPXB       = IEOSMGCT + 20)
      PARAMETER(IPNB       = IEOSMGCT + 21)
      PARAMETER(IPPWR      = IEOSMGCT + NUIEOSMG)
C     ________________________________________________________________________
C     EOSMG derived constants
      PARAMETER(IDCEOSMGCT=IEOSMGCT+NUIEOSMG)
      PARAMETER(IPA1MG     = IDCEOSMGCT +  1)
      PARAMETER(IPA2MG     = IDCEOSMGCT +  2)
      PARAMETER(IPA3MG     = IDCEOSMGCT +  3)
      PARAMETER(IPA4MG     = IDCEOSMGCT +  4)
      PARAMETER(IPA5MG     = IDCEOSMGCT +  5)
      PARAMETER(IPA0MG     = IDCEOSMGCT +  6)
      PARAMETER(IPAEMG     = IDCEOSMGCT +  7)
      PARAMETER(IPFK0      = IDCEOSMGCT +  8)
      PARAMETER(IPAF       = IDCEOSMGCT +  9)
      PARAMETER(IPPF       = IDCEOSMGCT + 10)
      PARAMETER(IPXF       = IDCEOSMGCT + 11)
      PARAMETER(IPCF       = IDCEOSMGCT + 12)
      PARAMETER(IPRMX      = IDCEOSMGCT + NDCEOSMG)
C     ________________________________________________________________________
C     EOSMG VI 
      PARAMETER(IVIEOSMGCT=IDCEOSMGCT+NDCEOSMG)
      PARAMETER(IPVI1MG     = IVIEOSMGCT +  1)
      PARAMETER(IPVI2MG     = IVIEOSMGCT +  2)
      PARAMETER(IPVI3MG     = IVIEOSMGCT +  3)
      PARAMETER(IPVI4MG     = IVIEOSMGCT +  4)
      PARAMETER(IPVI5MG     = IVIEOSMGCT +  NVIEOSMG)
#endif
C
C
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@   p o i n t e r s   t o  s t a t e   v a r i a b l e s  @@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
C  K[isvname]: pointers to the state variable array
C---.----1----.----2----.----3----.----4----.----5----.----6----.----7--
#ifdef BRANNON_IMPLNONE
      INTEGER NHOOKEISV,KMSG
#endif

#ifdef BRANNON_IMPLNONE
      INTEGER KTMPR,KENRGY,KRHO,KSNDSP,KPRES,KALPHA
#endif
#ifdef HOOKE_EOS
      PARAMETER (NHOOKEISV=8) !hardwired for SQA
#else
      PARAMETER (NHOOKEISV=1) !hardwired for SQA
#endif
C
C   selected pointers to the state variable array
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!! important !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
C   CODE OWNERS:
C   Cross-check against subroutine HOOKERXV.   Even if you don't use HOOKERXV,
C   that's the routine to examine if you want to understand these values.
C   The following list shows pointers to internal state variables (ISVs).
C   A pointer with the name "Kname" should have a plot keyword "name",
C   and the value of the pointer shows where the ISV should be stored
C   in the ISV calling argument, called SVARG in the main physics routine.
C   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
      PARAMETER (KMSG     =1)  !Fake ISV for tracking installation
#ifdef HOOKE_EOS
      PARAMETER (KTMPR   =2 )  !Temperature
      PARAMETER (KENRGY  =3 )  !Energy
      PARAMETER (KDISTENRGY  =4 )  !Energy
      PARAMETER (KRHO    =5 )  !Density
      PARAMETER (KSNDSP  =6 )  !Soundspeed
      PARAMETER (KPRES   =7 )  !Pressure
      PARAMETER (KALPHA  =8 )  !Porosity parameter
#endif
