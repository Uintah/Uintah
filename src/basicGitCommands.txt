//__________________________________
// Basic Git Commands

git clone <repository>                     // copy a remote repository into a new local directory

git checkout <branch>                      // switch between branches (e.g., master, kokkos_dev, etc)

git checkout -b <new_branch>               // create and checkout a new branch

git pull                                   // bring changes from a remote repository into a local repository

git status                                 // show the status of a local repository

git diff                                   // show differences between commits, local/remote repositories, etc

git add <file>                             // add files to the list that will be committed

git rm <file>                              // removes files from the list that will be committed and the working directory

git commit -m "<msg>"                      // commit changes to a local repository

git push                                   // push committed local changes to a remote repository

git reset --hard                           // discard uncommitted local changes in tracked files

git checkout -- <path or file>              // discard local changes (not committed) to a directory or file(s)

git revert <commit>                        // reverse prior commits

git ls-files --modified | xargs git add    // add all modified files 

Notes:
- git push is needed after git commit to bring changes into a remote repository
- git pull incurs a git merge and may create a new merge commit
- git revert creates a new commit reversing the specified commit(s)

If you have changes, and you want/need to grab someone else's changes:

git stash
git pull
git stash pop

At this point, you can add, commit and push your changes if you want.

To see what is stashed, do:

git stash list
and then:
git stash show -p stash@{stash_id}



//__________________________________
// Branch Workflow Example

git clone https://github.com/Uintah/Uintah.git  // download Uintah
  or
git clone git@github.com:Uintah/Uintah.git      // if you're using an ssh key for authentication

cd Uintah                                       // move to the newly downloaded repository

git checkout Cyberstone2                        // switch to the target branch

* modify Cyberstone2 code *

git add <files>                                 // add modified files to the list that will be committed
git commit -m "<msg>"                           // commit changes to the local repository
git push                                        // push committed local changes to the remote repository


//__________________________________
// To setup ssh keys for authentication

ssh-keygen -t ed25519 -C "<git email address>"   // generate the ssh key
more ~/.ssh/id_ed25519.pub                       // copy the key into the clipboard

Login to https://github.com
  Profile->settings->ssh and gpg keys            // paste the key and label it by the machine name

ssh -T git@github.com                            // To test the sshkey

Repeat for each machine you want to commit from.

If the repository uses URL address (https://github.com) convert it to one that accepts ssh-keys

git remote set-url origin git@github.com:/Uintah/Uintah



//__________________________________
// Branch Merge Example

git checkout master                   // switch to the master branch
git pull                              // update to the latest remote revision

git checkout kokkos_dev               // switch to the target branch
git pull                              // update to the latest remote revision

git merge master --no-commit --no-ff  // merge master into kokkos_dev without changing or updating the remote branch

* inspect merge and resolve conflicts *

git commit                            // commit changes to the local repository
git push                              // push committed local changes to the remote repository

Notes:
- git merge brings commit history from the source branch into the destination branch



//__________________________________
// Branch Migration Example

git clone https://github.com/Uintah/Uintah.git                              // download Uintah
cd Uintah                                                                   // move to the newly downloaded repository
git checkout kokkos_dev                                                     // switch to the target branch to migrate
git pull                                                                    // update to the latest remote revision

git remote -v                                                               // check which remote repository is tracked
git remote set-url origin https://github.com/jholmen/Uintah-kokkos_dev.git  // change the origin remote URL to the repository to migrate to
git remote -v                                                               // check which remote repository is tracked

git push origin kokkos_dev                                                  // push the branch to the new repository

Notes:
- The branch to migrate to must have an initial commit
- The branch in the new repository can be merged to the default (e.g., master) branch to associate GitHub activity with a GitHub user account

//______________________________________________________________________
//    Move a single commit from (A) into a branch (B)
//   Where A = master and B = yoyodyne

mkdir git                                                                   // start with a clean slate
cd git
git clone --verbose --progress --depth 100 --branch B https://github.com/Uintah/Uintah.git B

cd B
git remote add A https://github.com/Uintah/Uintah.git
git fetch --depth 100 A

git cherry-pick <hash>
git remote set-url origin git@github.com:Uintah/Uintah
git push

git cherry-pick <hash>
git push

< repeat>

//__________________________________
//  To pull a single directory <src/scripts> from master
 git init
 git remote add origin -f git@github.com:/Uintah/Uintah or https://github.com/Uintah/Uintah.git
 git config core.sparsecheckout true
 nedit .git/info/sparse-checkout 
      add src/scripts
 git pull origin master


//__________________________________
// Additional Resources

Git Learning Resources:
https://try.github.io/

Side-by-Side Comparisons of Git and SVN Commands:
https://backlog.com/git-tutorial/reference/commands/

Git Cheatsheet
http://www.ndpsoftware.com/git-cheatsheet.html;

Virtual Sandbox to Experiment with Git Commands:
http://git-school.github.io/visualizing-git/#free-remote

Virtual Sandbox and Tutorial to Experiment with Git Commands:
https://learngitbranching.js.org/

Why Is Git so Hard?:
http://merrigrove.blogspot.com/2014/02/why-heck-is-git-so-hard-places-model-ok.html

Git Branching:
https://learngitbranching.js.org

Migrating to a New Git Repository:
https://help.looker.com/hc/en-us/articles/360001310847-Migrating-to-a-New-Git-Repository

Why Are My Contributions Not Showing Up on My Profile?:
https://docs.github.com/en/github/setting-up-and-managing-your-github-profile/why-are-my-contributions-not-showing-up-on-my-profile
