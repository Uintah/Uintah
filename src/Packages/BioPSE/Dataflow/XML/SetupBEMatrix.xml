<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->

<component name="SetupBEMatrix" category="Forward">
  <overview>
    <authors>
      <author>Saeed Babaeizadeh , Michael Callahan</author>
    </authors>
    <summary>
      The module solves a discretized model of Laplace's equation in a
3D volume conductor model using "surface method", given a particular
type of boundary condition.    </summary> 
    <description>
      <p>The specific problem the authors had in mind was the forward
problem of electrocardiography which consists of calculating, for a
given time instant, the potential distribution generated at the
surface of a specified volume conductor due the presence of the
selected equivalent sources on a surface inside the conductor (The
module should work for other problems which fit the same physical
description, but has only been tested for forward
electrocardiography.) In surface methods, the different volume
conductor regions are assumed to have a constant and isotropic
conductivity, and only the interfaces between the different regions
are triangulated and represented in the numerical model. This module
uses the "Transfer-Coefficient Approach" or "solid-angle method"
developed by Barr et al. [i], as extended to include torso
inhomogeneities in [ii] and with an improved algorithm for computing
the solid angles [iii]. </p>

      <p>[i] R.C. Barr, M. Ramsey, and M.S. Spach, &quot;Relating
epicardial to body surface potential distribution by means of transfer
coefficients based on geometry measurement,&quot; IEEE Trans. Biomed.
Eng., vol. BME-24, pp. 1-11, 1977.</p>

      <p>[ii] P.C. Stanley, T.C. Pilkington, and M.N. Morrow.,
&quot;The effects of thoracic inhomogeneities on the relationship
between epicardial and torso potentials,&quot; IEEE Transactions on
Biomedical Engineering, BME-33, pp.273-284, 1986. </p>

      <p> [iii] J.A. De Munck, &quot;Linear discretization of the
volume conductor boundary integral equation using analytically
integrated elements,&quot; IEEE Trans. Biomed. Eng., vol. 39, no. 9,
1992.</p>

      <p>This module requires the triangulated surfaces of all the
objects as inputs and creates the forward solution matrix as output.
The geometric relationships of the surfaces are defined as described
below, as are the boundary conditions to apply.</p>

      <p>The number of input fields is two or greater and can be
unlimited but one of them must be defined as the "source surface"
where the Dirichlet boundary condition is given and another one
defined as the "measurement surface" where the quantity of interest is
to be calculated. To do this we use a "SetProperty" module for each of
these two designated surfaces with `Property'= `in/out' and `Value' =
`in' for the "source surface" and `Value' = `out' for the "measurement
surface". Insulating boundary conditions (Neumann boundary conditions)
are assumed on the outermost surface. </p>

      <p>To define the geometric relationships of the various fields,
for each of the input fields use a &quot;SetProperty&quot; module with
`Property'=`Inside Conductivity' and `Value' = the numerical value of
the internal conductivity of the corresponding homogeneous region.</p>

      <p> The output is the forward solution matrix. This matrix can
be multiplied to a Dirichlet boundary condition on the &quot;source
surface&quot; to result in the boundary values on the
&quot;measurement surface&quot;. This matrix is needed as an input for
the modules "TikhonovSVD", "Tikhonov" and "TSVD".</p>
    </description>
  </overview>

  <io>
    <inputs lastportdynamic="yes">
      <!-- one of (device port file) -->
      <port>
        <name>Surface</name>
        <description>
          <p>A surface in the module.</p>
        </description>
        <datatype>SCIRun::Field</datatype>
      </port>
    </inputs>

    <outputs>
      <!-- one of (device port file) -->
      <port>
        <name>BEM Forward Matrix</name>
        <description>
          <p>Sends a handle to the transfer matrix</p>
          <note>
            <p>The handle is to base class of DenseMatrix (Matrix)</p>
          </note>
        </description>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
</component>
