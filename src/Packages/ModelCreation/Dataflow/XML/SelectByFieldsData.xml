<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">
<?xml-stylesheet href="../../../../../doc/package-component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->

<component name="SelectByFieldsData" category="FieldsData">
  <overview>
    <authors>
      <author>Jeroen Stinstra</author>
    </authors>
    <summary>
      This module computes a new scalar, vector or tensor array based upon a 
      combination of scalars, vectors, and tensors. 
    </summary>
    <description>
      <section>
      <title>Overview</title>
      <p>
      This module lets the user compute a new scalar, vector, or tensor array. 
      A scalar array is a nx1 matrix, a vector array is a nx3 matrix, and a 
      tensor array is a nx6 or nx9 matrix (A nx6 tensor is defined as xx, xy, 
      xz, yy, yz, zz). These matrices are used to store scalar, vector or 
      tensor data associated with a mesh or field. To compute new scalar,
      vector or tensor values one has to supply a user-defined function that 
      computes the new values. This function can be either supplied through the 
      GUI or it can be supplied as a string. The module loops through each array 
      element and uses the user-defined function to compute a 
      new value. The output in this case is a function of scalar, vector,
      or tensor arrays. The function is applied by taking the next element of
      each array and applying the function to these variables. When the array
      size of one of the input variables is 1, it is assumed to be a constant
      value and it is taken each time the module gets a value from that array.
      The final size of the array is determined by the size of the other
      input arrays, or by the separate size input port. The latter is supplied 
      in case all inputs are of size one, in which case the module needs a way 
      to determine the size of the output.
      </p>
      </section>

      <section>
      <title>Input elements</title>
      <p>
      There are several input elements available to compute a new scalar values. 
      A short list is displayed below.
      </p>
      
      <p>
      INDEX: The index number, which is the row index. Indexing starts at 0.
      </p>
      
      <p>
      SIZE: The size of the of the new array. 
      </p>
      
      <p>
      A,B,C, ...: Matrices representing either scalar, vector, or tensor arrays.
      A scalar array is a nx1 matrix with scalar values, a vector array is a nx3
      matrix and a tensor array is either a nx6 or nx9 matrix. In case of 6
      elements they are stored in the following order: xx,xy,xz,yy,yz, and zz. 
      The number of elements in each array can be either one or the number of 
      scalars in the array. In case only one element is given, it is 
      assumed to be a constant that applies to all data elements. 
      This module allows up to 26 different matrices to be used. 
      </p>
      </section>
      
      <section>
      <title>Output elements</title>     
      <p>
      The output is stored in the variable RESULT.
      </p>
      </section>      
    
      <section>
      <title>See Also </title>
      <p>
      <modref package="ModelCreation" name="SelectByFieldData" />	
      <modref package="ModelCreation" name="ComputeFieldData" />	
      <modref package="ModelCreation" name="ComputeFieldsData" />	
      </p>
      </section>      
    
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="yes">
      <port>
        <name>Field1</name>
        <datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>Field2</name>
        <datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>Field3</name>
        <datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>Function</name>
        <datatype>SCIRun::String</datatype>
      </port>      
      <port>
        <name>Array</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>SelectionMask</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>SelectionIndices</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
</component>

