#!/bin/bash
#______________________________________________________________________
# This script does the following:
#   - create a configure_command file
#   - execute the configure_command file
#   - Compiles the code
#     If the code fails to compile the logs are created
#   - Adds information to the web log
#______________________________________________________________________

export OS
mode=$1 # dbg or opt
MACHINE=`hostname`
MODIFY_SRC="false"

#__________________________________
# construct the configure_command file

if [ "$OS" = "Linux" ]; then


  DBG_CONFIGURE="    --enable-debug \\
      --enable-64bit \\
      --enable-sci-malloc \\
      --enable-scinew-line-numbers \\"

  OPT_CONFIGURE="    --enable-64bit \\
      --enable-assertion-level=0 \\
     '--enable-optimize=-O3 -march=native' \\"

  #_________________
  #  machine specific variables
  if [ "$MACHINE" == "lscad5" ]; then

    COMMON="      --with-mpi-include=/usr/lib/x86_64-linux-gnu/openmpi\\
     --with-mpi-lib=/usr/lib/x86_64-linux-gnu/openmpi/lib\\
     --enable-mpm \\"

    ENV="     CC=/usr/bin/mpicc \\
     CXX=/usr/bin/mpic++ \\
     F77=/usr/bin/gfortran"
  fi
fi

#__________________________________
#  If requested modify the src code.
if [ "$MODIFY_SRC" = "true"  ]; then
  echo "Executing modifySrc script"
  "${BUILDROOT}"/"src"/"R_Tester"/"modifySrc"
fi

#__________________________________
echo "#!/bin/csh" > configure_command
echo "../../src/configure \\" >> configure_command

if [ "$mode" = "dbg" ]; then
  echo "$DBG_CONFIGURE" >> configure_command
  echo "$COMMON" >> configure_command
  echo "$ENV" >> configure_command
elif [ "$mode" = "opt" ]; then
  echo "$OPT_CONFIGURE" >> configure_command
  echo "$COMMON" >> configure_command
  echo "$ENV" >> configure_command
fi

chmod a+x configure_command
retval="0"

#__________________________________
echo "" >> $HTMLLOG
echo "Compiling" >> $HTMLLOG
echo "==================================" >> $HTMLLOG
echo "" >> $HTMLLOG
echo "Starting configure on `date`" >> $HTMLLOG
echo "  with command" >> $HTMLLOG
cat configure_command >> $HTMLLOG
echo "" >> $HTMLLOG


#__________________________________
# determing which "make" to use
which make
retval=$?
which gmake
retval1=$?

if [ $retval -eq 0 ]; then
  MAKE=make
elif [ $retval1 -eq 0 ]; then
  MAKE=gmake
fi

#__________________________________
#  run configure
/bin/rm -f "$BUILDROOT"/${mode}/configure.log
./configure_command > "$BUILDROOT"/${mode}/configure.log 2>&1
retval=$?

chgrp -R $COMMON_GROUP *
chmod -R g+rwX *


#__________________________________
# configure:  failed
if [ $retval -ne 0 ]; then
  echo "Configure failed:" >> $HTMLLOG
  cat "${BUILDROOT}"/"${mode}"/configure.log >> $HTMLLOG

  echo "*** Configure failed with code $retval"
  echo ""
  echo "Showing configure log:"
  cat "${BUILDROOT}/${mode}/configure.log"

  exit 1
fi

#__________________________________
# configure:  Passed
echo "Configure successful"

#__________________________________
#  start compiling
echo "Starting build on `date`:" >> $HTMLLOG

cd "${BUILDROOT}/${mode}/build"

/bin/rm -f "../make.log" "../make_results.log"

$MAKE -k -j$MAKE_PARALLELISM >> ../make.log 2>&1

#  strike one try again
retval=$?
if [ $retval != "0" ]; then
  # try it again -- it may not go all the way the first time
  echo "Failed first compile, try again..."
  $MAKE -k -j$MAKE_PARALLELISM >> ../make2.log 2>&1
  retval=$?
fi

#  strike two try again
if [ $retval != "0" ]; then
  # try it again -- it may not go all the way the first time
  echo "Failed second compile, try again..."
  $MAKE -k -j$MAKE_PARALLELISM > ../make3.log 2>&1
  retval=$?
fi

if [ $retval != "0" ]; then
  # failed 3 times
  if [[ -x "${BUILDROOT}/${mode}/build/StandAlone/sus" && -x "${BUILDROOT}/${mode}/build/StandAlone/compare_uda" ]]; then
    # sus compiled
    echo "__________________________________"
    echo "*** Make failed, but sus & compare_uda compiled successfully"
    echo "  Build errors log:"
    echo "    ${BUILDROOT}/${mode}/make3.log"
    echo "  Full build log:"
    echo "    ${BUILDROOT}/${mode}/make.log"
    echo ""

    # Add compilation errors to webpage
    cat ../make3.log >> "$HTMLLOG"

  else
    #sus didn't compile
    exit 1
  fi
fi

echo "Sus compiled successfully: `date +%I:%M:%S`"
echo "Sus compiled successfully: `date +%I:%M:%S`" >> $HTMLLOG
exit 0
