# Selective instrumentation: Specify an exclude/include list.

BEGIN_EXCLUDE_LIST

void Uintah::Patch::findCellAndShapeDerivatives(const SCIRun::Point &, IntVector *, SCIRun::Vector *) const  

SCIRun::Point Uintah::Level::positionToIndex(const SCIRun::Point &) const  

void Uintah::Patch::findCellAndWeightsAndShapeDerivatives(const SCIRun::Point &, IntVector *, double *, SCIRun::Vector *) const  

Uintah::Box Uintah::Level::getBox(const IntVector &, const IntVector &) const  

SCIRun::Point Uintah::Level::getNodePosition(const IntVector &) const  

Uintah::Box Uintah::Patch::getBox() const  

void Uintah::Patch::findCellAndWeights(const SCIRun::Point &, IntVector *, double *) const  

bool Uintah::BoxGeometryPiece::inside(const SCIRun::Point &) const  

int SCIRun::Point::operator==(const SCIRun::Point &) const  

std::string Uintah::ForceBC::getType() const  

int Uintah::Material::getDWIndex() const  

const SCIRun::Point &Uintah::ForceBC::getUpperRange() const  

const SCIRun::Point &Uintah::ForceBC::getLowerRange() const  

bool SCIRun::Thread::isInitialized()  

bool SCIRun::pair_less#
double &SCIRun::SparseRowMatrix::get#
void SCIRun::BBox::extend#
SCIRun::Point SCIRun::BBox::min#
SCIRun::Point SCIRun::BBox::max#

void Uintah::LinearInterpolator::findCellAndWeightsAndShapeDerivatives#
SCIRun::Point Uintah::Patch::nodePosition#
IntVector Uintah::Patch::getInteriorNodeLowIndex#
void Uintah::LinearInterpolator::findCellAndWeights#
bool Uintah::Level::containsPoint#
void Uintah::LinearInterpolator::findCellAndShapeDerivatives#
double Uintah::MPMMaterial::getInitialDensity#
IntVector Uintah::GeometryObject::getNumParticlesPerCell#
SCIRun::Vector Uintah::Patch::dCell#
Uintah::ConstitutiveModel *Uintah::MPMMaterial::getConstitutiveModel#
IntVector Uintah::Level::getCellIndex#
SCIRun::Vector Uintah::ConstitutiveModel::getInitialFiberDir#
bool Uintah::Patch::findCell#
void Uintah::ParticleCreator::applyForceBC#
void Uintah::ParticleCreator::initializeParticle#

END_EXCLUDE_LIST

BEGIN_FILE_EXCLUDE_LIST
*AllocOS.cc
*Allocator.cc
*malloc.cc
*new.cc
*sus.cc
*Thread_pthreads.cc
*main.cc
END_FILE_EXCLUDE_LIST



# Selective instrumentation: Specify an exclude/include list.

BEGIN_EXCLUDE_LIST
int SCIRun::DebugBuf::overflow(int)  
void Uintah::TaskGraph::createDetailedDependencies(Uintah::DetailedTasks *, Uintah::LoadBalancer *, Uintah::DetailedTask *, Uintah::Task::Dependency *, Uintah::CompTable &, bool)  
std::ostream &operator<<(std::ostream &, const IntVector &)  
bool Uintah::SideBCData::inside(const SCIRun::Point &) const  
void Uintah::Patch::findNodesFromCell(const IntVector &, IntVector *) const  
void Uintah::Patch::computeExtents(Uintah::Patch::VariableBasis, const IntVector &, const IntVector &, const IntVector &, IntVector &, IntVector &) const  
Uintah::Patch::BCType Uintah::Patch::getBCType(Uintah::Patch::FaceType) const  
bool Uintah::RefCounted::removeReference() const  
void Uintah::RefCounted::addReference() const  
SCIRun::Point Uintah::Level::getCellPosition(const IntVector &) const  
MPI_Isend()  
void Uintah::RefCounted::~RefCounted()  
Uintah::RefCounted &Uintah::RefCounted::RefCounted()  
int Uintah::Task::mapDataWarehouse(Uintah::Task::WhichDW) const  
int SCIRun::Thread::couldBlock(const char *)  
void SCIRun::Thread::couldBlockDone(int)  
bool Uintah::VarLabelMatlPatch::operator<(const Uintah::VarLabelMatlPatch &) const  
Uintah::EquationOfState *Uintah::ICEMaterial::getEOS() const  
void printTask(std::ostream &, Uintah::DetailedTask *)  
IntVector Uintah::Level::mapCellToCoarser(const IntVector &) const  
IntVector Uintah::Patch::neighborsHigh() const  
IntVector Uintah::Patch::neighborsLow() const  
IntVector Uintah::Patch::getLowIndex(Uintah::Patch::VariableBasis, const IntVector &) const  
IntVector Uintah::Patch::getHighIndex(Uintah::Patch::VariableBasis, const IntVector &) const  
bool Uintah::CompTable::Data::operator==(const Uintah::CompTable::Data &)  
void Uintah::IdealGas::computePressEOS(double, double, double, double, double &, double &, double &)  
void Uintah::Level::selectPatches(const IntVector &, const IntVector &, Uintah::Level::selectType &) const  
void Uintah::BCData::~BCData()  
void Uintah::TaskGraph::remembercomps(Uintah::DetailedTask *, Uintah::Task::Dependency *, Uintah::CompTable &)  
void Uintah::Patch::getOtherLevelPatches(int, Uintah::Patch::selectType &) const  
void Uintah::PatchRangeTree::query(const IntVector &, const IntVector &, Uintah::Patch::selectType &)  
bool Uintah::CompTable::findcomp(Uintah::Task::Dependency *, const Uintah::Patch *, int, Uintah::DetailedTask *&, Uintah::Task::Dependency *&, const Uintah::ProcessorGroup *)  
Uintah::CompTable::Data &Uintah::CompTable::Data::Data(Uintah::DetailedTask *, Uintah::Task::Dependency *, const Uintah::Patch *, int)  
double SCIRun::Time::currentSeconds()  
void Uintah::Patch::setBCType(Uintah::Patch::FaceType, Uintah::Patch::BCType)  
double Uintah::IdealGas::computeRhoMicro(double, double, double, double, double)  
void Uintah::Variable::~Variable()  
Uintah::Variable &Uintah::Variable::Variable()  
bool Uintah::ComputeSubset<const Uintah::Patch *>::compareElems(const Uintah::Patch *, const Uintah::Patch *)  
void Uintah::CCVariableBase::getMPIBuffer(Uintah::BufferInfo &, const IntVector &, const IntVector &)  
Uintah::BCData &Uintah::BCData::operator=(const Uintah::BCData &)  
void Uintah::DetailedTasks::possiblyCreateDependency(Uintah::DetailedTask *, Uintah::Task::Dependency *, const Uintah::Patch *, Uintah::DetailedTask *, Uintah::Task::Dependency *, const Uintah::Patch *, int, const IntVector &, const IntVector &)  
void Uintah::Sendlist::~Sendlist()  
const Uintah::BoundCondBase *Uintah::Patch::getArrayBCValues(Uintah::Patch::FaceType, int, std::string, std::vector<IntVector, std::allocator<IntVector>> &, std::vector<IntVector, std::allocator<IntVector>> &, std::vector<IntVector, std::allocator<IntVector>> &, std::vector<IntVector, std::allocator<IntVector>> &, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::CCVariableBase::~CCVariableBase()  
Uintah::CCVariableBase &Uintah::CCVariableBase::CCVariableBase()  
void Uintah::BufferInfo::add(void *, int, MPI_Datatype, bool)  
Uintah::Patch::VariableBasis Uintah::Patch::translateTypeToBasis(Uintah::TypeDescription::Type, bool)  
void Uintah::PackBufferInfo::get_type(void *&, int &, MPI_Datatype &, MPI_Comm)  
void Uintah::Patch::computeVariableExtents(Uintah::Patch::VariableBasis, const IntVector &, Uintah::Ghost::GhostType, int, IntVector &, IntVector &) const  
void Uintah::Patch::computeVariableExtents(Uintah::TypeDescription::Type, const IntVector &, Uintah::Ghost::GhostType, int, IntVector &, IntVector &) const  
Uintah::BCData &Uintah::BCData::BCData(const Uintah::BCData &)  
void Uintah::FastMatrix::destructiveSolve(double *, double *)  
void Uintah::BufferInfo::addSendlist(Uintah::RefCounted *)  
bool Uintah::LoadBalancerCommon::inNeighborhood(const Uintah::Patch *)  
void Uintah::DependencyBatch::reset()  
double Uintah::IdealGas::getAlpha(double, double, double, double)  
void Uintah::PackBufferInfo::~PackBufferInfo()  
void Uintah::Patch::getGhostOffsets(Uintah::Patch::VariableBasis, Uintah::Ghost::GhostType, int, IntVector &, IntVector &)  
const Uintah::LevelP &Uintah::Grid::getLevel(int) const  
IntVector Uintah::Patch::getSFCYHighIndex() const  
IntVector Uintah::Patch::getSFCXHighIndex() const  
IntVector Uintah::Patch::getSFCZHighIndex() const  
const Uintah::BoundCondBase *Uintah::BCDataArray::getBoundCondData(int, std::string, int) const  
unsigned int Uintah::CompTable::Data::string_hash(const char *)  
void Uintah::CompTable::Data::~Data()  
MPI_Datatype Uintah::TypeDescription::getMPIType() const  
Uintah::ProblemSpecP Uintah::ProblemSpec::findBlock(const std::string &) const  
void Uintah::BCDataArray::~BCDataArray()  
void Uintah::PackBufferInfo::pack(MPI_Comm, int &)  
const Uintah::LevelP &Uintah::Level::getRelativeLevel(int) const  
int Uintah::SimpleLoadBalancer::getPatchwiseProcessorAssignment(const Uintah::Patch *)  
void Uintah::CompTable::remembercomp(Uintah::DetailedTask *, Uintah::Task::Dependency *, const Uintah::PatchSubset *, const Uintah::MaterialSubset *, const Uintah::ProcessorGroup *)  
Uintah::VelocityBoundCond *Uintah::VelocityBoundCond::clone()  
bool CompareDep::operator()(Uintah::DependencyBatch *, Uintah::DependencyBatch *)  
Uintah::constHandle<Uintah::ComputeSubset<const Uintah::Patch *>> Uintah::Task::Dependency::getPatchesUnderDomain(const Uintah::PatchSubset *) const  
void Uintah::Patch::computeVariableExtents(Uintah::Patch::VariableBasis, const IntVector &, Uintah::Ghost::GhostType, int, Uintah::Patch::selectType &, IntVector &, IntVector &) const  
IntVector Uintah::Patch::getInteriorNodeHighIndex() const  
Uintah::constHandle<Uintah::MaterialSubset> Uintah::Task::Dependency::getMaterialsUnderDomain(const Uintah::MaterialSubset *) const  
void Uintah::SideBCData::getBCData(Uintah::BCData &) const  
Uintah::DensityBoundCond *Uintah::DensityBoundCond::clone()  
Uintah::SideBCData *Uintah::SideBCData::clone()  
Uintah::PressureBoundCond *Uintah::PressureBoundCond::clone()  
Uintah::TemperatureBoundCond *Uintah::TemperatureBoundCond::clone()  
void Uintah::CommRecMPI::add(MPI_Request, int, Uintah::AfterCommunicationHandler *, std::string, int, int)  
void Uintah::VelocityBoundCond::~VelocityBoundCond()  
void Uintah::BufferInfo::~BufferInfo()  
void Uintah::PressureBoundCond::~PressureBoundCond()  
void Uintah::TemperatureBoundCond::~TemperatureBoundCond()  
void Uintah::DensityBoundCond::~DensityBoundCond()  
IntVector Uintah::Level::mapCellToFiner(const IntVector &) const  
Uintah::DetailedTask &Uintah::DetailedTask::DetailedTask(Uintah::Task *, const Uintah::PatchSubset *, const Uintah::MaterialSubset *, Uintah::DetailedTasks *)  
void Uintah::TaskGraph::createDetailedTask(Uintah::DetailedTasks *, Uintah::Task *, const Uintah::PatchSubset *, const Uintah::MaterialSubset *)  
void Uintah::DetailedTask::~DetailedTask()  
bool Uintah::Box::overlaps(const Uintah::Box &, double) const  
Uintah::BCData &Uintah::BCData::BCData()  
Uintah::ProblemSpecP Uintah::ProblemSpec::findNextBlock(const std::string &) const  
void Uintah::DetailedTasks::setScrubCount(const Uintah::VarLabel *, int, const Uintah::Patch *, int, std::vector<Uintah::OnDemandDataWarehouseP, std::allocator<Uintah::OnDemandDataWarehouseP>> &)  
const Uintah::SuperPatch *Uintah::LocallyComputedPatchVarMap::getConnectedPatchGroup(const Uintah::VarLabel *, const Uintah::Patch *) const  
void Uintah::Variable::setForeign()  
void Uintah::Patch::getFace(Uintah::Patch::FaceType, const IntVector &, const IntVector &, IntVector &, IntVector &) const  
Uintah::PackBufferInfo &Uintah::PackBufferInfo::PackBufferInfo()  
Uintah::BufferInfo &Uintah::BufferInfo::BufferInfo()  
int Uintah::BufferInfo::count() const  
void Uintah::PackBufferInfo::unpack(MPI_Comm)  
void Uintah::BCDataArray::getSFCXIterator(int, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::BCDataArray::getBoundaryIterator(int, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::BCDataArray::getSFCZIterator(int, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::BCDataArray::getNBoundaryIterator(int, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::FastMatrix::destructiveSolve(double *)  
void Uintah::BCDataArray::getSFCYIterator(int, std::vector<IntVector, std::allocator<IntVector>> &, int) const  
void Uintah::FastMatrix::destructiveSolve(SCIRun::Vector *)  
int Uintah::Level::numPatches() const  
Uintah::BCDataArray &Uintah::BCDataArray::BCDataArray(const Uintah::BCDataArray &)  
MPI_Irecv()  
void Uintah::CompTable::remembercomp(Uintah::CompTable::Data *, const Uintah::ProcessorGroup *)  
void Uintah::DetailedTask::addInternalDependency(Uintah::DetailedTask *, const Uintah::VarLabel *)  
IntVector Uintah::Patch::faceDirection(Uintah::Patch::FaceType) const  
void Uintah::ProblemSpec::~ProblemSpec()  
void checkForInputError(const std::string &, const std::string &)  
bool Uintah::LoadBalancerCommon::inNeighborhood(const Uintah::PatchSubset *, const Uintah::MaterialSubset *)  
IntVector Uintah::Patch::faceAxes(const Uintah::Patch::FaceType &) const  
void Uintah::BCGeomBase::getBoundaryIterator(std::vector<IntVector, std::allocator<IntVector>> &) const  
void Uintah::SFCYVariableBase::~SFCYVariableBase()  
void Uintah::SFCXVariableBase::~SFCXVariableBase()  
Uintah::SFCXVariableBase &Uintah::SFCXVariableBase::SFCXVariableBase()  
Uintah::SFCYVariableBase &Uintah::SFCYVariableBase::SFCYVariableBase()  
void Uintah::BCGeomBase::getSFCYIterator(std::vector<IntVector, std::allocator<IntVector>> &) const  
void Uintah::BCGeomBase::getSFCXIterator(std::vector<IntVector, std::allocator<IntVector>> &) const  
void Uintah::SFCZVariableBase::~SFCZVariableBase()  
void Uintah::BCGeomBase::getNBoundaryIterator(std::vector<IntVector, std::allocator<IntVector>> &) const  
void Uintah::BCGeomBase::getSFCZIterator(std::vector<IntVector, std::allocator<IntVector>> &) const  
void Uintah::Patch::getFaceCells(Uintah::Patch::FaceType, int, IntVector &, IntVector &) const  
bool Uintah::DependencyBatch::makeMPIRequest()  
Uintah::SFCZVariableBase &Uintah::SFCZVariableBase::SFCZVariableBase()  
void Uintah::BCGeomBase::~BCGeomBase()  
void Uintah::SideBCData::~SideBCData()  
Uintah::Sendlist *Uintah::BufferInfo::takeSendlist()  
void Uintah::DependencyBatch::received(const Uintah::ProcessorGroup *)  
Uintah::UintahParallelPort *Uintah::UintahParallelComponent::getPort(const std::string &)  
const Uintah::SuperPatch *Uintah::LocallyComputedPatchVarMap::LocallyComputedPatchSet::getConnectedPatchGroup(const Uintah::Patch *) const  
bool Uintah::BCData::find(const std::string &) const  
Uintah::DataWarehouse *Uintah::Task::mapDataWarehouse(Uintah::Task::WhichDW, std::vector<Uintah::DataWarehouseP, std::allocator<Uintah::DataWarehouseP>> &) const  
const Uintah::LevelP &Uintah::Level::getCoarserLevel() const  
void Uintah::DetailedTasks::add(Uintah::DetailedTask *)  
END_EXCLUDE_LIST


# static constructors (called before main)

BEGIN_EXCLUDE_LIST
SCIRun::SocketInitializer &SCIRun::SocketInitializer::SocketInitializer()
void SCIRun::CleanupManager::initialize()
SCIRun::ThreadGroup &SCIRun::ThreadGroup::ThreadGroup(const char *, SCIRun::ThreadGroup *)
SCIRun::Thread &SCIRun::Thread::Thread(SCIRun::ThreadGroup *, const char *)  
void SCIRun::ThreadGroup::addme(SCIRun::Thread *)  
SCIRun::ConsecutiveRangeSet &SCIRun::ConsecutiveRangeSet::ConsecutiveRangeSet(int, int)  
SCIRun::ConsecutiveRangeSet::Range &SCIRun::ConsecutiveRangeSet::Range::Range(int, int)  
void SCIRun::ConsecutiveRangeSet::setSize()  
SCIRun::KillMap &SCIRun::KillMap::KillMap()  
SCIRun::PersistentTypeID &SCIRun::PersistentTypeID::PersistentTypeID(const std::string &, const std::string &, SCIRun::Persistent *(*)())  
SCIRun::DebugStream &SCIRun::DebugStream::DebugStream(const std::string &, bool)  
SCIRun::DebugBuf &SCIRun::DebugBuf::DebugBuf()  
void SCIRun::DebugStream::checkenv(std::string)  
Uintah::TypeDescription &Uintah::TypeDescription::TypeDescription(Uintah::TypeDescription::Type, const std::string &, bool, MPI_Datatype (*)())  
void Uintah::TypeDescription::register_type()  
END_EXCLUDE_LIST
