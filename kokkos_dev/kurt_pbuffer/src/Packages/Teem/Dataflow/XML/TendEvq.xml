<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->


<component name="TendEvq" category="Tend">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Quantize directions of diffusion. Because VTK doesn't do
multi-dimensional colormaps, we have to quantize directions of diffusion
(usually just the principal eigenvector) in order to create the usual
XYZ-RGB coloring. Because eigenvector directions are poorly defined in
regions of low anisotropy, the length of the vector (pre-quantization) is
modulated by anisotropy, requiring the selection of some anisotropy metric.
    </summary>
    <description>
    <p>Quantize directions of diffusion. Because VTK doesn't do
multi-dimensional colormaps, we have to quantize directions of diffusion
(usually just the principal eigenvector) in order to create the usual
XYZ-RGB coloring. Because eigenvector directions are poorly defined in
regions of low anisotropy, the length of the vector (pre-quantization) is
modulated by anisotropy, requiring the selection of some anisotropy metric.</p>
    <p>Evec Index : Which eigenvector should be quantized: a value of 0 for the
    direction of fastest diffusion (eigenvector associated with
    largest eigenvalue), values 1 or 2 for other two eigenvectors
    (associated with middle and smallest eigenvalue) (integer).</p>
    <p>Anisotropy Metric: Which anisotropy metric to plot. 
    All the Westin metrics come in two versions. Currently supported:
           cl1, cl2: Westin's linear;
           cp1, cp2: Westin's planar;
           ca1, ca2: Westin's linear + planar;
           cs1, cs2: Westin's spherical (1-ca);
           ct1, ct2: GK's anisotropy type (cp/ca);
           ra: Basser/Pierpaoli relative anisotropy;
           fa: Basser/Pierpaoli fractional anisotropy/sqrt(2);
           vf: volume fraction = 1-(Basser/Pierpaoli volume ratio);
           tr: trace.</p>
    <p>Don't Attenuate the color by Anisotropy : When not selected, 
    regions with low or no anisotropy are very dark colors or black.</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

