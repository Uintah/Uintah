<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->


<component name="UnuRmap" category="UnuNtoZ">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Map nrrd through *regular* univariate map (colormap). A map is
regular if the control points are evenly spaced along the domain, and hence
their position isn't explicitly represented in the map; the axis min, axis
max, and number of points determine their location. The map can be a 1D nrrd
(for grayscale), in which case the output has the same dimension as the
input, or a 2D nrrd (for color), in which case the output has one more
dimension than the input. In either case, the output is the result of linearly
interpolating between map points, either scalar values (grayscale), or
scanlines along axis 0 (color).
    </summary>
    <description>
    <p>Map nrrd through *regular* univariate map (colormap). A map is
regular if the control points are evenly spaced along the domain, and hence
their position isn't explicitly represented in the map; the axis min, axis
max, and number of points determine their location. The map can be a 1D nrrd
(for grayscale), in which case the output has the same dimension as the
input, or a 2D nrrd (for color), in which case the output has one more
dimension than the input. In either case, the output is the result of linearly
interpolating between map points, either scalar values (grayscale), or
scanlines along axis 0 (color).</p>
    <p>Rescale to the Map Domain : rescale the input values from the input
     range to the map domain. The map domain is either explicitly defined 
     by the axis min,max along axis 0 or 1, or, it is implicitly defined 
     as zero to one minus the length of that axis.</p>
    <p>Min : Only used when rescaling to the Map Domain. Indicates the low 
    end of input range. Should be a double. To disregard
    this value and use the lowest value of the input nrrd, check Use
    lowest value of input nrrd as min.</p>
    <p>Max : Only used when rescaling to the Map Domain. Indicates the high 
    end of input range. Should be a double.To 
    disregard this value and use the highest value of the input nrrd, check Use
    highest value of input nrrd as max. </p>
    <p>Type: Specify the type of the output nrrd.  If Use map's type as
    output type is checked, this value will be disregarded and the map
    type will be used.</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
      <port>
        <name>RegularMapNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>
