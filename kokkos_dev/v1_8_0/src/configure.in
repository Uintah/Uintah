##
##  The contents of this file are subject to the University of Utah Public
##  License (the "License"); you may not use this file except in compliance
##  with the License.
##  
##  Software distributed under the License is distributed on an "AS IS"
##  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
##  License for the specific language governing rights and limitations under
##  the License.
##  
##  The Original Source Code is SCIRun, released March 12, 2001.
##  
##  The Original Source Code was developed by the University of Utah.
##  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
##  University of Utah. All Rights Reserved.
##

##  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
##
##  This configure.in file has some specialized sections for doing certain
##  tasks.  If you want to add additional tasks (search for new libraries,
##  headers, etc.) please add the new task to the appropriate section.
##  Please also try to adhere to the conventions used in this file
##  for standard functionality and readability.
##
##  The following is a list of the current sections:
##
##    initialize
##    new macro definitions
##    declare arguments  (the --with and --enable stuff)
##    check for unknown or mis-spelled arguments
##    determine host type, processor count and OS version
##    set variable defaults 
##    set host specific build tools
##    search for required libraries and headers
##    search for optional libraries and headers
##    configure packages
##    generate output files
##
##  NOTE: When committing this file, do NOT commit both configure.in
##  and configure at the same time.  Please commit configure.in FIRST,
##  then commit configure separately.  It saves people from conflicts
##  with autoconf.
##   - Steve
##
##  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

##  --------------------------------------------------------------------
##  ------------------------  initialize  ------------------------------
##  --------------------------------------------------------------------

##  initialize configure 
AC_INIT()

##  require autoconf version 2.0
AC_PREREQ(2.0)

##  set the location of config.guess, config.sub, and install.sh
AC_CONFIG_AUX_DIR(scripts)

##  set the autoconf list delimiter
IFS=' '

##  set the output header to "sci_config.h"
AC_CONFIG_HEADER(sci_config.h)

##  initialize the recognized argument lists
SCI_ARG_WITH_LIST="--no-create --no-recursion"
SCI_ARG_ENABLE_LIST=""

## Pass on the echo flags to the other scripts.
ECHO_N=$ac_n
ECHO_C=$ac_c

AC_SUBST(ECHO_N)
AC_SUBST(ECHO_C)

##  -- test if echo needs "-e" to behave correctly (ie: to use \n)
result=`echo -e abc`
if test "$result" = "abc"; then
  use_minus_e="-e"
fi

LDRUN_PREFIX="-Wl,-rpath -Wl,"

##  ---------------------------------------------------------------------
##  --------------------  new macro definitions  ------------------------
##  ---------------------------------------------------------------------

##  none of the new macros can be nested with or within other macros

##  these are platform sensitive - be very careful, when adding or
##  editing, to make sure it works on all required platforms

##  SCI_MSG_ERROR(message)
##
##     Wrapper for AC_MSG_ERROR but tells user to try configuring with
##     --enable-verbosity to get more help in figuring out what is
##     wrong.

AC_DEFUN(SCI_MSG_ERROR,
  [
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         AC_MSG_WARN(Adding '--enable-verbosity' to configure line)
         AC_MSG_WARN(_may_ give more information about what is breaking)
      fi
      echo
      AC_MSG_ERROR($1)
  ])

##
##  SCI_CHECK_LIB(paths,
##                lib,
##                function,
##                other-libraries,
##                cxx,
##                optional)
##
##  - Check whether the function exists within the lib found in path(s).
##      (If "path" is blank (""), then see if the compiler automatically
##      finds it.)
##  - Set function to "main" if you want to see if the lib just exists
##      within the lib found in path(s).
##  - Set function to "" if you want to see if the lib just exists.
##  - Use other-libraries to resolve undefined symbols.
##
##  - Sets the following shell variables (Note: $lib will be in all caps.):
##    (path is path to the library.  If not found, these are set to '')
##
##      Variable            Value
##      --------            -----
##      LIB_DIR_$lib        => path
##      $lib_LIB_DIR_FLAG   => -Lpath
##      $lib_LIB_FLAG  =>   -l$2 (The $2 is lib name)
##      HAVE_LIB_$lib   =>   yes
##
##  - cxx == "no" => C lib, don't need "extern C" stuff.
##        == "yes" or anything else => Lib being tested for is a C++ lib.
##        This is done because we need to be able to use this check on
##        C only libraries.  This is done before we call
##        AC_LANG_CPLUSPLUS (which (I think) switches everything into
##        C++ only mode.)
##  - optional: whether this library is optional.  If the library is
##        not found and is marked as not-optional, configure will
##        exit and print diagnostic info.  
##        PARAMETER MUST BE SET TO EITHER: "not-optional", or "optional".
##

AC_DEFUN(SCI_CHECK_LIB,
  [
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $1"
       echo "   lib name:   $2"
       echo "   function:   $3"
       echo "   other-libs: $4"
       echo "   c++ lib:    $5"
       echo "   optional:   $6"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_="$5"
    _SCI_LIB_OPTIONAL_="$6"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       SCI_MSG_ERROR(SCI CHECK LIB macro (for $2) optional parameter must be set to 'optional' or 'not-optional')
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes $2 (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name           Real Var Name         Value
    ##     -------------           -------------         -----
    ##   _SCI_VAR_LIBNAME_      => PTHREAD               (none)
    ##   _SCI_VAR_DIR_          => LIB_DIR_PTHREAD       /usr/lib   || ''
    ##   _SCI_VAR_HAVE_         => HAVE_LIB_PTHREAD      yes        || ''
    ##   _SCI_VAR_LIB_DIR_FLAG_ => PTHREAD_LIB_DIR_FLAG  -L/usr/lib || ''
    ##   _SCI_VAR_LIB_FLAG_     => PTHREAD_LIB_FLAG      -lpthread  || ''

    _SCI_VAR_LIBNAME_=`echo $2 | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_DIR_=LIB_DIR_"$_SCI_VAR_LIBNAME_"
    _SCI_VAR_HAVE_=HAVE_LIB_"$_SCI_VAR_LIBNAME_"
    _SCI_VAR_LIB_DIR_FLAG_="$_SCI_VAR_LIBNAME_"_LIB_DIR_FLAG
    _SCI_VAR_LIB_FLAG_="$_SCI_VAR_LIBNAME_"_LIB_FLAG

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_DIR_ is $_SCI_VAR_DIR_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIB_DIR_FLAG_ is $_SCI_VAR_LIB_DIR_FLAG_"
       echo "_SCI_VAR_LIB_FLAG_ is $_SCI_VAR_LIB_FLAG_"
    fi


    ##########################
    ## FUNCTION parameter
    if test -z "$3"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       AC_MSG_CHECKING(for both lib$2.so and lib$2.a)
    else
      if test "$3" = "main"; then
         _SCI_DECL_=""
         _SCI_CALL_=""
         EXTERN_BEGIN=""
         EXTERN_END=""
         AC_MSG_CHECKING(for -l$2)
      else
        _SCI_DECL_="char $3();"
        _SCI_CALL_="$3();"

        AC_MSG_CHECKING(for $3 in -l$2)
        if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
        fi
      fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$4"

    if test -z "$3"; then

    # Add inthe standard PATH to search as well.
    # In other words, to see if the compiler would find it by itself...
    # THIS DOES NOT WORK FULLY AS THERE SHOULD BE MORE PATHS - ARS
      _SCI_CHECK_PATHS_="$1 /usr/lib /lib"

    # Test for just the existance of the library in the paths.

      echo ""
      ## Look for the lib.a file:
      _FOUND_LIB_A_FILE_="false"
      for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do
        if test "$debugging" = "yes"; then
          echo "Checking for lib$2.a in path: $_CHECK_PATH_"
        fi

        if test -e "$_CHECK_PATH_/lib$2.a"; then
            AC_MSG_RESULT(Found lib$2.a in $_CHECK_PATH_)
            _FOUND_LIB_A_FILE_="true"
          if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
            "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            _CHECK_PATH_=""
          fi

          eval $_SCI_VAR_DIR_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes

          tmp="$LDRUN_PREFIX$_CHECK_PATH_ -L$_CHECK_PATH_"
          eval $_SCI_VAR_LIB_DIR_FLAG_='"$tmp"'
	  AC_MSG_RESULT(Found lib$2.so in $_CHECK_PATH_)

	  eval $_SCI_VAR_LIB_FLAG_=-l$2

          if test "$debugging" = "yes"; then
            echo "FOUND IT (lib$2.a)"
  	    eval echo "$_SCI_VAR_DIR_    is $"$_SCI_VAR_DIR_""
	    eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	    eval echo "$_SCI_VAR_LIB_DIR_FLAG_ is $"$_SCI_VAR_LIB_DIR_FLAG_""
	    eval echo "$_SCI_VAR_LIB_FLAG_ is $"$_SCI_VAR_LIB_FLAG_""
	    echo
	    break;
  	  fi
	fi
      done
      if test "$_FOUND_LIB_A_FILE_" = "false"; then
         AC_MSG_RESULT(Did not find lib$2.a)
      fi

      ## Now look for the the lib.so file. 
      ## If lib.so is found, the location of the lib.a file will be
      ## overwritten... ie: THE .SO FILE TAKES PRECEDENCE!
      for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

        if test "$debugging" = "yes"; then
            echo "Checking for lib$2.so in $_CHECK_PATH_!"
        fi

        if test ! -d "$_CHECK_PATH_"; then 
          if test "$debugging" = "yes"; then
            echo "$_CHECK_PATH_: No such path!"
          fi
          continue
        fi

        if test -e "$_CHECK_PATH_/lib$2.so"; then

          if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
            "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            _CHECK_PATH_=""
          fi

          eval $_SCI_VAR_DIR_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes

          tmp="$LDRUN_PREFIX$_CHECK_PATH_ -L$_CHECK_PATH_"
          eval $_SCI_VAR_LIB_DIR_FLAG_='"$tmp"'
	  AC_MSG_RESULT(Found lib$2.so in $_CHECK_PATH_)

	  eval $_SCI_VAR_LIB_FLAG_=-l$2

          if test "$debugging" = "yes"; then
            echo "FOUND IT (lib$2.so)"
  	    eval echo "$_SCI_VAR_DIR_    is $"$_SCI_VAR_DIR_""
	    eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	    eval echo "$_SCI_VAR_LIB_DIR_FLAG_ is $"$_SCI_VAR_LIB_DIR_FLAG_""
	    eval echo "$_SCI_VAR_LIB_FLAG_ is $"$_SCI_VAR_LIB_FLAG_""
	    echo
	    break;
  	  fi
        fi
      done

      eval result='$'$_SCI_VAR_HAVE_

      if test "$result" = ""; then
        if test "$debugging" = "yes"; then
          echo "Did NOT find it"
        fi
        eval $_SCI_VAR_DIR_=''
        eval $_SCI_VAR_HAVE_=''
        eval $_SCI_VAR_LIB_DIR_FLAG_=''
        eval $_SCI_VAR_LIB_FLAG_=''
      fi

    else

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$1 NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               AC_MSG_WARN(Skipping generic lib: SCI CHECK LIB)
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -l$2 $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             AC_MSG_RESULT(yes)
          else
             if test -f "$_CHECK_PATH_/lib$2.a" -o -f "$_CHECK_PATH_/lib$2.so"; then
                AC_MSG_RESULT($_CHECK_PATH_)
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_DIR_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIB_DIR_FLAG_=''
                eval $_SCI_VAR_LIB_FLAG_=''
                continue
             fi
          fi
          eval $_SCI_VAR_DIR_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
	      tmp="$LDRUN_PREFIX$_CHECK_PATH_ -L$_CHECK_PATH_"
              eval $_SCI_VAR_LIB_DIR_FLAG_='"$tmp"'
          fi
	  eval $_SCI_VAR_LIB_FLAG_=-l$2

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_DIR_    is $"$_SCI_VAR_DIR_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIB_DIR_FLAG_ is $"$_SCI_VAR_LIB_DIR_FLAG_""
	     eval echo "$_SCI_VAR_LIB_FLAG_ is $"$_SCI_VAR_LIB_FLAG_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_DIR_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIB_DIR_FLAG_=''
          eval $_SCI_VAR_LIB_FLAG_=''
       fi

    done # loop over all libs.
    fi
    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library, link the library, find the function)...
       AC_MSG_RESULT(no)
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          AC_MSG_WARN(Required library $_SCI_VAR_LIBNAME_ not found.)
	  if test "$3"; then
            AC_MSG_WARN(Command line for test was: $ac_try)
            AC_MSG_WARN(Compile output is:)
            cat conftest.out
	  fi
          SCI_MSG_ERROR(Exiting configure: non-optional lib not found. Bye.)
       fi
    fi

  ])
## END SCI_CHECK_LIB

##
##  SCI_CHECK_HEADERS(paths,
##                    header-list,
##                    other-paths,
##                    cxx,
##                    optional)
##
##  If "paths" is blank, see if compiler can find it in a generic
##  path.  Otherwise, check whether the listed headers exist in the
##  path(s).  Use 'other-paths' if the headers nee to #include other
##  headers in different paths
##
##  cxx == "yes" => c++ header
##      == "no" or anything else => C header, 
##
##  SCI_CHECK_HEADERS will set (in allcaps):
##                       Example       If found        If not found
#                          Name     (& not generic)  (or in generic path)
##                      ---------   ---------------  --------------------
##  INC_$<first-header> INC_MATH_H     -I$path                ''
##  HAVE_<HEADER_H>     HAVE_MATH_H     'yes'                 ''
##

AC_DEFUN(SCI_CHECK_HEADERS,
  [
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $1"
       echo "   headers:     $2"
       echo "   other-paths: $3"
       echo "   c++ lib:     $4"
       echo "   optional:    $5"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$1 NO_EXPLICIT_PATH"
    ########################
    # HEADERS parameter:

    _HEADER_LIST_="$2"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_="$4"
    _SCI_HEADER_OPTIONAL_="$5"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       SCI_MSG_ERROR(SCI CHECK HEADERS macro (for $2) optional parameter must be set to 'optional' or 'not-optional')
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       AC_MSG_CHECKING(for all headers at the same time: $_HEADER_LIST_)
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             SCI_MSG_ERROR(Do not specify /usr/include in SCI CHECK HEADERS)
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $3 >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test "$debugging" = "yes"; then
             echo ac_try is $ac_try
          fi

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                AC_MSG_RESULT(yes)
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   AC_MSG_RESULT($_CHECK_PATH_)
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC_$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   eval echo "HAVE_$_SCI_HEADER_NAME_ is $"$_SCI_HEADER_HAVE_""
		   eval echo "INC_$_SCI_HEADER_NAME_ is $"$_SCI_INCLUDE_NAME_""
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       AC_MSG_CHECKING(for $_HEADER_)

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             SCI_MSG_ERROR(Do not specify /usr/include in SCI CHECK HEADERS)
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC_$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $3 >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   AC_MSG_RESULT($_CHECK_PATH_)
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        AC_MSG_RESULT(yes)
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "HAVE_$_SCI_HEADER_NAME_ is $"$_SCI_HEADER_HAVE_""
		eval echo "INC_$_SCI_HEADER_NAME_ is $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          AC_MSG_RESULT(no)

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             AC_MSG_WARN(Required include file $_HEADER_ not found.)
             AC_MSG_WARN(Command line for test was: $ac_try)
             AC_MSG_WARN(Compile output was:)
             cat conftest.out
             SCI_MSG_ERROR(Exiting configure script. Bye.)
          fi
       fi

    done ## End: loop over .h files

  ])
## END SCI CHECK HEADERS

##
##  SCI_CHECK_VERSION(prog,verflag,need-version,if-correct,if-not-correct,comp)
##
##  check whether the prog's version is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##

AC_DEFUN(SCI_CHECK_VERSION,
  [
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="$3"
    _CUR_1_=""
    _CUR_2_=""

    AC_MSG_CHECKING(for `basename $1` version $3)

    if test "$4"; then
      _SCI_CORRECT_='$4'
    fi

    if test "$5"; then
      _SCI_NOTCORRECT_='$5'
    fi

    if test "$6"; then
      _SCI_COMP_="$6"
    else
      _SCI_COMP_="-gt"
    fi

    eval "$1 $2 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[[^0-9\.]]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      AC_MSG_RESULT(yes ($_SCI_REPORT_))
      eval $_SCI_CORRECT_
    else
      AC_MSG_RESULT(no ($_SCI_REPORT_))
      eval $_SCI_NOTCORRECT_
    fi
  ])

##
##  SCI_CHECK_VAR_VERSION(name,var,need-version,if-correct,if-not-correct,comp)
##
##  check whether the var (which represents a version number) version
##  is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##

AC_DEFUN(SCI_CHECK_VAR_VERSION,
  [
    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="$3"
    _CUR_1_=""
    _CUR_2_=""

    AC_MSG_CHECKING(for $1 version $3)

    if test "$4"; then
      _SCI_CORRECT_='$4'
    fi

    if test "$5"; then
      _SCI_NOTCORRECT_='$5'
    fi

    if test "$6"; then
      _SCI_COMP_="$6"
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $2 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[[^0-9\.]]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      AC_MSG_RESULT(yes ($_SCI_REPORT_))
      eval $_SCI_CORRECT_
    else
      AC_MSG_RESULT(no ($_SCI_REPORT_))
      eval $_SCI_NOTCORRECT_
    fi
  ])

##
##  SCI_CHECK_OS_VERSION(need-version,if-correct,if-not-correct,comp)
##
##  check whether the OS's version (uname -r) is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##

AC_DEFUN(SCI_CHECK_OS_VERSION,
  [
    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="$1"
    _CUR_1_=""
    _CUR_2_=""

    AC_MSG_CHECKING(for OS version $1)

    if test "$2"; then
      _SCI_CORRECT_='$2'
    fi

    if test "$3"; then
      _SCI_NOTCORRECT_='$3'
    fi

    if test "$6"; then
      _SCI_COMP_="$6"
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[[^0-9\.]]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[[0-9]]*[[a-z]]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[[0-9]]*[[a-z]]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      AC_MSG_RESULT(yes ($_SCI_REPORT_))
      eval $_SCI_CORRECT_
    else
      AC_MSG_RESULT(no ($_SCI_REPORT_))
      eval $_SCI_NOTCORRECT_
    fi
  ])

##
##  SCI_ARG_WITH(arg-string, usage-string, if-used, if-not-used)
##
##    if an arg is provide to the "with", the arg must be a directory
##    or a file.  If not, a configure error is raised.  This will avoid
##    the problem of mis-typing the name of the "--with" dir/file.
##
##    does the same thing as AC_ARG_WITH (infact, it uses it), but
##    also appends arg-string to the master list of arg-strings
##

AC_DEFUN(SCI_ARG_WITH,
  [
    ##  SCI_ARG_WITH

    AC_ARG_WITH($1, $2, 
      $3
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-$1 --without-$1", 
      $4) 

    if test -n "$$1" -a ! -e "$$1"; then
      AC_MSG_ERROR(The file or directory parameter ($$1) specified for --with-$1 does not exist!  Please verify that the path and file are correct.)
    fi

  ])

##
##  SCI_ARG_ENABLE(arg-string, usage-string, if-used, if-not-used)
##
##  does the same thing as AC_ARG_ENABLE (infact, it uses it), but
##  also appends arg-string to the master list of arg-strings
##

AC_DEFUN(SCI_ARG_ENABLE,
  [
    ##  SCI_ARG_ENABLE
    
    AC_ARG_ENABLE($1, $2, 
      $3
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-$1 --disable-$1",
      $4) 

  ])

##  --------------------------------------------------------------------
##  Save off the arguments to configure, being careful to save 
##  Package strings for later parsing.
##  --------------------------------------------------------------------

IFS='^'
args=`echo "$*" | sed 's% %_%g'`
myargs=`echo $args | sed 's%\^% %g'`
IFS=' '

DIRNAME_IS=`type dirname | sed 's%^.* %%'`
BASENAME_IS=`type dirname | sed 's%^.* %%'`

## We use both of these in a number of spots, so I think this is fair:
## (Eventually we could write our own if necessary...
if test -z "$DIRNAME_IS" -o -z "$BASENAME_IS"; then
  AC_MSG_ERROR(dirname or basename not found.  Configure script won't work!)
fi

if test "$CC" = ""; then
  AC_PROG_CC()
  AC_MSG_WARN(C compiler not specified with 'CC' environment variable.\
	    Using default... $CC)
  
fi

if test "$CXX" = ""; then
  AC_PROG_CXX(CC gcc g++ c++)
  AC_MSG_WARN(C++ compiler not specified with 'CXX' environment variable.\
	    Using default... $CXX)

fi
if test "$F77" = ""; then
  AC_PROG_F77()
  AC_MSG_WARN(Fortran compiler not specified with 'F77' environment \
	    variable. Using default... $F77)
fi

CC_REALLY_IS=`type $CC | sed 's%^.* %%'`
# Going to look for "as", "ld", etc in this dir:
COMPILER_DIR=`dirname $CC_REALLY_IS`

##  --------------------------------------------------------------------
##  ------------------  declare all arguments here  --------------------
##  --------------------------------------------------------------------

##
##  Use the SCI_ARG_WITH and SCI_ARG_ENABLE macros to declare arguments
##

SCI_ARG_WITH(thirdparty,
  [  --with-thirdparty=<path-to-thirdparty>    <path-to-thirdparty>/lib/<all-thirdparty-libs}],
  [thirdparty="$withval"],
  [thirdparty=""])
SCI_ARG_WITH(tcl,
  [  --with-tcl=<path-to-tcl>          <path-to-tcl>/lib/libtcl.so],
  [with_tcl="$withval"],
  [with_tcl=""])
SCI_ARG_WITH(xercesc,
  [  --with-xercesc=<path-to-xerces>   <path-to-xerces-c>/lib/libxerces-c.so],
  [with_xercesc="$withval"],
  [with_xercesc=""])
SCI_ARG_WITH(teem,
  [  --with-teem=<path-to-teem>        <path-to-nrrd>/lib/libnrrd.so et al],
  [with_teem="$withval"],
  [with_teem=""])
SCI_ARG_WITH(mpeg,
  [  --with-mpeg=<path-to-mpeg>        <path-to-mpege>/lib/libmpege.so],
  [with_mpeg="$withval"],
  [with_mpeg=""])
SCI_ARG_WITH(blas,
  [  --with-blas=<path-to-blas>        <path-to-blas>/lib/libblas.a],
  [with_blas="$withval"],
  [with_blas=""])
SCI_ARG_WITH(lapack,
  [  --with-lapack=<path-to-lapack>    <path-to-lapack>/lib/liblapack.a],
  [with_lapack="$withval"],
  [with_lapack=""])
SCI_ARG_WITH(mpi,
  [  --with-mpi=<path-to-mpi>          <path-to-mpi>],
  [with_mpi="$withval"],
  [with_mpi=""])
SCI_ARG_WITH(mpiuni,
  [  --with-mpiuni=<path-to-mpiuni>    <path-to-mpiuni>],
  [with_mpiuni="$withval"],
  [with_mpiuni=""])
SCI_ARG_WITH(hypre,
  [  --with-hypre=<path-to-hypre>      <path-to-hypre>],
  [with_hypre="$withval"],
  [with_hypre=""])
SCI_ARG_WITH(netsolve,
  [  --with-netsolve=<path-to-netsolve> <path-to-netsolve>],
  [with_netsolve="$withval"],
  [with_netsolve=""])
SCI_ARG_WITH(petsc,
  [  --with-petsc=<path-to-petsc>      <path-to-petsc>],
  [with_petsc="$withval"],
  [with_petsc=""])
SCI_ARG_WITH(unipetsc,
  [  --with-unipetsc=<path-to-unipetsc>  <path-to-petsc>/lib/libpetsc.so],
  [with_unipetsc="$withval"],
  [with_unipetsc=""])
SCI_ARG_WITH(tau,
  [  --with-tau=<tau-makefile>         Specify Tau Makefile],
  [with_tau="$withval"],
  [with_tau=""])
SCI_ARG_WITH(globus,
  [  --with-globus=DIR                 Use the globus installation in DIR],
  [with_globus="$withval"],
  [with_globus=""])
SCI_ARG_WITH(qt,
  [  --with-qt=DIR                     Use the Qt installation in DIR],
  [with_qt="$withval"],
  [with_qt=""])
SCI_ARG_WITH(babel,
  [  --with-babel=DIR                  Use the Babel installation in DIR],
  [with_babel="$withval"],
  [with_babel=""])
SCI_ARG_WITH(opengl,
  [  --with-opengl=DIR                 Use the OpenGL installation in DIR],
  [with_opengl="$withval"],
  [with_opengl=""])
SCI_ARG_WITH(zlib,
  [  --with-zlib=DIR                   Use the zlib installation in DIR],
  [with_zlib="$withval"],
  [with_zlib=""])
SCI_ARG_WITH(vdt,
  [  --with-vdt=DIR                    <path-to-vdt>],
  [with_vdt="$withval"],
  [with_vdt=""])
SCI_ARG_WITH(jpeg,
  [  --with-jpeg=DIR                   <path-to-jpeg>/lib/libjpeg.so],
  [with_jpeg="$withval"],
  [with_jpeg=""])
SCI_ARG_WITH(tiff,
  [  --with-tiff=DIR                   <path-to-tiff>/lib/libtiff.so],
  [with_tiff="$withval"],
  [with_tiff=""])
SCI_ARG_WITH(imagemagick,
  [  --with-imagemagick=DIR            <path-to-imagemagick>],
  [with_imagemagick="$withval"],
  [with_imagemagick=""])
SCI_ARG_WITH(mdsplus,
  [  --with-mdsplus=<path-to-mdsplus>  <path-to-mdsplus>/lib/MdsLib_client.so],
  [with_mdsplus="$withval"],
  [with_mdsplus=""])
SCI_ARG_WITH(glut,
  [  --with-glut=DIR                   Use the glut installation in DIR],
  [with_glut="$withval"],
  [with_glut=""])
SCI_ARG_WITH(glui,
  [  --with-glui=DIR                   Use the glui installation in DIR],
  [with_glui="$withval"],
  [with_glui=""])
SCI_ARG_WITH(oogl,
  [  --with-oogl=DIR                   Use the oogl installation in DIR],
  [with_oogl="$withval"],
  [with_oogl=""])
SCI_ARG_WITH(audio,
  [  --with-audio=DIR                   Use the audio installation in DIR],
  [with_audio="$withval"],
  [with_audio=""])
SCI_ARG_ENABLE(verbosity,
  [  --enable-verbosity                Turn on verbose configure output],
  [debugging="yes"],
  [debugging="no"])
SCI_ARG_ENABLE(threads,
  [  --enable-threads                  Specify a thread implementation (pthreads or irix)],
  [threads="$enableval"],
  [threads=${threads='unknown'}])
SCI_ARG_ENABLE(debug,
  [  --enable-debug                    Turn on debugging (usually -g flag)],
  [debug="$enableval"],
  [debug="no"])
SCI_ARG_ENABLE(optimize,
  [  --enable-optimize                 Turn on optimize (usually -O2 flag)],
  [optimize="$enableval"],
  [optimize=${optimize='no'}])
SCI_ARG_ENABLE(64bit,
  [  --enable-64bit                    Compile in 64 bit mode],
  [enable_64bit="$enableval"],
  [enable_64bit=$i{enable_64bit='no'}])
SCI_ARG_ENABLE(32bit,
  [  --enable-32bit                    Compile in 32 bit mode],
  [enable_32bit="$enableval"],
  [enable_32bit=$i{enable_32bit='no'}])
SCI_ARG_ENABLE(output-avg-walltime,
  [  --enable-output-avg-walltime      Output ellapsed wall-times],
  [output_avg_walltime="$enableval"],
  [output_avg_walltime=${output_avg_walltime='no'}])
SCI_ARG_ENABLE(perfex,
  [  --enable-perfex                   Use perfex hardware counters],
  [enable_perfex="$enableval"],
  [enable_perfex=${perfex='no'}])
SCI_ARG_ENABLE(package,
  [  --enable-package                  Build the specified packages],
  [package="$enableval"])
SCI_ARG_ENABLE(exename,
  [  --enable-exename                  Override the default executable name],
  [exename="$enableval"],
  [exename=${exename='default'}])
SCI_ARG_ENABLE(largesos,
  [  --enable-largesos                 Build one .so per directory],
  [largesos="$enableval"],
  [largesos=${largesos='no'}])
SCI_ARG_ENABLE(sci-malloc,
  [  --enable-sci-malloc               Use SCI malloc checker],
  [enable_sci_malloc="$enableval"],
  [enable_sci_malloc=${enable_sci_malloc='yes'}])
SCI_ARG_ENABLE(assertion-level,
  [  --enable-assertion-level=N        Use assertion level N (0-3)],
  [enable_assertion_level="$enableval"],
  [enable_assertion_level=${enable_assertion_level=3}])
SCI_ARG_ENABLE(scirun2,
  [  --enable-scirun2                  build experimental SCIRun 2],
  [enable_scirun2="$enableval"],
  [enable_scirun2=${enable_scirun2='no'}])

##  --------------------------------------------------------------------
##  -----------  check for unknown or mis-spelled arguments  -----------
##  --------------------------------------------------------------------

##
##  If you use SCI_ARG_WITH or SCI_ARG_ENABLE to declare arguments, they
##  will be added automatically to this check.  There should be no need
##  to modify this section.
##

FOUND_ARG=no
for i in $myargs; do
  i_mod=`echo $i | sed 's% %%g' | sed 's%=.*%%g'`
  for j in $SCI_ARG_WITH_LIST $SCI_ARG_ENABLE_LIST; do
    if test $i_mod = $j; then 
      FOUND_ARG=yes
      break
    fi
  done
  if test "$FOUND_ARG" = "yes"; then
    FOUND_ARG=no
    continue
  else
    echo
    SCI_MSG_ERROR(unknown (or mis-spelled) argument: $i.)
  fi
done

##  --------------------------------------------------------------------
##  -----  determine host type, processor count and OS version  --------
##  --------------------------------------------------------------------

echo 
AC_CANONICAL_HOST

unset NUM_CPUS
case $host in
  *-irix*)
    SCI_CHECK_OS_VERSION(6.5,,
      configure: error: wrong Irix version. exiting.;exit)
    NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"    
    ;;
  *linux*)
    SCI_CHECK_OS_VERSION(2.2.17,,
      configure: error: wrong Linux version. exiting.;exit)
    NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
    ;;
  *-dec*)
    NUM_CPUS=1
    ;;
  *-aix*)
    NUM_CPUS=4
    ;;
  *)
    echo
    AC_MSG_WARN( !!!!!! This system is untested - You are on your own !!!!!!)
    echo
    NUM_CPUS="1"
    ;;
esac

AC_MSG_CHECKING(physical processor count)
if test -z "$NUM_CPUS"; then
  NUM_CPUS="1"
fi
AC_MSG_RESULT($NUM_CPUS)

## MAKE_PARALLELISM is used to tell the compiler how many cpus to use
## when linking.  1 is usually a good number to use per link,
## espcially for smaller number of cpu machines.  I think 4 is
## sufficient for even nirvana.
if test $NUM_CPUS -le 2 ; then
  MAKE_PARALLELISM=1
else
  if test $NUM_CPUS -le 8 ; then
    MAKE_PARALLELISM=2
  else
    MAKE_PARALLELISM=8
  fi
fi

AC_MSG_CHECKING(host system word length)
if test "$enable_64bit" = "yes"; then
  AC_MSG_RESULT(64 bits)
  if test "$enable_32bit" = "yes"; then
    SCI_MSG_ERROR(Both 64 and 32 bit compiles specified.)
  fi
else
  AC_MSG_RESULT(32 bits)
fi

##  --------------------------------------------------------------------
##  ----------------------  set variable defaults  ---------------------
##  --------------------------------------------------------------------

##
##  DO NOT "hardcode" ANY libraries (i.e. no -l or -L or -I allowed).
##

TIME_IMPL=Time_unix.cc
TEMPLATE_TAG=
TEMPLATE_BOX="<>"
SO_OR_ARCHIVE_EXTENSION=so

ASSERTION_LEVEL=$enable_assertion_level

extra_cflags="";

if test "$output_avg_walltime" != "no"; then
  extra_cflags="-DOUTPUT_AVG_ELAPSED_WALLTIME ${extra_cflags}"
fi

PACKAGE_DIRS=""

path_to_src=`echo $0 | sed 's/configure//'`

if test "$path_to_src" = "./"; then
   AC_MSG_WARN(DO NOT CONFIGURE IN THE SRC DIRECTORY:)
   AC_MSG_WARN(___ Try creating a dir such as: ../archBITSdebug)
   AC_MSG_WARN(___ eg: ../sgi32opt or ../linux32debug)
   AC_MSG_WARN(___ cd to that dir and then type: ../src/configure params)
   rm -f config.log config.cache confdefs.h conftest.out
   AC_MSG_ERROR(You have been warned!)
fi

for i in $package; do
   if test ! -d "$path_to_src/Packages/$i"; then
      AC_MSG_ERROR(Package '$i' does not exist (in $path_to_src"Packages")!)
   fi
   PACKAGE_DIRS=$PACKAGE_DIRS" Packages/$i"
done

LOAD_PACKAGE="SCIRun"
for i in $package; do
 LOAD_PACKAGE=$LOAD_PACKAGE,"$i"
done

if test "$exename" = "default"; then
  EXENAME=scirun
else
  EXENAME=$exename
fi

LARGESOS=$largesos

u=`echo $package | sed 's/.*Remote.*/Remote/'`
if test "$u" = "Remote" ; then
   pkg_Remote=yes
else
   pkg_Remote=no
fi

u=`echo $package | sed 's/.*NetSolve.*/NetSolve/'`
if test "$u" = "NetSolve" ; then
   pkg_NetSolve=yes
else
   pkg_NetSolve=no
fi

u=`echo $package | sed 's/.*Uintah.*/Uintah/'`
if test "$u" = "Uintah" ; then
   pkg_uintah=yes
else
   pkg_uintah=no
fi

u=`echo $package | sed 's/.*rtrt.*/rtrt/'`
if test "$u" = "rtrt" ; then
   pkg_rtrt="yes"
else
   pkg_rtrt="no"
fi

u=`echo $package | sed 's/.*Teem.*/Teem/'`
if test "$u" = "Teem" ; then
   pkg_teem="yes"
else
   pkg_teem="no"
fi

u=`echo $package | sed 's/.*VDT.*/VDT/'`
if test "$u" = "VDT" ; then
   pkg_vdt=yes
else
   pkg_vdt=no
fi

if test "$enable_sci_malloc" = "yes"; then
  DEF_MALLOC=""
else
  DEF_MALLOC="#define DISABLE_SCI_MALLOC"
fi

is_linux=`echo $host | sed 's/.*linux.*/linux/'`


AC_SUBST(SO_OR_ARCHIVE_EXTENSION)

AC_SUBST(ASSERTION_LEVEL)
AC_SUBST(NOPRINTDIR)
AC_SUBST(DEF_MALLOC)
AC_SUBST(PACKAGE_DIRS)
AC_SUBST(LOAD_PACKAGE)
AC_SUBST(EXENAME)
AC_SUBST(LARGESOS)
AC_SUBST(TIME_IMPL)

#########################################################################

##  ----------------------------------------------------------------------
##  ----------------  set host specific build tools  ---------------------
##  ----------------------------------------------------------------------

##  DO NOT "hardcode" ANY libraries here.

##  Require GCC for all platforms except Irix which requires MIPSpro
##  and AIX which uses xlC

echo
AC_CHECKING(for required build tools...)
echo 

AC_MSG_CHECKING(whether debug was enabled)
if test "$debug" = "no"; then
  AC_MSG_RESULT(no)
elif test "$debug" = "yes"; then
  extra_cflags="-g ${extra_cflags}"
  AC_MSG_RESULT(yes (-g) )
else
  extra_cflags="$debug ${extra_cflags}"
  AC_MSG_RESULT(yes ($debug) )
fi

AC_MSG_CHECKING(whether optimize was enabled)
if test "$optimize" = "no"; then
  if test "$debug" = "no"; then
    extra_cflags="-O2 ${extra_cflags}"
    AC_MSG_RESULT(no (-O2) )
  else
    extra_cflags="${no_optimize_flag} ${extra_cflags}"
    AC_MSG_RESULT(no (${no_optimize_flag}) )
  fi
elif test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}"
  AC_MSG_RESULT(yes (-O2) )
else
  extra_cflags="$optimize ${extra_cflags}"
  AC_MSG_RESULT(yes ($optimize) )
fi

if test "$enable_perfex" != "no"; then
  extra_cflags="-DUSE_PERFEX_COUNTERS ${extra_cflags}"
fi

# Most fortran compilers need an "_" for C function names.
# Some have strange underscore needs.  This flag is used in the
# Packages/Uintah/tools/fspec.pl.in file to generate the correct
# cname of the fortran function.
FORTRAN_UNDERSCORE=end

if test ! -e "`type $CC | sed 's%^.* %%'`"; then
  SCI_MSG_ERROR(Could not find the specified C compiler ($CC))
fi
if test ! -e "`type $CXX | sed 's%^.* %%'`"; then
  SCI_MSG_ERROR(Could not find the specified C++ compiler (CC))
fi
if test ! -e "`type $F77 | sed 's%^.* %%'`"; then
  SCI_MSG_ERROR(Could not find the specified Fortran compiler ($F77))
fi

case $host in 
  *-irix*)
    AC_MSG_WARN(Configure script only allows SGI compilers on IRIX.)
    AC_MSG_WARN(If this is a problem email scirun-users@sci.utah.edu.)

    ac_objext=o
    SCI_CHECK_VERSION($CC,-version,7.3.1.1,,
                      echo configure: error: wrong $CC version.; exit)
    SCI_CHECK_VERSION($CXX,-version,7.3.1.1,,
                      echo configure: error: wrong $CXX version.; exit)
    SCI_CHECK_VERSION($F77,-version,7.3.1.1,,
                      echo configure: error: wrong $CC version.; exit)
    AC_PATH_PROG(AS,as,,$COMPILER_DIR,)
    if test -z "$AS"; then
      AC_MSG_WARN(Could not find the MIPSPro linker (as))
      AC_MSG_ERROR(Looked in $COMPILER_DIR)
    fi
    SCI_CHECK_VERSION($AS,-version,7.3.1.1,,
                      echo configure: error: wrong $CC version.; exit)
    AC_PATH_PROG(LD,ld,,$COMPILER_DIR,)
    if test -z "$LD"; then
      AC_MSG_WARN(Could not find the MIPSPro linker (ld))
      AC_MSG_ERROR(Looked in $COMPILER_DIR)
    fi
    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure 
    WOFF=" -woff 3303,1047,1209,1110 -Wl,-woff,84 -woff 1342"
    CPPFLAGS=" $WOFF -LANG:std"
    if test "$enable_64bit" = "yes"; then
      BASE_LIB_DIR=lib64
      BINARYFLAGS="-64 -mips4"
    else
      BASE_LIB_DIR=lib
      BINARYFLAGS="-n32 -mips4"
    fi
    FFLAGS="$BINARYFLAGS $extra_cflags"
    CFLAGS="-fullwarn -xansi -LANG:std $BINARYFLAGS $extra_cflags"
    CXXFLAGS="$CFLAGS"
    ASFLAGS="$BINARYFLAGS"
    SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(LIBDIR)so_locations $(TLINK) ${SOFLAGS}"
    LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved"
    AC_MSG_CHECKING(if ${CC} talks too much)
    touch wow.c
    if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
      AC_MSG_RESULT(yes)
      AC_MSG_WARN(Using cc and CC wrappers in scripts/cc)

      mkdir -p scripts
      sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
      sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
      chmod 755 scripts/cc scripts/CC

      CC="$(OBJTOP)/scripts/cc"
      CXX="$(OBJTOP)/scripts/CC"
    else
      AC_MSG_RESULT(no)
    fi
    rm -f wow.c wow.o
    ;;

  *-dec*)
    ac_objext=o

    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure 
    CPPFLAGS=" -model ansi -pthread -D__USE_STD_IOSTREAM"
    FFLAGS="$extra_cflags"
    CFLAGS="-model ansi -pthread $extra_cflags -D__USE_STD_IOSTREAM"
    CXXFLAGS="$CFLAGS"
    SOFLAGS="-shared -warning_unresolved -update_registry \$(LIBDIR)so_locations"
    LDFLAGS=""
    LDRUN_PREFIX="-rpath "
    REPOSITORY_FLAGS="-ptr"
    ;;

  *-aix*)

    # Xlf does not need/want an "_" on the names of fortran  
    # functions.  This var is used in fspec.pl.in in order not to
    # add the _ to the cname of the function.
    FORTRAN_UNDERSCORE=none

    # The IBM compilers don't use LDRUN_PREFIX.  By making it "-L"
    # the lib path will be repeated twice, but since the makefile
    # is set up assuming you need LDRUN_PREFIX, this is the easiest fix.
    LDRUN_PREFIX="-L"

    # xlc doesn't seem to like the <>...
    # KCC doesn't seem to like the <>...
    # g++ doesn't seem to like <> on the IBM either.
    TEMPLATE_BOX=

    case $CXX in
      *g++*)
         SOFLAGS="-shared ${SOFLAGS}"
         # bigtoc helps keep gcc from breaking...
         LDFLAGS="-Wl,-bbigtoc $LDFLAGS"
         ;;
      *)
#      for these compilers: *xlC*) or *KCC*)
         if test "$enable_64bit" = "yes"; then
            BIT64FLAG=-q64
         fi
         CFLAGS="-qrtti=all $BIT64FLAG $CFLAGS"

         # Allows for better optimization and removes INFORMATION message.
         # I think this is necessary for both KCC and xlC...
         if test "$optimize" = "yes"; then
            CFLAGS="-qMAXMEM=4096 $CFLAGS"
         fi
         ;;
    esac

    CFLAGS="$CFLAGS $extra_cflags"

    FFLAGS="$extra_cflags"
    CXXFLAGS="$CFLAGS"

    CPP="$CC -c"
    CXXCPP="$CXX -c"

    ;;

  *)
    #
    # put '_' at end and two '_'s if there is a '_' in name. 
    # This flag is used by the genfspec.pl script in Uintah (generated
    # from fspec.pl.in).
    #
    FORTRAN_UNDERSCORE=linux

    BASE_LIB_DIR=lib
    CFLAGS=" -Wall"
    SCI_CHECK_VERSION($CC,--version,2.95.3,,
      echo configure: error: wrong $CC version.; exit)
    SCI_CHECK_VERSION($F77,--version,0.5.25,,
      echo configure: error: wrong $CC version.; exit)
    SCI_CHECK_VERSION($CXX,--version,2.95.3,,
      echo configure: error: wrong $CXX version.; exit)    
    AC_PROG_CPP
    AC_PROG_CXXCPP
    AC_CHECK_PROG(AS,as,as)
    AC_CHECK_PROG(LD,ld,ld)
    WOFF=" -w"
    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"
    FFLAGS="$FFLAGS $extra_cflags"
    CXXFLAGS="$CXXFLAGS $extra_cflags"
    SOFLAGS="-shared ${SOFLAGS}"
    NEED_SONAME=yes
    ;;
esac

AC_MSG_CHECKING($CC dependency regen switch)
rm -f configure-test.*
rm -rf configure-test-dir
mkdir configure-test-dir
echo "#include <stdio.h>" > configure-test-dir/configure-test.cc

# Try to automatically determine these three things
# One of twopass, move or normal
CC_DEPEND_MODE=unknown
# Compiler-specific flag
CC_DEPEND_REGEN=unknown
# Filename extension
CC_DEPEND_EXT=unknown

# Try -MDupdate
for flag in -MDupdate; do
  if test $CC_DEPEND_MODE = unknown; then
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.d -o configure-test-dir/configure-test.o configure-test-dir/configure-test.cc >/dev/null 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -f configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=normal
      CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
      CC_DEPEND_EXT=depend.mk
    fi
  fi
done

# Because xlC ignores anything after the -M (ie: -Mgarbage or -Mupdate
# is the same as -M) and creates a .u file anyway, to make the
# following test work, we need to get rid of the .u file and carry on:
rm -f configure-test-dir/configure-test.u

# Try -MD or -M
if test $CC_DEPEND_MODE = unknown; then
  for flag in -MD -M; do
    for ext in d u o.d; do
      rm -f configure-test.o configure-test-dir/configure-test.o
      ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc -o configure-test-dir/configure-test.o >/dev/null 2>conftest.out"
      (eval $ac_try) 2>&5
      if test -f configure-test-dir/configure-test.$ext ; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=normal
          break 2
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify
          break 2
        fi
      fi
      if test -f configure-test.$ext; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=move
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify2
        fi
        break 2
      fi
    done
  done
fi

# Last resort, try one that spits out to stdout
if test $CC_DEPEND_MODE = unknown; then
  for flag in -M; do
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc >configure-test-dir/configure-test.d 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -s configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=stdout
      CC_DEPEND_REGEN=$flag
      CC_DEPEND_EXT=d
      break
    fi
  done
fi

if test $CC_DEPEND_MODE = unknown; then
  AC_MSG_ERROR(Cannot determine dependency generation flag)
fi

AC_MSG_RESULT([$CC_DEPEND_REGEN (mode: $CC_DEPEND_MODE, ext: $CC_DEPEND_EXT)])
rm -f configure-test.*
rm -rf configure-test-dir

F77_DEPEND_REGEN=$CC_DEPEND_REGEN
F77_DEPEND_MODE=$CC_DEPEND_MODE
F77_DEPEND_EXT=$CC_DEPEND_EXT
AC_SUBST(CC_DEPEND_MODE)
AC_SUBST(CC_DEPEND_REGEN)
AC_SUBST(CC_DEPEND_EXT)
AC_SUBST(F77_DEPEND_MODE)
AC_SUBST(F77_DEPEND_REGEN)
AC_SUBST(F77_DEPEND_EXT)

# Other programs

AC_PATH_PROG(GMAKE,gmake,NOT_FOUND,,)
if test "$GMAKE" = "NOT_FOUND"; then
  AC_PATH_PROG(MAKE,make,NOT_FOUND,,)
else
  MAKE=$GMAKE
fi
if test "$MAKE" = "NOT_FOUND"; then
  SCI_MSG_ERROR(GNU make not found.)
fi
SCI_CHECK_VERSION($MAKE,--version,3.78.1,,
  echo configure: error: wrong GNU make version.; exit)

AC_PROG_AWK

## test for bison. yacc is not sufficient as it has no -o option.
AC_CHECK_PROG(YACC, bison, bison, nobison, $PATH:/usr/bin)
if test "$YACC" = "nobison"; then
  echo "configure: error: bison is required, and was not found in your PATH."
  echo "                  Please add it to your PATH, or set the environment"
  echo "                  variable YACC to the appropriate bison executable,"
  echo "                  then run configure again."
  exit
fi

##AC_PROG_YACC
AC_PROG_LEX

LEX_LIB_FLAG="$LEXLIB"
AC_SUBST(LEX_LIB_FLAG)

if test "$pkg_uintah" = "yes" ; then
  AC_CHECK_PROG(PERL, perl, perl, 
    echo configure: error: perl was not found in your PATH.;exit)
else
  AC_CHECK_PROG(PERL, perl, perl)
fi

if test "$PERL" = "perl"; then
  PERL=`type perl | sed 's%^.* %%'`
fi

AC_CHECK_PROG(ETAGS, etags, etags)

##  Create the Packages/Uintah/tools dir for later use.
if test "$pkg_uintah" = "yes" ; then
  if test ! -d "Packages/Uintah/tools"; then
    AC_MSG_RESULT(Creating Packages/Uintah/tools directory)
    mkdir -p "Packages/Uintah/tools"
  fi
  if test "$ac_cv_prog_g77" = "yes" ; then
     G77=1
  else
     G77=0
  fi
fi

AC_SUBST(FORTRAN_UNDERSCORE)
AC_SUBST(G77)
AC_SUBST(CC)
AC_SUBST(F77)
AC_SUBST(CXX)
AC_SUBST(AS)
AC_SUBST(LD)
AC_SUBST(CXXFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(FFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(ASFLAGS)
AC_SUBST(LDRUN_PREFIX)
AC_SUBST(extra_cflags)
AC_SUBST(MAKE_PARALLELISM)
AC_SUBST(NEED_SONAME)
AC_SUBST(PERL)
AC_SUBST(REPOSITORY_FLAGS)
AC_SUBST(TEMPLATE_TAG)
AC_SUBST(TEMPLATE_BOX)

##  set the default language after the build tools are found
AC_LANG_CPLUSPLUS

##  ----------  See if this is a 64 bit machine --------------------------
AC_CHECK_SIZEOF(void*,0)
case $ac_cv_sizeof_voidp in
 8)
  NBITS=64
  ;;
 4)
  NBITS=32
  ;;
 *)
  AC_MSG_WARN(This machine has some strange sizeof(void*): $ac_cv_sizeof_voidp.)
  AC_MSG_WARN(Usually this means that your LD_LIBRARY_PATH is set)
  AC_MSG_WARN(incorrectly for the compiler you are using.  To verify)
  AC_MSG_WARN(that this is the problem you will need to copy the C++)
  AC_MSG_WARN(program ...about 8 lines long... from the end of the)
  AC_MSG_WARN(config.log file and run the compile command which is just)
  AC_MSG_WARN(before it in config.log.  Run the executable and see what)
  AC_MSG_WARN(error message you get.)
  AC_MSG_WARN(You can also just fix your LD_LIBRARY_PATH if you know what)
  AC_MSG_WARN(is wrong with it.)
  SCI_MSG_ERROR(Exiting due to size of void* problem! Read above warnings!)
  ;;
esac
AC_SUBST(NBITS)

#########################################################################
## Make sure number of bit build for Thirdparty and SCIRun compile match
##

if test "$thirdparty" && test -e $thirdparty; then
  if test "$enable_64bit" = "yes"; then
    case "$thirdparty" in 
      *32bit*)
	AC_MSG_ERROR(You specified 64 bit compile but have 32 bit Thirdparty?)
      ;;
    esac
  else
    case "$thirdparty" in 
      *64bit*)
	AC_MSG_ERROR(You specified 32 bit compile but have 64 bit Thirdparty?)
      ;;
    esac
  fi

  SCI_LAB_TP_DEFAULT="$thirdparty $SCI_LAB_TP_DEFAULT"
else
  if test "$thirdparty"; then
    SCI_MSG_ERROR(Specified thirdparty directory does not exists!)
  fi
fi

##  SCI_LAB_TP_DEFAULT is used to add "standard" library search paths
##  for those of us who are too lazy to type out all the --with paths

if test -z "$thirdparty"; then
  TP_VERSION=1.8
  TP_ARCH=`uname -s`
  TP_COMPILER=gcc-3.0.4
  ac_try="$CC -v > /dev/null 2> conftest.out"
  (eval $ac_try) 2>&5
  vers=`grep "gcc version" conftest.out | cut -d' ' -f 3`
  rm -f conftest.out
  if test -n "$vers"; then
    TP_COMPILER=gcc-$vers
  else
    ac_try="$CC -version > /dev/null 2> conftest.out"
    (eval $ac_try) 2>&5
    vers=`grep MIPSpro conftest.out | cut -d' ' -f 4`
    rm -f conftest.out
    if test -n "$vers"; then
      TP_COMPILER=MIPSpro-$vers
    else
      TP_COMPILER=""
    fi
  fi

  TP_BASE=/usr/sci/projects
  TP_SUBDIR=$TP_ARCH/$TP_COMPILER-${NBITS}bit
  TP_PATH=$TP_BASE/SCIRun/Thirdparty/$TP_VERSION/$TP_SUBDIR

  if test -e $TP_PATH; then
    SCI_LAB_TP_DEFAULT="$SCI_LAB_TP_DEFAULT $TP_PATH"
  else
    AC_MSG_WARN(Default thirdparty directory $TP_PATH does not exists!)
  fi

  CCATP_VERSION=1.0.0
  CCATP_PATH=$TP_BASE/CCA/Thirdparty/$CCATP_VERSION/$TP_SUBDIR

  UINTAHTP_VERSION=1.0.0
  UINTAHTP_PATH=$TP_BASE/Uintah/Thirdparty/$UINTAHTP_VERSION/$TP_SUBDIR

  if test "$pkg_uintah" = "yes"; then
    if test -e $CCATP_PATH && test -e $UINTAHTP_PATH; then
      SCI_LAB_TP_DEFAULT="$SCI_LAB_TP_DEFAULT $CCATP_PATH $UINTAHTP_PATH"
    else
       AC_MSG_WARN(Default Uintah thirdparty directory does not exists!)
    fi
  fi

  RTRTTP_VERSION=1.0.0
  RTRTTP_PATH=$TP_BASE/rtrt/Thirdparty/$RTRTTP_VERSION/$TP_SUBDIR

  if test "$pkg_rtrt" = "yes"; then
    if test -e $RTRTTP_PATH; then
      SCI_LAB_TP_DEFAULT="$SCI_LAB_TP_DEFAULT $RTRTTP_PATH"
    else
      AC_MSG_WARN(Default RTRT thirdparty directory $RTRTTP_PATH does not exists!)
    fi
  fi

  AC_MSG_RESULT(Using default thirdparty directory $SCI_LAB_TP_DEFAULT)
fi

for i in $SCI_LAB_TP_DEFAULT; do
  if test ! -d "$i"; then
    continue
  fi

  #this is where the lib actually lives
  if test ! -d "$i/lib"; then
    continue
  fi

  SCI_LAB_TP_LIBS="$SCI_LAB_TP_LIBS $i/lib"
done

#########################################################################
##  Set the no_optimize_flag 
##  

case $host in
  *-irix*) 
    no_optimize_flag=-O0
    TIME_IMPL=Time_irix.cc
    ;;
  *linux*)
    no_optimize_flag=-O0
    ;;
  *-aix*)

    AC_MSG_WARN(AIX is not completely supported!)

    # On AIX, don't automatically generate .so's.  Make .a's and then
    # later we will make .so's from them.
    SO_OR_ARCHIVE_EXTENSION=a
    no_optimize_flag=-O0
    case $CXX in
      *xlC*)
         # xlC does not know the -O0 flag.
         no_optimize_flag=""
	 ;;
      *KCC*)
         ;;
      *g++*)
	 ;;
      *)
         AC_MSG_WARN(Do not know this compiler.)
         AC_MSG_WARN(Defaulting to -O0 for the no optimize flag.)
         ;;
    esac
    ;;
  *)
    ;;
esac

##  ----------------------------------------------------------------------
##  ----------  search for required libraries and headers  ---------------
##  ----------------------------------------------------------------------

echo 
AC_CHECKING(for required standard components...)
echo

##  --  search for the math library  -------------------------------------

SCI_CHECK_LIB(,m,main,,,not-optional)
SCI_CHECK_HEADERS(,math.h,,,not-optional)

AC_SUBST(M_LIB_FLAG)
AC_SUBST(M_LIB_DIR_FLAG)

##  --  search for X  ----------------------------------------------------

dirs="$with_X11_lib /usr/lib /usr/X11R6/lib"

SCI_CHECK_LIB($dirs,X11,main,,,not-optional)
SCI_CHECK_LIB($dirs,Xext,main,,,not-optional)
SCI_CHECK_LIB($dirs,Xaw,main,,,not-optional)
SCI_CHECK_LIB($dirs,Xi,main,,,not-optional)
SCI_CHECK_LIB($dirs,Xt,main,,,not-optional)
SCI_CHECK_LIB($dirs,Xmu,main,,,not-optional)

SCI_CHECK_HEADERS($LIB_DIR_X11/../include,X11/Xlib.h,,,not-optional)

if test "$HAVE_X11_XLIB_H"; then
   INC_XLIB_H=$INC_X_XLIB_H
fi

X_LIB_FLAG="$XMU_LIB_DIR_FLAG $XMU_LIB_FLAG $XI_LIB_DIR_FLAG $XI_LIB_FLAG $XEXT_LIB_DIR_FLAG $XEXT_LIB_FLAG $X11_LIB_DIR_FLAG $X11_LIB_FLAG"

AC_SUBST(X11_LIB_FLAG)
AC_SUBST(X11_LIB_DIR_FLAG)
AC_SUBST(XEXT_LIB_FLAG)
AC_SUBST(XEXT_LIB_DIR_FLAG)
AC_SUBST(XI_LIB_FLAG)
AC_SUBST(XI_LIB_DIR_FLAG)
AC_SUBST(XT_LIB_FLAG)
AC_SUBST(XT_LIB_DIR_FLAG)
AC_SUBST(XMU_LIB_FLAG)
AC_SUBST(XMU_LIB_DIR_FLAG)
AC_SUBST(XAW_LIB_FLAG)
AC_SUBST(XAW_LIB_DIR_FLAG)
AC_SUBST(INC_XLIB_H)

##  --  search for the fortran library  ----------------------------------
F_LIB_FLAG=""
case $host in 
  *-irix*)
    SCI_CHECK_LIB(,ftn,main,,,optional)
    SCI_CHECK_LIB(,fortran,main,,,optional)
    if test "$HAVE_LIB_FTN" == "yes" && test "$HAVE_LIB_FORTRAN" == "yes"; then
       F_LIB_FLAG="$FTN_LIB_FLAG $FORTRAN_LIB_FLAG"
    fi
    ;;
  *aix*)
    # AIX Fortran Library Check
    SCI_CHECK_LIB(,xlf90,main,,,not-optional)
    if test "$HAVE_LIB_XLF90" = "yes"; then
      F_LIB_FLAG="$XLF90_LIB_FLAG"
    fi
    ;;
  *linux*)
    # Linux Library Check
    SCI_CHECK_LIB(,g2c,main,,,optional)
    if test "$HAVE_LIB_G2C"; then
       F_LIB_FLAG="$G2C_LIB_FLAG"
    fi
    ;;
  *dec*)
    SCI_CHECK_LIB(,for,main,,,optional)
    if test "$HAVE_LIB_FOR"; then
       F_LIB_FLAG="$FOR_LIB_FLAG"
    fi
    ;;
  *)
    SCI_CHECK_LIB(,F77,main,,,optional)
    if test "$HAVE_LIB_F77"; then
       F_LIB_FLAG="$F77_LIB_FLAG"
    fi
    ;;
esac

if test "$F_LIB_FLAG"; then
  HAVE_LIB_F="yes"
else
  SCI_MSG_ERROR(could not find the fortran library.)
fi

AC_SUBST(F_LIB_FLAG)

##  --  check for the required thread library  ---------------------------

case $host in
  *-irix*)
    if test "$threads" = "unknown"; then
      threads=irix
    elif test "$threads" != "pthreads" -a "$threads" != "irix"; then
      SCI_MSG_ERROR(unknown thread type for host $host: $threads. exiting.)
    fi
    ;;
  *)
    if test "$threads" = "unknown"; then
      threads=pthreads
    elif test "$threads" != "pthreads"; then
      SCI_MSG_ERROR(unknown thread type for host $host: $threads. exiting.)
    fi
    ;;
esac

case $threads in
   irix)
      SCI_CHECK_LIB(,fetchop,main,,,not-optional)
      if test "$HAVE_LIB_FETCHOP"; then
         CFLAGS="$CFLAGS -DSTL_SGI_THREADS"
         THREAD_LIB_FLAG="$FETCHOP_LIB_FLAG"
         DEF_THREAD=
      fi
      ;;
   pthreads)
      SCI_CHECK_LIB(,pthread,main,,,not-optional)
      if test "$HAVE_LIB_PTHREAD"; then
        THREAD_LIB_FLAG="$PTHREAD_LIB_FLAG"
        DEF_THREAD="#define SCI_PTHREAD 1"
      fi
      SCI_CHECK_HEADERS(,pthread.h semaphore.h,,,not-optional)
      AC_MSG_CHECKING(for semaphore library)
      old_LIBS=$LIBS
      SEMAPHORE_LIB_FLAG=unknown
      for i in "" "$THREAD_LIB_FLAG" -lrt; do
        LIBS="$old_LIBS $i"
        AC_TRY_LINK([
#include <semaphore.h>
      ], [
    sem_t sem;
    sem_init(&sem, 0, 0);
    sem_post(&sem);
      ], [
         SEMAPHORE_LIB_FLAG=$i
         break
         ])
      done
      if test "$SEMPAPHORE_LIB_FLAG" = unknown; then
        AC_MSG_RESULT(not found)
        AC_MSG_ERROR([semaphore library(sem_post, sem_wait, etc) needed for pthreads])
      else
        if test -z "$SEMAPHORE_LIB_FLAG"; then
          AC_MSG_RESULT(none required)
        elif test "$SEMAPHORE_LIB_FLAG" = "$THREAD_LIB_FLAG"; then
          AC_MSG_RESULT(already in thread library: $THREAD_LIB_FLAG)
          SEMAPHORE_LIB_FLAG=""
        else
          AC_MSG_RESULT($SEMAPHORE_LIB_FLAG)
        fi
      fi
      ;;
   *)
      SCI_MSG_ERROR(unknown thread type for host $host: $threads. exiting.)
      ;;
esac      

THREAD_IMPL="Thread_$threads.cc"
AC_SUBST(THREAD_IMPL)

AC_SUBST(THREAD_LIB_FLAG)
AC_SUBST(DEF_THREAD)

AC_SUBST(SEMAPHORE_LIB_FLAG)

AC_SUBST(CFLAGS)

##  --  search for OpenGL  -----------------------------------------------

if test "$with_opengl"; then
  dirs="$with_opengl/lib /usr/X11R6/lib"
else
  dirs="/usr/X11R6/lib"
fi

if test "$is_linux" = "linux"; then
  GLU_OTHERS="$THREAD_LIB_DIR_FLAG $THREAD_LIB_FLAG"
else
  GLU_OTHERS=""
fi

SCI_CHECK_LIB($dirs,GL, main,    ,,not-optional)
SCI_CHECK_LIB($dirs,GLU,main,$GL_LIB_DIR_FLAG $GL_LIB_FLAG $GLU_OTHERS,,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_GL/../include,GL/gl.h GL/glu.h GL/glx.h,,,not-optional)

AC_SUBST(GL_LIB_FLAG)
AC_SUBST(GL_LIB_DIR_FLAG)
AC_SUBST(GLU_LIB_FLAG)
AC_SUBST(GLU_LIB_DIR_FLAG)

INC_GL_H=$INC_GL_GL_H
AC_SUBST(INC_GL_H)

##  --  search for Remote ----------------------------------------------

if test "$pkg_remote" = "yes"; then

   if test "$with_jpeg"; then
     dirs="$with_jpeg/lib $SCI_LAB_TP_LIBS"
   else
     dirs="$SCI_LAB_TP_LIBS"
   fi 
   SCI_CHECK_LIB($dirs,jpeg,main,,,not-optional)

   if test "$with_tiff"; then
     dirs="$with_tiff/lib $SCI_LAB_TP_LIBS"
   else
     dirs="$SCI_LAB_TP_LIBS"
   fi

   SCI_CHECK_LIB($dirs,tiff,main,,,not-optional)
fi


AC_SUBST(JPEG_LIB_FLAG)
AC_SUBST(JPEG_LIB_DIR_FLAG)

AC_SUBST(TIFF_LIB_FLAG)
AC_SUBST(TIFF_LIB_DIR_FLAG)

##  --  search for netsolve ----------------------------------------------

if test "$pkg_netsolve" = "yes"; then

   if test "$with_netsolve"; then
     dirs="$with_netsolve $SCI_LAB_TP_LIBS"
   else
     dirs="$SCI_LAB_TP_LIBS"
   fi

   SCI_CHECK_LIB($dirs,netsolve,main,,,not-optional)
fi

AC_SUBST(NETSOLVE_LIB_FLAG)
AC_SUBST(NETSOLVE_LIB_DIR_FLAG)

 
##  --  search for glut, glui and oogl -----------------------------------

if test "$pkg_rtrt" = "yes"; then

   libs="$GLU_LIB_DIR_FLAG $GLU_LIB_FLAG $GL_LIB_DIR_FLAG $GL_LIB_FLAG $X_LIB_FLAG $GLU_OTHERS"

   if test "$with_glut"; then
     dirs="$with_glut/$BASE_LIB_DIR $SCI_LAB_TP_LIBS"
   else
     dirs="$SCI_LAB_TP_LIBS"
   fi

   SCI_CHECK_LIB($dirs,glut,main,$libs,,not-optional)
   SCI_CHECK_HEADERS($LIB_DIR_GLUT/../include,GL/glut.h,,,not-optional)

   if test "$with_glui"; then
     dirs="$with_glui/$BASE_LIB_DIR $SCI_LAB_TP_LIBS"
   else
     dirs="$SCI_LAB_TP_LIBS"
   fi

   SCI_CHECK_LIB($dirs,glui,main,$GLUT_LIB_DIR_FLAG $GLUT_LIB_FLAG $libs,,not-optional)
   SCI_CHECK_HEADERS($LIB_DIR_GLUI/../include,glui.h,$INC_GL_GLUT_H,,not-optional)

  dirs=""

  # Modify dirs to have correct path information:
  for i in $SCI_LAB_TP_DEFAULT; do
    if test ! -d "$i"; then
      continue
    fi

    #this is where the lib actually lives
    if test ! -d "$i/OOGL/lib"; then
      continue
    fi

    dirs="$dirs $i/OOGL/lib"
  done

  if test "$with_oogl"; then
    dirs="$with_oogl/lib $dirs"
  fi

  SCI_CHECK_LIB($dirs,oogl,main,,,optional)
  SCI_CHECK_HEADERS($LIB_DIR_OOGL/../include,oogl/basicTexture.h oogl/shadedPrim.h,$INC_GL_GLUT_H $INC_GL_GLUI_H,,optional)

  if test "$HAVE_OOGL_BASICTEXTURE_H"; then
    INC_OOGL_H="$INC_OOGL_BASICTEXTURE_H"
  fi

  dirs="$with_audio"

  SCI_CHECK_LIB($dirs,audio,main,,,optional)
  SCI_CHECK_LIB($dirs,audiofile,main,,,optional)

  if test "$HAVE_LIB_AUDIO" && test "$HAVE_LIB_AUDIOFILE"; then
    DEF_AUDIO="#define HAVE_AUDIO 1"
    HAVE_AUDIO="yes"
  fi

  if test "$with_audio" && test ! "$DEF_AUDIO"; then
    echo
    AC_MSG_ERROR(One or more of the AUDIO components is missing.)
    echo
  fi

fi

if test "$HAVE_LIB_OOGL" && test "$HAVE_OOGL_BASICTEXTURE_H"; then
  DEF_OOGL="#define HAVE_OOGL 1"
fi


AC_SUBST(INC_GL_GLUT_H)
AC_SUBST(GLUT_LIB_FLAG)
AC_SUBST(GLUT_LIB_DIR_FLAG)

AC_SUBST(INC_GLUI_H)
AC_SUBST(GLUI_LIB_FLAG)
AC_SUBST(GLUI_LIB_DIR_FLAG)

AC_SUBST(INC_OOGL_H)
AC_SUBST(DEF_OOGL)
AC_SUBST(OOGL_LIB_FLAG)
AC_SUBST(OOGL_LIB_DIR_FLAG)

AC_SUBST(DEF_AUDIO)
AC_SUBST(HAVE_AUDIO)
AC_SUBST(AUDIO_LIB_FLAG)
AC_SUBST(AUDIO_LIB_DIR_FLAG)

AC_SUBST(AUDIOFILE_LIB_FLAG)
AC_SUBST(AUDIOFILE_LIB_DIR_FLAG)

##  --  search for dlopen  -----------------------------------------------

SCI_CHECK_LIB(,c,dlopen,,,optional)
if test "$HAVE_LIB_C"; then
   HAVE_LIB_DL="yes"
else
   SCI_CHECK_LIB(,dl,dlopen,,,not-optional)
fi

SCI_CHECK_HEADERS(,dlfcn.h,,,optional)

if test -z "$HAVE_LIB_DL" || test -z "$HAVE_DLFCN_H"; then
  SCI_MSG_ERROR(Could not find the required dynamic library components. exiting.)
fi

AC_SUBST(DL_LIB_FLAG)
AC_SUBST(DL_LIB_DIR_FLAG)

##  --  search for required headers  --------------------------------------

##  --  required standard headers
SCI_CHECK_HEADERS(,stdio.h stdlib.h stddef.h stdarg.h string.h limits.h \
   errno.h fcntl.h float.h values.h memory.h unistd.h netdb.h \
   ctype.h signal.h locale.h malloc.h dirent.h assert.h sys/select.h \
   sys/types.h sys/time.h sys/stat.h sys/socket.h sys/timeb.h \
   sys/mman.h sys/param.h sys/ioctl.h sys/resource.h sys/wait.h \
   sys/utsname.h rpc/types.h netinet/in.h,,,not-optional)

SCI_CHECK_HEADERS(,inttypes.h stdint.h,,,optional)

##  --  required STL headers 
##  --      (only look for STL after going into cplusplus mode)
##
SCI_CHECK_HEADERS(,algorithm vector map iostream string,,yes,not-optional)

AC_MSG_CHECKING(for location of hash_map)
DEF_HASHMAP=None
AC_TRY_COMPILE([#include <hash_map>
                std::hash_map<int, int> xx;], ,
		[DEF_HASHMAP=HAVE_STD_HASHMAP])
if test "$DEF_HASHMAP" = "None"; then
  AC_TRY_COMPILE([#include <ext/hash_map>
                 std::hash_map<int, int> xx;], ,
		 [DEF_HASHMAP=HAVE_EXT_HASHMAP])
fi
if test "$DEF_HASHMAP" = "None"; then
  AC_TRY_COMPILE([#include <ext/hash_map>
                 __gnu_cxx::hash_map<int, int> xx;], ,
                 [DEF_HASHMAP=HAVE_GNU_HASHMAP])
fi
if test "$DEF_HASHMAP" = "None"; then
  DEF_HASHMAP=
  AC_MSG_RESULT(not found)
  AC_MSG_WARN([Cannot find hash_map, will use map instead])
else
  AC_MSG_RESULT(found: $DEF_HASHMAP)
  DEF_HASHMAP="#define $DEF_HASHMAP"
fi
AC_SUBST(DEF_HASHMAP)

AC_CHECK_HEADERS(ext/algorithm)

##  --  search for tcl stuff  ---------------------------------------------
echo 
AC_CHECKING(for required Tcl components...)
echo

if test -z "$with_tcl"; then
  dirs="$with_tcl/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,tcl,main,,,not-optional)
if test -f "$LIB_DIR_TCL/tclConfig.sh"; then . $LIB_DIR_TCL/tclConfig.sh; fi
SCI_CHECK_HEADERS($TCL_SRC_DIR/generic, tcl.h tclPort.h tclMath.h tclInt.h,,,
           not-optional)

AC_SUBST(LIB_DIR_TCL)
AC_SUBST(TCL_LIB_FLAG)
AC_SUBST(TCL_LIB_DIR_FLAG)
AC_SUBST(INC_TCL_H)
AC_SUBST(DEF_TCL)


SCI_CHECK_LIB($dirs,tk,main,-ltcl,,not-optional)
if test -f "$LIB_DIR_TK/tkConfig.sh"; then
   . $LIB_DIR_TK/tkConfig.sh
else
   AC_MSG_ERROR($LIB_DIR_TK/tkConfig.sh does not exist!)
fi
SCI_CHECK_HEADERS($TK_SRC_DIR/generic, tk.h tk3d.h tkPort.h,$INC_TCL_H,,not-optional)

AC_SUBST(TK_LIB_FLAG)
AC_SUBST(TK_LIB_DIR_FLAG)
AC_SUBST(INC_TK_H)


SCI_CHECK_LIB($dirs,itcl,main, $TCL_LIB_DIR_FLAG -ltcl,,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_ITCL/../include,itcl.h,$INC_TCL_H,,not-optional)

AC_SUBST(LIB_DIR_ITCL)
AC_SUBST(ITCL_LIB_FLAG)
AC_SUBST(ITCL_LIB_DIR_FLAG)
AC_SUBST(INC_ITCL_H)


SCI_CHECK_LIB($dirs,itk,main, $ITCL_LIB_DIR_FLAG -litcl $TK_LIB_DIR_FLAG -ltk $TCL_LIB_DIR_FLAG -ltcl,,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_ITK/../include,itk.h,$INC_ITCL_H $INC_TK_H $INC_TCL_H,,not-optional)

AC_SUBST(ITK_LIB_FLAG)
AC_SUBST(ITK_LIB_DIR_FLAG)
AC_SUBST(INC_ITK_H)


SCI_CHECK_LIB($dirs,BLT,main,$TK_LIB_DIR_FLAG -ltk $TCL_LIB_DIR_FLAG -ltcl,,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_BLT/../include,blt.h,$INC_TCL_H $INC_TK_H,,not-optional)

AC_SUBST(BLT_LIB_FLAG)
AC_SUBST(BLT_LIB_DIR_FLAG)
AC_SUBST(INC_BLT_H)


SCI_CHECK_LIB($dirs,plplot,main,$TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG,,optional)
if test "$HAVE_LIB_PLPLOT"; then
   echo "Have optimized version"
else
  SCI_CHECK_LIB($dirs,plplotd,main,$TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG,,optional)
# Slight name change for convience
  if test "$HAVE_LIB_PLPLOTD"; then
     echo "Have debug version"
     HAVE_LIB_PLPLOT="$HAVE_LIB_PLPLOTD"
     LIBPLPLOT="$LIB_DIR_PLPLOTD"
     PLPLOT_LIB_FLAG="$PLPLOTD_LIB_FLAG"
     PLPLOT_LIB_DIR_FLAG="$PLPLOTD_LIB_DIR_FLAG"
  fi
fi

SCI_CHECK_HEADERS($LIB_DIR_PLPLOT/../include,plplot/plplot.h,$INC_TCL_H $INC_TK_H,,optional)

if test "$HAVE_LIB_PLPLOT" && test "$HAVE_PLPLOT_PLPLOT_H"; then
  DEF_PLPLOT="#define HAVE_PLPLOT 1"
  INC_PLPLOT_H="$INC_PLPLOT_PLPLOT_H"
else
  DEF_PLPLOT=""
  PLPLOT_LIB_FLAG=""
  PLPLOT_LIB_DIR_FLAG=""
  INC_PLPLOT_H=""
fi

AC_SUBST(PLPLOT_LIB_FLAG)
AC_SUBST(PLPLOT_LIB_DIR_FLAG)
AC_SUBST(INC_PLPLOT_H)
AC_SUBST(DEF_PLPLOT)


CORRECT_TCL_VERSION=no
CORRECT_TK_VERSION=no
CORRECT_ITCL_VERSION=no

SCI_CHECK_VAR_VERSION(Tcl,$TCL_VERSION$TCL_PATCH_LEVEL,8.3.2,,continue)
SCI_CHECK_VAR_VERSION(Tk,$TK_VERSION$TK_PATCH_LEVEL,8.3.2,,continue)
SCI_CHECK_VAR_VERSION(equal Tcl and Tk, $TCL_VERSION$TCL_PATCH_LEVEL,
                      $TK_VERSION$TK_PATCH_LEVEL,,continue,-ne)

AC_SUBST(TCL_PREFIX)
AC_SUBST(TCL_VERSION)
AC_SUBST(TK_VERSION)

AC_SUBST(ITCL_WIDGETS)

##  --  search for xerces-c++ stuff  --------------------------------------
echo
AC_CHECKING(for required Xerces-C++ components...)
echo

if test "$with_xercesc"; then
  dirs="$with_xercesc/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

case $host in
  *aix*)
      # Needed on blue pacific for stricmp
      SCI_CHECK_LIB($dirs,cfgdce,main,,yes,not-optional)
      ;;
esac

SCI_CHECK_LIB($dirs,xerces-c,main,$CFGDCE_LIB_FLAG,yes,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_XERCES_C/../include,\
    xercesc/dom/DOMNamedNodeMap.hpp xercesc/util/PlatformUtils.hpp \
    xercesc/parsers/XercesDOMParser.hpp xercesc/dom/DOMNode.hpp \
    xercesc/util/XMLUni.hpp xercesc/sax/SAXException.hpp \
    xercesc/sax/SAXParseException.hpp \
    xercesc/sax/ErrorHandler.hpp,,,not-optional)
    
# All xerces includes based on the first include file
INC_XERCESC_H=$INC_XERCESC_DOM_DOMNAMEDNODEMAP_HPP

AC_SUBST(XERCES_C_LIB_FLAG)
AC_SUBST(XERCES_C_LIB_DIR_FLAG)
AC_SUBST(INC_XERCESC_H)

##  --  search for mpi  --------------------------------------------------

if test "$pkg_uintah" = "yes"; then
  echo
  AC_CHECKING(for required MPI components...)
  echo
else
  echo
  AC_CHECKING(for optional components...)
  echo
fi

case $host in
#  *aix*)
      # On LLNL blue pacific, the "mp" compilers (scripts) automagically
      # include the paths to mpi stuff...  However, if you don't want 
      # them to automatically force you to run in poe (batch) mode, you
      # can comment this out and link in MPI directly yourself.
      # The resulting executable works in non-mpi mode which can be easier
      # to debug (and to get to run as you don't go through the poe system.)
      # It is possible that the executable will not work in MPI mode.
      #
      # AC_MSG_WARN(On blue pacific the mp compilers automatically specify mpi.  No check made.)
      #
      # The reason you have to specify xlC/KCC above, and change it to
      # mpxlC/mpKCC here is that configure uses the compiler to create test
      # programs to figure things out about the system.  If you use
      # the mpCC compiler, then the test programs will not run (as they
      # try to run in POE mode.)
      #
      # CC="mp$CC"
      # CXX="mp$CXX"
      # ;;
   *)
      if test "$with_mpi"; then
         dirs="$with_mpi/lib $SCI_LAB_TP_LIBS"
      else
         dirs="$SCI_LAB_TP_LIBS"
      fi

      SCI_CHECK_LIB("",util,main,,,optional)
      if test -n "$HAVE_LIB_UTIL"; then
         SCI_CHECK_LIB($dirs,lam,main,-lutil,,optional)
         if test -n "$HAVE_LIB_LAM"; then
            SCI_CHECK_LIB($dirs,mpi,main,-llam -lutil,,optional)
	    if test -n "$HAVE_LIB_MPI"; then
               SCI_CHECK_LIB($dirs,pmpi,main,-llam -lutil $MPI_LIB_FLAG,,optional)
	       MPI_LIB_FLAG="$PMPI_LIB_FLAG $MPI_LIB_FLAG $LAM_LIB_FLAG $UTIL_LIB_FLAG"
               echo "MPI_LIB_FLAG is $MPI_LIB_FLAG"
               echo "MPI_LIB_DIR_FLAG is $MPI_LIB_DIR_FLAG"
            fi
         fi
      fi
      
      if test -z "$HAVE_LIB_MPI"; then
         SCI_CHECK_LIB($dirs,mpi,main,,,optional)

         if test -z "$HAVE_LIB_MPI"; then
            SCI_CHECK_LIB($dirs,mpich,main,,,optional)
            SCI_CHECK_LIB($LIB_DIR_MPICH,pmpich,main,,,optional)

            if test "$HAVE_LIB_MPICH" && test "$HAVE_LIB_PMPICH"; then
	       HAVE_LIB_MPI="$HAVE_LIB_MPICH"
	       LIB_DIR_MPI="$LIB_DIR_MPICH"
               MPI_LIB_FLAG="$MPICH_LIB_FLAG $PMPICH_LIB_FLAG"
               MPI_LIB_DIR_FLAG="$MPICH_LIB_DIR_FLAG"
            fi
         fi
      fi

      # /usr/include/mpi is the standard location of mpi on some linux dists.
      SCI_CHECK_HEADERS("$LIB_DIR_MPI"/../include /usr/include/mpi,mpi.h,,,optional)

      if test "$HAVE_LIB_MPI" && test "$HAVE_MPI_H"; then
         if test "$HAVE_LIB_MPICH"; then
           DEF_MPI="#define HAVE_MPICH 1"
         else
           DEF_MPI="#define HAVE_MPI 1"
         fi
      fi
esac

if (test "$with_mpi" || test "$pkg_uintah" = "yes") && test ! "$DEF_MPI"; then
   echo
   SCI_MSG_ERROR(one or more of the MPI components is missing.)
fi

AC_SUBST(MPI_LIB_FLAG)
AC_SUBST(MPI_LIB_DIR_FLAG)
AC_SUBST(INC_MPI_H)
AC_SUBST(DEF_MPI)

##  --  search for mpi-uni  --------------------------------------------

if test "$with_xercesc"; then
  dirs="$with_mpiuni/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi


SCI_CHECK_LIB($dirs,mpiuni,main,,,optional)

if test "$HAVE_LIB_MPIUNI"; then
   SCI_CHECK_LIB($dirs,mpiunich,main,,,optional)
   SCI_CHECK_LIB($LIB_DIR_MPIUNICH,pmpiunich,main,,,optional)

   if test "$HAVE_LIB_MPIUNICH" && test "$HAVE_LIB_PMPIUNICH"; then
     HAVE_LIB_MPIUNI="$HAVE_LIB_MPIUNICH"
     LIB_DIR_MPIUNI="$LIB_DIR_MPIUNICH"
     MPIUNI_LIB_FLAG="$MPIUNICH_LIB_FLAG $PMPIUNICH_LIB_FLAG"
     MPIUNI_LIB_DIR_FLAG="$MPIUNICH_LIB_DIR_FLAG"
     HAVE_MPIUNI="$HAVE_MPIUNICH"
   fi
fi

SCI_CHECK_HEADERS($LIB_DIR_MPIUNI/../include,mpiuni.h,,,optional)

if test "$HAVE_LIB_MPIUNI" && test "$HAVE_MPIUNI_H"; then
   if test "$HAVE_LIB_MPIUNICH"; then
     DEF_MPIUNI="#define HAVE_MPIUNICH 1"
   else
     DEF_MPIUNI="#define HAVE_MPIUNI 1"
   fi
fi

if test "$with_mpiuni" && test ! "$DEF_MPIUNI"; then
  echo
  AC_MSG_ERROR(One or more of the MPIUNI components is missing.)
  echo
fi

AC_SUBST(MPIUNI_LIB_FLAG)
AC_SUBST(MPIUNI_LIB_DIR_FLAG)
AC_SUBST(INC_MPIUNI_H)
AC_SUBST(DEF_MPIUNI)

##  --  if building uintah, search for TAU makefile  ---------------------

if test "$pkg_uintah" = "yes" && test "$with_tau"; then
  if test ! -f "$with_tau" ; then
    SCI_MSG_ERROR($with_tau does not exist.  Bye!)
  fi

  AC_MSG_RESULT(Using TAU makefile: $with_tau)

  cat > conftest-tau.cc <<EOF

  #include <Profile/Profiler.h>

  int main(int argc, char **argv)
  {
    TAU_PROFILE("main", "int (int, char **)", TAU_DEFAULT);
    TAU_PROFILE_INIT(argc, argv);
    return 0;
  }
EOF

  cat > conftest-tau-makefile <<EOF
include $with_tau
all:
  \$(TAU_CXX) -o conftest-tau-a.out \$(TAU_DEFS) \$(TAU_INCLUDE) conftest-tau.cc \$(TAU_SHLIBS) \$(TAU_MPI_LIBS)
EOF

  ac_try="make TAU_MAKEFILE=$with_tau -f conftest-tau-makefile > conftestout1 2> conftesterr1"
  (eval $ac_try) 2>&5
  ac_status=$?
  if test "$ac_status" = "1"; then
    rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
    SCI_MSG_ERROR(TAU libraries not working. Bye!)
  fi
  rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1

  TAU_MAKEFILE="$with_tau"
fi

AC_SUBST(TAU_MAKEFILE)

##  ----------------------------------------------------------------------
##  ----------  search for optional libraries and headers  ---------------
##  ----------------------------------------------------------------------

echo
AC_CHECKING(for optional components...)
echo

SCI_CHECK_HEADERS(,ieeefp.h,,,optional)

SCI_CHECK_LIB(,fl,main,,,optional)
SCI_CHECK_LIB(,ld,main,,,optional)

##  --  search for teem  -------------------------------------------------

if test "$with_teem"; then
  dirs="$with_teem/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,air,main,,,optional)
SCI_CHECK_LIB($LIB_DIR_AIR,biff,main,$AIR_LIB_DIR_FLAG $AIR_LIB_FLAG,,optional)
SCI_CHECK_LIB($LIB_DIR_AIR,ell, main,$AIR_LIB_DIR_FLAG $AIR_LIB_FLAG,,optional)
SCI_CHECK_LIB($LIB_DIR_AIR,nrrd,main,$BIFF_LIB_DIR_FLAG $BIFF_LIB_FLAG $AIR_LIB_FLAG,,optional)
SCI_CHECK_HEADERS($LIB_DIR_NRRD/../include,nrrd.h,,,optional)

TEEM_LIB_FLAG="$NRRD_LIB_FLAG $ELL_LIB_FLAG $BIFF_LIB_FLAG $AIR_LIB_FLAG"
TEEM_LIB_DIR_FLAG="$NRRD_LIB_DIR_FLAG"

if test "$HAVE_LIB_NRRD" && test "$HAVE_LIB_AIR" && test "$HAVE_LIB_BIFF" &&
   test "$HAVE_LIB_ELL" && test "$HAVE_NRRD_H"; then
   INC_TEEM_H="$INC_NRRD_H"
   DEF_TEEM="#define HAVE_TEEM 1"
fi

if (test "$with_teem" || test "$pkg_teem" = "yes") && test ! "$DEF_TEEM"; then
  echo
  AC_MSG_ERROR(One or more of the TEEM components is missing.)
  echo
fi

AC_SUBST(TEEM_LIB_FLAG)
AC_SUBST(TEEM_LIB_DIR_FLAG)
AC_SUBST(INC_TEEM_H)
AC_SUBST(DEF_TEEM)


##  --  search for mpeg  -------------------------------------------------

if test "$with_mpeg"; then
  dirs="$with_mpeg/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,mpege,main,,,optional)

if test "$HAVE_LIB_MPEGE"; then
  DEF_MPEG="#define HAVE_MPEG 1"
fi

if test "$with_mpeg" && test ! "$DEF_MPEG"; then
  echo
  AC_MSG_ERROR(One or more of the MPEG components is missing.)
  echo
fi

AC_SUBST(MPEGE_LIB_FLAG)
AC_SUBST(MPEGE_LIB_DIR_FLAG)
AC_SUBST(DEF_MPEG)

##  --  search for mdsplus  -------------------------------------------------

if test "$with_mdsplus"; then
  dirs="$with_mdsplus/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,MdsLib_client,main,,no,optional)
SCI_CHECK_HEADERS($LIB_DIR_MDSLIB_CLIENT/../include,mdslib.h,,no,optional)

if test "$HAVE_LIB_MDSLIB_CLIENT" && test "$HAVE_MDSLIB_H"; then
   MDSPLUS_LIB_FLAG="$MDSLIB_CLIENT_LIB_FLAG"
   MDSPLUS_LIB_DIR_FLAG="$MDSLIB_CLIENT_LIB_DIR_FLAG"
   INC_MDSPLUS_H=$INC_MDSLIB_H
   DEF_MDSPLUS="#define HAVE_MDSPLUS 1"
fi

if test "$with_mdsplus" && test ! "$DEF_MDSPLUS"; then
  echo
  AC_MSG_ERROR(One or more of the MDS PLUS components is missing.)
  echo
fi

AC_SUBST(MDSPLUS_LIB_FLAG)
AC_SUBST(MDSPLUS_LIB_DIR_FLAG)
AC_SUBST(INC_MDSPLUS_H)
AC_SUBST(DEF_MDSPLUS)

##  --  search for perfex  -----------------------------------------------

dirs="$with_perfex $SCI_LAB_TP_LIBS"

SCI_CHECK_LIB($dirs,perfex,main,,,optional)

if test "$HAVE_LIB_PERFEX"; then
  DEF_PERFEX="#define HAVE_PERFEX 1"
fi

if test "$with_perfex" && test ! "$DEF_PERFEX"; then
  AC_MSG_ERROR(One or more of the PERFEX components is missing.)
  echo
fi

AC_SUBST(PERFEX_LIB_FLAG)
AC_SUBST(PERFEX_LIB_DIR_FLAG)
AC_SUBST(DEF_PERFEX)

##  --  search for fastm  --------------------------------------------------

dirs="$with_fastm $SCI_LAB_TP_LIBS"

SCI_CHECK_LIB($dirs,fastm,main,,,optional)

if test "$HAVE_LIB_FASTM"; then
  DEF_FASTM="#define HAVE_FASTM 1"
fi

if test "$with_fastm" && test ! "$DEF_FASTM"; then
  echo
  AC_MSG_ERROR(One or more of the FASTM components is missing.)
  echo
fi

AC_SUBST(FASTM_LIB_FLAG)
AC_SUBST(FASTM_LIB_DIR_FLAG)
AC_SUBST(DEF_FASTM)

##  --  search for ssl  --------------------------------------------------

dirs="$with_ssl $SCI_LAB_TP_LIBS"

SCI_CHECK_LIB($dirs,ssl,main,,,optional)

if test "$HAVE_LIB_SSL"; then
  DEF_SSL="#define HAVE_SSL 1"
fi

if test "$with_ssl" && test ! "$DEF_SSL"; then
  echo
  AC_MSG_ERROR(One or more of the SSL components is missing.)
  echo
fi

AC_SUBST(SSL_LIB_FLAG)
AC_SUBST(SSL_LIB_DIR_FLAG)
AC_SUBST(DEF_SSL)

##  --  search for crypto  -----------------------------------------------

dirs="$with_crypto $SCI_LAB_TP_LIBS"

SCI_CHECK_LIB($dirs,crypto,main,,,optional)

if test "$HAVE_LIB_CRYPTO"; then
  DEF_CRYPTO="#define HAVE_CRYPTO 1"
fi

if test "$with_crypto" && test ! "$DEF_CRYPTO"; then
  echo
  AC_MSG_ERROR(One or more of the CRYPTO components is missing.)
  echo
fi

AC_SUBST(CRYPTO_LIB_FLAG)
AC_SUBST(CRYPTO_LIB_DIR_FLAG)
AC_SUBST(DEF_CRYPTO)

##  --  search for SGI'S traceback library  ------------------------------ 

dirs="$with_exc $SCI_LAB_TP_LIBS"

SCI_CHECK_LIB($dirs,exc,main,,,optional)
SCI_CHECK_HEADERS($LIB_DIR_EXC/../include,libexc.h,,,optional)

if test "$HAVE_LIB_EXC" && test "$HAVE_LIBEXC_H"; then
  TRACEBACK_LIB=-lexc
  DEF_EXC="#define HAVE_EXC 1"
fi

if test "$with_exc" && test ! "$DEF_EXC"; then
  echo
  AC_MSG_ERROR(One or more of the EXC components is missing.)
  echo
fi

AC_SUBST(EXC_LIB_FLAG)
AC_SUBST(EXC_LIB_DIR_FLAG)
AC_SUBST(DEF_EXC)

##  --  globus nexus  ----------------------------------------------------

if test "$with_globus"; then
  dirs="$with_globus/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

MISC_LIB_FLAG="$SSL_LIB_DIR_FLAG $SSL_LIB_FLAG $CRYPTO_LIB_DIR_FLAG $CRYPTO_LIB_FLAG"

SCI_CHECK_LIB($dirs,globus_dc,main,,,optional)
SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_common,,,,optional)
SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_nexus,,,,optional)

SCI_CHECK_HEADERS($LIB_DIR_GLOBUS_DC/../include,globus_nexus.h,,,optional)

if test "$HAVE_LIB_GLOBUS_DC" && 
   test "$HAVE_LIB_GLOBUS_COMMON" && 
   test "$HAVE_LIB_GLOBUS_NEXUS" && 
   test "$INC_GLOBUS_NEXUS_H"; then
  DEF_GLOBUS="#define HAVE_GLOBUS 1"
  HAVE_GLOBUS="$HAVE_LIB_GLOBUS_DC"
  GLOBUS_LIB_FLAG="$GLOBUS_NEXUS_LIB_FLAG $GLOBUS_DC_LIB_FLAG $GLOBUS_COMMON_LIB_FLAG"
  GLOBUS_LIB_DIR_FLAG="$GLOBUS_DC_LIB_DIR_FLAG"

  INC_GLOBUS_H="$INC_GLOBUS_NEXUS_H"
fi

if test "$with_globus" && test ! "$DEF_GLOBUS"; then
  echo
  AC_MSG_ERROR(One or more of the GLOBUS components is missing.)
  echo
fi

  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_io,        ,,,optional)

if test "$is_linux" = "linux"; then
  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_utp,       ,,,optional)
  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_mp,        ,,,optional)
  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_gss_assist,,,,optional)
  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_gss,       ,,,optional)
  SCI_CHECK_LIB($LIB_DIR_GLOBUS_DC,globus_gaa,       ,,,optional)

  GLOBUS_EXTRA_LIB_FLAG="$GLOBUS_GAA_LIB_FLAG $GLOBUS_GSS_LIB_FLAG $GLOBUS_GSS_ASSIST_LIB_FLAG $GLOBUS_MP_LIB_FLAG $GLOBUS_UTP_LIB_FLAG $MISC_LIB_FLAG"
fi

AC_SUBST(GLOBUS_IO_LIB_FLAG)
AC_SUBST(GLOBUS_IO_LIB_DIR_FLAG)
AC_SUBST(GLOBUS_COMMON_LIB_FLAG)
AC_SUBST(GLOBUS_COMMON_LIB_DIR_FLAG)
AC_SUBST(GLOBUS_LIB_FLAG)
AC_SUBST(GLOBUS_LIB_DIR_FLAG)
AC_SUBST(GLOBUS_EXTRA_LIB_FLAG)
AC_SUBST(INC_GLOBUS_H)
AC_SUBST(DEF_GLOBUS)

##  --  search for Qt  ----------------------------------------------------

if test "$with_qt"; then
  dirs="$with_qt/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,qt-mt,main,,,optional)

QT_MOC_BIN=""
AC_CHECKING(for moc in $LIB_DIR_QT_MT/../bin)
AC_CHECK_PROG(QT_MOC_BIN,moc,$ac_dir/moc,NOMOC,$LIB_DIR_QT_MT/../bin)

if test "$HAVE_LIB_QT_MT" && test $QT_MOC_BIN != "NOMOC"; then
   DEF_QT="#define HAVE_QT 1"
   HAVE_QT="yes"
fi

if test "$with_qt" && test ! "$DEF_QT"; then
  echo
  AC_MSG_ERROR(One or more of the QT components is missing.)
  echo
fi

AC_SUBST(HAVE_QT)
AC_SUBST(QT_MT_LIB_FLAG)
AC_SUBST(QT_MT_LIB_DIR_FLAG)
AC_SUBST(INC_QT_MT_H)
AC_SUBST(DEF_QT)

##  --  search for Babel  ----------------------------------------------------

if test "$with_babel"; then
  dirs="$with_babel/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,sidl,main,,,optional)

BABEL_BIN=""
AC_CHECKING(for babel in $LIB_DIR_SIDL/../bin)
AC_CHECK_PROG(BABEL_BIN,babel,$ac_dir/babel,NONE,$LIB_DIR_SIDL/../bin)

if test "$HAVE_LIB_SIDL" && test $BABEL_BIN != "NONE"; then
   DEF_BABEL="#define HAVE_BABEL 1"
   HAVE_BABEL="yes"
fi

SCI_CHECK_HEADERS($LIB_DIR_SIDL/../include, SIDL.h,,,optional)

if test "$with_babel" && test ! "$DEF_BABEL"; then
  echo
  AC_MSG_ERROR(One or more of the Babel components is missing.)
  echo
fi

AC_SUBST(HAVE_BABEL)
AC_SUBST(SIDL_LIB_FLAG)
AC_SUBST(SIDL_LIB_DIR_FLAG)
AC_SUBST(INC_SIDL_H)
AC_SUBST(DEF_BABEL)
AC_SUBST(BABEL_BIN)

##  --  search for VDT  ----------------------------------------------------

if test "$pkg_vdt" = "yes"; then
  for i in $with_vdt $SCI_LAB_TP_DEFAULT; do
    if test ! -d "$i"; then
      continue
    fi

    #from here we should find src/vdt/bin
    if test ! -d "$i/src/vdt/bin"; then
      continue
    fi

    guess=`sh $i/src/vdt/bin/config.guess`
    ad=`sh $i/src/vdt/bin/config.sub $guess`

    #this is where the lib actually lives
    if test ! -d "$i/src/vdt/VDT/lib/$ad"; then
      continue
    fi

    SCI_CHECK_LIB($i/src/vdt/Elixir/lib/$ad,esi,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/Elixir/lib/$ad,elixir,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/lp_solve_2.2/$ad,lpk,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/PiRaT/lib/$ad,pirat,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/LOBS/lib/$ad,lobs3d,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/LOBS/lib/$ad,lobs2d,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/LOBS/lib/$ad,lobs1d,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/G3D/lib/$ad,g3d,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/Ckit/lib/$ad,ckit,,,,not-optional)
    SCI_CHECK_LIB($i/src/vdt/Meschach/$ad,meschach,,,,not-optional)


    MISC_LIB_FLAG="$ESI_LIB_FLAG $ELIXIR_LIB_FLAG $LPK_LIB_FLAG $PIRAT_LIB_FLAG $LOBS3D_LIB_FLAG $LOBS2D_LIB_FLAG $LOBS1D_LIB_FLAG $G3D_LIB_FLAG $CKIT_LIB_FLAG $MESCHACH_LIB_FLAG $X11_LIB_FLAG $XEXT_LIB_FLAG $XAW_LIB_FLAG $XT_LIB_FLAG $XMU_LIB_FLAG $M_LIB_FLAG $LEX_LIB_FLAG"
  
    MISC_LIB_DIR_FLAG="$ESI_LIB_DIR_FLAG $ELIXIR_LIB_DIR_FLAG $LPK_LIB_DIR_FLAG $PIRAT_LIB_DIR_FLAG $LOBS3D_LIB_DIR_FLAG $LOBS2D_LIB_DIR_FLAG $LOBS1D_LIB_DIR_FLAG $G3D_LIB_DIR_FLAG $CKIT_LIB_DIR_FLAG $MESCHACH_LIB_DIR_FLAG $X11_LIB_DIR_FLAG"
  
    SCI_CHECK_LIB($i/src/vdt/VDT/lib/$ad,vdt,VDT_triangulate, $MISC_LIB_DIR_FLAG $MISC_LIB_FLAG,,not-optional)
    if test -e "$LIB_DIR_VDT/../../src/vdt.h"; then
      HAVE_VDT_H="yes"
      INC_VDT_H="-I$LIB_DIR_VDT/../../src"
      echo "checking for vdt.h... $LIB_DIR_VDT/../../src" 
    else
      echo "checking for vdt.h... no" 
    fi

    if test "$HAVE_LIB_VDT" && test "$HAVE_VDT_H"; then
      DEF_VDT="#define HAVE_VDT 1"
      VDT_EXTRA_LIB_FLAG="$MISC_LIB_FLAG"
      VDT_EXTRA_LIB_DIR_FLAG="$MISC_LIB_DIR_FLAG"
      break
    fi
  done

  if test "$with_vdt" && test ! "$DEF_VDT"; then
    echo
    AC_MSG_ERROR(One or more of the VDT components is missing.)
    echo
  fi
fi

AC_SUBST(DEF_VDT)
AC_SUBST(VDT_LIB_FLAG)
AC_SUBST(VDT_LIB_DIR_FLAG)
AC_SUBST(VDT_EXTRA_LIB_FLAG)
AC_SUBST(VDT_EXTRA_LIB_DIR_FLAG)
AC_SUBST(INC_VDT_H)


##  --  search for ImageMagick --------------------------------------

for i in $with_imagemagick $SCI_LAB_TP_DEFAULT; do
  if test ! -d "$i"; then
    continue
  fi

  #this is where the lib actually lives
  if test ! -d "$i/lib"; then
    continue
  fi

  #this is where the scripts for configuration live
  if test ! -d "$i/bin"; then
    continue
  fi

  # capture in the libs to link
  if test -e $i/bin/Magick-config; then
    IM_LDFLAGS=`$i/bin/Magick-config --ldflags`
    IM_LIBS=`$i/bin/Magick-config --libs`
  else
    continue
  fi

  SCI_CHECK_LIB($i/lib,Magick,WriteImage,$IM_LDFLAGS $IM_LIBS,,optional)
  SCI_CHECK_HEADERS($LIB_DIR_MAGICK/../include,magick/magick.h,,,optional)

  if test "$HAVE_LIB_MAGICK" && test HAVE_MAGICK_MAGICK_H; then
    DEF_MAGICK="#define HAVE_MAGICK 1"
    INC_MAGICK_H="$INC_MAGICK_MAGICK_H"
    MAGICK_EXTRA_LIB_FLAG="$IM_LDFLAGS"
    MAGICK_EXTRA_LIB_DIR_FLAG="$IM_LIBS"
    break
  fi
done
 
if test "$with_imagemagick" && test ! "$DEF_MAGICK"; then
  echo
  AC_MSG_ERROR(One or more of the VDT components is missing.)
  echo
fi

AC_SUBST(MAGICK_LIB_FLAG)
AC_SUBST(MAGICK_LIB_DIR_FLAG)
AC_SUBST(MAGICK_EXTRA_LIB_FLAG)
AC_SUBST(MAGICK_EXTRA_LIB_DIR_FLAG)
AC_SUBST(INC_MAGICK_H)
AC_SUBST(DEF_MAGICK)

##  --  search for gzopen (and related)  ----------------------------------

if test "$with_zlib"; then
  dirs="$with_zlib/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

SCI_CHECK_LIB($dirs,z,main,,,not-optional)
SCI_CHECK_HEADERS($LIB_DIR_Z/../include,zlib.h,,,not-optional)

if test "$HAVE_LIB_Z" && test "$HAVE_ZLIB_H"; then
   DEF_Z="#define HAVE_ZLIB 1"
fi

if test "$with_zlib" && test ! "$DEF_Z"; then
  echo
  AC_MSG_ERROR(One or more of the GZOPEN components is missing.)
  echo
fi

AC_SUBST(Z_LIB_FLAG)
AC_SUBST(Z_LIB_DIR_FLAG)
AC_SUBST(INC_ZLIB_H)
AC_SUBST(DEF_Z)

##  --  search for blas stuff  -------------------------------------------

if test "$with_blas"; then
  dirs="$with_blas/lib $SCI_LAB_TP_LIBS"
else
  dirs="$SCI_LAB_TP_LIBS"
fi

case $host in
  *aix*)
     SCI_CHECK_LIB($dirs,essl,main,$F_LIB_FLAG,,optional)
     if test "$HAVE_LIB_ESSL"; then
        LIB_DIR_BLAS=$LIB_DIR_ESSL
	HAVE_LIB_BLAS=$HAVE_LIB_ESSL
        BLAS_LIB_FLAG=$ESSL_LIB_FLAG
        BLAS_LIB_DIR_FLAG=$ESSL_LIB_DIR_FLAG
        DEF_BLAS="#define HAVE_BLAS 1"
     fi
     ;;
  *)
     SCI_CHECK_LIB($dirs,blas,main,$F_LIB_FLAG,,optional)
     if test "$HAVE_LIB_BLAS"; then
       DEF_BLAS="#define HAVE_BLAS 1"
     fi
     ;;
esac

if test "$with_blas" && test ! "$DEF_BLAS"; then
  echo
  AC_MSG_ERROR(One or more of the BLAS components is missing.)
  echo
fi

AC_SUBST(BLAS_LIB_FLAG)
AC_SUBST(BLAS_LIB_DIR_FLAG)
AC_SUBST(DEF_BLAS)

##  --  search for lapack stuff  -----------------------------------------

if test "$HAVE_LIB_F" && test "$HAVE_LIB_BLAS"; then
  if test "$with_lapack"; then
    dirs="$with_lapack/lib $with_lapack $LIB_DIR_BLAS $SCI_LAB_TP_LIBS"
  else
    dirs="$LIB_DIR_BLAS $SCI_LAB_TP_LIBS"
  fi

  SCI_CHECK_LIB($dirs,lapack,main,$BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG,,optional)

  if test ! "$HAVE_LIB_LAPACK"; then
    SCI_CHECK_LIB($dirs,complib.sgimath,main,,,optional)
#    SCI_CHECK_LIB($dirs,complib.sgimath_mp,main,,,optional)
#    if test "$HAVE_LIB_COMPLIB_SGIMATH_MP"; then
    if test "$HAVE_LIB_COMPLIB_SGIMATH"; then
       AC_MSG_WARN(Using complib for lapack)
       HAVE_LIB_LAPACK="yes"
#      LAPACK_LIB_FLAG="$COMPLIB_SGIMATH_LIB_FLAG $COMPLIB_SGIMATH_MP_LIB_FLAG"
       LAPACK_LIB_FLAG="$COMPLIB_SGIMATH_LIB_FLAG"
       LAPACK_LIB_DIR_FLAG="$COMPLIB_SGIMATH_LIB_DIR_FLAG"
    fi
  fi

  if test "$HAVE_LIB_LAPACK"; then
    DEF_LAPACK="#define HAVE_LAPACK 1"
  fi
fi

if test "$with_lapack" && test ! "$DEF_LAPACK"; then
  echo
  AC_MSG_ERROR(One or more of the LAPACK components is missing.)
  echo
fi

AC_SUBST(LAPACK_LIB_FLAG)
AC_SUBST(LAPACK_LIB_DIR_FLAG)

##  --  search for hypre stuff  ------------------------------------------

if test "$pkg_uintah" = "yes"; then

  if test "$with_hypre"; then
    dirs="$with_hypre/lib $with_hypre/src/hypre/lib $SCI_LAB_TP_LIBS"
  else
    dirs="$SCI_LAB_TP_LIBS"
  fi

  SCI_CHECK_LIB($dirs,HYPRE_struct_mv,main,,,optional)
  SCI_CHECK_LIB($LIB_DIR_HYPRE_STRUCT_MV,HYPRE_struct_ls,main,,,optional)
  SCI_CHECK_LIB($LIB_DIR_HYPRE_STRUCT_MV,HYPRE_blas,main,,,optional)
  SCI_CHECK_LIB($LIB_DIR_HYPRE_STRUCT_MV,HYPRE_LSI,main,$HYPRE_STRUCT_MV_LIB_DIR_FLAG $HYPRE_BLAS_LIB_FLAG $HYPRE_STRUCT_LS_LIB_FLAG $HYPRE_STRUCT_MV_LIB_FLAG,,optional)
  SCI_CHECK_HEADERS($LIB_DIR_HYPRE_STRUCT_MV/../include,HYPRE.h,,,optional)

  if test "$HAVE_LIB_HYPRE_LSI" && test "$HAVE_HYPRE_H"; then
    HAVE_HYPRE="yes"
    DEF_HYPRE="#define HAVE_HYPRE 1"
    HYPRE_LIB_FLAG="$HYPRE_STRUCT_MV_LIB_DIR_FLAG $HYPRE_BLAS_LIB_FLAG \
                    $HYPRE_STRUCT_LS_LIB_FLAG $HYPRE_STRUCT_MV_LIB_FLAG $HYPRE_LSI_LIB_FLAG"
    HYPRE_LIB_DIR_FLAG="$HYPRE_LSI_LIB_DIR_FLAG"
  fi
fi

if test "$with_hypre" && test ! "$DEF_HYPRE"; then
  echo
  AC_MSG_ERROR(One or more of the HYPRE components is missing.)
  echo
fi

AC_SUBST(HAVE_HYPRE)
AC_SUBST(DEF_HYPRE)
AC_SUBST(HYPRE_LIB_FLAG)
AC_SUBST(HYPRE_LIB_DIR_FLAG)
AC_SUBST(INC_HYPRE_H)

##  --  search for petsc stuff  ------------------------------------------
# We only use the optimized petsc lib even if we are building a debug SCIRun
#if test "$debug" = "yes"; then
#  PETSC_SUB=libg
#else
  PETSC_SUB=libO
#fi

PETSC_VERSION_DIR=petsc-2.1.1

case $host in
  *-irix*)
    if test "$enable_64bit" = "yes"; then
      PETSC_ARCH=IRIX64
    else
      PETSC_ARCH=IRIX32
    fi
    ;;
  *linux*)
    PETSC_ARCH=linux
    ;;
  *-dec*)
    if test "$petsc"; then
      SCI_MSG_ERROR(PETSC ARCH not set for Tru64.  Need to fix this.)
    else
      PETSC_ARCH=dec
    fi
    ;;
  *-aix*)
    PETSC_ARCH=rs6000_sp
    ;;
  *)
    PETSC_ARCH=""
    ;;
esac

if test -z "$PETSC_ARCH"; then
   AC_MSG_ERROR(PETSC_ARCH environment var is not set.  Please set.)
fi


# It seems that under AIX, you don't need lapack for petsc...
if test "$HAVE_LIB_MPI" && test "$HAVE_LIB_BLAS" && 
   (test "$PETSC_ARCH" = "rs6000_sp" || test "$HAVE_LIB_LAPACK"); then

  dirs=""

  # Modify dirs to have correct path information:
  for i in $SCI_LAB_TP_DEFAULT; do
    if test ! -d "$i"; then
      continue
    fi

    #this is where the lib actually lives
    if test ! -d "$i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"; then
      continue
    fi

    dirs="$dirs $i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"
  done

  if test "$with_petsc"; then
    dirs="$with_petsc/lib/$PETSC_SUB/$PETSC_ARCH $dirs"
  fi

  SCI_CHECK_LIB($dirs,petsc,main,$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)

  SCI_CHECK_HEADERS($LIB_DIR_PETSC/../../../include /usr/include/petsc, \
    petsc.h, $INC_MPI_H -I$LIB_DIR_PETSC/../../../bmake/$PETSC_ARCH,,optional)

  SCI_CHECK_LIB($LIB_DIR_PETSC,petscvec,main,$PETSC_LIB_FLAG \
		$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG \
		$F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petscmat,main,
		$PETSCVEC_LIB_FLAG $PETSC_LIB_FLAG \
		$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG \
		$F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petscdm,main,
		$PETSCMAT_LIB_FLAG $PETSCVEC_LIB_FLAG $PETSC_LIB_FLAG \
		$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG \
		$F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petsccontrib,main,
		$PETSCDM_LIB_FLAG $PETSCMAT_LIB_FLAG $PETSCVEC_LIB_FLAG \
		$PETSC_LIB_FLAG $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG \
		$BLAS_LIB_FLAG $F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petscsles,main,
		$PETSCDM_LIB_FLAG $PETSCMAT_LIB_FLAG $PETSCVEC_LIB_FLAG \
		$PETSC_LIB_FLAG $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG \
		$BLAS_LIB_FLAG $F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petscsnes,main,                      
		$PETSCSLES_LIB_FLAG $PETSCDM_LIB_FLAG $PETSCMAT_LIB_FLAG \
		$PETSCVEC_LIB_FLAG $PETSC_LIB_FLAG \
		$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG \
		$F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)
  SCI_CHECK_LIB($LIB_DIR_PETSC,petscts,main,                         \
		$PETSCSNES_LIB_FLAG $PETSCSLES_LIB_FLAG $PETSCDM_LIB_FLAG \
		$PETSCMAT_LIB_FLAG $PETSCVEC_LIB_FLAG $PETSC_LIB_FLAG \
		$LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG \
		$F_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG,,optional)

  if test "$HAVE_LIB_PETSC"        && test "$HAVE_PETSC_H" &&
     test "$HAVE_LIB_PETSCCONTRIB" && test "$HAVE_LIB_PETSCDM" && 
     test "$HAVE_LIB_PETSCMAT"     && test "$HAVE_LIB_PETSCSLES" && 
     test "$HAVE_LIB_PETSCSNES"    && test "$HAVE_LIB_PETSCTS" && 
     test "$HAVE_LIB_PETSCVEC"; then
     HAVE_PETSC="yes"
     DEF_PETSC="#define HAVE_PETSC 1"
     INC_PETSC_H="$INC_PETSC_H -I$LIB_DIR_PETSC/../../../bmake/$PETSC_ARCH"
     PETSC_EXTRA_LIB_FLAG="$PETSCCONTRIB_LIB_FLAG \
       $PETSCDM_LIB_FLAG $PETSCMAT_LIB_FLAG $PETSCSLES_LIB_FLAG \
       $PETSCSNES_LIB_FLAG $PETSCTS_LIB_FLAG $PETSCVEC_LIB_FLAG \
       $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $F_LIB_FLAG"
  fi 
else
  AC_MSG_WARN(One or more of MPI or BLAS or LAPACK is missing.)
  AC_MSG_WARN(HAVE_LIB_MPI: $HAVE_LIB_MPI)
  AC_MSG_WARN(HAVE_LIB_BLAS: $HAVE_LIB_BLAS)
  AC_MSG_WARN(Not configuring PETSc.)
fi

if test "$with_petsc" && test ! "$DEF_PETSC"; then
  echo
  AC_MSG_ERROR(One or more of the PETSC components is missing.)
  echo
fi

AC_SUBST(HAVE_PETSC)
AC_SUBST(PETSC_LIB_FLAG)
AC_SUBST(PETSC_LIB_DIR_FLAG)
AC_SUBST(PETSC_EXTRA_LIB_FLAG)
AC_SUBST(DEF_PETSC)
AC_SUBST(INC_PETSC_H)

##  --  search for uni-petsc stuff  --------------------------------------------

if test "$DEF_PETSC" &&
   test "$HAVE_LIB_MPIUNI" &&
   test "$HAVE_LIB_BLAS" &&
   test "$HAVE_LIB_LAPACK"; then 

  dirs=""

  # Modify dirs to have correct path information:
  for i in $SCI_LAB_TP_DEFAULT; do
    if test ! -d "$i"; then
      continue
    fi

    #this is where the lib actually lives
    if test ! -d "$i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"; then
      continue
    fi

    dirs="$dirs $i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"
  done

  if test "$with_unipetsc"; then
    dirs="$with_unipetsc/lib/$PETSC_SUB/$PETSC_ARCH $dirs"
  fi

  SCI_CHECK_HEADERS($LIB_DIR_PETSC/../../../include /usr/include/petsc, petsc.h petscsles.h, $INC_MPIUNI_H -I$LIB_DIR_PETSC/../../../bmake/$PETSC_ARCH,,optional)

  if test "$HAVE_LIB_PETSC" &&
      test "$HAVE_PETSC_H"          && test "$HAVE_PETSCSLES_H" &&
      test "$HAVE_LIB_PETSCCONTRIB" && test "$HAVE_LIB_PETSCDM" &&
      test "$HAVE_LIB_PETSCMAT"     && test "$HAVE_LIB_PETSCSLES" &&
      test "$HAVE_LIB_PETSCSNES"    && test "$HAVE_LIB_PETSCTS" &&
      test "$HAVE_LIB_PETSCVEC"; then
      DEF_PETSC_UNI="#define PETSC_UNI 1"
      INC_PETSC_UNI_H="$INC_PETSC_H -I$LIB_DIR_PETSC/../../../bmake/$PETSC_ARCH"
      PETSC_UNI_LIB_FLAG="$PETSC_LIB_FLAG"
      PETSC_UNI_LIB_DIR_FLAG="$PETSC_LIB_DIR_FLAG"
      PETSC_UNI_EXTRA_LIB_FLAG="$PETSC_EXTRA_LIB_FLAG"
  fi 
fi

if test "$with_unipetsc" && test ! "$DEF_UNI_PETSC"; then
  echo
AC_MSG_ERROR(One or more of the UNI_PETSC components is missing.)
  echo
fi

AC_SUBST(PETSC_UNI_LIB_FLAG)
AC_SUBST(PETSC_UNI_LIB_DIR_FLAG)
AC_SUBST(PETSC_UNI_EXTRA_LIB_FLAG)
AC_SUBST(DEF_PETSC_UNI)
AC_SUBST(INC_PETSC_UNI_H)

##  --  search for optional headers  ------------------------------------
SCI_CHECK_HEADERS(,sstream,,,optional)
if test "$HAVE_SSTREAM"; then
   SSTREAM_COMPAT="no"
else
   # Use SCIRun sstream compatibility files...
   SSTREAM_COMPAT="yes"
fi

AC_SUBST(SSTREAM_COMPAT)

##  --  finis flags  ------------------------------------------------
case $host in
  *-irix*)
    LDFLAGS="$LDFLAGS -J\$(MAKE_PARALLELISM) $(TLINK)"
    ;;
  *linux*)
    ;;
  *aix*)
    ;;
  *dec*)
    ;;
  *)
    ;;
esac

##  --  search for uuid functions, either uuid_create or uuid_generate ----

# This is typical on SGI and ??
AC_MSG_CHECKING(for uuid_create in sys/uuid.h)
AC_TRY_COMPILE([#include <sys/types.h>
             extern "C" {
                #include <sys/uuid.h>
             }],
	[char* uuid_str;
	 uuid_t uuid;
	 uint_t status;
	 uuid_create(&uuid, &status);],
	[have_uuid=yes
         AC_DEFINE(HAVE_SYS_UUID_H)], have_uuid=no)
AC_MSG_RESULT($have_uuid)

if test "$have_uuid" != "yes"; then
  # This is typical on linux and ??
  AC_MSG_CHECKING(for uuid_generate in uuid/uuid.h)
  AC_TRY_COMPILE([
extern "C" { // The linux uuid.h doesn't have this, so we need exter C here
#include <uuid/uuid.h>
}],
	[uuid_t uuid;
	 char uuid_str[64];
	 uuid_generate(uuid);
	 uuid_unparse(uuid, uuid_str);],
	[have_uuid=yes
         AC_DEFINE(HAVE_UUID_UUID_H)], have_uuid=no)
  AC_MSG_RESULT($have_uuid)
fi

if test "$have_uuid" = "yes"; then
  AC_MSG_CHECKING(for uuid library)
  old_LIBS=$LIBS
  for i in "" -luuid; do
    LIBS="$old_LIBS $i"
    AC_TRY_LINK([
#if HAVE_SYS_UUID_H
#include <sys/types.h>
extern "C" { // SGI uuid.h doesn't have this, so we need extern C here
#include <sys/uuid.h>
}
#define UUID_CREATE
#else
#if HAVE_UUID_UUID_H
extern "C" { // The linux uuid.h does not have this, so we need extern C here
#include <uuid/uuid.h>
}
#define UUID_GENERATE
#else
#error We need either sys/uuid.h or uuid/uuid.h
#endif
#endif
	], [
  uuid_t uuid;
#if defined(UUID_CREATE)
  char* uuid_str;
  uint_t status;
  uuid_create(&uuid, &status);
  uuid_to_string(&uuid, &uuid_str, &status);
#else
#if defined( UUID_GENERATE)
  char uuid_str[64];
  uuid_generate( uuid );
  uuid_unparse(uuid, uuid_str);
#endif
#endif
	], [
  UUID_LIB_FLAG=$i
  break
	])
  done
  if test "$UUID_LIB_FLAG" != unknown; then
    if test -z "$UUID_LIB_FLAG"; then
      AC_MSG_RESULT(none required)
    else
      AC_MSG_RESULT($UUID_LIB_FLAG)
    fi
  else
    AC_MSG_RESULT(not found)
    have_uuid=no
  fi
fi

AC_SUBST(UUID_LIB_FLAG)

##  --  See if we have everything needed for SCIRun2 ----------------------

if test "$enable_scirun2" = "yes"; then
  if test "$HAVE_GLOBUS" != "yes"; then
    if test "$with_globus" = "no"; then
      SCI_MSG_ERROR(Must include --with-globus with --enable-scirun2)
    else
      SCI_MSG_ERROR(Globus not found required for scirun2)
    fi
    exit 1
  fi
  if test "$have_uuid" != "yes"; then
    case $host in
      *linux*)
        SCI_MSG_ERROR(uuid_generate function and libuuid not found, must install ext2fs development tools)
        ;;
      *)
        SCI_MSG_ERROR(Cannot find uuid_generate or uuid_create, required for SCIRun2)
        ;;
    esac
    exit 1
  fi
# Do not require Qt for SCIRun2 yet: 
#  if test "$HAVE_QT" != "yes"; then
#    if test "$with_qt" = "no"; then
#      SCI_MSG_ERROR(Must include --with-qt with --enable-scirun2)
#    else
#      SCI_MSG_ERROR(Qt not found required for scirun2)
#    fi
#    exit 1
#  fi
  DEF_SCIRUN2="#define SCIRUN2"
  BUILD_SCIRUN2="yes"
else
  DEF_SCIRUN2=""
  BUILD_SCIRUN2="no"
fi
AC_SUBST(DEF_SCIRUN2)
AC_SUBST(BUILD_SCIRUN2)


##  ---------------------------------------------------------------------
##  --------------------  configure packages  ---------------------------
##  ---------------------------------------------------------------------

##  nothing here yet

##  ---------------------------------------------------------------------
##  --------------------  generate output files  ------------------------
##  ---------------------------------------------------------------------

abs_conftop_dir=`pwd`;
AC_SUBST(abs_conftop_dir)
abs_srcdir=`(cd ${srcdir};pwd)`
AC_SUBST(abs_srcdir)

##  make list of all the output files
output_files="configVars.mk \
              Makefile \
              on-the-fly-libs/Makefile \
              disjointPackageMakefile \
              sci_testdefs.h"

##   Only do the following if configuring with Uintah
##   Add a list of Uintah specific output files.
if test "$pkg_uintah" = "yes" ; then
   output_files="$output_files Packages/Uintah/tools/fspec.pl"
fi 

#  ignore --no-create and --no-recursion flags
no_create=no
no_recursion=no

AC_OUTPUT( [$output_files], echo timestamp > stamp-h )

##  check whether sci_defs.h has changed (due to a re-configure)
if cmp -s sci_defs.h sci_testdefs.h 2>/dev/null; then
  AC_MSG_RESULT(sci_defs.h is unchanged)
  rm -f sci_testdefs.h
else
  mv sci_testdefs.h sci_defs.h
  AC_MSG_WARN(sci_defs.h has changed.)
fi
