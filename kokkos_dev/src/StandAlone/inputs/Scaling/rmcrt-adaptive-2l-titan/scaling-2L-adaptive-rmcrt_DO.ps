%!PS-Adobe-2.0
%%Title: scaling-2L-adaptive-rmcrt_DO.ps
%%Creator: gnuplot 4.6 patchlevel 0
%%CreationDate: Mon Nov 17 16:20:45 2014
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid true def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 554 50 lineto 554 770 lineto 50 770 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 4.4 (August 2010)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (scaling-2L-adaptive-rmcrt_DO.ps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.6 patchlevel 0)
  /Author (alan)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Mon Nov 17 16:20:45 2014)
  /DOCINFO pdfmark
end
} ifelse
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Times-Roman) findfont 140 scalefont setfont
BackgroundColor 0 lt 3 1 roll 0 lt exch 0 lt or or not {gsave BackgroundColor C clippath fill grestore} if
1.000 UL
LTb
1.000 UL
LTa
770 448 M
6177 0 V
stroke
LTb
770 448 M
63 0 V
6114 0 R
-63 0 V
686 448 M
( 0.1) Rshow
1.000 UL
LTb
770 730 M
31 0 V
6146 0 R
-31 0 V
770 895 M
31 0 V
6146 0 R
-31 0 V
770 1013 M
31 0 V
6146 0 R
-31 0 V
770 1103 M
31 0 V
6146 0 R
-31 0 V
770 1178 M
31 0 V
6146 0 R
-31 0 V
770 1240 M
31 0 V
6146 0 R
-31 0 V
770 1295 M
31 0 V
6146 0 R
-31 0 V
770 1343 M
31 0 V
6146 0 R
-31 0 V
stroke
LTa
770 1386 M
6177 0 V
stroke
LTb
770 1386 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 1) Rshow
1.000 UL
LTb
770 1668 M
31 0 V
6146 0 R
-31 0 V
770 1833 M
31 0 V
6146 0 R
-31 0 V
770 1950 M
31 0 V
6146 0 R
-31 0 V
770 2041 M
31 0 V
6146 0 R
-31 0 V
770 2115 M
31 0 V
6146 0 R
-31 0 V
770 2178 M
31 0 V
6146 0 R
-31 0 V
770 2233 M
31 0 V
6146 0 R
-31 0 V
770 2281 M
31 0 V
6146 0 R
-31 0 V
stroke
LTa
770 2324 M
6177 0 V
stroke
LTb
770 2324 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 10) Rshow
1.000 UL
LTb
770 2606 M
31 0 V
6146 0 R
-31 0 V
770 2771 M
31 0 V
6146 0 R
-31 0 V
770 2888 M
31 0 V
6146 0 R
-31 0 V
770 2979 M
31 0 V
6146 0 R
-31 0 V
770 3053 M
31 0 V
6146 0 R
-31 0 V
770 3116 M
31 0 V
6146 0 R
-31 0 V
770 3170 M
31 0 V
6146 0 R
-31 0 V
770 3218 M
31 0 V
6146 0 R
-31 0 V
stroke
LTa
770 3261 M
6177 0 V
stroke
LTb
770 3261 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 100) Rshow
1.000 UL
LTb
770 3544 M
31 0 V
6146 0 R
-31 0 V
770 3709 M
31 0 V
6146 0 R
-31 0 V
770 3826 M
31 0 V
6146 0 R
-31 0 V
770 3917 M
31 0 V
6146 0 R
-31 0 V
770 3991 M
31 0 V
6146 0 R
-31 0 V
770 4054 M
31 0 V
6146 0 R
-31 0 V
770 4108 M
31 0 V
6146 0 R
-31 0 V
770 4156 M
31 0 V
6146 0 R
-31 0 V
stroke
LTa
770 4199 M
6177 0 V
stroke
LTb
770 4199 M
63 0 V
6114 0 R
-63 0 V
-6198 0 R
( 1000) Rshow
1.000 UL
LTb
1.000 UL
LTa
770 448 M
0 3751 V
stroke
LTb
770 448 M
0 63 V
0 3688 R
0 -63 V
770 308 M
(128) Cshow
1.000 UL
LTb
1.000 UL
LTa
1332 448 M
0 3751 V
stroke
LTb
1332 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(256) Cshow
1.000 UL
LTb
1.000 UL
LTa
1893 448 M
0 3751 V
stroke
LTb
1893 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(512) Cshow
1.000 UL
LTb
1.000 UL
LTa
2455 448 M
0 3751 V
stroke
LTb
2455 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(1024) Cshow
1.000 UL
LTb
1.000 UL
LTa
3016 448 M
0 3751 V
stroke
LTb
3016 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(2048) Cshow
1.000 UL
LTb
1.000 UL
LTa
3578 448 M
0 3751 V
stroke
LTb
3578 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(4096) Cshow
1.000 UL
LTb
1.000 UL
LTa
4139 448 M
0 3751 V
stroke
LTb
4139 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(8192) Cshow
1.000 UL
LTb
1.000 UL
LTa
4701 448 M
0 3060 V
0 628 R
0 63 V
stroke
LTb
4701 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(16K) Cshow
1.000 UL
LTb
1.000 UL
LTa
5262 448 M
0 3060 V
0 628 R
0 63 V
stroke
LTb
5262 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(32K) Cshow
1.000 UL
LTb
1.000 UL
LTa
5824 448 M
0 3060 V
0 628 R
0 63 V
stroke
LTb
5824 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(65K) Cshow
1.000 UL
LTb
1.000 UL
LTa
6385 448 M
0 3060 V
0 628 R
0 63 V
stroke
LTb
6385 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(131K) Cshow
1.000 UL
LTb
1.000 UL
LTa
6947 448 M
0 3751 V
stroke
LTb
6947 448 M
0 63 V
0 3688 R
0 -63 V
0 -3828 R
(262K) Cshow
1.000 UL
LTb
1.000 UL
LTb
770 4199 N
770 448 L
6177 0 V
0 3751 V
-6177 0 V
Z stroke
LCb setrgbcolor
112 2323 M
currentpoint gsave translate -270 rotate 0 0 M
(Mean Time Per Timestep \(s\)) Cshow
grestore
LTb
LCb setrgbcolor
3858 98 M
(CPU Cores) Cshow
LTb
3858 4829 M
(RMCRT:CPU:DOUBLE) Cshow
3858 4689 M
( Burns & Christon Benchmark) Cshow
3858 4549 M
(2-Level Adaptive RMCRT,    ROI: patch based) Cshow
3858 4409 M
(OLCF-Titan System) Cshow
2.000 UP
/Arial findfont 140 scalefont setfont
1440 4031 M
(Unified MPI/threaded scheduler) Lshow
1440 3891 M
(1 MPI proc & 16 threads per node) Lshow
1440 3751 M
(100 rays per cell) Lshow
1440 3611 M
(Averaged over 7 timesteps) Lshow
1440 3471 M
(Fine-Level Halo: [4,4,4]) Lshow
/Times-Roman findfont 140 scalefont setfont
1.000 UL
LTb
% Begin plot #1
1.000 UP
2.000 UL
LT6
0.00 1.00 0.00 C LCb setrgbcolor
6233 4058 M
(L-1: 128^3, L-0: 32^3  ) Rshow
LT6
0.00 1.00 0.00 C 6317 4058 M
462 0 V
770 2685 M
562 -296 V
561 -284 V
562 -257 V
561 -235 V
562 -108 V
770 2685 CircleF
1332 2389 CircleF
1893 2105 CircleF
2455 1848 CircleF
3016 1613 CircleF
3578 1505 CircleF
6548 4058 CircleF
% End plot #1
% Begin plot #2
1.000 UP
2.000 UL
LT6
1.00 0.00 0.00 C LCb setrgbcolor
6233 3901 M
(L-1: 256^3, L-0: 64^3  ) Rshow
LT6
1.00 0.00 0.00 C 6317 3901 M
462 0 V
2455 2993 M
561 -295 V
562 -194 V
561 -126 V
562 -277 V
561 -239 V
2455 2993 CircleF
3016 2698 CircleF
3578 2504 CircleF
4139 2378 CircleF
4701 2101 CircleF
5262 1862 CircleF
6548 3901 CircleF
% End plot #2
% Begin plot #3
1.000 UP
2.000 UL
LT6
0.00 0.00 1.00 C LCb setrgbcolor
6233 3744 M
(L-1: 512^3, L-0: 128^3) Rshow
LT6
0.00 0.00 1.00 C 6317 3744 M
462 0 V
4139 3558 M
562 -288 V
561 -282 V
562 -296 V
561 -241 V
562 -172 V
4139 3558 CircleF
4701 3270 CircleF
5262 2988 CircleF
5824 2692 CircleF
6385 2451 CircleF
6947 2279 CircleF
6548 3744 CircleF
% End plot #3
% Begin plot #4
2.000 UL
LT0
0.75 0.75 0.75 C LCb setrgbcolor
6233 3587 M
(Ideal) Rshow
LT0
0.75 0.75 0.75 C 6317 3587 M
462 0 V
832 2651 M
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
63 -32 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
% End plot #4
% Begin plot #5
stroke
LT0
0.75 0.75 0.75 C 2517 2968 M
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
63 -32 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
% End plot #5
% Begin plot #6
stroke
LT0
0.75 0.75 0.75 C 4202 3525 M
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -32 V
62 -31 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -32 V
62 -31 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -32 V
63 -31 V
62 -31 V
62 -32 V
63 -31 V
62 -31 V
63 -32 V
62 -31 V
% End plot #6
stroke
1.000 UL
LTb
770 4199 N
770 448 L
6177 0 V
0 3751 V
-6177 0 V
Z stroke
2.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Arial Times-Roman
%%Pages: 1
