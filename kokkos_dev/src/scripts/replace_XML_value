#!/bin/csh -f

#______________________________________________________________________
# replace_XML_value:
#    This script is a wrapper around the command xmlstarlet to replace elements of complex
#    xml documents.  This was designed for editing ups files that have 
#    multiple elements with the same name or when an xml tag spans more than one line.
#
# Usage:  replace_XML_value  <xml path to element> <replacement value> <xmlfile>
#  
# To find the xml path run the command:
#
# xmlstarlet el -v <xmlFile>
#     
#______________________________________________________________________

# bulletproofing
if ( $#argv != 3 ) then
  echo ""
  echo "Usage:  replace_XML_value  <xml path to value> <replacement value> <xmlfile>"
  echo ""
  echo "Example:  To change the resolution of Box 1"
  echo '    Use replace_XML_value  "/Uintah_specification/Grid/Level/Box[@label='1']/resolution" "[17,17,1]" <xmlfile>  '
  echo "          <Level>                                              "
  echo "          <Box label = "0">                                    "
  echo "            <lower>       [0, 0, 0.5]    </lower>              "
  echo "            <upper>       [1, 1, 0.6]    </upper>              "
  echo "            <resolution>  [16, 16, 1]    </resolution>         "
  echo "            <patches>     [1,1,1]         </patches>           "
  echo "            <extraCells>  [0,0,0]         </extraCells>        "
  echo "           </Box>                                              "
  echo "         </Level>                                              "
  echo "                                                               "
  echo "         <Level>                                               "
  echo "           <Box label = "1">                                   "
  echo "             <lower>       [ 0.25,  0.25,  0.5]   </lower>     "
  echo "             <upper>       [ 0.75,  0.75,  0.6]   </upper>     "
  echo "             <resolution>  [8, 8, 1]         </resolution>     "
  echo "             <patches>     [1,1,1]           </patches>        "
  echo "             <extraCells>  [0,0,0]            </extraCells>    "
  echo "           </Box>                                              "
  echo "         </Level>                                              "
  echo "                                                               "
  echo ""
  echo " To see the xml paths in the file execute:    xmlstarlet el -v <xmlFile>"
  echo ""
  exit(-1)
endif

set xpath = "$argv[1]"
set value = "$argv[2]"
set file  = $argv[3]

#echo "replace_XML_value  xpath: $xpath, value: $value, file: $file"

# ignore blank lines
@ nWords = `echo "$xpath" |wc -w`

if( $nWords == 0 ) then
  exit
endif

set tmp = (`which xmlstarlet`)
if ( $status ) then
  echo ""
  echo " ERROR: Could not find the xml editing program xmlstarlet.  Make sure that it's installed and in your path"
  echo ""
  exit(-1)
endif

if ( ! -e $file ) then
  echo ""
  echo " ERROR: Could not find the xml file ($file) to edit."
  echo ""
  exit(-1)
endif

set count = `xmlstarlet sel -t -v "count($xpath)" $file`
if ($count != 1) then
  echo ""
  echo " ERROR: Could not find the xml path ($xpath) in the xmlfile OR there is more than one occurance [$count]."
  echo ""
  exit(-1)
endif

#__________________________________
# now run the command
xmlstarlet ed -u "$xpath" -v "$value"  $file > tmp

if( $status ) then
  echo ""
  echo " ERROR there was a problem editing the xml file.  No changes have been make
  echo ""
  exit(-1)
endif

mv tmp $file

#__________________________________
# clean up 
/bin/rm -f tmp >& /dev/null

exit(0)
