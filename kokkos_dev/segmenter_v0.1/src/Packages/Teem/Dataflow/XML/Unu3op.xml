<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->


<component name="Unu3op" category="UnuAtoM">
  <overview>
    <authors>
      <author>Darby Van Uitert</author>
    </authors>
    <summary>Ternary operation on three nrrds or constants. Can have
one, two, or three nrrds, but not zero. </summary>
    <description>
      <p>Ternary operation on three nrrds or constants. Can have one,
two, or three nrrds, but not zero.</p>
      <p>Operator: Binary operator. Possibilities include:</p>
      <p>    +, x, : sum or product of three values</p>
      <p>min, max : minimum, maximum</p>
      <p>clamp : second value is clamped to range between the first
and the third</p>
      <p>ifelse : if 1st value non-zero, then 2nd value, else 3rd
value</p>
      <p>lerp : linear interpolation between the 2nd and 3rd values,
as the 1st value varies between 0.0 and 1.0, respectively</p>
      <p>exists : if the first value exists, use the second value,
otherwise use the third</p>
      <p>in_op : 1 iff second value is is greater than first and less
than the second second, 0 otherwise</p>
      <p>in_cl : 1 iff second value is greater than or equal to the
first and less than or equal to second, 0 otherwise</p>
      <p>Float Input 1: This value is the first float value and will
only be used if the first nrrd port isn't connected.</p>
      <p>Float Input 2: This value is the second float value and will
only be used if the second nrrd port isn't connected.</p>
      <p>Float Input 3: This value is the third float value and will
only be used if the third nrrd port isn't connected.</p>
      <p>Type : type to convert all input nrrds to prior to doing the
operation.  To leave it unchanged, check the 'Same as input type'
checkbutton.</p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd1</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
      <port>
        <name>InputNrrd2</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
      <port>
        <name>InputNrrd3</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>SCIRun::Nrrd</datatype>
      </port>
    </outputs>
  </io>
</component>
