<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->



<component name="ClipByFunction" category="FieldsCreate">
  <overview>
    <authors>
      <author>Michael Callahan</author>
    </authors>
    <summary>Select a subset of a field.</summary>
    <description>
      <p>
        This module clips out a subset of a field.  The new field
        contains just the selected portion of the input field.
      </p>
      <p>
        The type of the field is preserved in the clip, as well as the
        data values if possible.  Some field types are structured and
        thus not clippable.  This includes the LatVolField, ImageField,
        and Scanline field types.  There is an <modref package="SCIRun" name="Unstructure"/> module that
        can be used to convert these fields to appropriately
        unstructured versions before clipping.
      </p>
      <p>
        The function should be a valid C++ expression.  It will be
	dynamically compiled into a function of the form "bool
        inside_p(double x, double y, double z, TYPE v) { return EXPR; }"
        where TYPE is the data type contained in the field, and EXPR is the
        function typed into the GUI.
      </p>
      <p>
        The data location of the test can be specified in addition to
        the function.  The test can be valid if it works at cell
        centers, at one node, or at all of the nodes in a mesh
        element.  If the data location of the clip is different that
        the location of the data in the field, 'v' will always be 0
        for that test.
      </p>
      <p>
        For example, "x gt 0" would clip the field to only those
	elements with positions greater than 0.  "y lt 3 || z gt 2.5" would
	preserve just the elements with y position less than 3 or z
	position greater than 2.5.  "v == 4" would preserve all of the
	elements that contained a data value of 4.  *Note that current
	simple HTML parser cannot handle greater than or less than
        symbols, abbreviated them to 'gt' and 'lt'.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
	<name>Input Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
	<name>Output Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
	<name>Interpolant</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
<nets>
<net id="ClipByFunction-byvalue">
<title>ClipByFunction-byvalue Regression Test</title>

<p>This network demonstrates using the ClipByFunction module to extract
the lungs from the torso model.  The lungs are already classified in
the torso model and have a particular conductivity table entry of 4,
so we can extract all of the elements from the torso with conductivity
of 4 and just get the lungs.</p>

<p>Note that alternatively we could use 'v != 4' to get a model with the
lungs removed.  Or we could use the different values in the field to
single out the ribs, heart, and others that were already classified.</p>

<p>This network can be found at src/nets/Modules/FieldsCreate/ClipByFunction-byvalue.net.</p>

</net>

<net id="ClipByFunction-positional">
<title>ClipByFunction-positional Regression Test</title>

<p>This demonstrates using ClipByFunction to chop out a wedge from a
field so that we can more easily view the interior.  The original
field is draw in a transparent wireframe for reference.</p>

<p>This network can be found at src/nets/Modules/FieldsCreate/ClipByFunction-positional.net.</p>

</net>
</nets>
</component>
