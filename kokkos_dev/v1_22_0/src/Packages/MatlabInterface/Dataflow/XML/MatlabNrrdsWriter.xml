<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">
<?xml-stylesheet href="../../../../Dataflow/XML/package-component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you mays not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<component name="MatlabNrrdsWriter" category="DataIO">
  <overview>
    <authors>
	<author>Jeroen Stinstra</author>
    </authors>
	<summary> 
	The MatlabNrrdsWriter Module saves a SCIRun NRRD object into a MATLAB .mat file.
	</summary>
    <description>
	<section>
	<title>Module Description</title>
	<p>
	The MatlabNrrdsWriter module exports SCIRun NRRD objects into a MATLAB compatible .mat file. Currently this
	module supports the fileformat of MATLAB version 5 and higher. The module has multiple input ports that can
	be used to store multiple MATLAB arrays in one file. Each of these matrices can be formatted into different
	formats. Firstly, the datatype of the matrix can be altered. Since matrices in matlab are able to use 
	multiple dataformats, casting the data within the module may be a convenient way of saving space. Secondly,
	the module has the option to export the data as a structured matrix. This has the advantage that additional
	properties can be exported to matlab as well. Currently this feature is only used to export the values stored
	in the property manager and the properties stored in the NRRD axis, like units, spacing, etc.
	</p>
	
	<p> Setting up the GUI: </p>
	
	<orderedlist>
		<listitem>
		Select a filename for the MATLAB file that needs to be created. You can use the BROWSE button to select an
		existing file.
		</listitem>
		<listitem>
		Setup the format of each matrix and change the names of the matrices to the ones you want to use in MATLAB.
		</listitem>
		<listitem>
		Execute the module and the file will be written.
		</listitem>
	</orderedlist>
	</section>
	
	<section>
	<title>See Also </title>
	<p>
	<modref package="MatlabInterface" name="MatlabFieldsReader" />,
	<modref package="MatlabInterface" name="MatlabMatricesReader" />,
	<modref package="MatlabInterface" name="MatlabNrrdsReader" />,
	<modref package="MatlabInterface" name="MatlabMatricesWriter" />,
	<modref package="MatlabInterface" name="MatlabNrrdsWriter" />	
	</p>
	</section>	
	
	
	</description>   
  
  
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Nrrd1</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 1
		</description>	
      </port>
	  <port>
        <name>Nrrd2</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 2
		</description>	
      </port>
	  <port>
        <name>Nrrd3</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 3
		</description>	
      </port>
	  <port>
        <name>Nrrd4</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 4
		</description>			
      </port>
	  <port>
        <name>Nrrd5</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 5
		</description>	
      </port>
	  <port>
        <name>Nrrd6</name>
		<datatype>Teem::Nrrd</datatype>
		<description>
		Nrrd input port 6
		</description>	
      </port>
	</inputs>
    <outputs>
    </outputs>
  </io>
 
  <gui>
   <parameter>
    <widget> Entry </widget>
	<label> .mat file </label>
	<description> The name of the MATLAB file </description>
	</parameter>

    <parameter>
    <widget> Button </widget>
	<label> Browse </label>
	<description> Open a filesectionbox and choose a MATLAB file </description>
	</parameter>
	
	<parameter>
    <widget> Entry </widget>
	<label> Port N </label>
	<description> 
	Enter the name of the MATLAB matrix here. When the matrix is loaded
	into MATLAB it will have this name.
	</description>
	</parameter>
	
	<parameter>
    <widget> Popup Menu </widget>
	<label> Array Type </label>
	<description>
	Use this button to select the output format. In case "numeric array" is selected, the Nrrd object will
	be exported as a plain dense matrix without any additional information. This is the 
	default option and will be sufficient in most cases. In case "struct array" is chosen, a structured
	MATLAB array will be created with a field .data containing the matrix, a field .axis containing the Nrrd 
	axis properties and a field .property containing
	the properties from the property manager. Note: that not every type in the property manager can be
	converted to matlab currently. 
	</description>
	</parameter>
	
	<parameter>
	<widget> Popup Menu </widget>
	<label> Data type </label>
	<description>
	Use this menu to select the datatype of the MATLAB matrix. By default the matrix will be exported as 
	the same data type  as the Nrrd Object, which seems the most logical choice. However one can
	opt to use a different format, for instance for integer. The module will automatically
	cast the data into the proper format before exporting the data to disk.
	</description>
	</parameter>

  </gui>

  <testing>
  </testing>
</component>
