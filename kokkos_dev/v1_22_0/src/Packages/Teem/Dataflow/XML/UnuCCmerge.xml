<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->


<component name="UnuCCmerge" category="UnuAtoM">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Merge CCs with their neighbors, under various contraints. This
operates on the output of "ccfind". Merging of a CC is always done into its
largest neighbor. Whether or not to merge can be constrained by one or more
of: CC size (-s), original CC value being brighter or darker (-d), and
number of neighbors (-n). 
    </summary>
    <description>
    <p>>Merge CCs with their neighbors, under various contraints. This
operates on the output of "ccfind". Merging of a CC is always done into its
largest neighbor. Whether or not to merge can be constrained by one or more
of: CC size (-s), original CC value being brighter or darker (-d), and
number of neighbors (-n).</p>
    <p>Value Driven Merging : do value-driven merging. Options include
    dark islands get merged with bright surrounds, bright surrounds get merged
    into dark islands, or the default which indicates that merging can 
    go either way.</p>
    <p>Max Size : a cap on the CC size that will be absorbed into its
    surround. CCs larger than this are deemed too significant
    to mess with. Or, a value of 0 removes any such restriction
    on merging.</p>
    <p>Max Neighbors : a cap on the number of neighbors that a CC may have 
    if it is to be be merged. A value of 1 allows only islands to be merged,
    a value of 2 does merging with bigger of two neighbors, etc, while
    a value of 0 says that number of neighbors is no constraint.</p>
    <p>Connectivity : what kind of connectivity to use: the number of
    coordinates that vary in order to traverse the
    neighborhood of a given sample. In 2D: 1 : 4-connected,
    2 : 8-connected</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

