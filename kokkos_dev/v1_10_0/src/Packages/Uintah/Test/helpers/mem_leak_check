#!/bin/sh

TEST=$1
MALLOC_STATS=$2
COMPARISON_MALLOC_STATS=$3
TMPDIR=$4

if [ ! -f $MALLOC_STATS* ]; then
    echo "No malloc_stats output found.  Can't do memory leak test."
    exit 5
fi

if [ ! -f $MALLOC_STATS ]; then
    # the malloc_stats are in seperate files for each process id
    # merge them
    cat $MALLOC_STATS.* > $MALLOC_STATS
fi

error=0

echo "Checking $TEST for scinew memory leaks"
grep '\.' $MALLOC_STATS > $TMPDIR/scinew_malloc_stats
retval=$?
if [ $retval = "0" ]; then
    echo "***Memory leaks found***"
    echo "Here are the object allocated with scinew but not deleted."
    echo
    cat $TMPDIR/scinew_malloc_stats
    error=1
else
    echo "Memory leak test passed -- no scinew memory leaks found"
    if [ ! -f $COMPARISON_MALLOC_STATS ]; then
        echo "Storing $MALLOC_STATS"
	cp $MALLOC_STATS $COMPARISON_MALLOC_STATS
	exit -1
    fi
    
    echo "Performing highwater memory usage check"
    percent=`highwater_percent.pl $MALLOC_STATS $COMPARISON_MALLOC_STATS`

    if [ $percent -gt "10" ]; then
	echo "***Highwater memory usage test failed"
	echo " -- memory usage increased by %$percent" > $TMPDIR/highwater_shortmessage.txt
        error=2
    elif [ $percent -gt "0" ]; then
	echo " -- memory usage increased by %$percent" > $TMPDIR/highwater_shortmessage.txt
    elif [ $percent -lt "0" ]; then
	let percent_improvement=-$percent;
	
	if [ $percent -lt "-5" ]; then
	    echo "Highwater memory usage passed with some improvement!!"
	    echo " -- memory usage improved by %$percent_improvement, replacing malloc_stats" > $TMPDIR/highwater_shortmessage.txt
	    cp $MALLOC_STATS $COMPARISON_MALLOC_STATS
	    chgrp csafe $COMPARISON_MALLOC_STATS
	    chmod g+rw $COMPARISON_MALLOC_STATS
	else
	    echo " -- memory usage improved by %$percent_improvement" > $TMPDIR/highwater_shortmessage.txt
	fi
    else
	echo "" > $TMPDIR/highwater_shortmessage.txt
	echo "Highwater memory usage check passed!"
    fi
fi

exit $error
