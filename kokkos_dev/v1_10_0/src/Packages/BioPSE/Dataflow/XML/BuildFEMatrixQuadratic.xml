<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../../../doc/package-component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<component name="BuildFEMatrixQuadratic" category="Forward">
  <overview>
    <authors>
      <author>Mickey</author>
    </authors>
    <summary>The BuildFEMatrixQuadratic module sets up a mesh with
conductivity tensors and Dirichlet boundary conditions, specifically
for bioelectric field problems that use quadratic elements.
    </summary>
    <description>
      <p>This module provides a basic means for construction of the FE
matrix with quadratic elements for bioelectric field problems
(discretization of the Poisson equation for volume conductor problem).
The input field should have properties with lookup names that
correspond to the bioelectric field problem. The module conventions
appear below.</p>

      <p>The Field containing a mesh should be a TetVolField(char)
type, which contains indices to the property 'table'; actual values of
the conductivity tensors, optimizing storage.</p>
        
      <p>The property of the conductivity mesh name 'table' should
have the associated data object Array1(Tensor) type. Any lookup into
the table is performed by dereferencing the indices of the
conductivity mesh, as the module performs any lookup into the
table.</p>

      <p>Dirichlet boundary conditions, if any, should be represented
as property with name "dirichlet" and be a vector(pair(int, double))
type, where "int" field corresponds to the node index, and "double"
field is the value of potential at the node.</p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>QuadTetVolField</name>
        <datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>RefNode</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>FEMMatrix</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>RHS</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>
