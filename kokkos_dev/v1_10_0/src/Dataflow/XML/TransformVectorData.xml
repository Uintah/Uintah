<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../doc/Utilities/XML/component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="TransformVectorData" category="Fields">
  <overview>
    <authors>
      <author>Michael Callahan</author>
    </authors>
    <summary>Perform a specified functional transform on all of the
  data in a vector field.</summary>
    <description>

	<p>Do a transformation to each data element in the
	vector field.  The three transform is specified in the GUI,
	one for the x value of the vector, one for the y value, and
	one for the z value.  They are all computed separately and at
	the same time, such that the results of one are not dependent
	upon the results of the others.</p>

	<p>In addition to the function, they vectors can be normalized
	before and/or after the function is computed.</p>

	<p>The functions are specified using SCIRun's simple function
	parser.  'x, y, and z' are the the scalar variables used to
	represent the vector data for each element.  There are a
	number of mathematical functions available for use.  They
	are:</p>

	<p>+: Add two numbers.  Example: 4+3 = 7</p>
	<p>-: Subtract one number from another.  Example: 4-3 = 1</p>
	<p>*: Multiply two numbers.  Example: 4*3 = 12</p>
        <p>/: Divide one number from another.  Example: 12/3 = 4</p>
	<p>sin: Sine of a number in radians.  Example: sin(x)</p>
	<p>cos: Cosine of a number in radians.  Example: cos(x)</p>
	<p>sqrt: Square root of a number.  Example: sqrt(4) = 2</p>
	<p>sqr: Square of a number.  Example: sqr(2) = 4, sqrt(sqr(x))
	= x</p>
	<p>ln: Natural logarithm of a number.  Example: ln(x)</p>
	<p>exp: e raised to the nth power. Example: exp(ln(x)) = x</p>
	<p>log: Log base 10 of a number.  Example: log(100) = 2</p>
	<p>abs: Absolute value of a number.  Example: abs(-3) = 3</p>
        <p>pow: One number raised to the power of another.  Example:
	pow(3, 2) = 9</p>
	<p>random: Return a uniform random number between 0 and 1.
	Example: random()</p>

    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Input Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>Output Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </outputs>
  </io>
  <gui>
  </gui>
  <testing>
  </testing>
</component>
