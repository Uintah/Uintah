<?xml version="1.0" encoding="iso-8859-1" ?>

<!--%= "PCEtLQogICoqKioqIERPTidUIEVESVQgTUUhICoqKioqCiAgSSdtIGdlbmVy\nYXRlZCBmcm9tIGZhcS5yeG1sLiAgRWRpdCBpdCBpbnN0ZWFkLgotLT4=\n".unpack("m") %-->

<!DOCTYPE article PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
"../../Utilities/XML/Docbook_dtd/docbookx.dtd" [
<!ENTITY sr "SCIRun">
]>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<article class="faq">
<!--%
version = File.open("../../edition.xml") do |f|
  /<edition>(.*)<\/edition>/.match(f.read())[1]
end
%-->
<title>Installation FAQ (for &sr; Version <!--%= version %-->)</title>

<qandaset defaultlabel="number">

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
I have a problem with installing the thirdparty software on an SGI Octane.
I ran the install script that was provided in the tar ball from the SCIRun
website and go the error message below. It seems to be trying to copy a
xerces file that doesn't exist.  What's wrong?
</para>

<literallayout class="monospaced">
cc-32bit/src/xerces-c-src1_5_2/src/validators/schema'
gmake[1]: Leaving directory
`/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/src/validators'

cd
/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/obj
&amp;&amp; /usr/local/bin/gmake install &amp;&amp; cd ..
gmake[1]: Entering directory
`/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/obj'

mkdir -p /u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/lib

cp -fp
/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/lib/libxerces-c1_5_2.so
/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/lib
/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/lib/libxerces-c1_5_2.so
- No such file or directory
gmake[1]: [install] Error 2 (ignored)
gmake[1]: Leaving directory
`/u/wk/ccheung/scirun/SCIRun_Thirdparty/1.4.2/IRIX/gcc-32bit/src/
xerces-c-src1_5_2/obj'

-------------------------------------------------------
-- FATAL ERROR :
--
-- The build or installation of the required software:
--
--   Xerces-C++
--
-- failed.  Check the above output
-- for errors and clues as to how to solve the problem.

-------------------------------------------------------
</literallayout>
</question>

<answer>
<para>
Xerces creates very long commands for a shell.  It could be that the
value of your system's 'ncargs' variable is too small.
</para>

<para>
Run the command 'systune ncargs'.  It will report ncargs' value. Use
the systune command to set ncargs to a large value: systune ncargs
262144.  You need root privilages to do this.  Try the thirdparty
install again.
</para>

</answer>
</qandaentry>

<qandaentry>  
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question> 
<para>
I successfully installed SCIRun and its required thirdparty
software (by hand) onto an SGI target install machine, but
when I run SCIRun, it immediately signals an abort (SIGABRT).  
</para>

<para> 
The output of SCIRun after it signals the abort looks like this: 
<literallayout class="monospaced">
Thread "main"(pid 251775) caught signal SIGABRT (Abort)
Backtrace:
0x5ff69224: SCIRun::Thread::niceAbort(void)
0x5ff7106c: handle_abort_signals
0xc37f7c0: sig_fixup_mask
0xfb11100: prctl
0xc37ee00: pthread_kill
0xc37fef8: _SGIPT_libc_raise
0xc378068: ptctl
0xfaf3e20: raise
0xfa668a4: abort
0xae40958: terminate(void)
0xae40788: __call_terminate
0xae42ba8: __throw
0x5ff72ad0: SCIRun::Thread::os_start(bool)
0x5ff68c7c: SCIRun::Thread::Thread(SCIRun::Runnable*,const
char*,SCIRun::ThreadGroup*,SCIRun::Thread::ActiveState)
0x100057c4: main
251775: main (state=running)
 
Abort signalled by pid: 251775
Occured for thread:
"main"resume(r)/dbx(d)/cvd(c)/kill thread(k)/exit(e)?
</literallayout>
</para>
</question>

<answer>
<para>
One or more of the thirdparty libraries was configured and built to
use (i.e. link against) pthreads.  On SGI machines, SCIRun uses sproc
threads instead of pthreads.  It is illegal to use both sproc and 
pthreads in a single process.  When two binaries are linked together
into a single process at runtime (e.g. scirun and libxerces-c1_4.so)
an abort is signalled and the process is shutdown.
</para>

<para>
The solution is to rebuild the offending libraries, configuring them
to _not_ use threads.  Xerces is typically the offending library,
although Tcl and others may also be incorrectly configured to use
threads.  See the <ulink
url="../Installation/Guide/thirdparty.html">Thirdparty Software
Installation and Build Information</ulink> for recommended configure
arguments for the thirdparty software.  Note that when the automatic
install script is used, all the software is automatically configured
and built correctly.
</para>
</answer>
</qandaentry>

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
When building SCIRun on an SGI target machine, I get an error
message regarding the SGI Image Format Library (IFL).
</para>
<para>
The error text looks similar to this:
<literallayout class="monospaced">
ld64: FATAL   9  : I/O error (-lifl): No such file or directory
</literallayout>
</para>
</question>

<answer>
<para>
The problem is a bug within the SCIRun build system that requires
the SGI Image Format Library (IFL) in order to make SCIRun.  The long
term solution will be to make the IFL optional instead of required.
</para>
<para>
For now, however, you can work around the problem by having your
system administrator install the IFL onto your target install machine.
Be sure to install the type (32 or 64 bit) needed for your SCIRun
configuration(s).
</para>
</answer>

</qandaentry>

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
I successfully installed the thirdparty software onto an SGI
target install machine, but when I try to build SCIRun it fails
during the compile phase.
</para>
<para>
The error message displayed contains the following warning:
<literallayout class="monospaced">
&vellip;
Warning: Option 'std' not in group 'LANG' (LANG:std)
&vellip;
</literallayout>
</para>

</question>

<answer>
<para>
The MIPSpro compiler on your target install machine is too old.
SCIRun requires version 7.3.1.1m at a minimum.
</para>
</answer>

</qandaentry>

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
SCIRun sometimes hangs when running the example nets on a dual
processor linux machine.
</para>
</question>

<answer>
<para>
This is a known bug with no known solution.  There is,
however, a workaround:
</para>
<para>
Re-configure SCIRun adding the --disable-sci-malloc option to
the configure command, then rebuild SCIRun.  If SCIRun still 
hangs while running example nets, change directories to
on-the-fly-libs and issue a make command by hand.  Run the
example again once the make of the on-the-fly-libs finishes.
</para>
</answer>

</qandaentry>

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
I'm trying to install SCIRun or the thirdparty software into 
my home directory, but it fails when building.
</para>
</question>
<answer>
<para>
When installing any of the software into your home directory be sure
to use complete and absolute paths when providing configure argumenst.
<emphasis>Do not</emphasis> use tilde expansion or any other short
cuts, as they will not be properly expanded by the install scripts and
makefiles.
</para>
<para>
For example, instead of configuring with
<option>--prefix=~bob</option>, configure with
<option>--prefix=/home/bob</option>.
</para>
</answer>
</qandaentry>

<qandaentry>
<revhistory>
<revision>
<revnumber>1.0</revnumber>
<date>7/29/01</date>
</revision>
</revhistory>
<question>
<para>
How can I make a 64 bit build of SCIRun?
</para>
</question>

<answer>
<para>
64 bit is currently only available on the SGI platform.  To
build a 64 bit version of SCIRun, you first need to have 64
bit versions of the thirdparty software.  The easiest way to
do that is to use the SCI thirdparty install script using the 64
option.  If building by hand, see the advice below.
</para>
<para>
Once the thirdparty software is available in 64 bits, 
configure
SCIRun with the <option>--enable-64bit</option> option and rebuild.
</para>
<para>
Unfortunately, most of the required third party software did not take
64 bit SGI platforms into account when writing configure scripts and
makefiles. However, with some effort, it is possible to build all the
software in 64 bit. In general, to get 64 bit versions of the third
party software it is necessary to edit Makefiles such that the
<varname>CFLAGS</varname> and <varname>LFLAGS</varname> macros have
<quote>-64</quote> listed instead of <quote>-n32</quote>. In the case
of the tcl distributions, this means editing the makefiles (after
configuring) by hand and replacing all instances of
<quote>-n32</quote> with <quote>-64</quote>. For Xerces, this means
changing the environment variables listed above replacing all
instances of <quote>-n32</quote> with <quote>-64</quote> before
configuring.  </para>
</answer>
</qandaentry>

<qandaentry>
<question>  
<para>
I successfully installed SCIRun onto a linux target install
machine with XFree86 version 4.1.0 installed, but when I run
it, it immediately signals a segmentation violation (SIGSEGV):
<literallayout class="monospaced">
Thread "main"(pid 2063) caught signal SIGSEGV at address 0xdccc10 
(segmentation violation)
0: main (state=running)
1026: TCL main event loop (detached, state=blocking on semaphore, 
TCLTask startup continue semaphore)
2051: Scheduler (daemon, detached, state=blocking, NetworkEditor 
request FIFO,
Mailbox empty condition)
 
Abort signalled by pid: 2063
Occured for thread:
"main"resume(r)/dbx(d)/cvd(c)/kill thread(k)/exit(e)?
</literallayout>
</para>  
</question>

<answer>
<para>
The XFree86 version 4.1.0 binary distributions for linux ship with a
version of GLU (libGLU.so.1.3) that somehow conflicts with the xerces
library.  The solution is to replace the GLU library with a different
version (e.g. libMesaGLU.so, or some other GLU already on the
machine).
</para>
</answer>

</qandaentry>

</qandaset>

</article>

<!-- Keep this comment at the end of the file
Local variables:
mode: xml
sgml-default-dtd-file:"../../../doc/Utilities/XML/docbook.ced"
sgml-omittag:nil
sgml-shorttag:nil
End:
-->
