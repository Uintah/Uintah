# SCI Network v1.22

#
# The contents of this file are subject to the University of Utah Public
# License (the "License"); you may not use this file except in compliance
# with the License.
#
# Software distributed under the License is distributed on an "AS IS"
# basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
# License for the specific language governing rights and limitations under
# the License.
#
# The Original Source Code is SCIRun, released March 12, 2001.
#
# The Original Source Code was developed by the University of Utah.
# Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
# University of Utah. All Rights Reserved.

set results [sourceSettingsFile]

if { $results == "failed" } {
    ::netedit scheduleok
    return
} else {
    set DATADIR [lindex $results 0]
    set DATASET [lindex $results 1]
}

source $DATADIR/$DATASET/$DATASET.settings

global Subnet
set Subnet(Subnet$Subnet(Loading)_Name) {Main}
set bbox {32 2 540 495}

# Create a SCIRun->DataIO->FieldReader Module
set m1 [addModuleAtPosition "SCIRun" "DataIO" "FieldReader" 44 2]

# Create a SCIRun->FieldsOther->InterpolantToTransferMatrix Module
set m2 [addModuleAtPosition "SCIRun" "FieldsOther" "InterpolantToTransferMatrix" 346 248]

# Create a SCIRun->FieldsData->BuildInterpolant Module
set m3 [addModuleAtPosition "SCIRun" "FieldsData" "BuildInterpolant" 231 160]

# Create a SCIRun->FieldsData->ManageFieldData Module
set m4 [addModuleAtPosition "SCIRun" "FieldsData" "ManageFieldData" 180 248]

# Create a SCIRun->Math->LinAlgBinary Module
set m5 [addModuleAtPosition "SCIRun" "Math" "LinAlgBinary" 276 334]

# Create a SCIRun->FieldsData->ApplyInterpolant Module
set m6 [addModuleAtPosition "SCIRun" "FieldsData" "ApplyInterpolant" 32 244]

# Create a SCIRun->FieldsData->ManageFieldData Module
set m7 [addModuleAtPosition "SCIRun" "FieldsData" "ManageFieldData" 59 335]

# Create a SCIRun->Math->ErrorMetric Module
set m8 [addModuleAtPosition "SCIRun" "Math" "ErrorMetric" 147 438]

# Create a SCIRun->FieldsCreate->SampleLattice Module
set m9 [addModuleAtPosition "SCIRun" "FieldsCreate" "SampleLattice" 291 80]

# Create the Connections between Modules
set c1 [addConnection $m1 0 $m9 0]
set c2 [addConnection $m1 0 $m6 0]
set c3 [addConnection $m1 0 $m3 0]
set c4 [addConnection $m1 0 $m4 0]
set c5 [addConnection $m6 0 $m7 0]
set c6 [addConnection $m3 0 $m2 0]
set c7 [addConnection $m7 1 $m8 0]
set c8 [addConnection $m2 0 $m5 0]
set c9 [addConnection $m9 0 $m3 1]
set c10 [addConnection $m3 0 $m6 1]
set c11 [addConnection $m4 1 $m5 1]
set c12 [addConnection $m5 0 $m8 1]

# Setup GUI for the SCIRun->DataIO->FieldReader Module
setGlobal $m1-filename "$DATADIR/$DATASET/$DATASET-voltage.tvd.fld"

# Setup GUI for the SCIRun->FieldsOther->InterpolantToTransferMatrix Module

# Setup GUI for the SCIRun->FieldsData->BuildInterpolant Module

# Setup GUI for the SCIRun->FieldsData->ManageFieldData Module

# Setup GUI for the SCIRun->Math->LinAlgBinary Module

# Setup GUI for the SCIRun->FieldsData->ApplyInterpolant Module

# Setup GUI for the SCIRun->FieldsData->ManageFieldData Module

# Setup GUI for the SCIRun->Math->ErrorMetric Module
setGlobal $m8-haveUI {1}
setGlobal $m8-pTCL {1}
$m8 initialize_ui

# Setup GUI for the SCIRun->FieldsCreate->SampleLattice Module
setGlobal $m9-sizex {5}
setGlobal $m9-sizey {5}
setGlobal $m9-sizez {5}

::netedit scheduleok
