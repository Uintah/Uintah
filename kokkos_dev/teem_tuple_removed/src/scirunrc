#
# Sample .scirunrc file.
#
# This file is copied from the SCIRun src tree file:
#   ./SCIRun/src/scirunrc
#
# Lines beginning with '#' are commented out.
#
# All variables in this file have been commented out or set
# to their default values.
#
# This file contains a list of environment variables that can be either set
# in your shell or here. If you set these variables in your shell, they will 
# override the values in this file.
#
# All variable declarations must use the syntax:
#    Environment_Variable_Name = Value
#
# Boolean variable declarations use this syntax:
#    Environment_Variable_Name = <true,1,on,yes|false,0,off,no>
#

#####################################
### ENVIRONMENT VARIABLES SECTION ###
#####################################

# REMEMBER, if these variables are set in your shell environment, they will
# override the valuse in this file.

# The MALLOC_* environment variables can be set in order to help
# monitor and control the allocation of memory.  The environment
# variables are ONLY USED if DISABLE_SCI_MALLOC was NOT defined when
# SCIRun was configured.  If DISABLE_SCI_MALLOC is defined, then
# SCIRun will use the built in new, free, alloc, etc and will ignore
# the MALLOC_STRICT, MALLOC_LAZY, MALLOC_TRACE, and MALLOC_STATS variables.


### MALLOC_STRICT = [true if set]
#   Places markers in unused memory and uses them to
#   verify memory integrity.  Unless you wish to check memory integrity
#   explicitly using the "audit()" function, MALLOC_LAZY should NOT be set
# MALLOC_STRICT = false


### MALLOC_LAZY = [true if set]
#   By default, memory is audited for problems on each
#   allocation and deallocation.  If MALLOC_LAZY is set, then auditing
#   is turned off.  This can speed up code that allocates and
#   deallocates memory frequently.
# MALLOC_LAZY = false


### MALLOC_TRACE = [filename]
#   If MALLOC_TRACE is set, then every memory
#   allocation, reallocation, and deallocation will be logged.  If
#   "filename" is not provided, this information will be printed to "stderr".
# MALLOC_TRACE = trace.out


### MALLOC_STATS = [filename]
#   If MALLOC_STATS is set, when SCIRun exits,
#   it will output a list of statistics regarding memory usage during
#   the run.  This includes the number of alloc/free calls, the amount
#   of fragmentation, the amount of memory that is free and that is in
#   use, etc.  If "filename" is not provided, then "stderr" is used.
# MALLOC_stats = stats.out


### SCI_TA_DISABLE = [true if set]
#   Turns off the SCI Trivial Allocator
# SCI_TA_DISABLE = true


### SCIRUN_PACKAGE_LIB_PATH = [path]
#   Path to use in searching for package libraries.
# SCIRUN_PACKAGE_LIB_PATH = /path/to/package/libs
 

### SCIRUN_PACKAGE_SRC_PATH = [path]
#   Path to use in searching for package .xml and .tcl files.
# SCIRUN_PACKAGE_SRC_PATH = /path/to/package/src


### SCIRUN_LOAD_PACKAGE = [comma-seperated list]
#   The format of SCIRUN_LOAD_PACKAGE is a comma seperated list of
#   package names.  This list specifies the package libraries to load
#   when SCIRun is first brought up.
# SCIRUN_LOAD_PACKAGE = BioPSE,Uintah,Teem


### SCIRUN_DATA = [path]
#   Directory location that 'Reader' modules will default to.
# SCIRUN_DATA = /usr/sci/data/SCIRunData/1.20.1


### SCIRUN_DATASET = [name]
#   Name of data set in SCIRUN_DATA to default to.
# SCIRUN_DATASET = sphere


### SCIRUN_ON_THE_FLY_LIBS_DIR = [path]
#   User writable directory to build 'on-the-fly' .h, .cc, .o and .so files.
# SCIRUN_ON_THE_FLY_LIBS_DIR = $HOME/SCIRun/on-the-fly-libs


### SCIRUN_TMP_DIR = [path]
#   Directory for writting temporary files - must be world read/writeable
SCIRUN_TMP_DIR = /tmp


### SCI_DBXCOMMAND = [command]
#   Command to run when SCIRun dies and the user chooses to run a debugger
# SCI_DBXCOMMAND = "dbx"


### SCI_EXCEPTION_MODE = <ask, ???, ???, ???>
# Default action to take if scirun crashes
# SCI_EXCEPTIONMODE = ask


### SCI_SIGNALMODE = <ask, ???, ???, ???>
#   Action to take when a signal interrupts scirun.
# SCI_SIGNALMODE = ask


### SCIRUN_INSERT_NET_COPYRIGHT = [boolean]
#   If true, adds SCI copyright to any SCI .net files that are created.
# SCIRUN_INSERT_NET_COPYRIGHT = false


### SCIRUN_NET_SUBSTITUTE_DATADIR = [boolean]
#   If true, module filename variables will be automatically substitute
#   SCIRUN_DATADIR and SCIRUN_DATASET in saved .net files.
# SCIRUN_NET_SUBSTITUTE_DATADIR = false


### SCI_NOSPLASH = [boolean]
#   If true, SCIRun will not display the splash screen at startup.
# SCI_NOSPLASH = false


### SCI_NPROCESSORS = [integer]
#   On SGIs, override the system setting for number of processors on a machine
# SCI_NPROCESSORS = 1


### SCI_REGRESSION_TESTING = [boolean]
#   If True, regression testing mode will turn on.  Execution starts after a
#   network is loaded and SCIRun will exit immediately after creating an image.
# SCI_REGRESSION_TESTING = false


### THREAD_NO_CATCH_SIGNALS = [boolean]
#   Turns off the SCI Signal handlers.
# THREAD_NO_CATCH_SIGNALS = true


### THREAD_SHOW_INIT = [boolean]
#   Debugging flag that, when turned on, shows information about the
#   initialization of the thread library.
# THREAD_SHOWINIT = true


### FLIP_CAM_MANIP = [boolean]
#   Flips the XY values of the render window. (Not 100% sure on this one...)
# FLIP_CAM_MANIP = false


############################
# GUI PREFERENCES SECTION ##
############################

### SCIRUN_GUI_UseGuiFetch = [boolean]
#   Allows the user to tell a module to fetch the GUI from wherever it
#   happens to be on the screen and bring it to the mouse, and then
#   return it to its previous location.
SCIRUN_GUI_UseGuiFetch = on


### SCIRUN_GUI_MoveGuiToMouse = [boolean] 
#   Makes GUIs appear near the mouse on GUI creation. 
SCIRUN_GUI_MoveGuiToMouse = on


#################
# UNDOCUMENTED ##
#################
# SCI_CONFIRM_OVERWRITE
# PSE_DATA
# LOGNAME
# USER
# SCI_DEBUG