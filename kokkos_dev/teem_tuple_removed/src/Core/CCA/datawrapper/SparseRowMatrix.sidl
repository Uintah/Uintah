
interface SparseRowMatrix extends SSIDL.Matrix {
  //Methods from SSIDL.Matrix
  bool is_dense();
  bool is_sparse();
  bool is_column();

  Matrix transpose();
  double get_val();
  int get_row();
  int get_col();

  double get(in int a, in int b);
  void put(in int r, in int c, in double val);

  string type_name();

  void zero();
  int nrows();
  int ncols();

  /* TODO LATER:
  void getRowNonzeros(in int r, inout array<int,1> idx, inout array<double,1> v);
  */

  void mult(inout ColumnMatrix x, inout ColumnMatrix b,
            inout int flops, inout int memrefs,
            in int beg, in int end, in int spVec);
  int cg_solve(inout ColumnMatrix rhs, inout ColumnMatrix lhs,
               inout double err, inout int niter,
               inout int flops, inout int memrefs,
               in double max_error, in int toomany);
  int cg_solve(inout ColumnMatrix rhs, inout ColumnMatrix lhs);

  int bicg_solve(inout ColumnMatrix rhs, inout ColumnMatrix lhs,
                 inout double err, inout int niter,
                 inout int flops, inout int memrefs,
                 in double max_error, in int toomany);
  int bicg_solve(inout ColumnMatrix rhs, inout ColumnMatrix lhs);

  void mult_transpose(inout ColumnMatrix x, inout ColumnMatrix b,
                      inout int flops, inout int memrefs,
                      in int beg, in int end, in int spVec);

  void print();

  void scalar_multiply(in double s);

  // Separate raw files.
  void set_raw(in bool v);
  bool get_raw();
  void set_raw_filename( inout string f );
  string get_raw_filename();
  opaque get_d_object();
  //EOF SCIRun.Matrix

  /*
  DenseMatrix dense();
  ColumnMatrix column();
  */

  void add(in int row, in int col, in double val);

  int getIdx(in int i, in int j);
  int get_nnz();
  
  void solve(inout ColumnMatrix i);

};

