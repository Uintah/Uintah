<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="CreateMesh" category="FieldsCreate">
  <overview>
    <authors>
      <author>Michael Callahan</author>
    </authors>
    <summary>Construct a mesh from raw matrix data.</summary>
    <description>
      <p>
        CreateMesh takes in raw position and connnectivity data as
        matrices and uses them to construct a new mesh.  The 'Mesh
        Positions' data should be an Nx3 matrix where N is the number
        of points in the mesh and each row contains data in XYZ order.
        The connectivity data should be an MxP matrix where M is the
        number of elements in the mesh and P is the number of node
        references per element.  Thus for a TetVolMesh P would be 4.
        The node references are row indices into the 'Mesh
        Positions' matrix and are indexed starting at zero.
      </p>
      <p>
        The output field will contain the new mesh and no data.  It is
        recommended that the ManageFieldData module be used to attach
        data to the new field.  See also ManageFieldMesh, which can be
        used to attach new positional data to existing meshes but
        cannot construct a new mesh nor change it's connectivity
        information.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
	<name>Mesh Elements</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
	<name>Mesh Positions</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
	<name>Mesh Normals</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
	<name>Output Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
</component>
