<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
 
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
 
  The Original Source Code is SCIRun, released March 12, 2001.
 
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994
  University of Utah. All Rights Reserved.
-->

<component name="FieldInfo" category="FieldsOther">
  <overview>
    <authors>
      <author>McKay Davis</author>
    </authors>
    <summary>
      <p>
        FieldInfo is used to view the attributes of fields.
      </p>
    </summary>
    <description>
      <p>
        FieldInfo is purely an informational Module.  It performs no
	modification on input data.  Upon execution it displays
	attributes about the input field in the UI.
      </p>
      <p>
	Field Attributes displayed:
      </p>
      <p>
	Name - The Field Name. May be blank.
      </p>
      <p>
	Typeneame - The C++ typename of the input Field Type.
      </p>
      <p>
	Center - The X,Y,Z coordinates of the average center of the
	nodes in the Field.
      </p>
      <p>
	Size - The X,Y,Z coordinates of the grid-aligned bounding box
	that encloses the Field.
      </p>
      <p>
	Data min,max - Only valid for scalar type input fields. Prints
	the respective min and max scalar values of the data
	associated with the input field.
      </p>
      <p>	
	# Nodes - The number of X,Y,Z points in the input field.
      </p>
      <p>
	# Elements - The number of highest dimension elements in the
        input field.  Ex.  For a PointCloudField this would equal
        the number of nodes.  For a TetVolField this would equal the
        number of tetrahedral cells in the input field.
      </p>
      <p>
	Data at - The location of the data values associated with the
	input field.
      </p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Input Field</name>
        <datatype>SCIRun::Field</datatype>
	<description>
          <p>
            The field to be edited.
          </p>
        </description>
      </port>
    </inputs>
    <outputs>

    </outputs>
  </io>
  <gui>
    <description>
      <p>
        The input field attributes describe the field on the input
        port.  The Field Name, Typename, Bounding Box Min, Bounding Box Max, Data Min, Data Max, # of Nodes, # of Elements, and the Data At location.
      </p>
    </description>
  </gui>
  <testing>
  </testing>
</component>

