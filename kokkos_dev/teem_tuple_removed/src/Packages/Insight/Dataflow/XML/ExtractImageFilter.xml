<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<component name="ExtractImageFilter" category="Filters">
  <overview>
    <authors>
    </authors>
    <summary>
    </summary>
    <description>
<p>Decrease the image size by cropping the image to the selected region bounds.</p>

<p>ExtractImageFilter changes the image boundary of an image by removing pixels outside the target region. The target region must be specified.</p>

<p>ExtractImageFilter also collapses dimensions so that the input image may have more dimensions than the output image (i.e. 4-D input image to a 3-D output image). To specify what dimensions to collapse, the ExtractionRegion must be specified. For any dimension dim where ExtractionRegion.Size[dim] = 0, that dimension is collapsed. The index to collapse on is specified by ExtractionRegion.Index[dim]. For example, we have a image 4D = a 4x4x4x4 image, and we want to get a 3D image, 3D = a 4x4x4 image, specified as [x,y,z,2] from 4D (i.e. the 3rd "time" slice from 4D). The ExtractionRegion.Size = [4,4,4,0] and ExtractionRegion.Index = [0,0,0,2].</p>

<p>The number of dimension in ExtractionRegion.Size and Index must = InputImageDimension. The number of non-zero dimensions in ExtractionRegion.Size must = OutputImageDimension. </p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputImage</name>
        <datatype>Insight::ITKDatatype</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputImage</name>
        <datatype>Insight::ITKDatatype</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

