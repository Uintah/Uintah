<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<component name="UnuHeq" category="Unu">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Perform histogram equalization. If this seems to be doing nothing,
try increasing the number of histograms bins by an order of magnitude or two
(or more). Or, use "unu gamma" to warp the values in the direction you know
they need to go. Either of these might work because extremely tall and narrow
peaks in the equalization histogram will produce poor results.</summary>
    <description>
    <p>Bins: the number of bins to use in histogram that is created in order to
                calculate the mapping that achieves the equalization. (int)</p>
    <p>SBins: the number bins in value histogram to ignore in calculating the
                mapping. Bins are ignored when they get more hits than other
                bins, and when the values that fall in them are constant. This
                is an effective way to prevent large regions of background
                value from distorting the equalization mapping.
                default: "0"</p>
     <p>Amount: extent to which the histogram equalizing mapping should be
                applied; 0.0: no change, 1.0: full equalization (float);
                default: "1.0"</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

