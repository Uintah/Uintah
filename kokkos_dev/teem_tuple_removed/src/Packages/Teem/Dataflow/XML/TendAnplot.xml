<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="TendAnplot" category="Tend">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Graph anisotropy metric in barycentric coords. The metrics all
vary from 0.0 to 1.0, and will be sampled in the lower right half of the
image. The plane on which they are sampled is a surface of constant trace.
    </summary>
    <description>
    <p>Resolution : resolution of anisotropy plot. This value should be
    an integer.</p>
    <p>Sample Whole Triangle of Constant Trace : check to sample the whole 
    triangle of constant trace, instead of just the sixth of it in which 
    the eigenvalues have the traditional sorted order.</p>
    <p>Set Outside Pixel Values to NaN : set the pixel values outside the triangle to be NaN. 
    If not checked they will be set to 0.</p>
    <p>Anisotropy Metric to Plot : Which anisotropy metric to plot. 
    All the Westin metrics come in two versions. Currently supported:
           cl1, cl2: Westin's linear;
           cp1, cp2: Westin's planar;
           ca1, ca2: Westin's linear + planar;
           cs1, cs2: Westin's spherical (1-ca);
           ct1, ct2: GK's anisotropy type (cp/ca);
           ra: Basser/Pierpaoli relative anisotropy;
           fa: Basser/Pierpaoli fractional anisotropy/sqrt(2);
           vf: volume fraction = 1-(Basser/Pierpaoli volume ratio);
           tr: trace.</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

