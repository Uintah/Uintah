<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<component name="TendEvq" category="Tend">
  <overview>
    <author>Darby Van Uitert
    </author>
    <summary>Quantize directions of diffusion. Because VTK doesn't do
multi-dimensional colormaps, we have to quantize directions of diffusion
(usually just the principal eigenvector) in order to create the usual
XYZ-RGB coloring. Because eigenvector directions are poorly defined in
regions of low anisotropy, the length of the vector (pre-quantization) is
modulated by anisotropy, requiring the selection of some anisotropy metric.
    </summary>
    <description>
    <p>Evec Index : Which eigenvector should be quantized: a value of 0 for the
    direction of fastest diffusion (eigenvector associated with
    largest eigenvalue), values 1 or 2 for other two eigenvectors
    (associated with middle and smallest eigenvalue) (integer).</p>
    <p>Anisotropy Metric: Which anisotropy metric to plot. 
    All the Westin metrics come in two versions. Currently supported:
           cl1, cl2: Westin's linear;
           cp1, cp2: Westin's planar;
           ca1, ca2: Westin's linear + planar;
           cs1, cs2: Westin's spherical (1-ca);
           ct1, ct2: GK's anisotropy type (cp/ca);
           ra: Basser/Pierpaoli relative anisotropy;
           fa: Basser/Pierpaoli fractional anisotropy/sqrt(2);
           vf: volume fraction = 1-(Basser/Pierpaoli volume ratio);
           tr: trace.</p>
    <p>Don't Attenuate the color by Anisotropy : When not selected, 
    regions with low or no anisotropy are very dark colors or black.</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>InputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

