# $Id$

dnl Process this file with autoconf to produce a configure script.


# Configuration script for AppleSeeds library.  Usage:
#   configure [--prefix=<install dir>]


AC_INIT(Makeinclude.in)
AC_CONFIG_HEADER(config.h)
AC_PROG_MAKE_SET
AC_PREFIX_DEFAULT(`pwd`/install)


dnl *** Program checks.

AC_CHECKING(system executable paths)
AC_PATH_PROG(AR, ar)
# The Irix gcc compiler has a bug that prevents it from correctly calling
# inet_ntoa and semctl, both of which AppleSeeds uses.  See
# http://freeware.sgi.com/shared/howto.html.  The doubled brackets are used
# here because autoconf will strip one of each as quote characters.
case `uname -s` in
  [[iI]][[rR]][[iI]][[xX]]*)
    AC_PATH_PROG(CC, cc)
    C_ARCH_FLAG="-n32 "
  ;;
  *) AC_PROG_CC;;
esac
AC_PROG_RANLIB


dnl *** Compiler and linker switches.

if test "$CC" = "gcc"; then
  C_OPT_FLAGS="-O2 -finline-functions "
  C_WARN_FLAGS="-Wall "
  PROFILE_FLAGS="-pg "
  AC_PATH_PROG(PROFILE, gprof)
else
  PROFILE_FLAGS="-p "
  AC_PATH_PROG(PROFILE, prof)
fi
DEBUG_FLAGS="-g "

# Solaris boxes require -lsocket -lnsl when linking socket code.
if test -r /usr/lib/libsocket.a; then
  SOCKETS_LD_LIBS="-lsocket -lnsl "
fi


dnl *** Type checks.

AC_CHECKING(for system type definitions)
# The third parameter to getpeername() is a pointer to socklen_t, size_t, or
# int on various systems.  Worse yet, some systems define socklen_t but use a
# different type in the getpeername() prototype, and Solaris Intel defines
# Psocklen_t, which is a pointer to either socklen_t or void.  In the ipseed
# code we use ASIP_SOCKLEN_T, defining it in config.h to the proper type.
AC_TRY_COMPILE(
  [#include <sys/types.h>
   #include <sys/socket.h>],
  [extern int getpeername(int socket, struct sockaddr *addr, socklen_t *len);],
  socklen_type=socklen_t,
  AC_TRY_COMPILE(
    [#include <sys/types.h>
     #include <sys/socket.h>],
    [extern int getpeername(int socket, struct sockaddr *addr, size_t *len);],
    socklen_type=size_t,
    AC_TRY_COMPILE(
      [#include <sys/types.h>
       #include <sys/socket.h>],
      [socklen_t len; Psocklen_t lenP = &len;
       (void)getpeername(0, 0, lenP);],
       socklen_type=socklen_t,
       socklen_type=int
    )
  )
)

# Check to see if the host uses IEEE754 fp format.  The code we use for testing
# is nearly identical to that in formatseed.c.  The variable settings in the
# false and cross-compiler cases are ignored; they're included just to keep
# autoconf from complaining.
AC_TRY_RUN(
  [int main() {
     int endianTester = 1;
     double fpTester = -4.0;
     int littleEndian = *((unsigned char *)&endianTester) != 0;
     unsigned char *bytes = (unsigned char *)&fpTester;
     /* Test sign, low-order bit of exponent and high-order bit of mantissa. */
     return bytes[littleEndian ? sizeof(fpTester) - 1 : 0] != 192 ||
            bytes[littleEndian ? sizeof(fpTester) - 2 : 1] !=
            ((sizeof(fpTester) == 4)  ? 128 :
             (sizeof(fpTester) == 8)  ? 16 :
             (sizeof(fpTester) == 16) ? 1 : 0);
   }],
   ieee_fp=1,
   host_fp=1,
   cross_fp=1
)

# Check to see if the system or compiler defines union semun.
AC_TRY_COMPILE(
  [#include <sys/types.h>
   #include <sys/ipc.h>
   #include <sys/sem.h>],
  [union semun x;],
  [have_semun=1],
  [have_semun=0])


dnl *** Library checks.

AC_CHECK_HEADER(sys/shm.h, have_shm_h=1, have_shm_h=0)
AC_CHECK_HEADER(sys/sem.h, have_sem_h=1, have_sem_h=0)


dnl *** Function checks.

AC_CHECK_LIB(c, unsetenv, have_unsetenv=1, have_unsetenv=0)
AC_CHECK_LIB(c, statvfs, have_statvfs=1, have_statvfs=0)


dnl *** Insert variable values into Makedefs.in.

C_FLAGS="$DEBUG_FLAGS$C_ARCH_FLAGS$C_WARN_FLAGS"
LD_LIBS="$SOCKETS_LD_LIBS "
ROOT_DIR="`pwd`"

AC_DEFINE_UNQUOTED(ASFMT_HOST_USES_IEEE754_FP, $ieee_fp)
AC_DEFINE_UNQUOTED(ASIP_SOCKLEN_T, $socklen_type)
if test $have_unsetenv -eq 1; then
  AC_DEFINE_UNQUOTED(ASPROP_HAVE_UNSETENV, $have_unsetenv)
fi
if test $have_statvfs -eq 1; then
  AC_DEFINE_UNQUOTED(ASRES_HAVE_STATVFS, $have_statvfs)
fi
# See if we get valid output from a SysV-style ps command.
if test `ps -A 2>&1 | grep -c TTY` -gt 0 ; then
  AC_DEFINE_UNQUOTED(ASRES_PS_SUPPORTS_SYSV, 1)
fi
if test $have_sem_h -eq 1; then
  AC_DEFINE_UNQUOTED(ASSEM_HAVE_SEM_H, $have_sem_h)
fi
if test $have_semun -eq 1; then
  AC_DEFINE_UNQUOTED(ASSEM_HAVE_SEMUN, $have_semun)
fi
if test $have_shm_h -eq 1; then
  AC_DEFINE_UNQUOTED(ASSHM_HAVE_SHM_H, $have_shm_h)
fi

AC_SUBST(AR)
AC_SUBST(C_FLAGS)
AC_SUBST(C_OPT_FLAGS)
AC_SUBST(CC)
AC_SUBST(LD_LIBS)
AC_SUBST(PROFILE)
AC_SUBST(PROFILE_FLAGS)
AC_SUBST(RANLIB)
AC_SUBST(ROOT_DIR)

AC_OUTPUT(Makefile Makeinclude)
