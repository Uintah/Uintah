package sci_ports {
  interface GoPort extends Port {
    int go();
  };

  interface ConnectionEventService extends Port {
    // subscribe the listener, l, to a type of event.
    void addConnectionEventListener( in int connectionEventType, 
				     in ConnectionEventListener l);
    void removeConnectionEventListener( in int connectionEventType, 
					in ConnectionEventListener l);
    
  };

  interface ConnectionEventListener {
    /** Called on all listeners when a connection is made or broken. */
    void connectionActivity( in ConnectionEvent event );
  };

  interface ConnectionEvent {
    int getEventType();
    PortInfo getPortInfo();

//     enumeration Type { 
//       Error = -1;            // Someone got their hands on a bogus event 
//                              //   object somehow.
//       ALL = 0;               // Component wants to receive all event notices. 
//                              //   ALL itself never received.
//       ConnectPending = 1;    // A connection is about to be attempted.
//       Connected = 2;         // A connection has been made.
//       DisconnectPending = 3; // A disconnection is about to be attempted.
//       Disconnected = 4;      // A disconnection has been made.
//     };
  };
}; // package sci.cca.ports
