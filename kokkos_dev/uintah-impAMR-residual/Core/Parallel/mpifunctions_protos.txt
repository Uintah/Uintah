int MPI_Abort         __ARGS((MPI_Comm, int));
int MPI_Accumulate    __ARGS((void *,   int, MPI_Datatype, int, MPI_Aint, int, MPI_Datatype, MPI_Op, MPI_Win));
int MPI_Address       __ARGS((void *, MPI_Aint *));
int MPI_Allgather     __ARGS((void *, int, MPI_Datatype, void *, int, MPI_Datatype, MPI_Comm));
int MPI_Allgatherv    __ARGS((void *, int, MPI_Datatype, void *, int *, int *, MPI_Datatype, MPI_Comm));
int MPI_Alloc_mem     __ARGS((MPI_Aint, MPI_Info, void *));
int MPI_Allreduce     __ARGS((void *, void *, int, MPI_Datatype, MPI_Op, MPI_Comm));
int MPI_Alltoall      __ARGS((void *, int, MPI_Datatype, void *, int, MPI_Datatype, MPI_Comm));
int MPI_Alltoallv     __ARGS((void *, int *, int *, MPI_Datatype, void *, int *, int *, MPI_Datatype, MPI_Comm));
int MPI_Attr_delete   __ARGS((MPI_Comm, int));
int MPI_Attr_get      __ARGS((MPI_Comm, int, void *, int *));
int MPI_Attr_put      __ARGS((MPI_Comm, int, void *));
int MPI_Barrier       __ARGS((MPI_Comm));
int MPI_Bcast         __ARGS((void *, int, MPI_Datatype, int, MPI_Comm));
int MPI_Bsend         __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm));
int MPI_Bsend_init    __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Buffer_attach __ARGS((void *, int));
int MPI_Buffer_detach __ARGS((void *, int *));
int MPI_Cancel        __ARGS((MPI_Request *));
int MPI_Cart_coords   __ARGS((MPI_Comm, int, int, int *));
int MPI_Cart_create   __ARGS((MPI_Comm, int, int *, int *, int, MPI_Comm *));
int MPI_Cartdim_get __ARGS((MPI_Comm, int *));
int MPI_Cart_get __ARGS((MPI_Comm, int, int *, int *, int *));
int MPI_Cart_map __ARGS((MPI_Comm, int, int *, int *, int *));
int MPI_Cart_rank __ARGS((MPI_Comm, int *, int *));
int MPI_Cart_shift __ARGS((MPI_Comm, int, int, int *, int *));
int MPI_Cart_sub __ARGS((MPI_Comm, int *, MPI_Comm *));
int MPI_Comm_compare __ARGS((MPI_Comm, MPI_Comm, int *));
int MPI_Comm_create __ARGS((MPI_Comm, MPI_Group, MPI_Comm *));
int MPI_Comm_dup __ARGS((MPI_Comm, MPI_Comm *));
int MPI_Comm_free __ARGS((MPI_Comm *));
int MPI_Comm_get_attr __ARGS((MPI_Comm, int, void *, int *));
int MPI_Comm_get_name __ARGS((MPI_Comm, char *, int *));
int MPI_Comm_group __ARGS((MPI_Comm, MPI_Group *));
int MPI_Comm_rank __ARGS((MPI_Comm, int *));
int MPI_Comm_remote_group __ARGS((MPI_Comm, MPI_Group *));
int MPI_Comm_remote_size __ARGS((MPI_Comm, int *));
int MPI_Comm_set_name __ARGS((MPI_Comm, char *));
int MPI_Comm_size __ARGS((MPI_Comm, int *));
int MPI_Comm_split __ARGS((MPI_Comm, int, int, MPI_Comm *));
int MPI_Comm_test_inter __ARGS((MPI_Comm, int *));
int MPI_Dims_create __ARGS((int, int, int *));
int MPI_Errhandler_create __ARGS((MPI_Handler_function *, MPI_Errhandler *));
int MPI_Errhandler_free __ARGS((MPI_Errhandler *));
int MPI_Errhandler_get __ARGS((MPI_Comm, MPI_Errhandler *));
int MPI_Errhandler_set __ARGS((MPI_Comm, MPI_Errhandler));
int MPI_Error_class __ARGS((int, int *));
int MPI_Error_string __ARGS((int, char *, int *));
int MPI_Finalized __ARGS((int *));
int MPI_Free_mem __ARGS((void *));
int MPI_Gather __ARGS((void *, int, MPI_Datatype, void *, int, MPI_Datatype, int, MPI_Comm));
int MPI_Gatherv __ARGS((void *, int, MPI_Datatype, void *, int *,int *, MPI_Datatype, int, MPI_Comm));
int MPI_Get_address __ARGS((void *, MPI_Aint *));
int MPI_Get __ARGS((void *, int, MPI_Datatype, int, MPI_Aint, int, MPI_Datatype, MPI_Win));
int MPI_Get_count __ARGS((MPI_Status *, MPI_Datatype, int *));
int MPI_Get_elements __ARGS((MPI_Status *, MPI_Datatype, int *));
int MPI_Get_processor_name __ARGS((char *, int *));
int MPI_Get_version __ARGS((int *, int *));
int MPI_Graph_create __ARGS((MPI_Comm, int, int *, int *, int, MPI_Comm *));
int MPI_Graphdims_get __ARGS((MPI_Comm, int *, int *));
int MPI_Graph_get __ARGS((MPI_Comm, int, int, int *, int *));
int MPI_Graph_map __ARGS((MPI_Comm, int, int *, int *, int *));
int MPI_Graph_neighbors __ARGS((MPI_Comm, int, int, int *));
int MPI_Graph_neighbors_count __ARGS((MPI_Comm, int, int *));
int MPI_Group_compare __ARGS((MPI_Group, MPI_Group, int *));
int MPI_Group_difference __ARGS((MPI_Group, MPI_Group, MPI_Group *));
int MPI_Group_excl __ARGS((MPI_Group, int, int *, MPI_Group *));
int MPI_Group_free __ARGS((MPI_Group *));
int MPI_Group_incl __ARGS((MPI_Group, int, int *, MPI_Group *));
int MPI_Group_intersection __ARGS((MPI_Group, MPI_Group, MPI_Group *));
int MPI_Group_rank __ARGS((MPI_Group, int *));
int MPI_Group_size __ARGS((MPI_Group, int *));
int MPI_Group_translate_ranks __ARGS((MPI_Group, int, int *, MPI_Group, int *));
int MPI_Group_union __ARGS((MPI_Group, MPI_Group, MPI_Group *));
int MPI_Ibsend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Info_create __ARGS((MPI_Info *));
int MPI_Info_delete __ARGS((MPI_Info, char *));
int MPI_Info_dup __ARGS((MPI_Info, MPI_Info *));
int MPI_Info_free __ARGS((MPI_Info *));
int MPI_Info_get __ARGS((MPI_Info, char *, int, char *, int *));
int MPI_Info_get_nkeys __ARGS((MPI_Info, int *));
int MPI_Info_get_nthkey __ARGS((MPI_Info, int, char *));
int MPI_Info_get_valuelen __ARGS((MPI_Info, char *, int *, int *));
int MPI_Info_set __ARGS((MPI_Info, char *, char *));
int MPI_Init __ARGS((int *, char ***));
int MPI_Initialized __ARGS((int *));
int MPI_Intercomm_create __ARGS((MPI_Comm, int, MPI_Comm, int, int, MPI_Comm *));
int MPI_Intercomm_merge __ARGS((MPI_Comm, int, MPI_Comm *));
int MPI_Iprobe __ARGS((int, int, MPI_Comm, int *, MPI_Status *));
int MPI_Irecv __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Irsend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Isend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Issend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Keyval_create __ARGS((MPI_Copy_function *, MPI_Delete_function *, int *, void *));
int MPI_Keyval_free __ARGS((int *));
int MPI_Op_create __ARGS((MPI_User_function *, int, MPI_Op *));
int MPI_Op_free __ARGS((MPI_Op *));
int MPI_Pack __ARGS((void *, int, MPI_Datatype, void *, int, int *, MPI_Comm));
int MPI_Pack_size __ARGS((int, MPI_Datatype, MPI_Comm, int *));
int MPI_Probe __ARGS((int, int, MPI_Comm, MPI_Status *));
int MPI_Put __ARGS((void *, int, MPI_Datatype, int, MPI_Aint, int, MPI_Datatype, MPI_Win));
int MPI_Recv __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Status *));
int MPI_Recv_init __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Reduce __ARGS((void *, void *, int, MPI_Datatype, MPI_Op, int, MPI_Comm));
int MPI_Reduce_scatter __ARGS((void *, void *, int *, MPI_Datatype, MPI_Op, MPI_Comm));
int MPI_Request_free __ARGS((MPI_Request *));
int MPI_Rsend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm));
int MPI_Rsend_init __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Scan __ARGS((void *, void *, int, MPI_Datatype, MPI_Op, MPI_Comm));
int MPI_Scatter __ARGS((void *, int, MPI_Datatype, void *, int, MPI_Datatype, int, MPI_Comm));
int MPI_Scatterv __ARGS((void *, int *, int *, MPI_Datatype, void *, int, MPI_Datatype, int, MPI_Comm));
int MPI_Send __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm));
int MPI_Send_init __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Sendrecv __ARGS((void *, int, MPI_Datatype, int, int, void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Status *));
int MPI_Sendrecv_replace __ARGS((void *, int, MPI_Datatype, int, int, int, int, MPI_Comm, MPI_Status *));
int MPI_Ssend __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm));
int MPI_Ssend_init __ARGS((void *, int, MPI_Datatype, int, int, MPI_Comm, MPI_Request *));
int MPI_Startall __ARGS((int, MPI_Request *));
int MPI_Start __ARGS((MPI_Request *));
int MPI_Testall __ARGS((int, MPI_Request *, int *, MPI_Status *));
int MPI_Testany __ARGS((int, MPI_Request *, int *, int *, MPI_Status *));
int MPI_Test __ARGS((MPI_Request *, int *, MPI_Status *));
int MPI_Test_cancelled __ARGS((MPI_Status *, int *));
int MPI_Testsome __ARGS((int, MPI_Request *, int *, int *, MPI_Status *));
int MPI_Topo_test __ARGS((MPI_Comm, int *));
int MPI_Type_commit __ARGS((MPI_Datatype *));
int MPI_Type_contiguous __ARGS((int, MPI_Datatype, MPI_Datatype *));
int MPI_Type_create_darray __ARGS((int, int, int, int *, int *, int *, int*, int, MPI_Datatype, MPI_Datatype *));
int MPI_Type_create_subarray __ARGS((int, int *, int *, int *, int, MPI_Datatype, MPI_Datatype *));
int MPI_Type_extent __ARGS((MPI_Datatype, MPI_Aint *));
int MPI_Type_free __ARGS((MPI_Datatype *));
int MPI_Type_get_contents __ARGS((MPI_Datatype, int, int, int, int *, MPI_Aint *, MPI_Datatype *));
int MPI_Type_get_envelope __ARGS((MPI_Datatype, int *, int *, int *, int *));
int MPI_Type_hindexed __ARGS((int, int *, MPI_Aint *, MPI_Datatype, MPI_Datatype *));
int MPI_Type_hvector __ARGS((int, int, MPI_Aint, MPI_Datatype, MPI_Datatype *));
int MPI_Type_indexed __ARGS((int, int *, int *, MPI_Datatype, MPI_Datatype *));
int MPI_Type_lb __ARGS((MPI_Datatype, MPI_Aint *));
int MPI_Type_size __ARGS((MPI_Datatype, int *));
int MPI_Type_struct __ARGS((int, int *, MPI_Aint *, MPI_Datatype *, MPI_Datatype *));
int MPI_Type_ub __ARGS((MPI_Datatype, MPI_Aint *));
int MPI_Type_vector __ARGS((int, int, int, MPI_Datatype, MPI_Datatype *));
int MPI_Unpack __ARGS((void *, int, int *, void *, int, MPI_Datatype, MPI_Comm));
int MPI_Waitall __ARGS((int, MPI_Request *, MPI_Status *));
int MPI_Waitany __ARGS((int, MPI_Request *, int *, MPI_Status *));
int MPI_Wait __ARGS((MPI_Request *, MPI_Status *));
int MPI_Waitsome __ARGS((int, MPI_Request *, int *, int *, MPI_Status *));
int MPI_Win_complete __ARGS((MPI_Win));
int MPI_Win_create __ARGS((void *, MPI_Aint, int, MPI_Info, MPI_Comm, MPI_Win *));
int MPI_Win_fence __ARGS((int, MPI_Win));
int MPI_Win_free __ARGS((MPI_Win *));
int MPI_Win_get_group __ARGS((MPI_Win, MPI_Group *));
int MPI_Win_post __ARGS((MPI_Group, int, MPI_Win));
int MPI_Win_start __ARGS((MPI_Group, int, MPI_Win));
int MPI_Win_wait __ARGS((MPI_Win));
int MPI_Status_f2c __ARGS((MPI_Fint *, MPI_Status *));
MPI_Info MPI_Info_f2c __ARGS((MPI_Fint));
int MPI_Status_c2f __ARGS((MPI_Status *, MPI_Fint *));
MPI_Fint MPI_Info_c2f __ARGS((MPI_Info));
#ifdef LAM_MPI // LAM_MPI the following do not have a PMPI_ version on alc
int MPI_Close_port __ARGS((char *));
int MPI_Comm_accept __ARGS((char *, MPI_Info, int, MPI_Comm, MPI_Comm *));
int MPI_Comm_connect __ARGS((char *, MPI_Info, int, MPI_Comm, MPI_Comm *));
int MPI_Comm_create_errhandler __ARGS((MPI_Comm_errhandler_fn *, MPI_Errhandler *));
int MPI_Comm_create_keyval __ARGS((MPI_Comm_copy_attr_function *, MPI_Comm_delete_attr_function *, int *, void *));
int MPI_Comm_delete_attr __ARGS((MPI_Comm, int));
int MPI_Comm_disconnect __ARGS((MPI_Comm *));
int MPI_Comm_free_keyval __ARGS((int *));
int MPI_Comm_get_errhandler __ARGS((MPI_Comm, MPI_Errhandler *));
int MPI_Comm_get_parent __ARGS((MPI_Comm *));
int MPI_Comm_join __ARGS((int, MPI_Comm *));
int MPI_Comm_set_attr __ARGS((MPI_Comm, int, void *));
int MPI_Comm_set_errhandler __ARGS((MPI_Comm, MPI_Errhandler));
int MPI_Comm_spawn __ARGS((char *, char **, int, MPI_Info, int, MPI_Comm, MPI_Comm *, int *));
int MPI_Comm_spawn_multiple __ARGS((int, char **, char ***, int *, MPI_Info *, int, MPI_Comm, MPI_Comm *, int *));
int MPI_Is_thread_main __ARGS((int *));
int MPI_Lookup_name __ARGS((char *, MPI_Info, char *));
int MPI_Open_port __ARGS((MPI_Info, char *));
int MPI_Publish_name __ARGS((char *, MPI_Info, char *));
int MPI_Query_thread __ARGS((int *));
int MPI_Type_create_hindexed __ARGS((int, int *, MPI_Aint *, MPI_Datatype, MPI_Datatype *));
int MPI_Type_create_hvector __ARGS((int, int, MPI_Aint, MPI_Datatype, MPI_Datatype *));
int MPI_Type_create_keyval __ARGS((MPI_Type_copy_attr_function *, MPI_Type_delete_attr_function *, int *, void *));
int MPI_Type_create_resized __ARGS((MPI_Datatype, MPI_Aint, MPI_Aint, MPI_Datatype *));
int MPI_Type_create_struct __ARGS((int, int *, MPI_Aint *, MPI_Datatype *, MPI_Datatype *));
int MPI_Type_delete_attr __ARGS((MPI_Datatype, int));
int MPI_Type_dup __ARGS((MPI_Datatype, MPI_Datatype *));
int MPI_Type_free_keyval __ARGS((int *));
int MPI_Type_get_attr __ARGS((MPI_Datatype, int, void *, int *));
int MPI_Type_get_extent __ARGS((MPI_Datatype, MPI_Aint *, MPI_Aint *));
int MPI_Type_get_name __ARGS((MPI_Datatype, char *, int *));
int MPI_Type_get_true_extent __ARGS((MPI_Datatype, MPI_Aint *, MPI_Aint *));
int MPI_Type_set_attr __ARGS((MPI_Datatype, int, void *));
int MPI_Type_set_name __ARGS((MPI_Datatype, char *));
int MPI_Unpublish_name __ARGS((char *, MPI_Info, char *));
int MPI_Win_create_errhandler __ARGS((MPI_Win_errhandler_fn *, MPI_Errhandler *));
int MPI_Win_create_keyval __ARGS((MPI_Win_copy_attr_function *, MPI_Win_delete_attr_function *, int *, void *));
int MPI_Win_delete_attr __ARGS((MPI_Win, int));
int MPI_Win_free_keyval __ARGS((int *));
int MPI_Win_get_attr __ARGS((MPI_Win, int, void *, int *));
int MPI_Win_get_errhandler __ARGS((MPI_Win, MPI_Errhandler *));
int MPI_Win_get_name __ARGS((MPI_Win, char *, int *));
int MPI_Win_set_attr __ARGS((MPI_Win, int, void *));
int MPI_Win_set_errhandler __ARGS((MPI_Win, MPI_Errhandler));
int MPI_Win_set_name __ARGS((MPI_Win, char *));
MPI_Fint MPI_Comm_c2f __ARGS((MPI_Comm));
MPI_Fint MPI_Errhandler_c2f __ARGS((MPI_Errhandler));
MPI_Fint MPI_Group_c2f __ARGS((MPI_Group));
MPI_Fint MPI_Op_c2f __ARGS((MPI_Op));
MPI_Fint MPI_Request_c2f __ARGS((MPI_Request));
MPI_Win MPI_Win_f2c __ARGS((MPI_Fint));
MPI_Comm MPI_Comm_f2c __ARGS((MPI_Fint));
MPI_Errhandler MPI_Errhandler_f2c __ARGS((MPI_Fint));
MPI_Group MPI_Group_f2c __ARGS((MPI_Fint));
MPI_Fint MPI_Type_c2f __ARGS((MPI_Datatype));
MPI_Fint MPI_Win_c2f __ARGS((MPI_Win));
MPI_Datatype MPI_Type_f2c __ARGS((MPI_Fint));
MPI_Request MPI_Request_f2c __ARGS((MPI_Fint));
#endif //ifdef LAM_MPI
