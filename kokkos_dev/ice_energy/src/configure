#! /bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.59 for SCIRun 1.24.
#
# Report bugs to <scirun-users@sci.utah.edu>.
#
# Copyright (C) 2003 Free Software Foundation, Inc.
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
#
# ##
# ##  For more information, please see: http://software.sci.utah.edu
# ##
# ##  The MIT License
# ##
# ##  Copyright (c) 2004 Scientific Computing and Imaging Institute,
# ##  University of Utah.
# ##
# ##  License for the specific language governing rights and limitations under
# ##  Permission is hereby granted, free of charge, to any person obtaining a
# ##  copy of this software and associated documentation files (the "Software"),
# ##  to deal in the Software without restriction, including without limitation
# ##  the rights to use, copy, modify, merge, publish, distribute, sublicense,
# ##  and/or sell copies of the Software, and to permit persons to whom the
# ##  Software is furnished to do so, subject to the following conditions:
# ##
# ##  The above copyright notice and this permission notice shall be included
# ##  in all copies or substantial portions of the Software.
# ##
# ##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# ##  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# ##  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# ##  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# ##  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# ##  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# ##  DEALINGS IN THE SOFTWARE.
# ##
#
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH


# Name of the host.
# hostname on some systems (SVR3.2, Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

exec 6>&1

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_config_libobj_dir=.
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=
SHELL=${CONFIG_SHELL-/bin/sh}

# Maximum number of lines to put in a shell here document.
# This variable seems obsolete.  It should probably be removed, and
# only ac_max_sed_lines should be used.
: ${ac_max_here_lines=38}

# Identity of this package.
PACKAGE_NAME='SCIRun'
PACKAGE_TARNAME='scirun'
PACKAGE_VERSION='1.24'
PACKAGE_STRING='SCIRun 1.24'
PACKAGE_BUGREPORT='scirun-users@sci.utah.edu'

ac_unique_file="configVars.mk.in"
# Factoring default headers for most tests.
ac_includes_default="\
#include <stdio.h>
#if HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#if HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif
#if STDC_HEADERS
# include <stdlib.h>
# include <stddef.h>
#else
# if HAVE_STDLIB_H
#  include <stdlib.h>
# endif
#endif
#if HAVE_STRING_H
# if !STDC_HEADERS && HAVE_MEMORY_H
#  include <memory.h>
# endif
# include <string.h>
#endif
#if HAVE_STRINGS_H
# include <strings.h>
#endif
#if HAVE_INTTYPES_H
# include <inttypes.h>
#else
# if HAVE_STDINT_H
#  include <stdint.h>
# endif
#endif
#if HAVE_UNISTD_H
# include <unistd.h>
#endif"

ac_subst_vars='SHELL PATH_SEPARATOR PACKAGE_NAME PACKAGE_TARNAME PACKAGE_VERSION PACKAGE_STRING PACKAGE_BUGREPORT exec_prefix prefix program_transform_name bindir sbindir libexecdir datadir sysconfdir sharedstatedir localstatedir libdir includedir oldincludedir infodir mandir build_alias host_alias target_alias DEFS ECHO_C ECHO_N ECHO_T LIBS CC CFLAGS LDFLAGS CXX CPPFLAGS CXXFLAGS F77 FFLAGS CPP CXXCPP build build_cpu build_vendor build_os host host_cpu host_vendor host_os DEF_CHROMIUM DEF_NO_DYNAMIC_CAST DEF_BUILD_DATAFLOW BUILD_DATAFLOW DEF_COLLAB_VIS HAVE_COLLAB_VIS IS_OSX IS_WIN ac_ct_CC EXEEXT OBJEXT EGREP ac_ct_CXX ac_ct_F77 SO_OR_ARCHIVE_EXTENSION NOPRINTDIR PACKAGE_DIRS LOAD_PACKAGE EXENAME LARGESOS TIME_IMPL DEF_MALLOC DEF_MALLOC_LINENUMBERS ASSERTION_LEVEL THROW_LEVEL OGL_ERR_MACRO AS LD NEED_OSX_HACK DEF_NEED_OSX_HACK NBITS WIN_DLLFLAGS CC_DEPEND_MODE CC_DEPEND_REGEN CC_DEPEND_EXT F77_DEPEND_MODE F77_DEPEND_REGEN F77_DEPEND_EXT MAKE GMAKE AWK BUILD_PLUME YACC LEX LEXLIB LEX_OUTPUT_ROOT LEX_LIB_FLAG ETAGS PERL FORTRAN_UNDERSCORE G77 SOFLAGS ASFLAGS LDRUN_PREFIX extra_cflags MAKE_PARALLELISM NEED_SONAME REPOSITORY_FLAGS TEMPLATE_TAG TEMPLATE_BOX SCI_THIRDPARTY_DIR INC_SCI_THIRDPARTY_H SCI_THIRDPARTY_LIB_DIR SCI_THIRDPARTY_LIB_DIR_FLAG M_LIB_FLAG M_LIB_DIR_FLAG X_LIB_FLAG X_LIB_DIR_FLAG THREAD_IMPL THREAD_LIB_FLAG SOCKET_LIB_FLAG DEF_THREAD SEMAPHORE_LIB_FLAG GL_LIB_FLAG GL_LIB_DIR_FLAG INC_GL_H DEF_OGL_EXT_HDRS COMPILE_AVR DEF_HAVE_AVR DL_LIB_FLAG DL_LIB_DIR_FLAG DEF_STAT64 DEF_IEEEFP DEF_HASHMAP LIB_DIR_TCL TCL_LIB_FLAG TCL_LIB_DIR_FLAG INC_TCL_H TK_LIB_FLAG TK_LIB_DIR_FLAG INC_TK_H LIB_DIR_ITCL ITCL_LIB_FLAG ITCL_LIB_DIR_FLAG INC_ITCL_H ITK_LIB_FLAG ITK_LIB_DIR_FLAG INC_ITK_H BLT_LIB_FLAG BLT_LIB_DIR_FLAG INC_BLT_H TCL_PREFIX TCL_VERSION TK_VERSION ITCL_WIDGETS XERCES_C_LIB_FLAG XERCES_C_LIB_DIR_FLAG INC_XERCESC_H SSTREAM_COMPAT EXC_LIB_FLAG EXC_LIB_DIR_FLAG DEF_EXC Z_LIB_FLAG Z_LIB_DIR_FLAG INC_Z_H DEF_Z JPEG_LIB_FLAG JPEG_LIB_DIR_FLAG TIFF_LIB_FLAG TIFF_LIB_DIR_FLAG PNG_LIB_FLAG PNG_LIB_DIR_FLAG INC_PNG_H DEF_PNG EXCEPTIONS_CRASH_DEF MPEGE_LIB_FLAG MPEGE_LIB_DIR_FLAG DEF_MPEG MAGICK_LIB_FLAG MAGICK_LIB_DIR_FLAG INC_MAGICK_H DEF_MAGICK SCISOCK_LIB_FLAG SCISOCK_LIB_DIR_FLAG INC_SCISOCK_H UNP_LIB_FLAG UNP_LIB_DIR_FLAG INC_UNP_H F_LIB_FLAG F_LIB_DIR_FLAG CAMAL_LIB_FLAG INC_CAMAL_H CAMAL_LIB_DIR_FLAG DEF_CAMAL HAVE_CAMAL HAVE_CBLAS DEF_CBLAS HAVE_BLAS INC_BLAS_H BLAS_LIB_FLAG BLAS_LIB_DIR_FLAG DEF_BLAS HAVE_LAPACK DEF_LAPACK LAPACK_LIB_FLAG LAPACK_LIB_DIR_FLAG HAVE_LAPACKMP LAPACKMP_LIB_FLAG LAPACKMP_LIB_DIR_FLAG HAVE_MPI DEF_MPI INC_MPI_H MPI_LIB_FLAG MPI_LIB_DIR_FLAG DEF_MPI_UNI INC_MPI_UNI_H MPI_UNI_LIB_FLAG MPI_UNI_LIB_DIR_FLAG HAVE_PETSC PETSC_LIB_FLAG PETSC_LIB_DIR_FLAG DEF_PETSC INC_PETSC_H HAVE_PETSC_UNI PETSC_UNI_LIB_FLAG PETSC_UNI_LIB_DIR_FLAG DEF_PETSC_UNI INC_PETSC_UNI_H HAVE_INSIGHT DEF_INSIGHT INC_INSIGHT_H INSIGHT_LIB_FLAG INSIGHT_LIB_DIR_FLAG HAVE_PTOLEMY DEF_PTOLEMY JAVA_PATH PTOLEMY_PATH PTOLEMY_CLASSPATH XALAN_PATH TAU_MAKEFILE BABEL_BIN HAVE_BABEL DEF_BABEL INC_SIDL_H SIDL_LIB_FLAG SIDL_LIB_DIR_FLAG NETSOLVE_LIB_FLAG NETSOLVE_LIB_DIR_FLAG INC_GLUT_H GLUT_LIB_FLAG GLUT_LIB_DIR_FLAG INC_GLUI_H GLUI_LIB_FLAG GLUI_LIB_DIR_FLAG DEF_OOGL INC_OOGL_H OOGL_LIB_FLAG OOGL_LIB_DIR_FLAG DEF_GLEW INC_GLEW_H GLEW_LIB_FLAG GLEW_LIB_DIR_FLAG FREETYPE_LIB_FLAG FREETYPE_LIB_DIR_FLAG DEF_FREETYPE INC_FREETYPE_H FTGL_LIB_FLAG FTGL_LIB_DIR_FLAG DEF_FTGL INC_FTGL_H DEF_AUDIO HAVE_AUDIO AUDIO_LIB_FLAG AUDIO_LIB_DIR_FLAG HAVE_TEEM DEF_TEEM INC_TEEM_H TEEM_LIB_FLAG TEEM_LIB_DIR_FLAG DEF_MDSPLUS INC_MDSPLUS_H MDSPLUS_LIB_FLAG MDSPLUS_LIB_DIR_FLAG DEF_HDF5 INC_HDF5_H HDF5_LIB_FLAG HDF5_LIB_DIR_FLAG DEF_PERFEX PERFEX_LIB_FLAG PERFEX_LIB_DIR_FLAG DEF_CRYPTO CRYPTO_LIB_FLAG CRYPTO_LIB_DIR_FLAG DEF_SSL SSL_LIB_FLAG SSL_LIB_DIR_FLAG HAVE_GLOBUS DEF_GLOBUS INC_GLOBUS_H GLOBUS_LIB_FLAG GLOBUS_LIB_DIR_FLAG QT_MOC_BIN HAVE_QT DEF_QT INC_QT_MT_H QT_MT_LIB_FLAG QT_MT_LIB_DIR_FLAG HAVE_RUBY DEF_RUBY INC_RUBY_H RUBY_LIB_FLAG RUBY_LIB_DIR_FLAG HAVE_TAO DEF_TAO INC_TAO_H TAO_LIB_FLAG TAO_LIB_DIR_FLAG HAVE_VTK DEF_VTK INC_VTK_H VTK_LIB_FLAG VTK_LIB_DIR_FLAG DEF_VDT INC_VDT_H VDT_LIB_FLAG VDT_LIB_DIR_FLAG HAVE_HYPRE DEF_HYPRE INC_HYPRE_H HYPRE_LIB_FLAG HYPRE_LIB_DIR_FLAG BOOST_LIB_FLAG BOOST_LIB_DIR_FLAG DEF_BOOST INC_BOOST_H LOKI_LIB_FLAG LOKI_LIB_DIR_FLAG DEF_LOKI INC_LOKI_H HAVE_UUID UUID_LIB_FLAG BUILD_SCIRUN2 WOFF_STRING scirun_obj_dir scirun_src_dir LIBOBJS LTLIBOBJS'
ac_subst_files=''

# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datadir='${prefix}/share'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
libdir='${exec_prefix}/lib'
includedir='${prefix}/include'
oldincludedir='/usr/include'
infodir='${prefix}/info'
mandir='${prefix}/man'

ac_prev=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval "$ac_prev=\$ac_option"
    ac_prev=
    continue
  fi

  ac_optarg=`expr "x$ac_option" : 'x[^=]*=\(.*\)'`

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $ac_option in

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad | --data | --dat | --da)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=* | --data=* | --dat=* \
  | --da=*)
    datadir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_feature=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
   { (exit 1); exit 1; }; }
    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
    eval "enable_$ac_feature=no" ;;

  -enable-* | --enable-*)
    ac_feature=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_feature" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid feature name: $ac_feature" >&2
   { (exit 1); exit 1; }; }
    ac_feature=`echo $ac_feature | sed 's/-/_/g'`
    case $ac_option in
      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
      *) ac_optarg=yes ;;
    esac
    eval "enable_$ac_feature='$ac_optarg'" ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst \
  | --locals | --local | --loca | --loc | --lo)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* \
  | --locals=* | --local=* | --loca=* | --loc=* | --lo=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_package=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid package name: $ac_package" >&2
   { (exit 1); exit 1; }; }
    ac_package=`echo $ac_package| sed 's/-/_/g'`
    case $ac_option in
      *=*) ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`;;
      *) ac_optarg=yes ;;
    esac
    eval "with_$ac_package='$ac_optarg'" ;;

  -without-* | --without-*)
    ac_package=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_package" : ".*[^-_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid package name: $ac_package" >&2
   { (exit 1); exit 1; }; }
    ac_package=`echo $ac_package | sed 's/-/_/g'`
    eval "with_$ac_package=no" ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) { echo "$as_me: error: unrecognized option: $ac_option
Try \`$0 --help' for more information." >&2
   { (exit 1); exit 1; }; }
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    expr "x$ac_envvar" : ".*[^_$as_cr_alnum]" >/dev/null &&
      { echo "$as_me: error: invalid variable name: $ac_envvar" >&2
   { (exit 1); exit 1; }; }
    ac_optarg=`echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"`
    eval "$ac_envvar='$ac_optarg'"
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    echo "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      echo "$as_me: WARNING: invalid host type: $ac_option" >&2
    : ${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  { echo "$as_me: error: missing argument to $ac_option" >&2
   { (exit 1); exit 1; }; }
fi

# Be sure to have absolute paths.
for ac_var in exec_prefix prefix
do
  eval ac_val=$`echo $ac_var`
  case $ac_val in
    [\\/$]* | ?:[\\/]* | NONE | '' ) ;;
    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
   { (exit 1); exit 1; }; };;
  esac
done

# Be sure to have absolute paths.
for ac_var in bindir sbindir libexecdir datadir sysconfdir sharedstatedir \
	      localstatedir libdir includedir oldincludedir infodir mandir
do
  eval ac_val=$`echo $ac_var`
  case $ac_val in
    [\\/$]* | ?:[\\/]* ) ;;
    *)  { echo "$as_me: error: expected an absolute directory name for --$ac_var: $ac_val" >&2
   { (exit 1); exit 1; }; };;
  esac
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
    echo "$as_me: WARNING: If you wanted to set the --build type, don't use --host.
    If a cross compiler is detected then cross compile mode will be used." >&2
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then its parent.
  ac_confdir=`(dirname "$0") 2>/dev/null ||
$as_expr X"$0" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$0" : 'X\(//\)[^/]' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$0" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r $srcdir/$ac_unique_file; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r $srcdir/$ac_unique_file; then
  if test "$ac_srcdir_defaulted" = yes; then
    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $ac_confdir or .." >&2
   { (exit 1); exit 1; }; }
  else
    { echo "$as_me: error: cannot find sources ($ac_unique_file) in $srcdir" >&2
   { (exit 1); exit 1; }; }
  fi
fi
(cd $srcdir && test -r ./$ac_unique_file) 2>/dev/null ||
  { echo "$as_me: error: sources are in $srcdir, but \`cd $srcdir' does not work" >&2
   { (exit 1); exit 1; }; }
srcdir=`echo "$srcdir" | sed 's%\([^\\/]\)[\\/]*$%\1%'`
ac_env_build_alias_set=${build_alias+set}
ac_env_build_alias_value=$build_alias
ac_cv_env_build_alias_set=${build_alias+set}
ac_cv_env_build_alias_value=$build_alias
ac_env_host_alias_set=${host_alias+set}
ac_env_host_alias_value=$host_alias
ac_cv_env_host_alias_set=${host_alias+set}
ac_cv_env_host_alias_value=$host_alias
ac_env_target_alias_set=${target_alias+set}
ac_env_target_alias_value=$target_alias
ac_cv_env_target_alias_set=${target_alias+set}
ac_cv_env_target_alias_value=$target_alias
ac_env_CC_set=${CC+set}
ac_env_CC_value=$CC
ac_cv_env_CC_set=${CC+set}
ac_cv_env_CC_value=$CC
ac_env_CFLAGS_set=${CFLAGS+set}
ac_env_CFLAGS_value=$CFLAGS
ac_cv_env_CFLAGS_set=${CFLAGS+set}
ac_cv_env_CFLAGS_value=$CFLAGS
ac_env_LDFLAGS_set=${LDFLAGS+set}
ac_env_LDFLAGS_value=$LDFLAGS
ac_cv_env_LDFLAGS_set=${LDFLAGS+set}
ac_cv_env_LDFLAGS_value=$LDFLAGS
ac_env_CXX_set=${CXX+set}
ac_env_CXX_value=$CXX
ac_cv_env_CXX_set=${CXX+set}
ac_cv_env_CXX_value=$CXX
ac_env_CPPFLAGS_set=${CPPFLAGS+set}
ac_env_CPPFLAGS_value=$CPPFLAGS
ac_cv_env_CPPFLAGS_set=${CPPFLAGS+set}
ac_cv_env_CPPFLAGS_value=$CPPFLAGS
ac_env_CXXFLAGS_set=${CXXFLAGS+set}
ac_env_CXXFLAGS_value=$CXXFLAGS
ac_cv_env_CXXFLAGS_set=${CXXFLAGS+set}
ac_cv_env_CXXFLAGS_value=$CXXFLAGS
ac_env_F77_set=${F77+set}
ac_env_F77_value=$F77
ac_cv_env_F77_set=${F77+set}
ac_cv_env_F77_value=$F77
ac_env_FFLAGS_set=${FFLAGS+set}
ac_env_FFLAGS_value=$FFLAGS
ac_cv_env_FFLAGS_set=${FFLAGS+set}
ac_cv_env_FFLAGS_value=$FFLAGS
ac_env_CPP_set=${CPP+set}
ac_env_CPP_value=$CPP
ac_cv_env_CPP_set=${CPP+set}
ac_cv_env_CPP_value=$CPP
ac_env_CXXCPP_set=${CXXCPP+set}
ac_env_CXXCPP_value=$CXXCPP
ac_cv_env_CXXCPP_set=${CXXCPP+set}
ac_cv_env_CXXCPP_value=$CXXCPP

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures SCIRun 1.24 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

_ACEOF

  cat <<_ACEOF
Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
			  [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
			  [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR           user executables [EPREFIX/bin]
  --sbindir=DIR          system admin executables [EPREFIX/sbin]
  --libexecdir=DIR       program executables [EPREFIX/libexec]
  --datadir=DIR          read-only architecture-independent data [PREFIX/share]
  --sysconfdir=DIR       read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR   modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR    modifiable single-machine data [PREFIX/var]
  --libdir=DIR           object code libraries [EPREFIX/lib]
  --includedir=DIR       C header files [PREFIX/include]
  --oldincludedir=DIR    C header files for non-gcc [/usr/include]
  --infodir=DIR          info documentation [PREFIX/info]
  --mandir=DIR           man documentation [PREFIX/man]
_ACEOF

  cat <<\_ACEOF

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of SCIRun 1.24:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
--enable-advanced-volume-rendering
                          Override default tests for this capability
--enable-verbosity      Turn on verbose configure output
--enable-threads        Specify a thread implementation (pthreads or irix)
--enable-debug          Turn on debugging (default is -g) or specify your
                          own. example: --enable-debug='-O0 -g'
--enable-optimize       Turn on optimize (default is -O2) or specify your
                          own. example: --enable-optimize='-O3'
--enable-64bit          Compile in 64 bit mode
--enable-32bit          Compile in 32 bit mode
--enable-output-avg-walltime
                          Output ellapsed wall-times
--enable-perfex         Use perfex hardware counters (sgi only)
--enable-package=<list> Use the SCIRun packages specified by list. example:
                          --enable-package='BioPSE Teem'
--disable-dataflow      do not build Dataflow
--enable-exename=<name> Use name for executable name instead of the default:
                          scirun
--enable-largesos       Build one .so per directory
--enable-sci-malloc     Use SCI memory allocation/deallocation checks
--enable-assertion-level=N
                          Use assertion level N (0-3)
--enable-scinew-line-numbers
                          Have SCI malloc store the file and line that calls
                          'scinew'
--enable-throw-level=N  Use throw level N (0-3)
--enable-scirun2        Build experimental SCIRun 2
--enable-plume          Build Plume (based on SCIRun 2)
--enable-rpath          Use the default runtime library search path
--enable-chromium       Using Chromium so skip unsupported OGL calls
--enable-ati-card-fix   Enable the ati car fix to repair bad polygons -
                          Deprecated - use SCIRUN_DRAWARRAYS_DISABLE
                          environment variable - see scirunrc file
--enable-no-dynamic-cast  Disable dynamic casting

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
--with-thirdparty=DIR   Use the Thirdparty_install installation in DIR. This
                          is output from the Thirdparty_install install
                          script. The default is /usr/local/SCIRun/Thirdparty/
                          followed by: <version>/<OS>/<compiler>-<32 or 64>bit
--with-blas=DIR         Use the blas installation in DIR
--with-lapack=DIR       Use the lapack installation in DIR
--with-fortran=DIR      Use the fortran (eg: g2c) installation in DIR/lib
--with-ptolemyII=DIR    Use the Ptolemy II (eg: ptII4.0.1) installation in
                          DIR (Ptolemypa ckage only)
--with-java=DIR         Use the Java distribution in DIR (Ptolemy package
                          only)
--with-mpi=DIR          Use the mpi installation in DIR
--with-mpiuni=DIR       Use the mpiuni installation in DIR
--with-hypre=DIR        Use the hypre installation in DIR
--with-netsolve=DIR     Use the netsolve installation in DIR
--with-petsc=DIR        Use the petsc installation in DIR
--with-png=DIR          Use the png installation in DIR
--with-camal=DIR        Use the CMLTET installation in DIR
--with-magick=DIR       Use the Image Magick installation in DIR
--with-unipetsc=DIR     Use the unipetsc installation in DIR
--with-tau=<tau-makefile>
                          Specify a Tau Makefile
--with-unp=DIR          Use the unp installation in DIR
--with-globus=DIR       Use the globus installation in DIR
--with-crypto=DIR       Use the crypto installation in DIR (only for use
                          with globus)
--with-ssl=DIR          Use the ssl installation in DIR (only for use with
                          globus)
--with-insight=DIR      Use the Insight installation in DIR
--with-qt=DIR           Use the Qt installation in DIR
--with-ruby=DIR         Use the ruby installation in DIR where DIR points to
                          the --prefix option specified when installing ruby.
                          A standard ruby install defaults to
                          --prefix=/usr/local
--with-tao=DIR          Use the tao corba installation in DIR where DIR
                          points to the --prefix option specified when
                          installing tao.
--with-vtk=DIR              Build the VTK components. Use VTK build in DIR.
which is /usr/local by defaultDIR should be the directory specified in the VTK
which is /usr/local by defaultCMake variable CMAKE_INSTALL_PREFIX
--with-opengl=DIR       Use the OpenGL installation in DIR
--with-zlib=DIR         Use the zlib installation in DIR
--with-jpeg=DIR         Use the jpeg installation in DIR
--with-tiff=DIR         Use the tiff installation in DIR
--with-xalan=DIR        Use the xalan installation in DIR
--with-mdsplus=DIR      Use the mdsplus installation in DIR
--with-hdf5=DIR         Use the hdf5 installation in DIR
--with-glut=DIR         Use the glut installation in DIR
--with-glui=DIR         Use the glui installation in DIR
--with-oogl=DIR         Use the oogl installation in DIR
--with-glew=DIR         Use the GLEW installation in DIR
--with-audio=DIR        Use the audio installation in DIR
--with-freetype=DIR     Use the Freetype2 installation in DIR
--with-ftgl=DIR         Use the Freetype GL installation in DIR
--with-uuid             Use UUID tools on IRIX or from ext2fs development
                          tools on GNU/linux (SCIRun2 only, default).
                          Installing the ext2fs package on GNU/Linux is
                          recommended.
--with-boost=DIR        Use the Boost in DIR
--with-loki=DIR         Use the Loki in DIR

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags
  CXX         C++ compiler command
  CPPFLAGS    C/C++ preprocessor flags
  CXXFLAGS    C++ compiler flags
  F77         Fortran 77 compiler command
  FFLAGS      Fortran 77 compiler flags
  CPP         C preprocessor
  CXXCPP      C++ preprocessor

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <scirun-users@sci.utah.edu>.
_ACEOF
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  ac_popdir=`pwd`
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d $ac_dir || continue
    ac_builddir=.

if test "$ac_dir" != .; then
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A "../" for each directory in $ac_dir_suffix.
  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
else
  ac_dir_suffix= ac_top_builddir=
fi

case $srcdir in
  .)  # No --srcdir option.  We are building in place.
    ac_srcdir=.
    if test -z "$ac_top_builddir"; then
       ac_top_srcdir=.
    else
       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
    fi ;;
  [\\/]* | ?:[\\/]* )  # Absolute path.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir ;;
  *) # Relative path.
    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_builddir$srcdir ;;
esac

# Do not use `cd foo && pwd` to compute absolute paths, because
# the directories may not exist.
case `pwd` in
.) ac_abs_builddir="$ac_dir";;
*)
  case "$ac_dir" in
  .) ac_abs_builddir=`pwd`;;
  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
  *) ac_abs_builddir=`pwd`/"$ac_dir";;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_builddir=${ac_top_builddir}.;;
*)
  case ${ac_top_builddir}. in
  .) ac_abs_top_builddir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_srcdir=$ac_srcdir;;
*)
  case $ac_srcdir in
  .) ac_abs_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_srcdir=$ac_top_srcdir;;
*)
  case $ac_top_srcdir in
  .) ac_abs_top_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
  esac;;
esac

    cd $ac_dir
    # Check for guested configure; otherwise get Cygnus style configure.
    if test -f $ac_srcdir/configure.gnu; then
      echo
      $SHELL $ac_srcdir/configure.gnu  --help=recursive
    elif test -f $ac_srcdir/configure; then
      echo
      $SHELL $ac_srcdir/configure  --help=recursive
    elif test -f $ac_srcdir/configure.ac ||
	   test -f $ac_srcdir/configure.in; then
      echo
      $ac_configure --help
    else
      echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi
    cd $ac_popdir
  done
fi

test -n "$ac_init_help" && exit 0
if $ac_init_version; then
  cat <<\_ACEOF
SCIRun configure 1.24
generated by GNU Autoconf 2.59

Copyright (C) 2003 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.

##
##  For more information, please see: http://software.sci.utah.edu
##
##  The MIT License
##
##  Copyright (c) 2004 Scientific Computing and Imaging Institute,
##  University of Utah.
##
##  License for the specific language governing rights and limitations under
##  Permission is hereby granted, free of charge, to any person obtaining a
##  copy of this software and associated documentation files (the "Software"),
##  to deal in the Software without restriction, including without limitation
##  the rights to use, copy, modify, merge, publish, distribute, sublicense,
##  and/or sell copies of the Software, and to permit persons to whom the
##  Software is furnished to do so, subject to the following conditions:
##
##  The above copyright notice and this permission notice shall be included
##  in all copies or substantial portions of the Software.
##
##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
##  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
##  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
##  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
##  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
##  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
##  DEALINGS IN THE SOFTWARE.
##

_ACEOF
  exit 0
fi
exec 5>config.log
cat >&5 <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by SCIRun $as_me 1.24, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  $ $0 $@

_ACEOF
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
hostinfo               = `(hostinfo) 2>/dev/null               || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  echo "PATH: $as_dir"
done

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_sep=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
      ac_arg=`echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) ac_configure_args0="$ac_configure_args0 '$ac_arg'" ;;
    2)
      ac_configure_args1="$ac_configure_args1 '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      ac_configure_args="$ac_configure_args$ac_sep'$ac_arg'"
      # Get rid of the leading space.
      ac_sep=" "
      ;;
    esac
  done
done
$as_unset ac_configure_args0 || test "${ac_configure_args0+set}" != set || { ac_configure_args0=; export ac_configure_args0; }
$as_unset ac_configure_args1 || test "${ac_configure_args1+set}" != set || { ac_configure_args1=; export ac_configure_args1; }

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Be sure not to use single quotes in there, as some shells,
# such as our DU 5.0 friend, will then `close' the trap.
trap 'exit_status=$?
  # Save into config.log some information that might help in debugging.
  {
    echo

    cat <<\_ASBOX
## ---------------- ##
## Cache variables. ##
## ---------------- ##
_ASBOX
    echo
    # The following way of writing the cache mishandles newlines in values,
{
  (set) 2>&1 |
    case `(ac_space='"'"' '"'"'; set | grep ac_space) 2>&1` in
    *ac_space=\ *)
      sed -n \
	"s/'"'"'/'"'"'\\\\'"'"''"'"'/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='"'"'\\2'"'"'/p"
      ;;
    *)
      sed -n \
	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
      ;;
    esac;
}
    echo

    cat <<\_ASBOX
## ----------------- ##
## Output variables. ##
## ----------------- ##
_ASBOX
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=$`echo $ac_var`
      echo "$ac_var='"'"'$ac_val'"'"'"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      cat <<\_ASBOX
## ------------- ##
## Output files. ##
## ------------- ##
_ASBOX
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=$`echo $ac_var`
	echo "$ac_var='"'"'$ac_val'"'"'"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      cat <<\_ASBOX
## ----------- ##
## confdefs.h. ##
## ----------- ##
_ASBOX
      echo
      sed "/^$/d" confdefs.h | sort
      echo
    fi
    test "$ac_signal" != 0 &&
      echo "$as_me: caught signal $ac_signal"
    echo "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core &&
  rm -rf conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
     ' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; { (exit 1); exit 1; }' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -rf conftest* confdefs.h
# AIX cpp loses on an empty file, so make sure it contains at least a newline.
echo >confdefs.h

# Predefined preprocessor variables.

cat >>confdefs.h <<_ACEOF
#define PACKAGE_NAME "$PACKAGE_NAME"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_VERSION "$PACKAGE_VERSION"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_STRING "$PACKAGE_STRING"
_ACEOF


cat >>confdefs.h <<_ACEOF
#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
_ACEOF


# Let the site file select an alternate cache file if it wants to.
# Prefer explicitly selected file to automatically selected ones.
if test -z "$CONFIG_SITE"; then
  if test "x$prefix" != xNONE; then
    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
  else
    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
  fi
fi
for ac_site_file in $CONFIG_SITE; do
  if test -r "$ac_site_file"; then
    { echo "$as_me:$LINENO: loading site script $ac_site_file" >&5
echo "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file"
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special
  # files actually), so we avoid doing that.
  if test -f "$cache_file"; then
    { echo "$as_me:$LINENO: loading cache $cache_file" >&5
echo "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . $cache_file;;
      *)                      . ./$cache_file;;
    esac
  fi
else
  { echo "$as_me:$LINENO: creating cache $cache_file" >&5
echo "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in `(set) 2>&1 |
	       sed -n 's/^ac_env_\([a-zA-Z_0-9]*\)_set=.*/\1/p'`; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val="\$ac_cv_env_${ac_var}_value"
  eval ac_new_val="\$ac_env_${ac_var}_value"
  case $ac_old_set,$ac_new_set in
    set,)
      { echo "$as_me:$LINENO: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { echo "$as_me:$LINENO: error: \`$ac_var' was not set in the previous run" >&5
echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	{ echo "$as_me:$LINENO: error: \`$ac_var' has changed since the previous run:" >&5
echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	{ echo "$as_me:$LINENO:   former value:  $ac_old_val" >&5
echo "$as_me:   former value:  $ac_old_val" >&2;}
	{ echo "$as_me:$LINENO:   current value: $ac_new_val" >&5
echo "$as_me:   current value: $ac_new_val" >&2;}
	ac_cache_corrupted=:
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?\"\']*)
      ac_arg=$ac_var=`echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) ac_configure_args="$ac_configure_args '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { echo "$as_me:$LINENO: error: changes in the environment can compromise the build" >&5
echo "$as_me: error: changes in the environment can compromise the build" >&2;}
  { { echo "$as_me:$LINENO: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&5
echo "$as_me: error: run \`make distclean' and/or \`rm $cache_file' and start over" >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu




























##  require autoconf version 2.59
##  type "autoconf --version" to find out what version you have.




##
## Any error/warning/note/remark messages that need to be turned off
## globally should be appended to this variable.  This should only be
## done if the message is pervasive and has been determined to be
## benign.  WOFF_NUMBERS should be a 'space' delimited list of numbers.
## Eg: '123 124 155'
##
WOFF_NUMBERS=

## Clean up files that could be left around if configure was
## interrupted (by control-c, ^c) because I do not know how to add
## cleanup to the builtin AC function that uses the 'trap' command.
rm -rf ii_files sedscript



##  set the location of config.guess, config.sub, and install.sh
ac_aux_dir=
for ac_dir in scripts $srcdir/scripts; do
  if test -f $ac_dir/install-sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install-sh -c"
    break
  elif test -f $ac_dir/install.sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install.sh -c"
    break
  elif test -f $ac_dir/shtool; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/shtool install -c"
    break
  fi
done
if test -z "$ac_aux_dir"; then
  { { echo "$as_me:$LINENO: error: cannot find install-sh or install.sh in scripts $srcdir/scripts" >&5
echo "$as_me: error: cannot find install-sh or install.sh in scripts $srcdir/scripts" >&2;}
   { (exit 1); exit 1; }; }
fi
ac_config_guess="$SHELL $ac_aux_dir/config.guess"
ac_config_sub="$SHELL $ac_aux_dir/config.sub"
ac_configure="$SHELL $ac_aux_dir/configure" # This should be Cygnus configure.


## If user tried to configure in the src directory, this will block it.
if test -f Makefile.in; then
   { echo "$as_me:$LINENO: WARNING: DO NOT CONFIGURE IN THE SRC DIRECTORY:" >&5
echo "$as_me: WARNING: DO NOT CONFIGURE IN THE SRC DIRECTORY:" >&2;}
   { echo "$as_me:$LINENO: WARNING: ___ Try creating a dir such as: ../archBITSdebug" >&5
echo "$as_me: WARNING: ___ Try creating a dir such as: ../archBITSdebug" >&2;}
   { echo "$as_me:$LINENO: WARNING: ___ eg: ../sgi32opt or ../linux32debug" >&5
echo "$as_me: WARNING: ___ eg: ../sgi32opt or ../linux32debug" >&2;}
   { echo "$as_me:$LINENO: WARNING: ___ cd to that dir and then type: ../src/configure" >&5
echo "$as_me: WARNING: ___ cd to that dir and then type: ../src/configure" >&2;}
   rm -f config.log config.cache confdefs.h conftest.out
   { { echo "$as_me:$LINENO: error: Tried to configure in src directory." >&5
echo "$as_me: error: Tried to configure in src directory." >&2;}
   { (exit 1); exit 1; }; }
fi

# make sure these variables are considered precious.


  sci_arg_var_list="$sci_arg_var_list CC"



  sci_arg_var_list="$sci_arg_var_list CFLAGS"



  sci_arg_var_list="$sci_arg_var_list LDFLAGS"



  sci_arg_var_list="$sci_arg_var_list CXX"



  sci_arg_var_list="$sci_arg_var_list CPPFLAGS"



  sci_arg_var_list="$sci_arg_var_list CXXFLAGS"



  sci_arg_var_list="$sci_arg_var_list F77"



  sci_arg_var_list="$sci_arg_var_list FFLAGS"



  sci_arg_var_list="$sci_arg_var_list CPP"



  sci_arg_var_list="$sci_arg_var_list CXXCPP"


#Get the host now since it is needed for the Package Checks.
# Make sure we can run config.sub.
$ac_config_sub sun4 >/dev/null 2>&1 ||
  { { echo "$as_me:$LINENO: error: cannot run $ac_config_sub" >&5
echo "$as_me: error: cannot run $ac_config_sub" >&2;}
   { (exit 1); exit 1; }; }

echo "$as_me:$LINENO: checking build system type" >&5
echo $ECHO_N "checking build system type... $ECHO_C" >&6
if test "${ac_cv_build+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_build_alias=$build_alias
test -z "$ac_cv_build_alias" &&
  ac_cv_build_alias=`$ac_config_guess`
test -z "$ac_cv_build_alias" &&
  { { echo "$as_me:$LINENO: error: cannot guess build type; you must specify one" >&5
echo "$as_me: error: cannot guess build type; you must specify one" >&2;}
   { (exit 1); exit 1; }; }
ac_cv_build=`$ac_config_sub $ac_cv_build_alias` ||
  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_build_alias failed" >&5
echo "$as_me: error: $ac_config_sub $ac_cv_build_alias failed" >&2;}
   { (exit 1); exit 1; }; }

fi
echo "$as_me:$LINENO: result: $ac_cv_build" >&5
echo "${ECHO_T}$ac_cv_build" >&6
build=$ac_cv_build
build_cpu=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
build_vendor=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
build_os=`echo $ac_cv_build | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`


echo "$as_me:$LINENO: checking host system type" >&5
echo $ECHO_N "checking host system type... $ECHO_C" >&6
if test "${ac_cv_host+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_host_alias=$host_alias
test -z "$ac_cv_host_alias" &&
  ac_cv_host_alias=$ac_cv_build_alias
ac_cv_host=`$ac_config_sub $ac_cv_host_alias` ||
  { { echo "$as_me:$LINENO: error: $ac_config_sub $ac_cv_host_alias failed" >&5
echo "$as_me: error: $ac_config_sub $ac_cv_host_alias failed" >&2;}
   { (exit 1); exit 1; }; }

fi
echo "$as_me:$LINENO: result: $ac_cv_host" >&5
echo "${ECHO_T}$ac_cv_host" >&6
host=$ac_cv_host
host_cpu=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
host_vendor=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
host_os=`echo $ac_cv_host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`



# Initialize variables that control what optional checks to make
## all the optional tests we have... These get set in the macro
# SCI_SET_PACKAGE_CHECKS found in aclocal.m4.  Each package sets the
# checks that they


  # This list is alphabetical.  Please keep it that way.
  sci_required_audio=no
  sci_required_awk=no
  sci_required_babel=no
  sci_required_blas=no
  sci_required_crypto=no
  sci_required_dataflow=yes
  sci_required_etags=no
  sci_required_exc=no
  sci_required_fortran=no
  sci_required_hdf5=no
  sci_required_glew=no
  sci_required_globus=no
  sci_required_glui=no
  sci_required_glut=no
  sci_required_gmake=no
  sci_required_gzopen=no
  sci_required_hypre=no
  sci_required_insight=no
  sci_required_java=no
  sci_required_jpeg=no
  sci_required_lapack=no
  sci_required_mdsplus=no
  sci_required_mpi=no
  sci_required_netsolve=no
  sci_required_oogl=no
  sci_required_perl=no
  sci_required_petsc=no
  sci_required_ptolemyII=no
  sci_required_qt=no
  sci_required_ruby=no
  sci_required_ssl=no
  sci_required_tau=no
  sci_required_teem=no
  sci_required_thirdparty=no
  sci_required_tiff=no
  sci_required_tools=no
  sci_required_unipetc=no
  sci_required_uuid=no
  sci_required_vdt=no
  sci_required_vtk=no

  plume_checked=no




## find the machine's pwd, and don't use the sh built-in pwd.
## sh pwd can print the wd with symbolic links depending on
## how you got to that directory, and thus has the potential
## to print different pwd's for the same wd, and change files
## like sci_defs.h

sci_pwd=""
for my_pwd in pwd /bin/pwd /usr/bin/pwd; do
  mkdir -p pwd_test
  ln -s pwd_test pwd_temp

  cd pwd_test
  pwd_1=`$my_pwd`

  cd ../pwd_temp
  pwd_2=`$my_pwd`

  cd ..
  rm -fr pwd_test pwd_temp
  if test "$pwd_1" = "$pwd_2"; then
    sci_pwd=$my_pwd
    alias pwd="$my_pwd"
    break
  fi
done
if test -z "$sci_pwd"; then
   { echo "$as_me:$LINENO: WARNING: \"Using unstable version of pwd\"" >&5
echo "$as_me: WARNING: \"Using unstable version of pwd\"" >&2;}
   sci_pwd=pwd
fi


##  initialize the recognized argument lists
sci_arg_with_list="--no-create --no-recursion"
sci_arg_enable_list=""

##  --------------------------------------------------------------------
##  ------------------  check for all arguments     --------------------
##  --------------------------------------------------------------------

##
##  Use the SCI_ARG_WITH and SCI_ARG_ENABLE macros to check for arguments
##



# Check whether --with-thirdparty or --without-thirdparty was given.
if test "${with_thirdparty+set}" = set; then
  withval="$with_thirdparty"
  thirdparty="$withval"
else
  thirdparty=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-thirdparty --without-thirdparty"
  if test -n "$thirdparty" -a ! -e "$thirdparty"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($thirdparty) specified for --with-thirdparty does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($thirdparty) specified for --with-thirdparty does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-blas or --without-blas was given.
if test "${with_blas+set}" = set; then
  withval="$with_blas"
  with_blas="$withval"
   sci_required_blas=yes
else
  with_blas=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-blas --without-blas"
  if test -n "$blas" -a ! -e "$blas"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($blas) specified for --with-blas does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($blas) specified for --with-blas does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-lapack or --without-lapack was given.
if test "${with_lapack+set}" = set; then
  withval="$with_lapack"
  with_lapack="$withval"
   sci_required_lapack=yes
else
  with_lapack=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-lapack --without-lapack"
  if test -n "$lapack" -a ! -e "$lapack"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($lapack) specified for --with-lapack does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($lapack) specified for --with-lapack does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-fortran or --without-fortran was given.
if test "${with_fortran+set}" = set; then
  withval="$with_fortran"
  with_fortran="$withval"
   sci_required_fortran=yes
else
  with_fortran=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-fortran --without-fortran"
  if test -n "$fortran" -a ! -e "$fortran"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($fortran) specified for --with-fortran does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($fortran) specified for --with-fortran does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-ptolemyII or --without-ptolemyII was given.
if test "${with_ptolemyII+set}" = set; then
  withval="$with_ptolemyII"
  with_ptolemyII="$withval"
   sci_required_ptolemyII=yes
else
  with_ptolemyII=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-ptolemyII --without-ptolemyII"
  if test -n "$ptolemyII" -a ! -e "$ptolemyII"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($ptolemyII) specified for --with-ptolemyII does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($ptolemyII) specified for --with-ptolemyII does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-java or --without-java was given.
if test "${with_java+set}" = set; then
  withval="$with_java"
  with_java="$withval"
   sci_required_java=yes
else
  with_java=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-java --without-java"
  if test -n "$java" -a ! -e "$java"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($java) specified for --with-java does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($java) specified for --with-java does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-mpi or --without-mpi was given.
if test "${with_mpi+set}" = set; then
  withval="$with_mpi"
  with_mpi="$withval"
   sci_required_mpi=yes
else
  with_mpi=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-mpi --without-mpi"
  if test -n "$mpi" -a ! -e "$mpi"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($mpi) specified for --with-mpi does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($mpi) specified for --with-mpi does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-mpiuni or --without-mpiuni was given.
if test "${with_mpiuni+set}" = set; then
  withval="$with_mpiuni"
  with_mpiuni="$withval"
   sci_required_mpiuni=yes
else
  with_mpiuni=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-mpiuni --without-mpiuni"
  if test -n "$mpiuni" -a ! -e "$mpiuni"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($mpiuni) specified for --with-mpiuni does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($mpiuni) specified for --with-mpiuni does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-hypre or --without-hypre was given.
if test "${with_hypre+set}" = set; then
  withval="$with_hypre"
  with_hypre="$withval"
   sci_required_hypre=yes
else
  with_hypre=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-hypre --without-hypre"
  if test -n "$hypre" -a ! -e "$hypre"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($hypre) specified for --with-hypre does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($hypre) specified for --with-hypre does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-netsolve or --without-netsolve was given.
if test "${with_netsolve+set}" = set; then
  withval="$with_netsolve"
  with_netsolve="$withval"
   sci_required_netsolve=yes
else
  with_netsolve=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-netsolve --without-netsolve"
  if test -n "$netsolve" -a ! -e "$netsolve"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($netsolve) specified for --with-netsolve does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($netsolve) specified for --with-netsolve does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-petsc or --without-petsc was given.
if test "${with_petsc+set}" = set; then
  withval="$with_petsc"
  with_petsc="$withval"
   sci_required_petsc=yes
else
  with_petsc=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-petsc --without-petsc"
  if test -n "$petsc" -a ! -e "$petsc"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($petsc) specified for --with-petsc does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($petsc) specified for --with-petsc does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-png or --without-png was given.
if test "${with_png+set}" = set; then
  withval="$with_png"
  with_png="$withval"
   sci_required_png=yes
else
  with_png=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-png --without-png"
  if test -n "$png" -a ! -e "$png"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($png) specified for --with-png does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($png) specified for --with-png does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-camal or --without-camal was given.
if test "${with_camal+set}" = set; then
  withval="$with_camal"
  with_camal="$withval"
   sci_required_camal=yes
else
  with_camal=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-camal --without-camal"
  if test -n "$camal" -a ! -e "$camal"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($camal) specified for --with-camal does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($camal) specified for --with-camal does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-magick or --without-magick was given.
if test "${with_magick+set}" = set; then
  withval="$with_magick"
  with_magick="$withval"
   sci_required_magick=yes
else
  with_magick=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-magick --without-magick"
  if test -n "$magick" -a ! -e "$magick"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($magick) specified for --with-magick does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($magick) specified for --with-magick does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-unipetsc or --without-unipetsc was given.
if test "${with_unipetsc+set}" = set; then
  withval="$with_unipetsc"
  with_unipetsc="$withval"
   sci_required_unipetsc=yes
else
  with_unipetsc=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-unipetsc --without-unipetsc"
  if test -n "$unipetsc" -a ! -e "$unipetsc"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($unipetsc) specified for --with-unipetsc does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($unipetsc) specified for --with-unipetsc does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-tau or --without-tau was given.
if test "${with_tau+set}" = set; then
  withval="$with_tau"
  with_tau="$withval"
   sci_required_tau=yes
else
  with_tau=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-tau --without-tau"
  if test -n "$tau" -a ! -e "$tau"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($tau) specified for --with-tau does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($tau) specified for --with-tau does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-unp or --without-unp was given.
if test "${with_unp+set}" = set; then
  withval="$with_unp"
  with_unp="$withval"
   sci_required_unp=yes
else
  with_unp=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-unp --without-unp"
  if test -n "$unp" -a ! -e "$unp"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($unp) specified for --with-unp does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($unp) specified for --with-unp does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-globus or --without-globus was given.
if test "${with_globus+set}" = set; then
  withval="$with_globus"
  with_globus="$withval"
   sci_required_globus=yes
   sci_required_ssl=yes
   sci_required_crypto=yes
else
  with_globus=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-globus --without-globus"
  if test -n "$globus" -a ! -e "$globus"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($globus) specified for --with-globus does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($globus) specified for --with-globus does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-crypto or --without-crypto was given.
if test "${with_crypto+set}" = set; then
  withval="$with_crypto"
  with_crypto="$withval"
   sci_required_crypto=yes
else
  with_crypto=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-crypto --without-crypto"
  if test -n "$crypto" -a ! -e "$crypto"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($crypto) specified for --with-crypto does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($crypto) specified for --with-crypto does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-ssl or --without-ssl was given.
if test "${with_ssl+set}" = set; then
  withval="$with_ssl"
  with_ssl="$withval"
   sci_required_ssl=yes
else
  with_ssl=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-ssl --without-ssl"
  if test -n "$ssl" -a ! -e "$ssl"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($ssl) specified for --with-ssl does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($ssl) specified for --with-ssl does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-insight or --without-insight was given.
if test "${with_insight+set}" = set; then
  withval="$with_insight"
  with_insight="$withval"
   sci_required_insight=yes
else
  with_insight=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-insight --without-insight"
  if test -n "$insight" -a ! -e "$insight"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($insight) specified for --with-insight does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($insight) specified for --with-insight does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-qt or --without-qt was given.
if test "${with_qt+set}" = set; then
  withval="$with_qt"
  with_qt="$withval"
   sci_required_qt=yes
else
  with_qt=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-qt --without-qt"
  if test -n "$qt" -a ! -e "$qt"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($qt) specified for --with-qt does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($qt) specified for --with-qt does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-ruby or --without-ruby was given.
if test "${with_ruby+set}" = set; then
  withval="$with_ruby"
  with_ruby="$withval"
   sci_required_ruby=yes
else
  with_ruby=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-ruby --without-ruby"
  if test -n "$ruby" -a ! -e "$ruby"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($ruby) specified for --with-ruby does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($ruby) specified for --with-ruby does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-tao or --without-tao was given.
if test "${with_tao+set}" = set; then
  withval="$with_tao"
  with_tao="$withval"
   sci_required_tao=yes
else
  with_tao=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-tao --without-tao"
  if test -n "$tao" -a ! -e "$tao"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($tao) specified for --with-tao does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($tao) specified for --with-tao does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-vtk or --without-vtk was given.
if test "${with_vtk+set}" = set; then
  withval="$with_vtk"
  with_vtk="$withval"
   sci_required_vtk=yes
else
  with_vtk=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-vtk --without-vtk"
  if test -n "$vtk" -a ! -e "$vtk"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($vtk) specified for --with-vtk does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($vtk) specified for --with-vtk does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-opengl or --without-opengl was given.
if test "${with_opengl+set}" = set; then
  withval="$with_opengl"
  with_opengl="$withval"
   sci_required_opengl=yes
else
  with_opengl=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-opengl --without-opengl"
  if test -n "$opengl" -a ! -e "$opengl"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($opengl) specified for --with-opengl does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($opengl) specified for --with-opengl does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-zlib or --without-zlib was given.
if test "${with_zlib+set}" = set; then
  withval="$with_zlib"
  with_zlib="$withval"
   sci_required_zlib=yes
else
  with_zlib=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-zlib --without-zlib"
  if test -n "$zlib" -a ! -e "$zlib"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($zlib) specified for --with-zlib does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($zlib) specified for --with-zlib does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-jpeg or --without-jpeg was given.
if test "${with_jpeg+set}" = set; then
  withval="$with_jpeg"
  with_jpeg="$withval"
   sci_required_jpeg=yes
else
  with_jpeg=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-jpeg --without-jpeg"
  if test -n "$jpeg" -a ! -e "$jpeg"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($jpeg) specified for --with-jpeg does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($jpeg) specified for --with-jpeg does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-tiff or --without-tiff was given.
if test "${with_tiff+set}" = set; then
  withval="$with_tiff"
  with_tiff="$withval"
   sci_required_tiff=yes
else
  with_tiff=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-tiff --without-tiff"
  if test -n "$tiff" -a ! -e "$tiff"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($tiff) specified for --with-tiff does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($tiff) specified for --with-tiff does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi





# Check whether --with-xalan or --without-xalan was given.
if test "${with_xalan+set}" = set; then
  withval="$with_xalan"
  with_xalan="$withval"
   sci_required_xalan=yes
else
  with_xalan=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-xalan --without-xalan"
  if test -n "$xalan" -a ! -e "$xalan"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($xalan) specified for --with-xalan does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($xalan) specified for --with-xalan does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi





# Check whether --with-mdsplus or --without-mdsplus was given.
if test "${with_mdsplus+set}" = set; then
  withval="$with_mdsplus"
  with_mdsplus="$withval"
   sci_required_mdsplus=yes
else
  with_mdsplus=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-mdsplus --without-mdsplus"
  if test -n "$mdsplus" -a ! -e "$mdsplus"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($mdsplus) specified for --with-mdsplus does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($mdsplus) specified for --with-mdsplus does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi





# Check whether --with-hdf5 or --without-hdf5 was given.
if test "${with_hdf5+set}" = set; then
  withval="$with_hdf5"
  with_hdf5="$withval"		      # with_hdf5 is the directory var
   sci_required_hdf5=yes
else
  # flag to check for the libs
  with_hdf5=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-hdf5 --without-hdf5"
  if test -n "$hdf5" -a ! -e "$hdf5"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($hdf5) specified for --with-hdf5 does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($hdf5) specified for --with-hdf5 does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi

		      # undefinded otherwise



# Check whether --with-glut or --without-glut was given.
if test "${with_glut+set}" = set; then
  withval="$with_glut"
  with_glut="$withval"
   sci_required_glut=yes
else
  with_glut=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-glut --without-glut"
  if test -n "$glut" -a ! -e "$glut"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($glut) specified for --with-glut does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($glut) specified for --with-glut does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-glui or --without-glui was given.
if test "${with_glui+set}" = set; then
  withval="$with_glui"
  with_glui="$withval"
   sci_required_glui=yes
else
  with_glui=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-glui --without-glui"
  if test -n "$glui" -a ! -e "$glui"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($glui) specified for --with-glui does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($glui) specified for --with-glui does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-oogl or --without-oogl was given.
if test "${with_oogl+set}" = set; then
  withval="$with_oogl"
  with_oogl="$withval"
   sci_required_oogl=yes
else
  with_oogl=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-oogl --without-oogl"
  if test -n "$oogl" -a ! -e "$oogl"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($oogl) specified for --with-oogl does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($oogl) specified for --with-oogl does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-glew or --without-glew was given.
if test "${with_glew+set}" = set; then
  withval="$with_glew"
  with_glew="$withval"
   sci_required_glew=yes
else
  with_glew=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-glew --without-glew"
  if test -n "$glew" -a ! -e "$glew"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($glew) specified for --with-glew does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($glew) specified for --with-glew does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-audio or --without-audio was given.
if test "${with_audio+set}" = set; then
  withval="$with_audio"
  with_audio="$withval"
   sci_required_audio=yes
else
  with_audio=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-audio --without-audio"
  if test -n "$audio" -a ! -e "$audio"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($audio) specified for --with-audio does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($audio) specified for --with-audio does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-freetype or --without-freetype was given.
if test "${with_freetype+set}" = set; then
  withval="$with_freetype"
  with_freetype="$withval"
   sci_required_freetype=yes
else
  with_freetype=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-freetype --without-freetype"
  if test -n "$freetype" -a ! -e "$freetype"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($freetype) specified for --with-freetype does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($freetype) specified for --with-freetype does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-ftgl or --without-ftgl was given.
if test "${with_ftgl+set}" = set; then
  withval="$with_ftgl"
  with_ftgl="$withval"
   sci_required_ftgl=yes
   sci_required_freetype=yes
else
  with_ftgl=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-ftgl --without-ftgl"
  if test -n "$ftgl" -a ! -e "$ftgl"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($ftgl) specified for --with-ftgl does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($ftgl) specified for --with-ftgl does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-uuid or --without-uuid was given.
if test "${with_uuid+set}" = set; then
  withval="$with_uuid"
  sci_required_uuid=yes
else
  with_uuid=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-uuid --without-uuid"
  if test -n "$uuid" -a ! -e "$uuid"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($uuid) specified for --with-uuid does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($uuid) specified for --with-uuid does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-boost or --without-boost was given.
if test "${with_boost+set}" = set; then
  withval="$with_boost"
  with_boost="$withval"
   sci_required_boost=yes
else
  with_boost=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-boost --without-boost"
  if test -n "$boost" -a ! -e "$boost"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($boost) specified for --with-boost does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($boost) specified for --with-boost does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi




# Check whether --with-loki or --without-loki was given.
if test "${with_loki+set}" = set; then
  withval="$with_loki"
  with_loki="$withval"
   sci_required_loki=yes
else
  with_loki=""
fi;
  sci_arg_with_list="$sci_arg_with_list --with-loki --without-loki"
  if test -n "$loki" -a ! -e "$loki"; then
    { { echo "$as_me:$LINENO: error: The file or directory parameter ($loki) specified for --with-loki does not exist!  Please verify that the path and file are correct." >&5
echo "$as_me: error: The file or directory parameter ($loki) specified for --with-loki does not exist!  Please verify that the path and file are correct." >&2;}
   { (exit 1); exit 1; }; }
  fi






  # Check whether --enable-advanced-volume-rendering or --disable-advanced-volume-rendering was given.
if test "${enable_advanced_volume_rendering+set}" = set; then
  enableval="$enable_advanced_volume_rendering"
  avr="$enableval"
else
  avr="test"
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-advanced-volume-rendering --disable-advanced-volume-rendering"




  # Check whether --enable-advanced-volume-rendering or --disable-advanced-volume-rendering was given.
if test "${enable_advanced_volume_rendering+set}" = set; then
  enableval="$enable_advanced_volume_rendering"
  avr="$enableval"
else
  avr="test"
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-advanced-volume-rendering --disable-advanced-volume-rendering"


  # Check whether --enable-verbosity or --disable-verbosity was given.
if test "${enable_verbosity+set}" = set; then
  enableval="$enable_verbosity"
  debugging="yes"
else
  debugging="no"
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-verbosity --disable-verbosity"


  # Check whether --enable-threads or --disable-threads was given.
if test "${enable_threads+set}" = set; then
  enableval="$enable_threads"
  threads="$enableval"
else
  threads=${threads='unknown'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-threads --disable-threads"


  # Check whether --enable-debug or --disable-debug was given.
if test "${enable_debug+set}" = set; then
  enableval="$enable_debug"
  debug="$enableval"
else
  debug="no"
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-debug --disable-debug"


  # Check whether --enable-optimize or --disable-optimize was given.
if test "${enable_optimize+set}" = set; then
  enableval="$enable_optimize"
  optimize="$enableval"
else
  optimize=${optimize='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-optimize --disable-optimize"


  # Check whether --enable-64bit or --disable-64bit was given.
if test "${enable_64bit+set}" = set; then
  enableval="$enable_64bit"
  enable_64bit="$enableval"
else
  enable_64bit=$i{enable_64bit='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-64bit --disable-64bit"


  # Check whether --enable-32bit or --disable-32bit was given.
if test "${enable_32bit+set}" = set; then
  enableval="$enable_32bit"
  enable_32bit="$enableval"
else
  enable_32bit=$i{enable_32bit='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-32bit --disable-32bit"


  # Check whether --enable-output-avg-walltime or --disable-output-avg-walltime was given.
if test "${enable_output_avg_walltime+set}" = set; then
  enableval="$enable_output_avg_walltime"
  output_avg_walltime="$enableval"
else
  output_avg_walltime=${output_avg_walltime='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-output-avg-walltime --disable-output-avg-walltime"


  # Check whether --enable-perfex or --disable-perfex was given.
if test "${enable_perfex+set}" = set; then
  enableval="$enable_perfex"
  sci_required_perfex=yes
else
  sci_required_perfex=no
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-perfex --disable-perfex"


  # Check whether --enable-package or --disable-package was given.
if test "${enable_package+set}" = set; then
  enableval="$enable_package"
  package="$enableval"
else
  package=""
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-package --disable-package"


  # Check whether --enable-dataflow or --disable-dataflow was given.
if test "${enable_dataflow+set}" = set; then
  enableval="$enable_dataflow"
  sci_required_dataflow=no
else
  sci_required_dataflow=yes
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-dataflow --disable-dataflow"


  # Check whether --enable-exename or --disable-exename was given.
if test "${enable_exename+set}" = set; then
  enableval="$enable_exename"
  exename="$enableval"
else
  exename=${exename='default'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-exename --disable-exename"


  # Check whether --enable-largesos or --disable-largesos was given.
if test "${enable_largesos+set}" = set; then
  enableval="$enable_largesos"
  largesos="$enableval"
else
  largesos=${largesos='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-largesos --disable-largesos"


  # Check whether --enable-sci-malloc or --disable-sci-malloc was given.
if test "${enable_sci_malloc+set}" = set; then
  enableval="$enable_sci_malloc"
  enable_sci_malloc="$enableval"
else
  enable_sci_malloc=${enable_sci_malloc='yes'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-sci-malloc --disable-sci-malloc"


  # Check whether --enable-assertion-level or --disable-assertion-level was given.
if test "${enable_assertion_level+set}" = set; then
  enableval="$enable_assertion_level"
  enable_assertion_level="$enableval"
else
  enable_assertion_level=${enable_assertion_level=3}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-assertion-level --disable-assertion-level"


  # Check whether --enable-scinew-line-numbers or --disable-scinew-line-numbers was given.
if test "${enable_scinew_line_numbers+set}" = set; then
  enableval="$enable_scinew_line_numbers"
  enable_scinew_line_numbers="yes"
else
  enable_scinew_line_numbers="no"
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-scinew-line-numbers --disable-scinew-line-numbers"


  # Check whether --enable-throw-level or --disable-throw-level was given.
if test "${enable_throw_level+set}" = set; then
  enableval="$enable_throw_level"
  enable_throw_level="$enableval"
else
  enable_throw_level=${enable_throw_level=0}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-throw-level --disable-throw-level"


  # Check whether --enable-scirun2 or --disable-scirun2 was given.
if test "${enable_scirun2+set}" = set; then
  enableval="$enable_scirun2"
  enable_scirun2="$enableval"


eval pkg_SCIRun2=yes

case SCIRun2 in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package SCIRun2" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package SCIRun2" >&2;}
  ;;
esac



else
  enable_scirun2=${enable_scirun2='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-scirun2 --disable-scirun2"


  # Check whether --enable-plume or --disable-plume was given.
if test "${enable_plume+set}" = set; then
  enableval="$enable_plume"
  enable_plume="$enableval"


eval pkg_Plume=yes

case Plume in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package Plume" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package Plume" >&2;}
  ;;
esac



else
  enable_plume=${enable_plume='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-plume --disable-plume"


  # Check whether --enable-rath or --disable-rath was given.
if test "${enable_rath+set}" = set; then
  enableval="$enable_rath"
  enable_rpath="$enableval"
else
  enable_rpath=${enable_rpath='yes'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-rath --disable-rath"


  # Check whether --enable-chromium or --disable-chromium was given.
if test "${enable_chromium+set}" = set; then
  enableval="$enable_chromium"
  enable_chromium="$enableval"
else
  enable_chromium=${enable_chromium='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-chromium --disable-chromium"


  # Check whether --enable-ati-card-fix or --disable-ati-card-fix was given.
if test "${enable_ati_card_fix+set}" = set; then
  enableval="$enable_ati_card_fix"
  enable_ati_card_fix="$enableval"
else
  enable_ati_card_fix=${enable_ati_card_fix='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-ati-card-fix --disable-ati-card-fix"


  # Check whether --enable-no-dynamic-cast or --disable-no-dynamic-cast was given.
if test "${enable_no_dynamic_cast+set}" = set; then
  enableval="$enable_no_dynamic_cast"
  enable_no_dynamic_cast="$enableval"
else
  enable_no_dynamic_cast=${enable_no_dynamic_cast='no'}
fi;
  sci_arg_enable_list="$sci_arg_enable_list --enable-no-dynamic-cast --disable-no-dynamic-cast"



if test "$enable_rpath" = "no"; then
   { echo "$as_me:$LINENO: WARNING: \"You have removed the rpath flag from some libraries.\"" >&5
echo "$as_me: WARNING: \"You have removed the rpath flag from some libraries.\"" >&2;}
   { echo "$as_me:$LINENO: WARNING: \"This may have unpredictable affects.\"" >&5
echo "$as_me: WARNING: \"This may have unpredictable affects.\"" >&2;}
   { echo "$as_me:$LINENO: WARNING: \"Do not do this unless you really know what you are doing.\"" >&5
echo "$as_me: WARNING: \"Do not do this unless you really know what you are doing.\"" >&2;}
fi

if test "$enable_chromium" = "yes"; then
   DEF_CHROMIUM="#define HAVE_CHROMIUM 1"
fi

sci_defs_files="$sci_defs_files include/sci_defs/chromium_testdefs.h"

if test "$enable_ati_card_fix" = "yes"; then
   { echo "$as_me:$LINENO: WARNING: \"The ATI card hack is no longer controlled by configure.\"" >&5
echo "$as_me: WARNING: \"The ATI card hack is no longer controlled by configure.\"" >&2;}
   { echo "$as_me:$LINENO: WARNING: \"You can turn it on/off by setting the environment variable\"" >&5
echo "$as_me: WARNING: \"You can turn it on/off by setting the environment variable\"" >&2;}
   { echo "$as_me:$LINENO: WARNING: \"SCIRUN_DRAWARRAYS_DISABLE to true.  This can be done either\"" >&5
echo "$as_me: WARNING: \"SCIRUN_DRAWARRAYS_DISABLE to true.  This can be done either\"" >&2;}
   { { echo "$as_me:$LINENO: error: \"in your environment or in your .scirunrc file." >&5
echo "$as_me: error: \"in your environment or in your .scirunrc file." >&2;}
   { (exit 1); exit 1; }; }
fi

if test "$enable_no_dynamic_cast" = "yes"; then
   DEF_NO_DYNAMIC_CAST="#define NO_DYNAMIC_CAST 1"
fi

sci_defs_files="$sci_defs_files include/sci_defs/dynamic_cast_testdefs.h"

##  --------------------------------------------------------------------
##  Save off the arguments to configure, being careful to save
##  Package strings for later parsing.
##  --------------------------------------------------------------------

args=`echo "$*" | sed 's% %_%g'`
myargs=`echo $args | sed 's%\^% %g'`
# Setting IFS breaks standard autoconf tests.
# It thinks we are cross compiling. Don't set it.
#IFS=' '

## Cut off the /configure from the configure command (eg: ../src/configure)
path_to_src=`echo $0 | sed 's/\/configure//'`


BUILD_DATAFLOW="$sci_required_dataflow"
if test "$sci_required_dataflow"; then
  DEF_BUILD_DATAFLOW="#define BUILD_DATAFLOW"
fi


sci_defs_files="$sci_defs_files include/sci_defs/dataflow_testdefs.h"


if test "$package" = "all"; then
  echo "$as_me:$LINENO: result: Enabling all the packages in your SCIRun/src/Packages directory." >&5
echo "${ECHO_T}Enabling all the packages in your SCIRun/src/Packages directory." >&6
  _sci_tmp=`ls $path_to_src/Packages`
  package=`echo $_sci_tmp | sed 's/CVS //g'`
  echo "$as_me:$LINENO: result: Packages include $package" >&5
echo "${ECHO_T}Packages include $package" >&6
fi
PACKAGE_DIRS=""
for i in $package; do
   PACKAGE_DIRS=$PACKAGE_DIRS" Packages/$i"
   # set the package dependent checks


eval pkg_$i=yes

case $i in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package $i" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package $i" >&2;}
  ;;
esac


done

if test "$pkg_BioPSE" = "yes" || test "$pkg_Insight" = "yes" ||
   test "$pgk_MatlabInterface" = "yes" || test "$pkg_DataIO" = "yes" ||
   test "$pkg_Fusion" = "yes"; then
   if test "$pkg_Teem" != "yes"; then
      { echo "$as_me:$LINENO: WARNING: User did not enable the Teem package but it is required by" >&5
echo "$as_me: WARNING: User did not enable the Teem package but it is required by" >&2;}
      { echo "$as_me:$LINENO: WARNING: an enabled package(s)... adding it to the list of requested packages." >&5
echo "$as_me: WARNING: an enabled package(s)... adding it to the list of requested packages." >&2;}
      PACKAGE_DIRS=$PACKAGE_DIRS" Packages/Teem"
      # set the package dependent checks


eval pkg_Teem=yes

case Teem in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package Teem" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package Teem" >&2;}
  ;;
esac


      package="$package Teem"
   fi
fi

if test "$pkg_Fusion" = "yes"; then
  if test "$pkg_DataIO" != "yes"; then
      { echo "$as_me:$LINENO: WARNING: User did not enable the DataIO package but it is required by" >&5
echo "$as_me: WARNING: User did not enable the DataIO package but it is required by" >&2;}
      { echo "$as_me:$LINENO: WARNING: the Fusion package... adding it to the list of requested packages." >&5
echo "$as_me: WARNING: the Fusion package... adding it to the list of requested packages." >&2;}
      PACKAGE_DIRS=$PACKAGE_DIRS" Packages/DataIO"
      # set the package dependent checks


eval pkg_DataIO=yes

case DataIO in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package DataIO" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package DataIO" >&2;}
  ;;
esac


      package="$package DataIO"
  fi
fi

if test "$pkg_Ptolemy" = "yes"; then
  # check versions?
  # check --with-ptolemyII
  if test -z "$with_ptolemyII"; then
    { echo "$as_me:$LINENO: WARNING: Ptolemy II is required by the Ptolemy package." >&5
echo "$as_me: WARNING: Ptolemy II is required by the Ptolemy package." >&2;}
    { { echo "$as_me:$LINENO: error: Use the --with-ptolemyII=DIR option to set the installation directory." >&5
echo "$as_me: error: Use the --with-ptolemyII=DIR option to set the installation directory." >&2;}
   { (exit 1); exit 1; }; }
  fi


eval pkg_Ptolemy=yes

case Ptolemy in
  BioPSE)
  ;;
  Teem)
    sci_required_teem=yes
  ;;
  VDT)
    sci_required_vdt=yes
  ;;
  MatlabInterface)
  ;;
  Uintah)
    sci_required_fortran=yes
    sci_required_mpi=yes
    sci_required_blas=yes
    sci_required_lapack=yes
    sci_required_perl=yes
    sci_required_tools=yes
  ;;
  Fusion)
  ;;
  PCS)
  ;;
  DataIO)
    sci_required_mdsplus=yes
    sci_required_hdf5=yes
  ;;
  SCIRun2)
    sci_required_babel=yes
    sci_required_uuid=yes
  ;;
  Plume)
    if test "$plume_checked" = "no"; then
      plume_checked=yes
      sci_required_loki=yes
      sci_required_boost=yes
      sci_required_qt=no
      enable_scirun2=yes
      sci_required_uuid=yes

      if test "$package" != "all"; then
        package="$package Plume"
      fi
   fi
  ;;
  Remote)
    sci_required_jpeg=yes
    sci_required_tiff=yes
  ;;
  NetSolve)
    sci_required_netsolve=yes
  ;;
  rtrt)
    sci_required_glut=yes
    sci_required_glui=yes
    sci_required_oogl=yes
    sci_required_audio=yes
    sci_required_teem=yes
  ;;
  Insight)
    sci_required_insight=yes
    sci_required_xalan=yes
  ;;
  Volume)
    case $host in
     *-darwin*)
	sci_required_glew=yes
	;;
     *)
        ;;
    esac
  ;;
  Ptolemy)
    sci_required_ptolemyII=yes
    sci_required_java=yes
  ;;
  *)
    { echo "$as_me:$LINENO: WARNING: In aclocal.m4: No known dependencies for Package Ptolemy" >&5
echo "$as_me: WARNING: In aclocal.m4: No known dependencies for Package Ptolemy" >&2;}
  ;;
esac


fi

# Make sure the Package directories exist.
#   Do an 'ls' of all files in the Packages directory and then grep for the
#   package in this list.  (We used to just do a "test -d $package", but on
#   a case-insensitive Mac file system, this fails.)

packages_list=`ls $path_to_src/Packages`
for i in $package; do
   found_package=`echo $packages_list | grep $i`
   if test -z "$found_package"; then
      if test "$i" = "TEEM"; then
         { echo "$as_me:$LINENO: WARNING: Try using 'Teem' instead of 'TEEM'" >&5
echo "$as_me: WARNING: Try using 'Teem' instead of 'TEEM'" >&2;}
      fi
      { { echo "$as_me:$LINENO: error: Package '$i' does not exist (in $path_to_src/Packages/)!" >&5
echo "$as_me: error: Package '$i' does not exist (in $path_to_src/Packages/)!" >&2;}
   { (exit 1); exit 1; }; }
   fi
done

if test "$sci_required_unipetsc" = "yes"; then
   sci_required_blas=yes
   sci_required_lapack=yes
fi

# Set the collaborative vars.
if test "$pkg_CollabVis" = "yes"; then
  DEF_COLLAB_VIS="#define HAVE_COLLAB_VIS 1"
  HAVE_COLLAB_VIS="yes"
fi



sci_defs_files="$sci_defs_files include/sci_defs/collab_vis_testdefs.h"

LOAD_PACKAGE="SCIRun"
for i in $package; do
 LOAD_PACKAGE=$LOAD_PACKAGE,"$i"
done
sci_defs_files="$sci_defs_files include/sci_defs/environment_testdefs.h"

DIRNAME_IS=`type dirname | sed 's%^.* %%'`
BASENAME_IS=`type dirname | sed 's%^.* %%'`

# link this way.
LDRUN_PREFIX="-Wl,-rpath -Wl,"

## We use both of these in a number of spots, so I think this is fair:
## (Eventually we could write our own if necessary...)
if test -z "$DIRNAME_IS" -o -z "$BASENAME_IS"; then
  { { echo "$as_me:$LINENO: error: dirname or basename not found.  Configure script won't work!" >&5
echo "$as_me: error: dirname or basename not found.  Configure script won't work!" >&2;}
   { (exit 1); exit 1; }; }
fi

## -- Can't use uni-petsc and Uintah (as Uintah needs full mpi petsc).

if test "$pkg_Uintah" = "yes" && test "$with_unipetsc"; then
   { { echo "$as_me:$LINENO: error: You have requested both Uintah and Uni-Petsc.  However Uintah requires MPI petsc." >&5
echo "$as_me: error: You have requested both Uintah and Uni-Petsc.  However Uintah requires MPI petsc." >&2;}
   { (exit 1); exit 1; }; }
fi

##  --------------------------------------------------------------------
##  -----  determine host type, processor count and OS version  --------
##  --------------------------------------------------------------------

echo
IS_OSX="no"
IS_WIN="no"
unset NUM_CPUS
case $host in
  *-irix*)

    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="6.5"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for OS version 6.5" >&5
echo $ECHO_N "checking for OS version 6.5... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "configure: error: wrong Irix version. exiting.;exit"; then
      _SCI_NOTCORRECT_='configure: error: wrong Irix version. exiting.;exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"
    ;;
  *linux*)

    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.2.17"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for OS version 2.2.17" >&5
echo $ECHO_N "checking for OS version 2.2.17... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "configure: error: wrong Linux version. exiting.;exit"; then
      _SCI_NOTCORRECT_='configure: error: wrong Linux version. exiting.;exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
    ;;
  *-dec*)
    NUM_CPUS=4
    ;;
  *-darwin*)

    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for OS version 7.1" >&5
echo $ECHO_N "checking for OS version 7.1... $ECHO_C" >&6

    if test "NEED_OSX_HACK=no"; then
      _SCI_CORRECT_='NEED_OSX_HACK=no'
    fi

    if test "NEED_OSX_HACK=yes"; then
      _SCI_NOTCORRECT_='NEED_OSX_HACK=yes'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    NUM_CPUS=2
    IS_OSX="yes"
    ;;
  *-aix*)
    NUM_CPUS=4
    ;;
  *-mingw*)
    NUM_CPUS=2
    IS_WIN="yes"
    ;;
  *-pc*)
    echo
    { { echo "$as_me:$LINENO: error: Currently Windows only handles mingw.  See install instructions" >&5
echo "$as_me: error: Currently Windows only handles mingw.  See install instructions" >&2;}
   { (exit 1); exit 1; }; }
    ;;
  *)
    echo
    { echo "$as_me:$LINENO: WARNING: !!!!!! This system is untested - You are on your own !!!!!!" >&5
echo "$as_me: WARNING: !!!!!! This system is untested - You are on your own !!!!!!" >&2;}
    echo
    NUM_CPUS="1"
    ;;
esac



sci_defs_files="$sci_defs_files include/sci_defs/osx_testdefs.h"

echo "$as_me:$LINENO: checking physical processor count" >&5
echo $ECHO_N "checking physical processor count... $ECHO_C" >&6
if test -z "$NUM_CPUS"; then
  NUM_CPUS="1"
fi
echo "$as_me:$LINENO: result: $NUM_CPUS" >&5
echo "${ECHO_T}$NUM_CPUS" >&6


##  ----------  determine if this is a 32 or 64 bit machine
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


MY_TEMP=$CPPFLAGS

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="gcc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
echo "${ECHO_T}$ac_ct_CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  CC=$ac_ct_CC
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="cc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
echo "${ECHO_T}$ac_ct_CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  CC=$ac_ct_CC
else
  CC="$ac_cv_prog_CC"
fi

fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
  fi
fi
fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
echo "${ECHO_T}$ac_ct_CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$ac_ct_CC" && break
done

  CC=$ac_ct_CC
fi

fi


test -z "$CC" && { { echo "$as_me:$LINENO: error: no acceptable C compiler found in \$PATH
See \`config.log' for more details." >&5
echo "$as_me: error: no acceptable C compiler found in \$PATH
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }

# Provide some information about the compiler.
echo "$as_me:$LINENO:" \
     "checking for C compiler version" >&5
ac_compiler=`set X $ac_compile; echo $2`
{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
  (eval $ac_compiler --version </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
  (eval $ac_compiler -v </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
  (eval $ac_compiler -V </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }

cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.exe b.out"
# Try to create an executable without -o first, disregard a.out.
# It will help us diagnose broken compilers, and finding out an intuition
# of exeext.
echo "$as_me:$LINENO: checking for C compiler default output file name" >&5
echo $ECHO_N "checking for C compiler default output file name... $ECHO_C" >&6
ac_link_default=`echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`
if { (eval echo "$as_me:$LINENO: \"$ac_link_default\"") >&5
  (eval $ac_link_default) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; then
  # Find the output, starting from the most likely.  This scheme is
# not robust to junk in `.', hence go to wildcards (a.*) only as a last
# resort.

# Be careful to initialize this variable, since it used to be cached.
# Otherwise an old cache value of `no' led to `EXEEXT = no' in a Makefile.
ac_cv_exeext=
# b.out is created by i960 compilers.
for ac_file in a_out.exe a.exe conftest.exe a.out conftest a.* conftest.* b.out
do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj )
	;;
    conftest.$ac_ext )
	# This is the source file.
	;;
    [ab].out )
	# We found the default executable, but exeext='' is most
	# certainly right.
	break;;
    *.* )
	ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	# FIXME: I believe we export ac_cv_exeext for Libtool,
	# but it would be cool to find out if it's true.  Does anybody
	# maintain Libtool? --akim.
	export ac_cv_exeext
	break;;
    * )
	break;;
  esac
done
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { echo "$as_me:$LINENO: error: C compiler cannot create executables
See \`config.log' for more details." >&5
echo "$as_me: error: C compiler cannot create executables
See \`config.log' for more details." >&2;}
   { (exit 77); exit 77; }; }
fi

ac_exeext=$ac_cv_exeext
echo "$as_me:$LINENO: result: $ac_file" >&5
echo "${ECHO_T}$ac_file" >&6

# Check the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
echo "$as_me:$LINENO: checking whether the C compiler works" >&5
echo $ECHO_N "checking whether the C compiler works... $ECHO_C" >&6
# FIXME: These cross compiler hacks should be removed for Autoconf 3.0
# If not cross compiling, check that we can run a simple program.
if test "$cross_compiling" != yes; then
  if { ac_try='./$ac_file'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
    cross_compiling=no
  else
    if test "$cross_compiling" = maybe; then
	cross_compiling=yes
    else
	{ { echo "$as_me:$LINENO: error: cannot run C compiled programs.
If you meant to cross compile, use \`--host'.
See \`config.log' for more details." >&5
echo "$as_me: error: cannot run C compiled programs.
If you meant to cross compile, use \`--host'.
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
    fi
  fi
fi
echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

rm -f a.out a.exe conftest$ac_cv_exeext b.out
ac_clean_files=$ac_clean_files_save
# Check the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
echo "$as_me:$LINENO: checking whether we are cross compiling" >&5
echo $ECHO_N "checking whether we are cross compiling... $ECHO_C" >&6
echo "$as_me:$LINENO: result: $cross_compiling" >&5
echo "${ECHO_T}$cross_compiling" >&6

echo "$as_me:$LINENO: checking for suffix of executables" >&5
echo $ECHO_N "checking for suffix of executables... $ECHO_C" >&6
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; then
  # If both `conftest.exe' and `conftest' are `present' (well, observable)
# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
# work properly (i.e., refer to `conftest.exe'), while it won't with
# `rm'.
for ac_file in conftest.exe conftest conftest.*; do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.o | *.obj ) ;;
    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	  export ac_cv_exeext
	  break;;
    * ) break;;
  esac
done
else
  { { echo "$as_me:$LINENO: error: cannot compute suffix of executables: cannot compile and link
See \`config.log' for more details." >&5
echo "$as_me: error: cannot compute suffix of executables: cannot compile and link
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

rm -f conftest$ac_cv_exeext
echo "$as_me:$LINENO: result: $ac_cv_exeext" >&5
echo "${ECHO_T}$ac_cv_exeext" >&6

rm -f conftest.$ac_ext
EXEEXT=$ac_cv_exeext
ac_exeext=$EXEEXT
echo "$as_me:$LINENO: checking for suffix of object files" >&5
echo $ECHO_N "checking for suffix of object files... $ECHO_C" >&6
if test "${ac_cv_objext+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; then
  for ac_file in `(ls conftest.o conftest.obj; ls conftest.*) 2>/dev/null`; do
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg ) ;;
    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
       break;;
  esac
done
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { echo "$as_me:$LINENO: error: cannot compute suffix of object files: cannot compile
See \`config.log' for more details." >&5
echo "$as_me: error: cannot compute suffix of object files: cannot compile
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

rm -f conftest.$ac_cv_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: $ac_cv_objext" >&5
echo "${ECHO_T}$ac_cv_objext" >&6
OBJEXT=$ac_cv_objext
ac_objext=$OBJEXT
echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6
if test "${ac_cv_c_compiler_gnu+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_compiler_gnu=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_compiler_gnu=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6
GCC=`test $ac_compiler_gnu = yes && echo yes`
ac_test_CFLAGS=${CFLAGS+set}
ac_save_CFLAGS=$CFLAGS
CFLAGS="-g"
echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6
if test "${ac_cv_prog_cc_g+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_cc_g=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_prog_cc_g=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
echo "${ECHO_T}$ac_cv_prog_cc_g" >&6
if test "$ac_test_CFLAGS" = set; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
echo "$as_me:$LINENO: checking for $CC option to accept ANSI C" >&5
echo $ECHO_N "checking for $CC option to accept ANSI C... $ECHO_C" >&6
if test "${ac_cv_prog_cc_stdc+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_prog_cc_stdc=no
ac_save_CC=$CC
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std1 is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std1.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
# Don't try gcc -ansi; that turns off useful extensions and
# breaks some systems' header files.
# AIX			-qlanglvl=ansi
# Ultrix and OSF/1	-std1
# HP-UX 10.20 and later	-Ae
# HP-UX older versions	-Aa -D_HPUX_SOURCE
# SVR4			-Xc -D__EXTENSIONS__
for ac_arg in "" -qlanglvl=ansi -std1 -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_cc_stdc=$ac_arg
break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext
done
rm -f conftest.$ac_ext conftest.$ac_objext
CC=$ac_save_CC

fi

case "x$ac_cv_prog_cc_stdc" in
  x|xno)
    echo "$as_me:$LINENO: result: none needed" >&5
echo "${ECHO_T}none needed" >&6 ;;
  *)
    echo "$as_me:$LINENO: result: $ac_cv_prog_cc_stdc" >&5
echo "${ECHO_T}$ac_cv_prog_cc_stdc" >&6
    CC="$CC $ac_cv_prog_cc_stdc" ;;
esac

# Some people use a C++ compiler to compile C.  Since we use `exit',
# in C++ we need to declare it.  In case someone uses the same compiler
# for both compiling C and C++ we need to have the C++ compiler decide
# the declaration of exit, since it's the most demanding environment.
cat >conftest.$ac_ext <<_ACEOF
#ifndef __cplusplus
  choke me
#endif
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  for ac_declaration in \
   '' \
   'extern "C" void std::exit (int) throw (); using std::exit;' \
   'extern "C" void std::exit (int); using std::exit;' \
   'extern "C" void exit (int) throw ();' \
   'extern "C" void exit (int);' \
   'void exit (int);'
do
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
#include <stdlib.h>
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

continue
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
done
rm -f conftest*
if test -n "$ac_declaration"; then
  echo '#ifdef __cplusplus' >>confdefs.h
  echo $ac_declaration      >>confdefs.h
  echo '#endif'             >>confdefs.h
fi

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
echo $ECHO_N "checking how to run the C preprocessor... $ECHO_C" >&6
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if test "${ac_cv_prog_CPP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
echo "$as_me:$LINENO: result: $CPP" >&5
echo "${ECHO_T}$CPP" >&6
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  :
else
  { { echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&5
echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


echo "$as_me:$LINENO: checking for egrep" >&5
echo $ECHO_N "checking for egrep... $ECHO_C" >&6
if test "${ac_cv_prog_egrep+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if echo a | (grep -E '(a|b)') >/dev/null 2>&1
    then ac_cv_prog_egrep='grep -E'
    else ac_cv_prog_egrep='egrep'
    fi
fi
echo "$as_me:$LINENO: result: $ac_cv_prog_egrep" >&5
echo "${ECHO_T}$ac_cv_prog_egrep" >&6
 EGREP=$ac_cv_prog_egrep


echo "$as_me:$LINENO: checking for ANSI C header files" >&5
echo $ECHO_N "checking for ANSI C header files... $ECHO_C" >&6
if test "${ac_cv_header_stdc+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <float.h>

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_header_stdc=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_header_stdc=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext

if test $ac_cv_header_stdc = yes; then
  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <string.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "memchr" >/dev/null 2>&1; then
  :
else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <stdlib.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "free" >/dev/null 2>&1; then
  :
else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
  if test "$cross_compiling" = yes; then
  :
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ctype.h>
#if ((' ' & 0x0FF) == 0x020)
# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
#else
# define ISLOWER(c) \
		   (('a' <= (c) && (c) <= 'i') \
		     || ('j' <= (c) && (c) <= 'r') \
		     || ('s' <= (c) && (c) <= 'z'))
# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
#endif

#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
int
main ()
{
  int i;
  for (i = 0; i < 256; i++)
    if (XOR (islower (i), ISLOWER (i))
	|| toupper (i) != TOUPPER (i))
      exit(2);
  exit (0);
}
_ACEOF
rm -f conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  :
else
  echo "$as_me: program exited with status $ac_status" >&5
echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

( exit $ac_status )
ac_cv_header_stdc=no
fi
rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
fi
fi
fi
echo "$as_me:$LINENO: result: $ac_cv_header_stdc" >&5
echo "${ECHO_T}$ac_cv_header_stdc" >&6
if test $ac_cv_header_stdc = yes; then

cat >>confdefs.h <<\_ACEOF
#define STDC_HEADERS 1
_ACEOF

fi

# On IRIX 5.3, sys/types and inttypes.h are conflicting.









for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
		  inttypes.h stdint.h unistd.h
do
as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $ac_header" >&5
echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default

#include <$ac_header>
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  eval "$as_ac_Header=yes"
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

eval "$as_ac_Header=no"
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6
if test `eval echo '${'$as_ac_Header'}'` = yes; then
  cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done


echo "$as_me:$LINENO: checking for void*" >&5
echo $ECHO_N "checking for void*... $ECHO_C" >&6
if test "${ac_cv_type_voidp+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
if ((void* *) 0)
  return 0;
if (sizeof (void*))
  return 0;
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_type_voidp=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_type_voidp=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: $ac_cv_type_voidp" >&5
echo "${ECHO_T}$ac_cv_type_voidp" >&6

echo "$as_me:$LINENO: checking size of void*" >&5
echo $ECHO_N "checking size of void*... $ECHO_C" >&6
if test "${ac_cv_sizeof_voidp+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test "$ac_cv_type_voidp" = yes; then
  # The cast to unsigned long works around a bug in the HP C Compiler
  # version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
  # declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
  # This bug is HP SR number 8606223364.
  if test "$cross_compiling" = yes; then
  # Depending upon the size, compute the lo and hi bounds.
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(((long) (sizeof (void*))) >= 0)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_lo=0 ac_mid=0
  while :; do
    cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(((long) (sizeof (void*))) <= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_hi=$ac_mid; break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_lo=`expr $ac_mid + 1`
		    if test $ac_lo -le $ac_mid; then
		      ac_lo= ac_hi=
		      break
		    fi
		    ac_mid=`expr 2 '*' $ac_mid + 1`
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  done
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(((long) (sizeof (void*))) < 0)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_hi=-1 ac_mid=-1
  while :; do
    cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(((long) (sizeof (void*))) >= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_lo=$ac_mid; break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_hi=`expr '(' $ac_mid ')' - 1`
		       if test $ac_mid -le $ac_hi; then
			 ac_lo= ac_hi=
			 break
		       fi
		       ac_mid=`expr 2 '*' $ac_mid`
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  done
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_lo= ac_hi=
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
# Binary search between lo and hi bounds.
while test "x$ac_lo" != "x$ac_hi"; do
  ac_mid=`expr '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo`
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
int
main ()
{
static int test_array [1 - 2 * !(((long) (sizeof (void*))) <= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_hi=$ac_mid
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_lo=`expr '(' $ac_mid ')' + 1`
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
done
case $ac_lo in
?*) ac_cv_sizeof_voidp=$ac_lo;;
'') { { echo "$as_me:$LINENO: error: cannot compute sizeof (void*), 77
See \`config.log' for more details." >&5
echo "$as_me: error: cannot compute sizeof (void*), 77
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; } ;;
esac
else
  if test "$cross_compiling" = yes; then
  { { echo "$as_me:$LINENO: error: cannot run test program while cross compiling
See \`config.log' for more details." >&5
echo "$as_me: error: cannot run test program while cross compiling
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
long longval () { return (long) (sizeof (void*)); }
unsigned long ulongval () { return (long) (sizeof (void*)); }
#include <stdio.h>
#include <stdlib.h>
int
main ()
{

  FILE *f = fopen ("conftest.val", "w");
  if (! f)
    exit (1);
  if (((long) (sizeof (void*))) < 0)
    {
      long i = longval ();
      if (i != ((long) (sizeof (void*))))
	exit (1);
      fprintf (f, "%ld\n", i);
    }
  else
    {
      unsigned long i = ulongval ();
      if (i != ((long) (sizeof (void*))))
	exit (1);
      fprintf (f, "%lu\n", i);
    }
  exit (ferror (f) || fclose (f) != 0);

  ;
  return 0;
}
_ACEOF
rm -f conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } && { ac_try='./conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_sizeof_voidp=`cat conftest.val`
else
  echo "$as_me: program exited with status $ac_status" >&5
echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

( exit $ac_status )
{ { echo "$as_me:$LINENO: error: cannot compute sizeof (void*), 77
See \`config.log' for more details." >&5
echo "$as_me: error: cannot compute sizeof (void*), 77
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi
rm -f core *.core gmon.out bb.out conftest$ac_exeext conftest.$ac_objext conftest.$ac_ext
fi
fi
rm -f conftest.val
else
  ac_cv_sizeof_voidp=0
fi
fi
echo "$as_me:$LINENO: result: $ac_cv_sizeof_voidp" >&5
echo "${ECHO_T}$ac_cv_sizeof_voidp" >&6
cat >>confdefs.h <<_ACEOF
#define SIZEOF_VOIDP $ac_cv_sizeof_voidp
_ACEOF



case $ac_cv_sizeof_voidp in
 8)
  NBITS=64
  ;;
 4)
  NBITS=32
  ;;
 *)

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: This machine has some strange sizeof(void*): $ac_cv_sizeof_void_p.
  Usually this means that your LD_LIBRARY_PATH is set incorrectly for the
  compiler you are using.  To verify that this is the problem you will need
  to copy the C++  program from the end of the config.log file and run the
  compile command which is just before it in config.log.  Run the executable
  and see what error message you get. You can also just fix your
  LD_LIBRARY_PATH if you know what is wrong with it.
  Exiting due to size of void* problem! Read above warnings!" >&5
echo "$as_me: error: This machine has some strange sizeof(void*): $ac_cv_sizeof_void_p.
  Usually this means that your LD_LIBRARY_PATH is set incorrectly for the
  compiler you are using.  To verify that this is the problem you will need
  to copy the C++  program from the end of the config.log file and run the
  compile command which is just before it in config.log.  Run the executable
  and see what error message you get. You can also just fix your
  LD_LIBRARY_PATH if you know what is wrong with it.
  Exiting due to size of void* problem! Read above warnings!" >&2;}
   { (exit 1); exit 1; }; }

  ;;
esac

# the next two lines were moved to a later stage to allow us to change this default based on --enable-32/64bit
#AC_SUBST(NBITS)
#sci_defs_files="$sci_defs_files include/sci_defs/bits_testdefs.h"

## --------------

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


if test "$CC" = ""; then
  # Apparently AC_PROG_CC will set CFLAGS to "-O2 -g" if you don't specify
  # its value first, so...
  CFLAGS=$CFLAGS

  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  for ac_prog in cc gcc
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  echo "$as_me:$LINENO: result: $CC" >&5
echo "${ECHO_T}$CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cc gcc
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_CC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  echo "$as_me:$LINENO: result: $ac_ct_CC" >&5
echo "${ECHO_T}$ac_ct_CC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$ac_ct_CC" && break
done

  CC=$ac_ct_CC
fi


test -z "$CC" && { { echo "$as_me:$LINENO: error: no acceptable C compiler found in \$PATH
See \`config.log' for more details." >&5
echo "$as_me: error: no acceptable C compiler found in \$PATH
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }

# Provide some information about the compiler.
echo "$as_me:$LINENO:" \
     "checking for C compiler version" >&5
ac_compiler=`set X $ac_compile; echo $2`
{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
  (eval $ac_compiler --version </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
  (eval $ac_compiler -v </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
  (eval $ac_compiler -V </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }

echo "$as_me:$LINENO: checking whether we are using the GNU C compiler" >&5
echo $ECHO_N "checking whether we are using the GNU C compiler... $ECHO_C" >&6
if test "${ac_cv_c_compiler_gnu+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_compiler_gnu=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_compiler_gnu=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
echo "$as_me:$LINENO: result: $ac_cv_c_compiler_gnu" >&5
echo "${ECHO_T}$ac_cv_c_compiler_gnu" >&6
GCC=`test $ac_compiler_gnu = yes && echo yes`
ac_test_CFLAGS=${CFLAGS+set}
ac_save_CFLAGS=$CFLAGS
CFLAGS="-g"
echo "$as_me:$LINENO: checking whether $CC accepts -g" >&5
echo $ECHO_N "checking whether $CC accepts -g... $ECHO_C" >&6
if test "${ac_cv_prog_cc_g+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_cc_g=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_prog_cc_g=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: $ac_cv_prog_cc_g" >&5
echo "${ECHO_T}$ac_cv_prog_cc_g" >&6
if test "$ac_test_CFLAGS" = set; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
echo "$as_me:$LINENO: checking for $CC option to accept ANSI C" >&5
echo $ECHO_N "checking for $CC option to accept ANSI C... $ECHO_C" >&6
if test "${ac_cv_prog_cc_stdc+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_cv_prog_cc_stdc=no
ac_save_CC=$CC
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std1 is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std1.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
# Don't try gcc -ansi; that turns off useful extensions and
# breaks some systems' header files.
# AIX			-qlanglvl=ansi
# Ultrix and OSF/1	-std1
# HP-UX 10.20 and later	-Ae
# HP-UX older versions	-Aa -D_HPUX_SOURCE
# SVR4			-Xc -D__EXTENSIONS__
for ac_arg in "" -qlanglvl=ansi -std1 -Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_cc_stdc=$ac_arg
break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext
done
rm -f conftest.$ac_ext conftest.$ac_objext
CC=$ac_save_CC

fi

case "x$ac_cv_prog_cc_stdc" in
  x|xno)
    echo "$as_me:$LINENO: result: none needed" >&5
echo "${ECHO_T}none needed" >&6 ;;
  *)
    echo "$as_me:$LINENO: result: $ac_cv_prog_cc_stdc" >&5
echo "${ECHO_T}$ac_cv_prog_cc_stdc" >&6
    CC="$CC $ac_cv_prog_cc_stdc" ;;
esac

# Some people use a C++ compiler to compile C.  Since we use `exit',
# in C++ we need to declare it.  In case someone uses the same compiler
# for both compiling C and C++ we need to have the C++ compiler decide
# the declaration of exit, since it's the most demanding environment.
cat >conftest.$ac_ext <<_ACEOF
#ifndef __cplusplus
  choke me
#endif
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  for ac_declaration in \
   '' \
   'extern "C" void std::exit (int) throw (); using std::exit;' \
   'extern "C" void std::exit (int); using std::exit;' \
   'extern "C" void exit (int) throw ();' \
   'extern "C" void exit (int);' \
   'void exit (int);'
do
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
#include <stdlib.h>
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

continue
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
done
rm -f conftest*
if test -n "$ac_declaration"; then
  echo '#ifdef __cplusplus' >>confdefs.h
  echo $ac_declaration      >>confdefs.h
  echo '#endif'             >>confdefs.h
fi

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


  case "$host" in
     *-irix*)
        { echo "$as_me:$LINENO: WARNING: Configure script only allows SGI compilers on IRIX." >&5
echo "$as_me: WARNING: Configure script only allows SGI compilers on IRIX." >&2;}
        { echo "$as_me:$LINENO: WARNING: If this is a problem email scirun-users@sci.utah.edu." >&5
echo "$as_me: WARNING: If this is a problem email scirun-users@sci.utah.edu." >&2;}

        if test $CC != cc; then
           { { echo "$as_me:$LINENO: error: Configure did not find the 'cc' SGI C compiler." >&5
echo "$as_me: error: Configure did not find the 'cc' SGI C compiler." >&2;}
   { (exit 1); exit 1; }; }
        fi
	;;
     *)
        #qwerty
        # Check to see if cc is actually gcc
        is_gcc=`$CC --version | grep -i gcc`
        if test "$is_gcc"; then
           if test -f "`which gcc`"; then
              msg="Note, found 'cc' which is actually 'gcc', so"
              { echo "$as_me:$LINENO: WARNING: $msg" >&5
echo "$as_me: WARNING: $msg" >&2;}
              { echo "$as_me:$LINENO: WARNING: we will use 'gcc' for clarity." >&5
echo "$as_me: WARNING: we will use 'gcc' for clarity." >&2;}
              CC=gcc
           fi
        fi

        ;;
  esac
  { echo "$as_me:$LINENO: WARNING: C compiler not specified with 'CC' environment variable.\
              Using default... $CC" >&5
echo "$as_me: WARNING: C compiler not specified with 'CC' environment variable.\
              Using default... $CC" >&2;}
fi



if test "$CXX" = ""; then

  case "$host" in
     *-darwin*)
	CXX=c++
	;;
     *)
	# Apparently AC_PROG_CXX will set CXXFLAGS to "-O2 -g" if you don't specify
        # its value first, so...
        CXXFLAGS=$CXXFLAGS
        ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
if test -n "$ac_tool_prefix"; then
  for ac_prog in $CCC CC g++ c++
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_CXX="$ac_tool_prefix$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  echo "$as_me:$LINENO: result: $CXX" >&5
echo "${ECHO_T}$CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    test -n "$CXX" && break
  done
fi
if test -z "$CXX"; then
  ac_ct_CXX=$CXX
  for ac_prog in $CCC CC g++ c++
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_CXX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_CXX"; then
  ac_cv_prog_ac_ct_CXX="$ac_ct_CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_CXX="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_CXX=$ac_cv_prog_ac_ct_CXX
if test -n "$ac_ct_CXX"; then
  echo "$as_me:$LINENO: result: $ac_ct_CXX" >&5
echo "${ECHO_T}$ac_ct_CXX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$ac_ct_CXX" && break
done
test -n "$ac_ct_CXX" || ac_ct_CXX="g++"

  CXX=$ac_ct_CXX
fi


# Provide some information about the compiler.
echo "$as_me:$LINENO:" \
     "checking for C++ compiler version" >&5
ac_compiler=`set X $ac_compile; echo $2`
{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
  (eval $ac_compiler --version </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
  (eval $ac_compiler -v </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
  (eval $ac_compiler -V </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }

echo "$as_me:$LINENO: checking whether we are using the GNU C++ compiler" >&5
echo $ECHO_N "checking whether we are using the GNU C++ compiler... $ECHO_C" >&6
if test "${ac_cv_cxx_compiler_gnu+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_compiler_gnu=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_compiler_gnu=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_cxx_compiler_gnu=$ac_compiler_gnu

fi
echo "$as_me:$LINENO: result: $ac_cv_cxx_compiler_gnu" >&5
echo "${ECHO_T}$ac_cv_cxx_compiler_gnu" >&6
GXX=`test $ac_compiler_gnu = yes && echo yes`
ac_test_CXXFLAGS=${CXXFLAGS+set}
ac_save_CXXFLAGS=$CXXFLAGS
CXXFLAGS="-g"
echo "$as_me:$LINENO: checking whether $CXX accepts -g" >&5
echo $ECHO_N "checking whether $CXX accepts -g... $ECHO_C" >&6
if test "${ac_cv_prog_cxx_g+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_cxx_g=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_prog_cxx_g=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
echo "$as_me:$LINENO: result: $ac_cv_prog_cxx_g" >&5
echo "${ECHO_T}$ac_cv_prog_cxx_g" >&6
if test "$ac_test_CXXFLAGS" = set; then
  CXXFLAGS=$ac_save_CXXFLAGS
elif test $ac_cv_prog_cxx_g = yes; then
  if test "$GXX" = yes; then
    CXXFLAGS="-g -O2"
  else
    CXXFLAGS="-g"
  fi
else
  if test "$GXX" = yes; then
    CXXFLAGS="-O2"
  else
    CXXFLAGS=
  fi
fi
for ac_declaration in \
   '' \
   'extern "C" void std::exit (int) throw (); using std::exit;' \
   'extern "C" void std::exit (int); using std::exit;' \
   'extern "C" void exit (int) throw ();' \
   'extern "C" void exit (int);' \
   'void exit (int);'
do
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
#include <stdlib.h>
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

continue
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_declaration
int
main ()
{
exit (42);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  break
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
done
rm -f conftest*
if test -n "$ac_declaration"; then
  echo '#ifdef __cplusplus' >>confdefs.h
  echo $ac_declaration      >>confdefs.h
  echo '#endif'             >>confdefs.h
fi

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

        { echo "$as_me:$LINENO: WARNING: C++ compiler not specified with 'CXX' environment variable.\
	         Using default... $CXX" >&5
echo "$as_me: WARNING: C++ compiler not specified with 'CXX' environment variable.\
	         Using default... $CXX" >&2;}
        ;;
  esac
fi


if test "$F77" = ""; then
  ac_ext=f
ac_compile='$F77 -c $FFLAGS conftest.$ac_ext >&5'
ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_f77_compiler_gnu
if test -n "$ac_tool_prefix"; then
  for ac_prog in g77 f77 xlf frt pgf77 fort77 fl32 af77 f90 xlf90 pgf90 epcf90 f95 fort xlf95 ifc efc pgf95 lf95 gfortran
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_F77+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$F77"; then
  ac_cv_prog_F77="$F77" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_F77="$ac_tool_prefix$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
F77=$ac_cv_prog_F77
if test -n "$F77"; then
  echo "$as_me:$LINENO: result: $F77" >&5
echo "${ECHO_T}$F77" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    test -n "$F77" && break
  done
fi
if test -z "$F77"; then
  ac_ct_F77=$F77
  for ac_prog in g77 f77 xlf frt pgf77 fort77 fl32 af77 f90 xlf90 pgf90 epcf90 f95 fort xlf95 ifc efc pgf95 lf95 gfortran
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ac_ct_F77+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ac_ct_F77"; then
  ac_cv_prog_ac_ct_F77="$ac_ct_F77" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ac_ct_F77="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ac_ct_F77=$ac_cv_prog_ac_ct_F77
if test -n "$ac_ct_F77"; then
  echo "$as_me:$LINENO: result: $ac_ct_F77" >&5
echo "${ECHO_T}$ac_ct_F77" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$ac_ct_F77" && break
done

  F77=$ac_ct_F77
fi


# Provide some information about the compiler.
echo "$as_me:6627:" \
     "checking for Fortran 77 compiler version" >&5
ac_compiler=`set X $ac_compile; echo $2`
{ (eval echo "$as_me:$LINENO: \"$ac_compiler --version </dev/null >&5\"") >&5
  (eval $ac_compiler --version </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -v </dev/null >&5\"") >&5
  (eval $ac_compiler -v </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
{ (eval echo "$as_me:$LINENO: \"$ac_compiler -V </dev/null >&5\"") >&5
  (eval $ac_compiler -V </dev/null >&5) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
rm -f a.out

# If we don't use `.F' as extension, the preprocessor is not run on the
# input file.  (Note that this only needs to work for GNU compilers.)
ac_save_ext=$ac_ext
ac_ext=F
echo "$as_me:$LINENO: checking whether we are using the GNU Fortran 77 compiler" >&5
echo $ECHO_N "checking whether we are using the GNU Fortran 77 compiler... $ECHO_C" >&6
if test "${ac_cv_f77_compiler_gnu+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  cat >conftest.$ac_ext <<_ACEOF
      program main
#ifndef __GNUC__
       choke me
#endif

      end
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_f77_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_compiler_gnu=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_compiler_gnu=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_f77_compiler_gnu=$ac_compiler_gnu

fi
echo "$as_me:$LINENO: result: $ac_cv_f77_compiler_gnu" >&5
echo "${ECHO_T}$ac_cv_f77_compiler_gnu" >&6
ac_ext=$ac_save_ext
ac_test_FFLAGS=${FFLAGS+set}
ac_save_FFLAGS=$FFLAGS
FFLAGS=
echo "$as_me:$LINENO: checking whether $F77 accepts -g" >&5
echo $ECHO_N "checking whether $F77 accepts -g... $ECHO_C" >&6
if test "${ac_cv_prog_f77_g+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  FFLAGS=-g
cat >conftest.$ac_ext <<_ACEOF
      program main

      end
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_f77_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_f77_g=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_prog_f77_g=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext

fi
echo "$as_me:$LINENO: result: $ac_cv_prog_f77_g" >&5
echo "${ECHO_T}$ac_cv_prog_f77_g" >&6
if test "$ac_test_FFLAGS" = set; then
  FFLAGS=$ac_save_FFLAGS
elif test $ac_cv_prog_f77_g = yes; then
  if test "x$ac_cv_f77_compiler_gnu" = xyes; then
    FFLAGS="-g -O2"
  else
    FFLAGS="-g"
  fi
else
  if test "x$ac_cv_f77_compiler_gnu" = xyes; then
    FFLAGS="-O2"
  else
    FFLAGS=
  fi
fi

G77=`test $ac_compiler_gnu = yes && echo yes`
ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

  { echo "$as_me:$LINENO: WARNING: Fortran compiler not specified with 'F77' environment variable. Using default... $F77" >&5
echo "$as_me: WARNING: Fortran compiler not specified with 'F77' environment variable. Using default... $F77" >&2;}
fi

# Most fortran compilers need an "_" for C function names.
# Some have strange underscore needs.  This flag is used in the
# Packages/Uintah/tools/fspec.pl.in file to generate the correct
# cname of the fortran function.
FORTRAN_UNDERSCORE=end

CC_REALLY_IS=`type $CC | sed 's%^.* %%'`
# Going to look for "as", "ld", etc in this dir:
COMPILER_DIR=`dirname $CC_REALLY_IS`

## MAKE_PARALLELISM is used to tell the compiler how many cpus to use
## when linking.  1 is usually a good number to use per link,
## espcially for smaller number of cpu machines.  I think 4 is
## sufficient for even nirvana.
if test $NUM_CPUS -le 2 ; then
  MAKE_PARALLELISM=1
else
  if test $NUM_CPUS -le 8 ; then
    MAKE_PARALLELISM=2
  else
    MAKE_PARALLELISM=8
  fi
fi

echo "$as_me:$LINENO: checking target build word length" >&5
echo $ECHO_N "checking target build word length... $ECHO_C" >&6
if test "$enable_64bit" = "yes"; then
  echo "$as_me:$LINENO: result: 64 bits" >&5
echo "${ECHO_T}64 bits" >&6
  if test "$enable_32bit" = "yes"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Both 64 and 32 bit compiles specified." >&5
echo "$as_me: error: Both 64 and 32 bit compiles specified." >&2;}
   { (exit 1); exit 1; }; }

  fi
else
  enable_32bit="yes"
  echo "$as_me:$LINENO: result: 32 bits" >&5
echo "${ECHO_T}32 bits" >&6
fi

##  --------------------------------------------------------------------
##  ----------------------  set variable defaults  ---------------------
##  --------------------------------------------------------------------

##
##  DO NOT "hardcode" ANY libraries (i.e. no -l or -L or -I allowed).
##

if test "$IS_WIN" = "yes"; then
  TIME_IMPL=Time_win32.cc
else
  TIME_IMPL=Time_unix.cc
fi
TEMPLATE_TAG=
TEMPLATE_BOX="<>"
case $host in
     *-darwin*)
	SO_OR_ARCHIVE_EXTENSION=dylib
	if test "$enable_sci_malloc" = "yes"; then
	   { echo "$as_me:$LINENO: WARNING: sci_malloc does not work under mac osx. use -enable-sci-malloc=force" >&5
echo "$as_me: WARNING: sci_malloc does not work under mac osx. use -enable-sci-malloc=force" >&2;}
	   { echo "$as_me:$LINENO: WARNING: sci-malloc disabled" >&5
echo "$as_me: WARNING: sci-malloc disabled" >&2;}
	   enable_sci_malloc="no"
        elif test "$enable_sci_malloc" = "force"; then
	   enable_sci_malloc="yes"
        fi
	;;

     *-aix*)
        # On AIX, doesn't automatically generate .so's.  Make .a's and then
        # later we will make .so's from them.
	SO_OR_ARCHIVE_EXTENSION=a
	;;
     *-pc-mingw*)
        SO_OR_ARCHIVE_EXTENSION=dll
        ;;
     *)
	SO_OR_ARCHIVE_EXTENSION=so
        ;;
esac

ASSERTION_LEVEL="$enable_assertion_level"
THROW_LEVEL="$enable_throw_level"
extra_cflags="";

if test "$output_avg_walltime" != "no"; then
  extra_cflags="-DOUTPUT_AVG_ELAPSED_WALLTIME ${extra_cflags}"
fi

if test "$exename" = "default"; then
  EXENAME=scirun
else
  EXENAME=$exename
fi

LARGESOS=$largesos

if test "$enable_sci_malloc" = "yes"; then
  DEF_MALLOC=""
else
  DEF_MALLOC="#define DISABLE_SCI_MALLOC 1"
fi

if test "$enable_scinew_line_numbers" = "yes"; then
  DEF_MALLOC_LINENUMBERS="#define USE_TAG_LINENUM 1"
else
  DEF_MALLOC_LINENUMBERS=""
fi












sci_defs_files="$sci_defs_files include/sci_defs/malloc_testdefs.h"



sci_defs_files="$sci_defs_files include/sci_defs/error_testdefs.h"

#########################################################################

##  ----------------------------------------------------------------------
##  ----------------  set host specific build tools  ---------------------
##  ----------------------------------------------------------------------

echo "$as_me:$LINENO: checking whether debug was enabled" >&5
echo $ECHO_N "checking whether debug was enabled... $ECHO_C" >&6
OGL_ERR_MACRO=""
if test "$debug" = "no"; then
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
elif test "$debug" = "yes"; then
  OGL_ERR_MACRO="#define OGL_DBG 1"
  extra_cflags="-g ${extra_cflags}"
  echo "$as_me:$LINENO: result: yes (-g) " >&5
echo "${ECHO_T}yes (-g) " >&6
else
  OGL_ERR_MACRO="#define OGL_DBG 1"
  extra_cflags="$debug ${extra_cflags}"
  echo "$as_me:$LINENO: result: yes ($debug) " >&5
echo "${ECHO_T}yes ($debug) " >&6
fi



echo "$as_me:$LINENO: checking whether optimize was enabled" >&5
echo $ECHO_N "checking whether optimize was enabled... $ECHO_C" >&6
if test "$optimize" = "no"; then
  if test "$debug" = "no"; then
    # neither debug nor optimize specified, DEFAULT TO: optimized
    extra_cflags="-O2 ${extra_cflags}"
    echo "$as_me:$LINENO: result: no (default to -O2) " >&5
echo "${ECHO_T}no (default to -O2) " >&6
  else
    # Debug mode specified
    extra_cflags="${no_optimize_flag} ${extra_cflags}"
    # extra_fflags WILL ONLY BE USED WITH g77
    extra_fflags="-ffortran-bounds-check"
    echo "$as_me:$LINENO: result: no (${no_optimize_flag}) " >&5
echo "${ECHO_T}no (${no_optimize_flag}) " >&6
  fi
elif test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}"
  echo "$as_me:$LINENO: result: yes (-O2) " >&5
echo "${ECHO_T}yes (-O2) " >&6
else
  extra_cflags="$optimize ${extra_cflags}"
  echo "$as_me:$LINENO: result: yes ($optimize) " >&5
echo "${ECHO_T}yes ($optimize) " >&6
fi

if test "$sci_required_perfex" = "yes"; then
  extra_cflags="-DUSE_PERFEX_COUNTERS ${extra_cflags}"
fi

if test ! -e "`type $CC | sed 's%^.* %%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Could not find the specified C compiler ($CC)" >&5
echo "$as_me: error: Could not find the specified C compiler ($CC)" >&2;}
   { (exit 1); exit 1; }; }

fi
if test ! -e "`type $CXX | sed 's%^.* %%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Could not find the specified C++ compiler (CC)" >&5
echo "$as_me: error: Could not find the specified C++ compiler (CC)" >&2;}
   { (exit 1); exit 1; }; }

fi

if test $sci_required_fortran = "yes"; then
  if test ! -e "`type $F77 | sed 's%^.* %%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Could not find the specified Fortran compiler ($F77)" >&5
echo "$as_me: error: Could not find the specified Fortran compiler ($F77)" >&2;}
   { (exit 1); exit 1; }; }

  fi
fi

# This flag is for the windows compiler - so it can generate correct
# SHARE flags.
WIN_DLLFLAGS=""

case $host in
  *-irix*)
    ac_objext=o

    # Check for the use of the 7.4 compiler (so that we can turn off
    # some extra warnings.)

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.4"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CXX\` version 7.4" >&5
echo $ECHO_N "checking for \`basename $CXX\` version 7.4... $ECHO_C" >&6

    if test "USING_74=yes"; then
      _SCI_CORRECT_='USING_74=yes'
    fi

    if test ""; then
      _SCI_NOTCORRECT_=''
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    if test "$USING_74" = "yes"; then
      WOFF_NUMBERS="$WOFF_NUMBERS 3625 3649"
    fi


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CC\` version 7.3.1.1" >&5
echo $ECHO_N "checking for \`basename $CC\` version 7.3.1.1... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CXX\` version 7.3.1.1" >&5
echo $ECHO_N "checking for \`basename $CXX\` version 7.3.1.1... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    if test $sci_required_fortran = "yes"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $F77\` version 7.3.1.1" >&5
echo $ECHO_N "checking for \`basename $F77\` version 7.3.1.1... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $F77 version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $F77 version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    fi
    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_AS+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $AS in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_AS="$AS" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $COMPILER_DIR
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_AS="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  ;;
esac
fi
AS=$ac_cv_path_AS

if test -n "$AS"; then
  echo "$as_me:$LINENO: result: $AS" >&5
echo "${ECHO_T}$AS" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    if test -z "$AS"; then
      { echo "$as_me:$LINENO: WARNING: Could not find the MIPSPro linker (as)" >&5
echo "$as_me: WARNING: Could not find the MIPSPro linker (as)" >&2;}
      { { echo "$as_me:$LINENO: error: Looked in $COMPILER_DIR" >&5
echo "$as_me: error: Looked in $COMPILER_DIR" >&2;}
   { (exit 1); exit 1; }; }
    fi

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $AS\` version 7.3.1.1" >&5
echo $ECHO_N "checking for \`basename $AS\` version 7.3.1.1... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$AS -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_LD+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $LD in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_LD="$LD" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $COMPILER_DIR
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_LD="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  ;;
esac
fi
LD=$ac_cv_path_LD

if test -n "$LD"; then
  echo "$as_me:$LINENO: result: $LD" >&5
echo "${ECHO_T}$LD" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    if test -z "$LD"; then
      { echo "$as_me:$LINENO: WARNING: Could not find the MIPSPro linker (ld)" >&5
echo "$as_me: WARNING: Could not find the MIPSPro linker (ld)" >&2;}
      { { echo "$as_me:$LINENO: error: Looked in $COMPILER_DIR" >&5
echo "$as_me: error: Looked in $COMPILER_DIR" >&2;}
   { (exit 1); exit 1; }; }
    fi
    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure
    if test "$USING_74" = "yes"; then
        WOFF=" -woff 3625,3303,1047,1209,1110 -Wl,-woff,84 -woff 1342"
    else
        WOFF=" -woff 3303,1047,1209,1110 -Wl,-woff,84 -woff 1342"
    fi
    CPPFLAGS=" $WOFF -LANG:std"

    if test "$enable_64bit" = "yes"; then
      if test $NBITS = "32"; then
        BINARYFLAGS="-64 -mips4"
      fi
      NBITS=64
    else
      NBITS=32
      BINARYFLAGS="-n32 -mips4"
    fi

    FFLAGS="$BINARYFLAGS $extra_cflags"
    CFLAGS="-fullwarn -xansi -LANG:std $BINARYFLAGS $extra_cflags"
    CXXFLAGS="$CFLAGS"
    ASFLAGS="$BINARYFLAGS"
    SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(LIBDIR)/so_locations $(TLINK) ${SOFLAGS}"
    LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved"
    echo "$as_me:$LINENO: checking if ${CC} talks too much" >&5
echo $ECHO_N "checking if ${CC} talks too much... $ECHO_C" >&6
    touch wow.c
    if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
      echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6
      { echo "$as_me:$LINENO: WARNING: Using cc and CC wrappers in scripts/cc" >&5
echo "$as_me: WARNING: Using cc and CC wrappers in scripts/cc" >&2;}

      mkdir -p scripts
      sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
      sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
      chmod 755 scripts/cc scripts/CC

      # use the script to parse out license noise.  Must be absolute path so
      # dynamic compilation works.
      scripts_path=`cd scripts;pwd`
      CC="$scripts_path/cc"
      CXX="$scripts_path/CC"

    else
      echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
    fi
    rm -f wow.c wow.o
    ;;

  *-dec*)
    ac_objext=o

    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure
    CPPFLAGS=""
    FFLAGS="$extra_cflags $FFLAGS"
    CFLAGS="$extra_cflags -D__USE_STD_IOSTREAM $CFLAGS"
    CXXFLAGS="-model ansi $extra_cflags -D__USE_STD_IOSTREAM $CXXFLAGS"
    if test "$threads" != "none"; then
      CFLAGS="$CFLAGS -pthread"
      CXXFLAGS="$CXXFLAGS -pthread"
    fi
    SOFLAGS="-shared -warning_unresolved -update_registry \$(LIBDIR)/so_locations"
    LDFLAGS=""
    LDRUN_PREFIX="-rpath "
    REPOSITORY_FLAGS="-ptr"
    ;;

  *-aix*)

    ac_objext=o
    # Xlf does not need/want an "_" on the names of fortran
    # functions.  This var is used in fspec.pl.in in order not to
    # add the _ to the cname of the function.
    FORTRAN_UNDERSCORE=none

    # The IBM compilers don't use LDRUN_PREFIX.  By making it "-L"
    # the lib path will be repeated twice, but since the makefile
    # is set up assuming you need LDRUN_PREFIX, this is the easiest fix.
    LDRUN_PREFIX="-L"

    # xlc doesn't seem to like the <>...
    # KCC doesn't seem to like the <>...
    # g++ doesn't seem to like <> on the IBM either.
    TEMPLATE_BOX=

    case $CXX in
      *g++*)
         SOFLAGS="-shared ${SOFLAGS}"
         # bigtoc helps keep gcc from breaking...
         LDFLAGS="-Wl,-bbigtoc $LDFLAGS"
         ;;
      *)
#      for these compilers: *xlC*) or *KCC*)

         # Tell the compiler that the executable can use a
         # maximum of 1280MB (5*256MB) of memory per processor
         # rather than the default of 256MB.
         LDFLAGS="-bmaxdata:0x50000000 $LDFLAGS"

         if test "$enable_64bit" = "yes"; then
            BIT64FLAG=-q64
         fi
         CFLAGS="-qrtti=all $BIT64FLAG $CFLAGS"

         # Allows for better optimization and removes INFORMATION message.
         # I think this is necessary for both KCC and xlC...
         if test "$optimize" = "yes"; then
            CFLAGS="-qMAXMEM=4096 $CFLAGS"
         fi
         ;;
    esac

    CFLAGS="$CFLAGS $extra_cflags"

    case $F77 in
      *xlf*)
         FFLAGS="-WF,-D_AIX $extra_cflags $FFLAGS"
         ;;
      *)
         FFLAGS="$extra_cflags $FFLAGS"
         ;;
    esac

    CXXFLAGS="$CFLAGS"

    CPP="$CC -c"
    CXXCPP="$CXX -c"

    ;;
  *-darwin*)
    ac_objext=o
    LDRUN_PREFIX="-L"

#####
# GCC_TEST
#####

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="4.0.0"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CC\` version 4.0.0" >&5
echo $ECHO_N "checking for \`basename $CC\` version 4.0.0... $ECHO_C" >&6

    if test "GCC_VERSION=4.0"; then
      _SCI_CORRECT_='GCC_VERSION=4.0'
    fi

    if test ""; then
      _SCI_NOTCORRECT_=''
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


    if test "$GCC_VERSION" = "4.0"; then
       CFLAGS="$CFLAGS $extra_cflags -fno-common -dynamic -Wno-long-double "
    else
       CFLAGS="$CFLAGS $extra_cflags -fno-common -dynamic -Wno-long-double -fcoalesce-templates"
    fi
    CXXFLAGS="$CXXFLAGS $CFLAGS"

    if test $NEED_OSX_HACK = yes; then
	SOFLAGS="-dynamiclib -init __ZNSt8ios_base4InitC4Ev \${LIBDIR}/../osx/osx_init.o  ${SOFLAGS}"
        DEF_NEED_OSX_HACK="#define NEED_OSX_HACK 1"
        DEF_THREAD="#define SCI_PTHREAD 1"
    else
	SOFLAGS="-dynamiclib"
    fi
    case $F77 in
      *g77*)
         # extra_fflags has array checking if in debug mode.
         FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

         # put '_' at end and two '_'s if there is a '_' in name.
         # This flag is used by the genfspec.pl script in Uintah (generated
         # from fspec.pl.in).
         FORTRAN_UNDERSCORE=linux
         ;;
      *gfortran*)
         FFLAGS="$FFLAGS $extra_cflags"
         FORTRAN_UNDERSCORE=linux
         ;;
      *)
         FFLAGS="$FFLAGS $extra_cflags"
         ;;
    esac


    ;;

  *-pc-mingw*)
    ac_objext=o
    CFLAGS=" -Wall"
    CXXFLAGS=" -Wall"
    WIN_DLLFLAGS=' -DBUILD_$(subst /,_,$(patsubst %/,%,$(dir $@)))'

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CC\` version 2.95.3" >&5
echo $ECHO_N "checking for \`basename $CC\` version 2.95.3... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    if test $sci_required_fortran = "yes"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="0.5.25"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $F77\` version 0.5.25" >&5
echo $ECHO_N "checking for \`basename $F77\` version 0.5.25... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $F77 version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $F77 version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    fi

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CXX\` version 2.95.3" >&5
echo $ECHO_N "checking for \`basename $CXX\` version 2.95.3... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
echo $ECHO_N "checking how to run the C preprocessor... $ECHO_C" >&6
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if test "${ac_cv_prog_CPP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
echo "$as_me:$LINENO: result: $CPP" >&5
echo "${ECHO_T}$CPP" >&6
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  :
else
  { { echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&5
echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
echo "$as_me:$LINENO: checking how to run the C++ preprocessor" >&5
echo $ECHO_N "checking how to run the C++ preprocessor... $ECHO_C" >&6
if test -z "$CXXCPP"; then
  if test "${ac_cv_prog_CXXCPP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
      # Double quotes because CXXCPP needs to be expanded
    for CXXCPP in "$CXX -E" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  break
fi

    done
    ac_cv_prog_CXXCPP=$CXXCPP

fi
  CXXCPP=$ac_cv_prog_CXXCPP
else
  ac_cv_prog_CXXCPP=$CXXCPP
fi
echo "$as_me:$LINENO: result: $CXXCPP" >&5
echo "${ECHO_T}$CXXCPP" >&6
ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  :
else
  { { echo "$as_me:$LINENO: error: C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details." >&5
echo "$as_me: error: C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_AS+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$AS"; then
  ac_cv_prog_AS="$AS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_AS="as"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
AS=$ac_cv_prog_AS
if test -n "$AS"; then
  echo "$as_me:$LINENO: result: $AS" >&5
echo "${ECHO_T}$AS" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_LD+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$LD"; then
  ac_cv_prog_LD="$LD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_LD="ld"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
LD=$ac_cv_prog_LD
if test -n "$LD"; then
  echo "$as_me:$LINENO: result: $LD" >&5
echo "${ECHO_T}$LD" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    WOFF=" -w"
    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"

    case $F77 in
      *g77*)
         # extra_fflags has array checking if in debug mode.
         FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

         # put '_' at end and two '_'s if there is a '_' in name.
         # This flag is used by the genfspec.pl script in Uintah (generated
         # from fspec.pl.in).
         FORTRAN_UNDERSCORE=linux
         ;;
      *gfortran*)
         FFLAGS="$FFLAGS $extra_cflags"
         FORTRAN_UNDERSCORE=linux
         ;;
      *)
         FFLAGS="$FFLAGS $extra_cflags"
         ;;
    esac

    CXXFLAGS="$CXXFLAGS $extra_cflags"
    SOFLAGS="-shared ${SOFLAGS}"
    NEED_SONAME=yes
    ;;
  *)
    # linux
    ac_objext=o

    if test "$CC" = "icc"; then
      CFLAGS=" -w1"
      CXXFLAGS=" -w1"
    else
      CFLAGS=" -Wall"
      CXXFLAGS=" -Wall"
    fi

    # fPIC option for ppc architecture
    if test `uname -m` = "ppc"; then
       CFLAGS="-fPIC $CFLAGS"
       FFLAGS="-fPIC $FFLAGS"
       CXXFLAGS="-fPIC $CXXFLAGS"
    fi

    if test "$enable_64bit" = "yes"; then
       CFLAGS="-fPIC $CFLAGS"
       FFLAGS="-fPIC $FFLAGS"
       CXXFLAGS="-fPIC $CXXFLAGS"
    fi

    echo "$as_me:$LINENO: checking if special 32/64 bits flags required" >&5
echo $ECHO_N "checking if special 32/64 bits flags required... $ECHO_C" >&6
    if test "$enable_32bit" = "yes" -a $NBITS=64; then
       NBITS=32
       CFLAGS="-m32 $CFLAGS"
       CXXFLAGS="-m32 $CXXFLAGS"
       echo "$as_me:$LINENO: result: -m32" >&5
echo "${ECHO_T}-m32" >&6
    else
      if test "$enable_64bit" = "yes" -a $NBITS=32; then
        NBITS=64
        # Do not set this flag when using intel compilers
        if test "$CC" != "icc"; then
           CFLAGS="-m64 $CFLAGS"
           CXXFLAGS="-m64 $CXXFLAGS"
        fi
        echo "$as_me:$LINENO: result: -m64" >&5
echo "${ECHO_T}-m64" >&6
      else
        echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
      fi
    fi

    if test "$CC" != "pgcc"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CC\` version 2.95.3" >&5
echo $ECHO_N "checking for \`basename $CC\` version 2.95.3... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


      if test $sci_required_fortran = "yes"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="0.5.25"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $F77\` version 0.5.25" >&5
echo $ECHO_N "checking for \`basename $F77\` version 0.5.25... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $F77 version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $F77 version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

      fi

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $CXX\` version 2.95.3" >&5
echo $ECHO_N "checking for \`basename $CXX\` version 2.95.3... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi

    fi
    ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
echo "$as_me:$LINENO: checking how to run the C preprocessor" >&5
echo $ECHO_N "checking how to run the C preprocessor... $ECHO_C" >&6
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if test "${ac_cv_prog_CPP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
echo "$as_me:$LINENO: result: $CPP" >&5
echo "${ECHO_T}$CPP" >&6
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_c_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_c_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  :
else
  { { echo "$as_me:$LINENO: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&5
echo "$as_me: error: C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
echo "$as_me:$LINENO: checking how to run the C++ preprocessor" >&5
echo $ECHO_N "checking how to run the C++ preprocessor... $ECHO_C" >&6
if test -z "$CXXCPP"; then
  if test "${ac_cv_prog_CXXCPP+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
      # Double quotes because CXXCPP needs to be expanded
    for CXXCPP in "$CXX -E" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  break
fi

    done
    ac_cv_prog_CXXCPP=$CXXCPP

fi
  CXXCPP=$ac_cv_prog_CXXCPP
else
  ac_cv_prog_CXXCPP=$CXXCPP
fi
echo "$as_me:$LINENO: result: $CXXCPP" >&5
echo "${ECHO_T}$CXXCPP" >&6
ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  :
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.$ac_ext

  # OK, works on sane cases.  Now check whether non-existent headers
  # can be detected and how.
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  # Broken: success on invalid input.
continue
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.err conftest.$ac_ext
if $ac_preproc_ok; then
  :
else
  { { echo "$as_me:$LINENO: error: C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details." >&5
echo "$as_me: error: C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details." >&2;}
   { (exit 1); exit 1; }; }
fi

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_AS+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$AS"; then
  ac_cv_prog_AS="$AS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_AS="as"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
AS=$ac_cv_prog_AS
if test -n "$AS"; then
  echo "$as_me:$LINENO: result: $AS" >&5
echo "${ECHO_T}$AS" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_LD+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$LD"; then
  ac_cv_prog_LD="$LD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_LD="ld"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
LD=$ac_cv_prog_LD
if test -n "$LD"; then
  echo "$as_me:$LINENO: result: $LD" >&5
echo "${ECHO_T}$LD" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

    WOFF=" -w"
    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"

    case $F77 in
      *g77*)
         # extra_fflags has array checking if in debug mode.
         FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

         # put '_' at end and two '_'s if there is a '_' in name.
         # This flag is used by the genfspec.pl script in Uintah (generated
         # from fspec.pl.in).
	 FORTRAN_UNDERSCORE=linux
         ;;
      *gfortran*)
         FFLAGS="$FFLAGS $extra_cflags"
         FORTRAN_UNDERSCORE=linux
         ;;
      *)
         FFLAGS="$FFLAGS $extra_cflags"
         ;;
    esac

    CXXFLAGS="$CXXFLAGS $extra_cflags"
    SOFLAGS="-shared ${SOFLAGS}"
    NEED_SONAME=yes
    ;;
esac

# now that we know which NBITS the user wants, we can save this info

sci_defs_files="$sci_defs_files include/sci_defs/bits_testdefs.h"

###



echo "$as_me:$LINENO: checking $CC dependency regen switch" >&5
echo $ECHO_N "checking $CC dependency regen switch... $ECHO_C" >&6
rm -f configure-test.*
rm -rf configure-test-dir
mkdir configure-test-dir
echo "#include <stdio.h>" > configure-test-dir/configure-test.cc

# Try to automatically determine these three things
# One of twopass, move or normal
CC_DEPEND_MODE=unknown
# Compiler-specific flag
CC_DEPEND_REGEN=unknown
# Filename extension
CC_DEPEND_EXT=unknown

# Try -MDupdate
for flag in -MDupdate; do
  if test $CC_DEPEND_MODE = unknown; then
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.d -o configure-test-dir/configure-test.o configure-test-dir/configure-test.cc >/dev/null 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -f configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=normal
      CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
      CC_DEPEND_EXT=depend.mk
    fi
  fi
done

# Because xlC ignores anything after the -M (ie: -Mgarbage or -Mupdate
# is the same as -M) and creates a .u file anyway, to make the
# following test work, we need to get rid of the .u file and carry on:
rm -f configure-test-dir/configure-test.u

# Try -MD or -M
if test $CC_DEPEND_MODE = unknown; then
  for flag in -MD -M; do
    for ext in d u o.d; do
      rm -f configure-test.o configure-test-dir/configure-test.o
      ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc -o configure-test-dir/configure-test.o >/dev/null 2>conftest.out"
      (eval $ac_try) 2>&5
      if test -f configure-test-dir/configure-test.$ext ; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=normal
          break 2
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify
          break 2
        fi
      fi
      if test -f configure-test.$ext; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=move
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify2
        fi
        break 2
      fi
    done
  done
fi

# Last resort, try one that spits out to stdout
if test $CC_DEPEND_MODE = unknown; then
  for flag in -M; do
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc >configure-test-dir/configure-test.d 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -s configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=stdout
      CC_DEPEND_REGEN=$flag
      CC_DEPEND_EXT=d
      break
    fi
  done
fi

if test $CC_DEPEND_MODE = unknown; then
  { { echo "$as_me:$LINENO: error: Cannot determine dependency generation flag" >&5
echo "$as_me: error: Cannot determine dependency generation flag" >&2;}
   { (exit 1); exit 1; }; }
fi

echo "$as_me:$LINENO: result: $CC_DEPEND_REGEN (mode: $CC_DEPEND_MODE, ext: $CC_DEPEND_EXT)" >&5
echo "${ECHO_T}$CC_DEPEND_REGEN (mode: $CC_DEPEND_MODE, ext: $CC_DEPEND_EXT)" >&6
rm -f configure-test.*
rm -rf configure-test-dir

F77_DEPEND_REGEN=$CC_DEPEND_REGEN
F77_DEPEND_MODE=$CC_DEPEND_MODE
F77_DEPEND_EXT=$CC_DEPEND_EXT







# Other programs
if test "$IS_WIN" = "yes"; then
  # Extract the first word of "make", so it can be a program name with args.
set dummy make; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_MAKE+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$MAKE"; then
  ac_cv_prog_MAKE="$MAKE" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_MAKE="make"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_MAKE" && ac_cv_prog_MAKE="NOT_FOUND"
fi
fi
MAKE=$ac_cv_prog_MAKE
if test -n "$MAKE"; then
  echo "$as_me:$LINENO: result: $MAKE" >&5
echo "${ECHO_T}$MAKE" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

else
  # Extract the first word of "gmake", so it can be a program name with args.
set dummy gmake; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_GMAKE+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $GMAKE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GMAKE="$GMAKE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_GMAKE="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_GMAKE" && ac_cv_path_GMAKE="NOT_FOUND"
  ;;
esac
fi
GMAKE=$ac_cv_path_GMAKE

if test -n "$GMAKE"; then
  echo "$as_me:$LINENO: result: $GMAKE" >&5
echo "${ECHO_T}$GMAKE" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  if test "$GMAKE" = "NOT_FOUND"; then
    # Extract the first word of "make", so it can be a program name with args.
set dummy make; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_path_MAKE+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  case $MAKE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_path_MAKE="$as_dir/$ac_word$ac_exec_ext"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_path_MAKE" && ac_cv_path_MAKE="NOT_FOUND"
  ;;
esac
fi
MAKE=$ac_cv_path_MAKE

if test -n "$MAKE"; then
  echo "$as_me:$LINENO: result: $MAKE" >&5
echo "${ECHO_T}$MAKE" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  else
    MAKE=$GMAKE
  fi
fi
if test "$MAKE" = "NOT_FOUND"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: GNU make not found." >&5
echo "$as_me: error: GNU make not found." >&2;}
   { (exit 1); exit 1; }; }

fi


sci_defs_files="$sci_defs_files include/sci_defs/compile_testdefs.h"


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="3.78.1"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for \`basename $MAKE\` version 3.78.1" >&5
echo $ECHO_N "checking for \`basename $MAKE\` version 3.78.1... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong GNU make version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong GNU make version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$MAKE --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_AWK+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_AWK="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  echo "$as_me:$LINENO: result: $AWK" >&5
echo "${ECHO_T}$AWK" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$AWK" && break
done


## ignore some software tests on windows (for now at least)
if test "$IS_WIN" = "yes"; then
  echo "skipping bison, lex, etags, perl tests"
else

##  --  Plume ----------------------

if test "$enable_plume" = "yes"; then
   BUILD_PLUME="yes"
else
   BUILD_PLUME="no"
fi


## test for bison. yacc is not sufficient as it has no -o option.
## Only need for SCIRun2 currently.
# Extract the first word of "bison", so it can be a program name with args.
set dummy bison; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_YACC+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$YACC"; then
  ac_cv_prog_YACC="$YACC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH /usr/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_YACC="bison"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_YACC" && ac_cv_prog_YACC="nobison"
fi
fi
YACC=$ac_cv_prog_YACC
if test -n "$YACC"; then
  echo "$as_me:$LINENO: result: $YACC" >&5
echo "${ECHO_T}$YACC" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

if test "$enable_scirun2" = "yes" -a "$YACC" = "nobison"; then
  echo "configure: error: bison is required, and was not found in your PATH."
  echo "                  Please add it to your PATH, or set the environment"
  echo "                  variable YACC to the appropriate bison executable,"
  echo "                  then run configure again."
  exit
fi


for ac_prog in flex lex
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_LEX+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$LEX"; then
  ac_cv_prog_LEX="$LEX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_LEX="$ac_prog"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
LEX=$ac_cv_prog_LEX
if test -n "$LEX"; then
  echo "$as_me:$LINENO: result: $LEX" >&5
echo "${ECHO_T}$LEX" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

  test -n "$LEX" && break
done
test -n "$LEX" || LEX=":"

if test -z "$LEXLIB"
then
  echo "$as_me:$LINENO: checking for yywrap in -lfl" >&5
echo $ECHO_N "checking for yywrap in -lfl... $ECHO_C" >&6
if test "${ac_cv_lib_fl_yywrap+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-lfl  $LIBS"
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char yywrap ();
int
main ()
{
yywrap ();
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_lib_fl_yywrap=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_lib_fl_yywrap=no
fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
echo "$as_me:$LINENO: result: $ac_cv_lib_fl_yywrap" >&5
echo "${ECHO_T}$ac_cv_lib_fl_yywrap" >&6
if test $ac_cv_lib_fl_yywrap = yes; then
  LEXLIB="-lfl"
else
  echo "$as_me:$LINENO: checking for yywrap in -ll" >&5
echo $ECHO_N "checking for yywrap in -ll... $ECHO_C" >&6
if test "${ac_cv_lib_l_yywrap+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  ac_check_lib_save_LIBS=$LIBS
LIBS="-ll  $LIBS"
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
   builtin and then its argument prototype would still apply.  */
char yywrap ();
int
main ()
{
yywrap ();
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_lib_l_yywrap=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_cv_lib_l_yywrap=no
fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_check_lib_save_LIBS
fi
echo "$as_me:$LINENO: result: $ac_cv_lib_l_yywrap" >&5
echo "${ECHO_T}$ac_cv_lib_l_yywrap" >&6
if test $ac_cv_lib_l_yywrap = yes; then
  LEXLIB="-ll"
fi

fi

fi

if test "x$LEX" != "x:"; then
  echo "$as_me:$LINENO: checking lex output file root" >&5
echo $ECHO_N "checking lex output file root... $ECHO_C" >&6
if test "${ac_cv_prog_lex_root+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  # The minimal lex program is just a single line: %%.  But some broken lexes
# (Solaris, I think it was) want two %% lines, so accommodate them.
cat >conftest.l <<_ACEOF
%%
%%
_ACEOF
{ (eval echo "$as_me:$LINENO: \"$LEX conftest.l\"") >&5
  (eval $LEX conftest.l) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }
if test -f lex.yy.c; then
  ac_cv_prog_lex_root=lex.yy
elif test -f lexyy.c; then
  ac_cv_prog_lex_root=lexyy
else
  { { echo "$as_me:$LINENO: error: cannot find output from $LEX; giving up" >&5
echo "$as_me: error: cannot find output from $LEX; giving up" >&2;}
   { (exit 1); exit 1; }; }
fi
fi
echo "$as_me:$LINENO: result: $ac_cv_prog_lex_root" >&5
echo "${ECHO_T}$ac_cv_prog_lex_root" >&6
rm -f conftest.l
LEX_OUTPUT_ROOT=$ac_cv_prog_lex_root

echo "$as_me:$LINENO: checking whether yytext is a pointer" >&5
echo $ECHO_N "checking whether yytext is a pointer... $ECHO_C" >&6
if test "${ac_cv_prog_lex_yytext_pointer+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  # POSIX says lex can declare yytext either as a pointer or an array; the
# default is implementation-dependent. Figure out which it is, since
# not all implementations provide the %pointer and %array declarations.
ac_cv_prog_lex_yytext_pointer=no
echo 'extern char *yytext;' >>$LEX_OUTPUT_ROOT.c
ac_save_LIBS=$LIBS
LIBS="$LIBS $LEXLIB"
cat >conftest.$ac_ext <<_ACEOF
`cat $LEX_OUTPUT_ROOT.c`
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_cv_prog_lex_yytext_pointer=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext
LIBS=$ac_save_LIBS
rm -f "${LEX_OUTPUT_ROOT}.c"

fi
echo "$as_me:$LINENO: result: $ac_cv_prog_lex_yytext_pointer" >&5
echo "${ECHO_T}$ac_cv_prog_lex_yytext_pointer" >&6
if test $ac_cv_prog_lex_yytext_pointer = yes; then

cat >>confdefs.h <<\_ACEOF
#define YYTEXT_POINTER 1
_ACEOF

fi

fi
LEX_LIB_FLAG="$LEXLIB"


if test "$enable_scirun2" = "yes" -a "$LEX" != "flex" -a "$LEX" != "lex"; then
  echo "configure: error: flex or lex is required, and was not found in your PATH."
  echo "                  Please add it to your PATH, or set the environment"
  echo "                  variable LEX to the appropriate lex executable,"
  echo "                  then run configure again."
  exit
fi

# Extract the first word of "etags", so it can be a program name with args.
set dummy etags; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_ETAGS+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$ETAGS"; then
  ac_cv_prog_ETAGS="$ETAGS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_ETAGS="etags"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
ETAGS=$ac_cv_prog_ETAGS
if test -n "$ETAGS"; then
  echo "$as_me:$LINENO: result: $ETAGS" >&5
echo "${ECHO_T}$ETAGS" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


if test "$sci_required_perl" = "yes" ; then
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_PERL+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_PERL="perl"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_PERL" && ac_cv_prog_PERL="echo configure: error: perl was not found in your PATH.;exit"
fi
fi
PERL=$ac_cv_prog_PERL
if test -n "$PERL"; then
  echo "$as_me:$LINENO: result: $PERL" >&5
echo "${ECHO_T}$PERL" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

else
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_PERL+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_PERL="perl"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

fi
fi
PERL=$ac_cv_prog_PERL
if test -n "$PERL"; then
  echo "$as_me:$LINENO: result: $PERL" >&5
echo "${ECHO_T}$PERL" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi

fi

if test "$PERL" = "perl"; then
  PERL=`type perl | sed 's%^.* %%'`
fi

fi # end if IS_WIN = yes

##  Create the Packages/Uintah/tools dir for later use.
if test "$sci_required_tools" = "yes" ; then
  if test ! -d "Packages/Uintah/tools"; then
    echo "$as_me:$LINENO: result: Creating Packages/Uintah/tools directory" >&5
echo "${ECHO_T}Creating Packages/Uintah/tools directory" >&6
    mkdir -p "Packages/Uintah/tools"
  fi
  if test "$ac_cv_f77_compiler_gnu" = "yes" ; then
     G77=1
  else
     G77=0
  fi
fi






















sci_defs_files="$sci_defs_files include/sci_defs/template_testdefs.h"

##  set the default language after the build tools are found
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


#########################################################################
## Make sure number of bit build for Thirdparty and SCIRun compile match
##

if test "$thirdparty" && test -e $thirdparty; then
  if test "$enable_64bit" = "yes"; then
    case "$thirdparty" in
      *32bit*)
	{ { echo "$as_me:$LINENO: error: You specified 64 bit compile but have 32 bit Thirdparty?" >&5
echo "$as_me: error: You specified 64 bit compile but have 32 bit Thirdparty?" >&2;}
   { (exit 1); exit 1; }; }
      ;;
    esac
  else
    case "$thirdparty" in
      *64bit*)
	{ { echo "$as_me:$LINENO: error: You specified 32 bit compile but have 64 bit Thirdparty?" >&5
echo "$as_me: error: You specified 32 bit compile but have 64 bit Thirdparty?" >&2;}
   { (exit 1); exit 1; }; }
      ;;
    esac
  fi

  sci_thirdparty_dir="$thirdparty"
else
  if test "$thirdparty"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Specified thirdparty directory: $thirdparty does not exist!" >&5
echo "$as_me: error: Specified thirdparty directory: $thirdparty does not exist!" >&2;}
   { (exit 1); exit 1; }; }

  fi
fi

##  sci_thirdparty_dir is the path to the current thirdparty
##  if thirdparty not set use defaults

if test -z "$thirdparty"; then
  sci_tp_version=1.24.1
  sci_tp_arch=`uname -s`
  sci_compiler_vers=gcc-3.0.4

  # Try to figure out the compilers version (as it is used in the thirdparty directory name.)
  ac_try="$CC -v > /dev/null 2> conftest.out"
  (eval $ac_try) 2>&5
  vers=`grep "gcc version" conftest.out | sed -e 's/.*gcc version //' | cut -d' ' -f1`
  rm -f conftest.out
  if test -n "$vers"; then
    sci_compiler_vers=gcc-$vers
  else
    ac_try="$CC -version > /dev/null 2> conftest.out"
    (eval $ac_try) 2>&5
    vers=`grep MIPSpro conftest.out | cut -d' ' -f 4`
    rm -f conftest.out
    if test -n "$vers"; then
      sci_compiler_vers=MIPSpro-$vers
    else
      sci_compiler_vers=""
    fi
  fi

  # first if we are in the sci facility
  _sci_tp_base=/usr/sci/projects
  _sci_tp_subdir=$sci_tp_arch/$sci_compiler_vers-${NBITS}bit
  _sci_tp_path=$_sci_tp_base/SCIRun/Thirdparty/$sci_tp_version/$_sci_tp_subdir

  if test -e $_sci_tp_path; then
    sci_thirdparty_dir="$_sci_tp_path"
  else
    # now try the default install location for thirdparty
    _sci_tmp_tp_path=$_sci_tp_path
    _sci_tp_base=/usr/local
    _sci_tp_path=$_sci_tp_base/SCIRun/Thirdparty/$sci_tp_version/$_sci_tp_subdir
    if test -e $_sci_tp_path; then
      sci_thirdparty_dir="$_sci_tp_path"
    else
      { { echo "$as_me:$LINENO: error: Thidparty installation does not exist in $_sci_tmp_tp_path or in $_sci_tp_path. Please specify the installation like this --with-thirdparty=DIR" >&5
echo "$as_me: error: Thidparty installation does not exist in $_sci_tmp_tp_path or in $_sci_tp_path. Please specify the installation like this --with-thirdparty=DIR" >&2;}
   { (exit 1); exit 1; }; }
    fi
  fi

  # extra thirdparty code for CCA
  cca_tp_version=1.0.0
  cca_tp_path=$_sci_tp_base/CCA/Thirdparty/$cca_tp_version/$_sci_tp_subdir

  # extra thirdparty code for Uintah
  uintah_tp_version=1.0.0
  uintah_tp_path=$_sci_tp_base/Uintah/Thirdparty/$uintah_tp_version/$_sci_tp_subdir

  # extra thirdparty code for rtrt
  rtrt_tp_version=1.0.0
  rtrt_tp_path=$_sci_tp_base/rtrt/Thirdparty/$rtrt_tp_version/$_sci_tp_subdir

  # extra thirdparty code for plume
  plume_tp_version=1.0.0
  plume_tp_path=$_sci_tp_base/plume/Thirdparty/$plume_tp_version/$_sci_tp_subdir

  echo "$as_me:$LINENO: result: Using default thirdparty directory $sci_thirdparty_dir" >&5
echo "${ECHO_T}Using default thirdparty directory $sci_thirdparty_dir" >&6
fi

if test ! -d "$sci_thirdparty_dir"; then
  { { echo "$as_me:$LINENO: error: $sci_thirdparty_dir does not exist." >&5
echo "$as_me: error: $sci_thirdparty_dir does not exist." >&2;}
   { (exit 1); exit 1; }; }
fi

# This is where the lib actually lives:
if test ! -d "$sci_thirdparty_dir/lib"; then
  { { echo "$as_me:$LINENO: error: SCI Thirdparty invalid.  $sci_thirdparty_dir/lib does not exist." >&5
echo "$as_me: error: SCI Thirdparty invalid.  $sci_thirdparty_dir/lib does not exist." >&2;}
   { (exit 1); exit 1; }; }
fi
if test ! -d "$sci_thirdparty_dir/include"; then
  { { echo "$as_me:$LINENO: error: SCI Thirdparty invalid.  $sci_thirdparty_dir/include does not exist." >&5
echo "$as_me: error: SCI Thirdparty invalid.  $sci_thirdparty_dir/include does not exist." >&2;}
   { (exit 1); exit 1; }; }
fi


sci_thirdparty_lib="$sci_thirdparty_dir/lib"
sci_thirdparty_include="$sci_thirdparty_dir/include"
SCI_THIRDPARTY_LIB_DIR="$sci_thirdparty_lib"
SCI_THIRDPARTY_LIB_DIR_FLAG="$LDRUN_PREFIX$sci_thirdparty_lib -L$sci_thirdparty_lib"
INC_SCI_THIRDPARTY_H=-I"$sci_thirdparty_include"
SCI_THIRDPARTY_DIR="$sci_thirdparty_dir"

echo "$as_me:$LINENO: result: Thirdparty library directory $SCI_THIRDPARTY_LIB_DIR" >&5
echo "${ECHO_T}Thirdparty library directory $SCI_THIRDPARTY_LIB_DIR" >&6


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_SCI_THIRDPARTY_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_SCI_THIRDPARTY_H='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${SCI_THIRDPARTY_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval SCI_THIRDPARTY_LIB_DIR_FLAG='"$_new_path"'






#########################################################################
##  Set the no_optimize_flag
##

case $host in
  *-irix*)
    no_optimize_flag=-O0
    TIME_IMPL=Time_irix.cc
    ;;
  *linux*)
    no_optimize_flag=-O0
    ;;
  *-aix*)

    { echo "$as_me:$LINENO: WARNING: AIX is not completely supported!" >&5
echo "$as_me: WARNING: AIX is not completely supported!" >&2;}

    # On AIX, don't automatically generate .so's.  Make .a's and then
    # later we will make .so's from them.
    SO_OR_ARCHIVE_EXTENSION=a
    no_optimize_flag=-O0
    case $CXX in
      *xlC*)
         # xlC does not know the -O0 flag.
         no_optimize_flag=""
	 ;;
      *KCC*)
         ;;
      *g++*)
	 ;;
      *)
         { echo "$as_me:$LINENO: WARNING: Do not know this compiler." >&5
echo "$as_me: WARNING: Do not know this compiler." >&2;}
         { echo "$as_me:$LINENO: WARNING: Defaulting to -O0 for the no optimize flag." >&5
echo "$as_me: WARNING: Defaulting to -O0 for the no optimize flag." >&2;}
         ;;
    esac
    ;;
  *)
    ;;
esac


##  ----------------------------------------------------------------------

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

# Each of the HAVE_??? statements for these header files is found
# in include/sci_defs/config_testedefs.h








for ac_header in limits.h sys/select.h unistd.h sys/time.h ext/algorithm stdint.h inttypes.h
do
as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo "$as_me:$LINENO: checking for $ac_header" >&5
echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6
else
  # Is the header compilable?
echo "$as_me:$LINENO: checking $ac_header usability" >&5
echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
#include <$ac_header>
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_header_compiler=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_header_compiler=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
echo "${ECHO_T}$ac_header_compiler" >&6

# Is the header present?
echo "$as_me:$LINENO: checking $ac_header presence" >&5
echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <$ac_header>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  ac_header_preproc=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  ac_header_preproc=no
fi
rm -f conftest.err conftest.$ac_ext
echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
echo "${ECHO_T}$ac_header_preproc" >&6

# So?  What about this header?
case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in
  yes:no: )
    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
    ac_header_preproc=yes
    ;;
  no:yes:* )
    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
    (
      cat <<\_ASBOX
## ---------------------------------------- ##
## Report this to scirun-users@sci.utah.edu ##
## ---------------------------------------- ##
_ASBOX
    ) |
      sed "s/^/$as_me: WARNING:     /" >&2
    ;;
esac
echo "$as_me:$LINENO: checking for $ac_header" >&5
echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  eval "$as_ac_Header=\$ac_header_preproc"
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6

fi
if test `eval echo '${'$as_ac_Header'}'` = yes; then
  cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done


          ac_config_headers="$ac_config_headers include/sci_defs/config_testdefs.h"

sci_defs_files="$sci_defs_files include/sci_defs/config_testdefs.h"

##  ----------------------------------------------------------------------
##  ----------  required checks for required libraries and headers  ------
##  ----------------------------------------------------------------------

##  --  search for the math library  -------------------------------------
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu



##
## SCI_TRY_LINK (M):  math libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : M
## arg 2 : math libraries and headers
## arg 3 : math.h
## arg 4 :
## arg 5 : m
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_M        => lib path
##      M_LIB_DIR_FLAG   => all the -L's
##      M_LIB_FLAG       => all the -l's
##      HAVE_M           => yes or no
##      INC_M_H          => all the -I's
##      HAVE_M_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for math libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for math libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for math libraries and headers (required)" >&5
echo $ECHO_N "checking for math libraries and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for math libraries and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for math libraries and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "m"; then

   found_framework=no
   for lib in "" m; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of M check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of M check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of M check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of M check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for M only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for M only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for M only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for M only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" math.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  double d = fabs(69.05);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_M='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval M_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval M_LIB_FLAG="'$final_libs'"
eval HAVE_M="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_M_H="'$final_incs'"
eval HAVE_M_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_M=''
eval M_LIB_DIR_FLAG=''
eval M_LIB_FLAG=''
eval HAVE_M="no"
eval INC_M_H=''
eval HAVE_M_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required M failed.
    To see the failed compile information, look in config.log,
    search for M. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required M failed.
    To see the failed compile information, look in config.log,
    search for M. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" math.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested M include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested M include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" m; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested M library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested M library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (M):  math libraries and headers
##






##  --  search for X  ----------------------------------------------------

if test "$IS_WIN" = "yes"; then
  echo "skipping X test"
else
  _sci_optional=required
  if test "$with_X11_lib"; then
    _x_lib_dir="$with_X11_lib"
    _x_inc_dir="$with_X11_lib/../include"
    _sci_optional=specific
  else
    _x_lib_dir="/usr/X11R6"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_x_lib_dir/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_x_lib_dir/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_x_lib_dir/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_x_lib_dir/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_x_lib_dir/lib
    fi
  fi
  eval _x_lib_dir='"$_new_lib_path"'

    _x_inc_dir="/usr/X11R6/include"
  fi



##
## SCI_TRY_LINK (X):  X libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : X
## arg 2 : X libraries and headers
## arg 3 : X11/Xlib.h
## arg 4 : $_x_inc_dir
## arg 5 : X11 Xext Xaw Xi Xt Xmu
## arg 6 : $_x_lib_dir
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_X        => lib path
##      X_LIB_DIR_FLAG   => all the -L's
##      X_LIB_FLAG       => all the -l's
##      HAVE_X           => yes or no
##      INC_X_H          => all the -I's
##      HAVE_X_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for X libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for X libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for X libraries and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for X libraries and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for X libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for X libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_x_inc_dir (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_x_inc_dir; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for X include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for X include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir) of X check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir) of X check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "X11 Xext Xaw Xi Xt Xmu"; then

   found_framework=no
   for lib in "" X11 Xext Xaw Xi Xt Xmu; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of X check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of X check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_x_lib_dir"; then

   for path in "" $_x_lib_dir; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of X check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of X check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_x_lib_dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_x_lib_dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for X only one library path may be specified for arg 6 (you had: $_x_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for X only one library path may be specified for arg 6 (you had: $_x_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_x_inc_dir
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_x_inc_dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_x_inc_dir" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for X only one include path may be specified for arg 4 (you had: $_x_inc_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for X only one include path may be specified for arg 4 (you had: $_x_inc_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" X11/Xlib.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_X='"$_x_lib_dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval X_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval X_LIB_FLAG="'$final_libs'"
eval HAVE_X="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_X_H="'$final_incs'"
eval HAVE_X_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_X=''
eval X_LIB_DIR_FLAG=''
eval X_LIB_FLAG=''
eval HAVE_X="no"
eval INC_X_H=''
eval HAVE_X_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required X failed.
    To see the failed compile information, look in config.log,
    search for X. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required X failed.
    To see the failed compile information, look in config.log,
    search for X. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" X11/Xlib.h; do
    #echo looking for $_x_inc_dir/$i
    if test ! -e $_x_inc_dir/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested X include file '$_x_inc_dir/$i' was not found" >&5
echo "$as_me: error: Specifically requested X include file '$_x_inc_dir/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" X11 Xext Xaw Xi Xt Xmu; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_x_lib_dir/lib$i.so && test ! -e $_x_lib_dir/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested X library file '$_x_lib_dir/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested X library file '$_x_lib_dir/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (X):  X libraries and headers
##



  if test "$X_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
    { echo "$as_me:$LINENO: WARNING: \"$X_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$X_LIB_DIR_FLAG\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: \"flag for X has been changed to\"" >&5
echo "$as_me: WARNING: \"flag for X has been changed to\"" >&2;}
    X_LIB_DIR_FLAG="-L$LIB_DIR_X"
    { echo "$as_me:$LINENO: WARNING: \"$X_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$X_LIB_DIR_FLAG\"" >&2;}
  fi

fi # end "$IS_WIN" = "yes"




##  --  check for the required thread library  ---------------------------

SOCKET_LIBRARY=""

case $host in
  *-irix*)
    if test "$threads" = "unknown"; then
      threads=irix
    elif test "$threads" != "pthreads" -a "$threads" != "irix"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: unknown thread type for host $host: $threads. exiting." >&5
echo "$as_me: error: unknown thread type for host $host: $threads. exiting." >&2;}
   { (exit 1); exit 1; }; }

    fi
    ;;
  *-pc-mingw*)
    threads=win32
    SOCKET_LIB_FLAG="-lws2_32"
    ;;
  *)
    if test "$threads" = "unknown"; then
      threads=pthreads
    elif test "$threads" != "pthreads" -a "$threads" != "none"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: unknown thread type for host $host: $threads. exiting." >&5
echo "$as_me: error: unknown thread type for host $host: $threads. exiting." >&2;}
   { (exit 1); exit 1; }; }

    fi
    ;;
esac

case $threads in
   irix)

##
## SCI_TRY_LINK (FETCHOP):  fetchop library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : FETCHOP
## arg 2 : fetchop library
## arg 3 :
## arg 4 :
## arg 5 : fetchop
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_FETCHOP        => lib path
##      FETCHOP_LIB_DIR_FLAG   => all the -L's
##      FETCHOP_LIB_FLAG       => all the -l's
##      HAVE_FETCHOP           => yes or no
##      INC_FETCHOP_H          => all the -I's
##      HAVE_FETCHOP_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fetchop library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fetchop library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fetchop library (required)" >&5
echo $ECHO_N "checking for fetchop library (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fetchop library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fetchop library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "fetchop"; then

   found_framework=no
   for lib in "" fetchop; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of FETCHOP check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of FETCHOP check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of FETCHOP check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of FETCHOP check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FETCHOP only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FETCHOP only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FETCHOP only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FETCHOP only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_FETCHOP='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval FETCHOP_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval FETCHOP_LIB_FLAG="'$final_libs'"
eval HAVE_FETCHOP="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_FETCHOP_H="'$final_incs'"
eval HAVE_FETCHOP_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_FETCHOP=''
eval FETCHOP_LIB_DIR_FLAG=''
eval FETCHOP_LIB_FLAG=''
eval HAVE_FETCHOP="no"
eval INC_FETCHOP_H=''
eval HAVE_FETCHOP_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required FETCHOP failed.
    To see the failed compile information, look in config.log,
    search for FETCHOP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required FETCHOP failed.
    To see the failed compile information, look in config.log,
    search for FETCHOP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested FETCHOP include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested FETCHOP include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" fetchop; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested FETCHOP library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested FETCHOP library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (FETCHOP):  fetchop library
##


      if test "$HAVE_FETCHOP" = "yes"; then
         CFLAGS="$CFLAGS -DSTL_SGI_THREADS"
         THREAD_LIB_FLAG="$FETCHOP_LIB_FLAG"
         DEF_THREAD=
      fi
      ;;
   pthreads)

##
## SCI_TRY_LINK (PTHREAD):  pthread library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PTHREAD
## arg 2 : pthread library and headers
## arg 3 : pthread.h semaphore.h
## arg 4 :
## arg 5 : pthread
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PTHREAD        => lib path
##      PTHREAD_LIB_DIR_FLAG   => all the -L's
##      PTHREAD_LIB_FLAG       => all the -l's
##      HAVE_PTHREAD           => yes or no
##      INC_PTHREAD_H          => all the -I's
##      HAVE_PTHREAD_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for pthread library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for pthread library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for pthread library and headers (required)" >&5
echo $ECHO_N "checking for pthread library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for pthread library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for pthread library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "pthread"; then

   found_framework=no
   for lib in "" pthread; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PTHREAD check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PTHREAD check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PTHREAD check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PTHREAD check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PTHREAD only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PTHREAD only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PTHREAD only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PTHREAD only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" pthread.h semaphore.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PTHREAD='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PTHREAD_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PTHREAD_LIB_FLAG="'$final_libs'"
eval HAVE_PTHREAD="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PTHREAD_H="'$final_incs'"
eval HAVE_PTHREAD_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PTHREAD=''
eval PTHREAD_LIB_DIR_FLAG=''
eval PTHREAD_LIB_FLAG=''
eval HAVE_PTHREAD="no"
eval INC_PTHREAD_H=''
eval HAVE_PTHREAD_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PTHREAD failed.
    To see the failed compile information, look in config.log,
    search for PTHREAD. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PTHREAD failed.
    To see the failed compile information, look in config.log,
    search for PTHREAD. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" pthread.h semaphore.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PTHREAD include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested PTHREAD include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" pthread; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PTHREAD library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PTHREAD library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PTHREAD):  pthread library and headers
##



      if test "$HAVE_PTHREAD" = "yes"; then
        THREAD_LIB_FLAG="$PTHREAD_LIB_FLAG"
        DEF_THREAD="#define SCI_PTHREAD 1"
      fi

      echo "$as_me:$LINENO: checking for semaphore library" >&5
echo $ECHO_N "checking for semaphore library... $ECHO_C" >&6
      old_LIBS="$LIBS"
      SEMAPHORE_LIB_FLAG=unknown
      for i in "" "$THREAD_LIB_FLAG" -lrt; do
        LIBS="$old_LIBS $i"
        cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

#include <semaphore.h>

int
main ()
{

    sem_t sem;
    sem_init(&sem, 0, 0);
    sem_post(&sem);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

         SEMAPHORE_LIB_FLAG=$i
         break

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext
      done
      if test "$SEMPAPHORE_LIB_FLAG" = unknown; then
        echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
        { { echo "$as_me:$LINENO: error: semaphore library(sem_post, sem_wait, etc) needed for pthreads" >&5
echo "$as_me: error: semaphore library(sem_post, sem_wait, etc) needed for pthreads" >&2;}
   { (exit 1); exit 1; }; }
      else
        if test "$SEMAPHORE_LIB_FLAG" = "$THREAD_LIB_FLAG"; then
          echo "$as_me:$LINENO: result: already in thread library: $THREAD_LIB_FLAG" >&5
echo "${ECHO_T}already in thread library: $THREAD_LIB_FLAG" >&6
          SEMAPHORE_LIB_FLAG=""
        elif test "$SEMAPHORE_LIB_FLAG"; then
          echo "$as_me:$LINENO: result: $SEMAPHORE_LIB_FLAG" >&5
echo "${ECHO_T}$SEMAPHORE_LIB_FLAG" >&6
        else
          echo "$as_me:$LINENO: result: none required" >&5
echo "${ECHO_T}none required" >&6
        fi
      fi
      LIBS="$old_LIBS"
      ;;
   none)
      DEF_THREAD="#define SCI_NOTHREAD 1"
      { echo "$as_me:$LINENO: WARNING: threads disabled - software may work incorrectly" >&5
echo "$as_me: WARNING: threads disabled - software may work incorrectly" >&2;}
      ;;
   win32)
     # for time functions in windows
     DEF_THREAD=
     THREAD_LIB_FLAG=-lwinmm
     ;;
   *)

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: unknown thread type for host $host: $threads. exiting." >&5
echo "$as_me: error: unknown thread type for host $host: $threads. exiting." >&2;}
   { (exit 1); exit 1; }; }

      ;;
esac

THREAD_IMPL="Thread_$threads.cc"





sci_defs_files="$sci_defs_files include/sci_defs/thread_testdefs.h"





##  --  search for OpenGL  -----------------------------------------------

_sci_optional=required
if test "$with_opengl"; then
  _sci_lib="$with_opengl/lib"
  _sci_inc="$with_opengl/include"
  _sci_optional=specific
else

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path="/usr/X11R6"/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path="/usr/X11R6"/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path="/usr/X11R6"/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path="/usr/X11R6"/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path="/usr/X11R6"/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

  _sci_inc="/usr/X11R6/include"
fi

# GLU_OTHERS, GLU_OTHERS_FLAG

# These variables are used to supply libraries which GL and GLU may
# need.  As it turns out, the gl libraries in linux need the pthread
# library.  We need to make two versions of the variable though.
# GLU_OTHERS is used without the -l and GLU_OTHERS_FLAG includes it.

case $host in
  *linux*)
    if test "$threads" != "none"; then
      GLU_OTHERS="pthread m"
      GLU_OTHERS_FLAG="-lpthread -lm"
    else
      GLU_OTHERS="m"
      GLU_OTHERS_FLAG="-lm"
    fi
  ;;
  *)
  GLU_OTHERS=""
  GLU_OTHERS_FLAG=""
  ;;
esac

##########
##### This stuff was in the includes between gl.h and glu.hn
#####
##### #ifndef GLAPIENTRY
#####   #define GLAPIENTRY
##### #endif
#####
##### #ifndef GLAPI
#####   #define GLAPI
##### #endif

ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


if test "$IS_WIN" = "yes"; then

##
## SCI_TRY_LINK (GL):  OpenGL libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GL
## arg 2 : OpenGL libraries and headers
## arg 3 : windows.h GL/gl.h GL/glu.h
## arg 4 : $_sci_inc
## arg 5 : glu32 opengl32 gdi32 $GLU_OTHERS
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GL        => lib path
##      GL_LIB_DIR_FLAG   => all the -L's
##      GL_LIB_FLAG       => all the -l's
##      HAVE_GL           => yes or no
##      INC_GL_H          => all the -I's
##      HAVE_GL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for OpenGL libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for OpenGL libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for OpenGL libraries and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for OpenGL libraries and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for OpenGL libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for OpenGL libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "glu32 opengl32 gdi32 $GLU_OTHERS"; then

   found_framework=no
   for lib in "" glu32 opengl32 gdi32 $GLU_OTHERS; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" windows.h GL/gl.h GL/glu.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GL_LIB_FLAG="'$final_libs'"
eval HAVE_GL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GL_H="'$final_incs'"
eval HAVE_GL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GL=''
eval GL_LIB_DIR_FLAG=''
eval GL_LIB_FLAG=''
eval HAVE_GL="no"
eval INC_GL_H=''
eval HAVE_GL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GL failed.
    To see the failed compile information, look in config.log,
    search for GL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GL failed.
    To see the failed compile information, look in config.log,
    search for GL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" windows.h GL/gl.h GL/glu.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" glu32 opengl32 gdi32 $GLU_OTHERS; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GL):  OpenGL libraries and headers
##


else

##
## SCI_TRY_LINK (GL):  OpenGL libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GL
## arg 2 : OpenGL libraries and headers
## arg 3 : GL/gl.h GL/glu.h GL/glx.h
## arg 4 : $_sci_inc
## arg 5 : GLU GL $GLU_OTHERS
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GL        => lib path
##      GL_LIB_DIR_FLAG   => all the -L's
##      GL_LIB_FLAG       => all the -l's
##      HAVE_GL           => yes or no
##      INC_GL_H          => all the -I's
##      HAVE_GL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for OpenGL libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for OpenGL libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for OpenGL libraries and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for OpenGL libraries and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for OpenGL libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for OpenGL libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "GLU GL $GLU_OTHERS"; then

   found_framework=no
   for lib in "" GLU GL $GLU_OTHERS; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" GL/gl.h GL/glu.h GL/glx.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GL_LIB_FLAG="'$final_libs'"
eval HAVE_GL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GL_H="'$final_incs'"
eval HAVE_GL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GL=''
eval GL_LIB_DIR_FLAG=''
eval GL_LIB_FLAG=''
eval HAVE_GL="no"
eval INC_GL_H=''
eval HAVE_GL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GL failed.
    To see the failed compile information, look in config.log,
    search for GL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GL failed.
    To see the failed compile information, look in config.log,
    search for GL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" GL/gl.h GL/glu.h GL/glx.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" GLU GL $GLU_OTHERS; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GL):  OpenGL libraries and headers
##


fi

if test "$GL_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
  { echo "$as_me:$LINENO: WARNING: \"$GL_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$GL_LIB_DIR_FLAG\"" >&2;}
  { echo "$as_me:$LINENO: WARNING: \"flag for OpenGL has been removed.\"" >&5
echo "$as_me: WARNING: \"flag for OpenGL has been removed.\"" >&2;}
  GL_LIB_DIR_FLAG=""
fi





# Test for advanced volume rendering capability


## arguments mean:
## arg 1 : variable base name i.e. MATH
## arg 2 : checking message
## arg 3 : includes that arg 6 needs to compile
## arg 4 : include paths -I
## arg 5 : list of libs to link against -l
## arg 6 : lib paths -L
## arg 7 : extra link flags
## arg 8 : body of code to compile. can be empty
## arg 9 : optional or not-optional required argument
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_EXT_HDRS        => lib path
##      EXT_HDRS_LIB_DIR_FLAG   => all the -L's
##      EXT_HDRS_LIB_FLAG       => all the -l's
##      HAVE_EXT_HDRS           => yes or no
##      INC_EXT_HDRS_H          => all the -I's
##      HAVE_EXT_HDRS_H         => yes or no



echo "$as_me:$LINENO: checking for correct OpenGL extension headers  (optional)" >&5
echo $ECHO_N "checking for correct OpenGL extension headers  (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

for i in $_sci_inc; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_includes"; then
      _sci_includes=-I$i
    else
      _sci_includes="$_sci_includes -I$i"
    fi
  fi
done


for i in GL; do
  if test -z "$_sci_libs"; then
    _sci_libs=-l$i
  else
    _sci_libs="$_sci_libs -l$i"
  fi
done

_sci_lib_path=

for i in $_sci_lib; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_lib_path"; then
      _sci_lib_path="$LDRUN_PREFIX$i -L$i"
    else
      _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$i -L$i"
    fi
  fi
done

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

  #define GL_GLEXT_PROTOTYPES
  #include <GL/gl.h>
  #include <GL/glext.h>

int
main ()
{

  int r = 5;

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_EXT_HDRS='"$_sci_lib"'

if test "$_sci_lib" = "$SCI_THIRDPARTY_LIB_DIR"; then
  eval EXT_HDRS_LIB_DIR_FLAG=''
else
  eval EXT_HDRS_LIB_DIR_FLAG='"$_sci_lib_path"'
fi

eval EXT_HDRS_LIB_FLAG='"$_sci_libs"'
eval HAVE_EXT_HDRS="yes"

if test "$_sci_includes" = "$INC_SCI_THIRDPARTY_H"; then
  eval INC_EXT_HDRS_H=''
else
  eval INC_EXT_HDRS_H='"$_sci_includes"'
fi

eval HAVE_EXT_HDRS_H="yes"
echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_EXT_HDRS=''
eval EXT_HDRS_LIB_DIR_FLAG=''
eval EXT_HDRS_LIB_FLAG=''
eval HAVE_EXT_HDRS="no"
eval INC_EXT_HDRS_H=''
eval HAVE_EXT_HDRS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" = "not-optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required EXT_HDRS failed.
    To see the failed compile information, look in config.log,
    search for EXT_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required EXT_HDRS failed.
    To see the failed compile information, look in config.log,
    search for EXT_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''



if test "$HAVE_EXT_HDRS" = "yes"; then
  DEF_OGL_EXT_HDRS="#define CORRECT_OGLEXT_HDRS 1"
else
  DEF_OGL_EXT_HDRS=""
fi

if test "$avr" = "yes"; then
  { echo "$as_me:$LINENO: WARNING:
  *** Including the Advance Volume Rendering (AVR) code in compilation.        ***
  *** Note: configure can erroneously determine this platform can use AVR.     ***
  *** use --disable-advanced-volume-rendering if compilation fails due to AVR. ***
  " >&5
echo "$as_me: WARNING:
  *** Including the Advance Volume Rendering (AVR) code in compilation.        ***
  *** Note: configure can erroneously determine this platform can use AVR.     ***
  *** use --disable-advanced-volume-rendering if compilation fails due to AVR. ***
  " >&2;}
  COMPILE_AVR=1
  DEF_HAVE_AVR="#define HAVE_AVR_SUPPORT 1"
elif test "$avr" = "no"; then
  { echo "$as_me:$LINENO: WARNING:
  *** Will not compile the advance volume rendering code. ***
  " >&5
echo "$as_me: WARNING:
  *** Will not compile the advance volume rendering code. ***
  " >&2;}
  COMPILE_AVR=""
  DEF_HAVE_AVR=""
else
  DEF_HAVE_AVR=""

  if test "$HAVE_EXT_HDRS" = "yes"; then

## arguments mean:
## arg 1 : variable base name i.e. MATH
## arg 2 : checking message
## arg 3 : includes that arg 6 needs to compile
## arg 4 : include paths -I
## arg 5 : list of libs to link against -l
## arg 6 : lib paths -L
## arg 7 : extra link flags
## arg 8 : body of code to compile. can be empty
## arg 9 : optional or not-optional required argument
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_AVR        => lib path
##      AVR_LIB_DIR_FLAG   => all the -L's
##      AVR_LIB_FLAG       => all the -l's
##      HAVE_AVR           => yes or no
##      INC_AVR_H          => all the -I's
##      HAVE_AVR_H         => yes or no



echo "$as_me:$LINENO: checking for Advanced Volume OpenGL support (optional)" >&5
echo $ECHO_N "checking for Advanced Volume OpenGL support (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

for i in $_sci_inc; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_includes"; then
      _sci_includes=-I$i
    else
      _sci_includes="$_sci_includes -I$i"
    fi
  fi
done


for i in GL; do
  if test -z "$_sci_libs"; then
    _sci_libs=-l$i
  else
    _sci_libs="$_sci_libs -l$i"
  fi
done

_sci_lib_path=

for i in $_sci_lib; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_lib_path"; then
      _sci_lib_path="$LDRUN_PREFIX$i -L$i"
    else
      _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$i -L$i"
    fi
  fi
done

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

      #define GL_GLEXT_PROTOTYPES
      #include <GL/gl.h>
      #include <GL/glext.h>

int
main ()
{

      glBindProgramARB(0,0);
      glActiveTexture(0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_AVR='"$_sci_lib"'

if test "$_sci_lib" = "$SCI_THIRDPARTY_LIB_DIR"; then
  eval AVR_LIB_DIR_FLAG=''
else
  eval AVR_LIB_DIR_FLAG='"$_sci_lib_path"'
fi

eval AVR_LIB_FLAG='"$_sci_libs"'
eval HAVE_AVR="yes"

if test "$_sci_includes" = "$INC_SCI_THIRDPARTY_H"; then
  eval INC_AVR_H=''
else
  eval INC_AVR_H='"$_sci_includes"'
fi

eval HAVE_AVR_H="yes"
echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_AVR=''
eval AVR_LIB_DIR_FLAG=''
eval AVR_LIB_FLAG=''
eval HAVE_AVR="no"
eval INC_AVR_H=''
eval HAVE_AVR_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" = "not-optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required AVR failed.
    To see the failed compile information, look in config.log,
    search for AVR. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required AVR failed.
    To see the failed compile information, look in config.log,
    search for AVR. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''


  else

## arguments mean:
## arg 1 : variable base name i.e. MATH
## arg 2 : checking message
## arg 3 : includes that arg 6 needs to compile
## arg 4 : include paths -I
## arg 5 : list of libs to link against -l
## arg 6 : lib paths -L
## arg 7 : extra link flags
## arg 8 : body of code to compile. can be empty
## arg 9 : optional or not-optional required argument
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_AVR        => lib path
##      AVR_LIB_DIR_FLAG   => all the -L's
##      AVR_LIB_FLAG       => all the -l's
##      HAVE_AVR           => yes or no
##      INC_AVR_H          => all the -I's
##      HAVE_AVR_H         => yes or no



echo "$as_me:$LINENO: checking for Advanced Volume OpenGL support (optional)" >&5
echo $ECHO_N "checking for Advanced Volume OpenGL support (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

for i in $_sci_inc; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_includes"; then
      _sci_includes=-I$i
    else
      _sci_includes="$_sci_includes -I$i"
    fi
  fi
done


for i in GL; do
  if test -z "$_sci_libs"; then
    _sci_libs=-l$i
  else
    _sci_libs="$_sci_libs -l$i"
  fi
done

_sci_lib_path=

for i in $_sci_lib; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_lib_path"; then
      _sci_lib_path="$LDRUN_PREFIX$i -L$i"
    else
      _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$i -L$i"
    fi
  fi
done

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

      #include <GL/gl.h>

int
main ()
{

      glActiveTexture(0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_AVR='"$_sci_lib"'

if test "$_sci_lib" = "$SCI_THIRDPARTY_LIB_DIR"; then
  eval AVR_LIB_DIR_FLAG=''
else
  eval AVR_LIB_DIR_FLAG='"$_sci_lib_path"'
fi

eval AVR_LIB_FLAG='"$_sci_libs"'
eval HAVE_AVR="yes"

if test "$_sci_includes" = "$INC_SCI_THIRDPARTY_H"; then
  eval INC_AVR_H=''
else
  eval INC_AVR_H='"$_sci_includes"'
fi

eval HAVE_AVR_H="yes"
echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_AVR=''
eval AVR_LIB_DIR_FLAG=''
eval AVR_LIB_FLAG=''
eval HAVE_AVR="no"
eval INC_AVR_H=''
eval HAVE_AVR_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" = "not-optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required AVR failed.
    To see the failed compile information, look in config.log,
    search for AVR. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required AVR failed.
    To see the failed compile information, look in config.log,
    search for AVR. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''



  fi

  if test "$HAVE_AVR" = "yes"; then
  { echo "$as_me:$LINENO: WARNING:
  *** Will include the advance volume rendering code in compilation.  ***
  *** configure can erroneously determine this platform can use avr.  ***
  *** use --disable-advanced-volume-rendering if compilation fails.   ***
  " >&5
echo "$as_me: WARNING:
  *** Will include the advance volume rendering code in compilation.  ***
  *** configure can erroneously determine this platform can use avr.  ***
  *** use --disable-advanced-volume-rendering if compilation fails.   ***
  " >&2;}
    COMPILE_AVR=1
    DEF_HAVE_AVR="#define HAVE_AVR_SUPPORT 1"
  fi

  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


fi




##  --  search for dlopen  -----------------------------------------------

##
## SCI_TRY_LINK (DL):  dlopen in libc
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libc
## arg 3 : dlfcn.h
## arg 4 :
## arg 5 : c
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_DL        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libc.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libc.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for dlopen in libc (optional)" >&5
echo $ECHO_N "checking for dlopen in libc (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for dlopen in libc must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for dlopen in libc must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "c"; then

   found_framework=no
   for lib in "" c; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_DL='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_DL=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested DL include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested DL library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libc
##



if test "$HAVE_DL" = "yes"; then
   HAVE_LIB_DL="yes"
else
  case $host in
  *-darwin*)

##
## SCI_TRY_LINK (DL):  dlopen in libdl
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libdl
## arg 3 : dlfcn.h
## arg 4 : $sci_thirdparty_include
## arg 5 : dl
## arg 6 : $sci_thirdparty_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_DL        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for dlopen in libdl (required)" >&5
echo $ECHO_N "checking for dlopen in libdl (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $sci_thirdparty_include (the -I paths) is blank, do nothing, else do the for statement.

for inc in $sci_thirdparty_include; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for DL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for DL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($sci_thirdparty_include) of DL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($sci_thirdparty_include) of DL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "dl"; then

   found_framework=no
   for lib in "" dl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$sci_thirdparty_lib"; then

   for path in "" $sci_thirdparty_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $sci_thirdparty_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $sci_thirdparty_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: $sci_thirdparty_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: $sci_thirdparty_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $sci_thirdparty_include
  __sci_pass=false
  __sci_first_time=true
  for value in "" $sci_thirdparty_include; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$sci_thirdparty_include" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: $sci_thirdparty_include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: $sci_thirdparty_include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

      dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_DL='"$sci_thirdparty_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_DL=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for $sci_thirdparty_include/$i
    if test ! -e $sci_thirdparty_include/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL include file '$sci_thirdparty_include/$i' was not found" >&5
echo "$as_me: error: Specifically requested DL include file '$sci_thirdparty_include/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" dl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $sci_thirdparty_lib/lib$i.so && test ! -e $sci_thirdparty_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL library file '$sci_thirdparty_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested DL library file '$sci_thirdparty_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libdl
##


    ;;
  *-pc-mingw*)
    echo "Using Windows dynamic loader"
    DL_LIB_FLAG=""
    DL_LIB_DIR_FLAG=""
    ;;
  *)

##
## SCI_TRY_LINK (DL):  dlopen in libdl
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libdl
## arg 3 : dlfcn.h
## arg 4 :
## arg 5 : dl
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_DL        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for dlopen in libdl (required)" >&5
echo $ECHO_N "checking for dlopen in libdl (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "dl"; then

   found_framework=no
   for lib in "" dl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

      dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_DL='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_DL=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested DL include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" dl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested DL library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested DL library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libdl
##


    ;;
  esac
fi




##  --  search for required headers  --------------------------------------

##  --  optional stat64 headers
# stat64 is a CC lib so it has to be checked as a CC file not C.
ext="$ac_ext"
ac_ext="cc"


##
## SCI_TRY_LINK (STAT64):  sys/stat.h
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STAT64
## arg 2 : sys/stat.h
## arg 3 : sys/stat.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STAT64        => lib path
##      STAT64_LIB_DIR_FLAG   => all the -L's
##      STAT64_LIB_FLAG       => all the -l's
##      HAVE_STAT64           => yes or no
##      INC_STAT64_H          => all the -I's
##      HAVE_STAT64_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for sys/stat.h.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for sys/stat.h.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for sys/stat.h (optional)" >&5
echo $ECHO_N "checking for sys/stat.h (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for sys/stat.h must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for sys/stat.h must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STAT64 check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STAT64 check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STAT64 check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STAT64 check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STAT64 only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STAT64 only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STAT64 only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STAT64 only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" sys/stat.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  struct stat64 buf;

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STAT64='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STAT64_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STAT64_LIB_FLAG="'$final_libs'"
eval HAVE_STAT64="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STAT64_H="'$final_incs'"
eval HAVE_STAT64_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STAT64=''
eval STAT64_LIB_DIR_FLAG=''
eval STAT64_LIB_FLAG=''
eval HAVE_STAT64="no"
eval INC_STAT64_H=''
eval HAVE_STAT64_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STAT64 failed.
    To see the failed compile information, look in config.log,
    search for STAT64. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STAT64 failed.
    To see the failed compile information, look in config.log,
    search for STAT64. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" sys/stat.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STAT64 include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STAT64 include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STAT64 library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STAT64 library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STAT64):  sys/stat.h
##



# Restore the previous settings.
ac_ext="$ext"

if test "$HAVE_STAT64" = "yes"; then
  DEF_STAT64="#define HAVE_STAT64 1"
fi


sci_defs_files="$sci_defs_files include/sci_defs/stat64_testdefs.h"

##  --  required standard headers

##
## SCI_TRY_LINK (STD_HDRS):  standard headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers
## arg 3 : stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h unistd.h ctype.h signal.h locale.h dirent.h assert.h sys/types.h sys/time.h sys/stat.h sys/timeb.h sys/param.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STD_HDRS        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for standard headers (required)" >&5
echo $ECHO_N "checking for standard headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for standard headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for standard headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h unistd.h ctype.h signal.h locale.h dirent.h assert.h sys/types.h sys/time.h sys/stat.h sys/timeb.h sys/param.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STD_HDRS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STD_HDRS=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h unistd.h ctype.h signal.h locale.h dirent.h assert.h sys/types.h sys/time.h sys/stat.h sys/timeb.h sys/param.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers
##



# don't test for malloc.h or values.h on darwin
# don't test a bunch of then on win32
case $host in
  *-darwin*)

##
## SCI_TRY_LINK (STD_HDRS):  standard headers-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers-2
## arg 3 : netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STD_HDRS        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for standard headers-2 (required)" >&5
echo $ECHO_N "checking for standard headers-2 (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STD_HDRS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STD_HDRS=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers-2
##


    ;;
  *-irix*)
    # test for required sqi headers as well

##
## SCI_TRY_LINK (STD_HDRS):  SGI standard headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : SGI standard headers
## arg 3 : ieeefp.h ulocks.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STD_HDRS        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for SGI standard headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for SGI standard headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for SGI standard headers (required)" >&5
echo $ECHO_N "checking for SGI standard headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for SGI standard headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for SGI standard headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ieeefp.h ulocks.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STD_HDRS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STD_HDRS=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ieeefp.h ulocks.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  SGI standard headers
##


    DEF_IEEEFP="#define HAVE_IEEEFP_H 1"
    ;;
  *-pc-mingw*)
    ;;

  *)
    # default system headers that cannot be tested on all systems

##
## SCI_TRY_LINK (STD_HDRS):  standard headers-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers-2
## arg 3 : values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STD_HDRS        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for standard headers-2 (required)" >&5
echo $ECHO_N "checking for standard headers-2 (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_c_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STD_HDRS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STD_HDRS=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STD_HDRS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers-2
##


    ;;
esac


sci_defs_files="$sci_defs_files include/sci_defs/ieeefp_testdefs.h"

##  --  required STL headers
##  --      (only look for STL after going into cplusplus mode)
##
ac_ext=cc
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu



##
## SCI_TRY_LINK (STL_HEADERS):  standard template library headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STL_HEADERS
## arg 2 : standard template library headers
## arg 3 : algorithm vector map iostream string
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_STL_HEADERS        => lib path
##      STL_HEADERS_LIB_DIR_FLAG   => all the -L's
##      STL_HEADERS_LIB_FLAG       => all the -l's
##      HAVE_STL_HEADERS           => yes or no
##      INC_STL_HEADERS_H          => all the -I's
##      HAVE_STL_HEADERS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard template library headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for standard template library headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for standard template library headers (required)" >&5
echo $ECHO_N "checking for standard template library headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for standard template library headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for standard template library headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of STL_HEADERS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STL_HEADERS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of STL_HEADERS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STL_HEADERS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STL_HEADERS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STL_HEADERS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for STL_HEADERS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for STL_HEADERS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" algorithm vector map iostream string; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  std::vector<int> vec;
  std::cout << "blah" << std::endl;

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_STL_HEADERS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STL_HEADERS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STL_HEADERS_LIB_FLAG="'$final_libs'"
eval HAVE_STL_HEADERS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STL_HEADERS_H="'$final_incs'"
eval HAVE_STL_HEADERS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_STL_HEADERS=''
eval STL_HEADERS_LIB_DIR_FLAG=''
eval STL_HEADERS_LIB_FLAG=''
eval HAVE_STL_HEADERS="no"
eval INC_STL_HEADERS_H=''
eval HAVE_STL_HEADERS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required STL_HEADERS failed.
    To see the failed compile information, look in config.log,
    search for STL_HEADERS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required STL_HEADERS failed.
    To see the failed compile information, look in config.log,
    search for STL_HEADERS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" algorithm vector map iostream string; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested STL_HEADERS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested STL_HEADERS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested STL_HEADERS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested STL_HEADERS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STL_HEADERS):  standard template library headers
##



echo "$as_me:$LINENO: checking for location of hash_map" >&5
echo $ECHO_N "checking for location of hash_map... $ECHO_C" >&6
DEF_HASHMAP=None
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <hash_map>
                std::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  DEF_HASHMAP=HAVE_STD_HASHMAP
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
if test "$DEF_HASHMAP" = "None"; then
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ext/hash_map>
                 std::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  DEF_HASHMAP=HAVE_EXT_HASHMAP
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
if test "$DEF_HASHMAP" = "None"; then
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <ext/hash_map>
                 __gnu_cxx::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  DEF_HASHMAP=HAVE_GNU_HASHMAP
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
fi
if test "$DEF_HASHMAP" = "None"; then
  DEF_HASHMAP=
  echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
  { echo "$as_me:$LINENO: WARNING: Cannot find hash_map, will use map instead" >&5
echo "$as_me: WARNING: Cannot find hash_map, will use map instead" >&2;}
else
  echo "$as_me:$LINENO: result: found: $DEF_HASHMAP" >&5
echo "${ECHO_T}found: $DEF_HASHMAP" >&6
  DEF_HASHMAP="#define $DEF_HASHMAP 1"
fi

sci_defs_files="$sci_defs_files include/sci_defs/hashmap_testdefs.h"

##  --  search for tcl stuff  ---------------------------------------------
echo
{ echo "$as_me:$LINENO: checking for required Tcl components......" >&5
echo "$as_me: checking for required Tcl components......" >&6;}
echo

_sci_optional=required
if test "$with_tcl"; then
  _sci_inc="$with_tcl/include"
  _sci_lib="$with_tcl/lib"
  _sci_optional=specific
else
  _sci_inc="$sci_thirdparty_include"
  _sci_lib="$sci_thirdparty_lib"
fi

if test -f "$_sci_lib/tclConfig.sh"; then
  . $_sci_lib/tclConfig.sh;
  if test ! -d $TCL_SRC_DIR; then
     # Catch the case of the SCIRun 3P being copied to a new location.
     { echo "$as_me:$LINENO: WARNING: The TCL src dir specified in the $sci_lib/tclConfig.sh file" >&5
echo "$as_me: WARNING: The TCL src dir specified in the $sci_lib/tclConfig.sh file" >&2;}
     { echo "$as_me:$LINENO: WARNING: is not valid.  This usually means that this SCIRun Thirdparty" >&5
echo "$as_me: WARNING: is not valid.  This usually means that this SCIRun Thirdparty" >&2;}
     { echo "$as_me:$LINENO: WARNING: was copied to and not built in its current location." >&5
echo "$as_me: WARNING: was copied to and not built in its current location." >&2;}
     { { echo "$as_me:$LINENO: error: This is not allowed.  Please rebuild the 3P or contact" >&5
echo "$as_me: error: This is not allowed.  Please rebuild the 3P or contact" >&2;}
   { (exit 1); exit 1; }; }
     { { echo "$as_me:$LINENO: error: scirun-develop@sci.utah.edu for more help." >&5
echo "$as_me: error: scirun-develop@sci.utah.edu for more help." >&2;}
   { (exit 1); exit 1; }; }
  fi
  _sci_tcl_inc="$_sci_inc $TCL_SRC_DIR/generic"
else
  _sci_tcl_inc="$_sci_inc"
fi


##
## SCI_TRY_LINK (TCL):  tcl library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TCL
## arg 2 : tcl library and headers
## arg 3 : tcl.h tclPort.h tclMath.h tclInt.h
## arg 4 : $_sci_tcl_inc
## arg 5 : tcl
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_TCL        => lib path
##      TCL_LIB_DIR_FLAG   => all the -L's
##      TCL_LIB_FLAG       => all the -l's
##      HAVE_TCL           => yes or no
##      INC_TCL_H          => all the -I's
##      HAVE_TCL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for tcl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for tcl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for tcl library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for tcl library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for tcl library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for tcl library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_tcl_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_tcl_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for TCL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for TCL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_tcl_inc) of TCL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_tcl_inc) of TCL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "tcl"; then

   found_framework=no
   for lib in "" tcl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of TCL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TCL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of TCL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TCL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TCL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TCL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_tcl_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_tcl_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_tcl_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TCL only one include path may be specified for arg 4 (you had: $_sci_tcl_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TCL only one include path may be specified for arg 4 (you had: $_sci_tcl_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" tcl.h tclPort.h tclMath.h tclInt.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_TCL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TCL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TCL_LIB_FLAG="'$final_libs'"
eval HAVE_TCL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TCL_H="'$final_incs'"
eval HAVE_TCL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_TCL=''
eval TCL_LIB_DIR_FLAG=''
eval TCL_LIB_FLAG=''
eval HAVE_TCL="no"
eval INC_TCL_H=''
eval HAVE_TCL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required TCL failed.
    To see the failed compile information, look in config.log,
    search for TCL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required TCL failed.
    To see the failed compile information, look in config.log,
    search for TCL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" tcl.h tclPort.h tclMath.h tclInt.h; do
    #echo looking for $_sci_tcl_inc/$i
    if test ! -e $_sci_tcl_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested TCL include file '$_sci_tcl_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested TCL include file '$_sci_tcl_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" tcl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested TCL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested TCL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TCL):  tcl library and headers
##



if test "$IS_WIN" = "yes"; then
  # change the unix-style dir to a windows-style dir for tclsh to read
  LIB_DIR_TCL=`echo "$LIB_DIR_TCL" | sed 's,/,,' | sed 's,/,:/,'`
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${LIB_DIR_TCL}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval LIB_DIR_TCL='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${TCL_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval TCL_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_TCL_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_TCL_H='"$_new_path"'







# -- tk --
if test -f "$_sci_lib/tkConfig.sh"; then
  . $_sci_lib/tkConfig.sh;
  _sci_tk_inc="$_sci_inc $TK_SRC_DIR/generic $TK_SRC_DIR/unix"
else
  _sci_tk_inc="$_sci_inc"
fi

# Note: TK_DEFS (used below to help resolve tk issues) comes from tkConfig.sh

##
## SCI_TRY_LINK (TK):  tk library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TK
## arg 2 : tk library and headers
## arg 3 : tk.h tk3d.h tkPort.h
## arg 4 : $_x_inc_dir $_sci_tk_inc
## arg 5 : tk $TCL_LIB_FLAG
## arg 6 : $_sci_lib
## arg 7 : $TK_DEFS $TCL_LIB_DIR_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_TK        => lib path
##      TK_LIB_DIR_FLAG   => all the -L's
##      TK_LIB_FLAG       => all the -l's
##      HAVE_TK           => yes or no
##      INC_TK_H          => all the -I's
##      HAVE_TK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for tk library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for tk library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for tk library and headers (required)" >&5
echo $ECHO_N "checking for tk library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for tk library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for tk library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_x_inc_dir $_sci_tk_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_x_inc_dir $_sci_tk_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for TK include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for TK include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir $_sci_tk_inc) of TK check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir $_sci_tk_inc) of TK check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "tk $TCL_LIB_FLAG"; then

   found_framework=no
   for lib in "" tk $TCL_LIB_FLAG; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of TK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of TK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_x_inc_dir $_sci_tk_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_x_inc_dir $_sci_tk_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_x_inc_dir $_sci_tk_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TK only one include path may be specified for arg 4 (you had: $_x_inc_dir $_sci_tk_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TK only one include path may be specified for arg 4 (you had: $_x_inc_dir $_sci_tk_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $TK_DEFS $TCL_LIB_DIR_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" tk.h tk3d.h tkPort.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_TK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TK_LIB_FLAG="'$final_libs'"
eval HAVE_TK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TK_H="'$final_incs'"
eval HAVE_TK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_TK=''
eval TK_LIB_DIR_FLAG=''
eval TK_LIB_FLAG=''
eval HAVE_TK="no"
eval INC_TK_H=''
eval HAVE_TK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required TK failed.
    To see the failed compile information, look in config.log,
    search for TK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required TK failed.
    To see the failed compile information, look in config.log,
    search for TK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" tk.h tk3d.h tkPort.h; do
    #echo looking for $_x_inc_dir $_sci_tk_inc/$i
    if test ! -e $_x_inc_dir $_sci_tk_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested TK include file '$_x_inc_dir $_sci_tk_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested TK include file '$_x_inc_dir $_sci_tk_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" tk $TCL_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested TK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested TK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TK):  tk library and headers
##




##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${TK_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval TK_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_TK_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_TK_H='"$_new_path"'






# -- itcl --

##
## SCI_TRY_LINK (ITCL):  itcl library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : ITCL
## arg 2 : itcl library and headers
## arg 3 : itcl.h
## arg 4 : $_sci_inc
## arg 5 : itcl
## arg 6 : $_sci_lib
## arg 7 : $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_ITCL        => lib path
##      ITCL_LIB_DIR_FLAG   => all the -L's
##      ITCL_LIB_FLAG       => all the -l's
##      HAVE_ITCL           => yes or no
##      INC_ITCL_H          => all the -I's
##      HAVE_ITCL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for itcl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for itcl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for itcl library and headers (required)" >&5
echo $ECHO_N "checking for itcl library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for itcl library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for itcl library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for ITCL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for ITCL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of ITCL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of ITCL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "itcl"; then

   found_framework=no
   for lib in "" itcl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of ITCL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of ITCL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of ITCL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of ITCL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for ITCL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for ITCL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for ITCL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for ITCL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" itcl.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_ITCL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval ITCL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval ITCL_LIB_FLAG="'$final_libs'"
eval HAVE_ITCL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_ITCL_H="'$final_incs'"
eval HAVE_ITCL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_ITCL=''
eval ITCL_LIB_DIR_FLAG=''
eval ITCL_LIB_FLAG=''
eval HAVE_ITCL="no"
eval INC_ITCL_H=''
eval HAVE_ITCL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required ITCL failed.
    To see the failed compile information, look in config.log,
    search for ITCL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required ITCL failed.
    To see the failed compile information, look in config.log,
    search for ITCL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" itcl.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested ITCL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested ITCL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" itcl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested ITCL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested ITCL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (ITCL):  itcl library and headers
##



if test "$IS_WIN" = "yes"; then
  # change the unix-style dir to a windows-style dir for tclsh to read
  LIB_DIR_ITCL=`echo "$LIB_DIR_ITCL" | sed 's,/,,' | sed 's,/,:/,'`
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${LIB_DIR_ITCL}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval LIB_DIR_ITCL='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${ITCL_LIB_DIR_FLAG_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval ITCL_LIB_DIR_FLAG_H='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_ITCL_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_ITCL_H='"$_new_path"'







# -- itk --

##
## SCI_TRY_LINK (ITK):  itk library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : ITK
## arg 2 : itk library and headers
## arg 3 : itk.h
## arg 4 : $_x_inc_dir $_sci_inc
## arg 5 : itk
## arg 6 : $_sci_lib
## arg 7 : $ITCL_LIB_DIR_FLAG $ITCL_LIB_FLAG $TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_ITK        => lib path
##      ITK_LIB_DIR_FLAG   => all the -L's
##      ITK_LIB_FLAG       => all the -l's
##      HAVE_ITK           => yes or no
##      INC_ITK_H          => all the -I's
##      HAVE_ITK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for itk library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for itk library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for itk library and headers (required)" >&5
echo $ECHO_N "checking for itk library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for itk library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for itk library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_x_inc_dir $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_x_inc_dir $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for ITK include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for ITK include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir $_sci_inc) of ITK check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_x_inc_dir $_sci_inc) of ITK check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "itk"; then

   found_framework=no
   for lib in "" itk; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of ITK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of ITK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of ITK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of ITK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for ITK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for ITK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_x_inc_dir $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_x_inc_dir $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_x_inc_dir $_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for ITK only one include path may be specified for arg 4 (you had: $_x_inc_dir $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for ITK only one include path may be specified for arg 4 (you had: $_x_inc_dir $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $ITCL_LIB_DIR_FLAG $ITCL_LIB_FLAG $TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" itk.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_ITK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval ITK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval ITK_LIB_FLAG="'$final_libs'"
eval HAVE_ITK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_ITK_H="'$final_incs'"
eval HAVE_ITK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_ITK=''
eval ITK_LIB_DIR_FLAG=''
eval ITK_LIB_FLAG=''
eval HAVE_ITK="no"
eval INC_ITK_H=''
eval HAVE_ITK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required ITK failed.
    To see the failed compile information, look in config.log,
    search for ITK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required ITK failed.
    To see the failed compile information, look in config.log,
    search for ITK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" itk.h; do
    #echo looking for $_x_inc_dir $_sci_inc/$i
    if test ! -e $_x_inc_dir $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested ITK include file '$_x_inc_dir $_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested ITK include file '$_x_inc_dir $_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" itk; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested ITK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested ITK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (ITK):  itk library and headers
##




##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${ITK_LIB_DIR_FLAG_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval ITK_LIB_DIR_FLAG_H='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_ITK_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_ITK_H='"$_new_path"'






# -- blt --

##
## SCI_TRY_LINK (BLT):  BLT library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLT
## arg 2 : BLT library and headers
## arg 3 : blt.h
## arg 4 : $_sci_inc
## arg 5 : BLT
## arg 6 : $_sci_lib
## arg 7 : $TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLT        => lib path
##      BLT_LIB_DIR_FLAG   => all the -L's
##      BLT_LIB_FLAG       => all the -l's
##      HAVE_BLT           => yes or no
##      INC_BLT_H          => all the -I's
##      HAVE_BLT_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for BLT library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for BLT library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for BLT library and headers (required)" >&5
echo $ECHO_N "checking for BLT library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for BLT library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for BLT library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLT include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLT include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLT check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLT check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "BLT"; then

   found_framework=no
   for lib in "" BLT; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLT check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLT check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLT check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLT check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $TK_LIB_DIR_FLAG $TK_LIB_FLAG $TCL_LIB_DIR_FLAG $TCL_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" blt.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLT='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLT_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLT_LIB_FLAG="'$final_libs'"
eval HAVE_BLT="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLT_H="'$final_incs'"
eval HAVE_BLT_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLT=''
eval BLT_LIB_DIR_FLAG=''
eval BLT_LIB_FLAG=''
eval HAVE_BLT="no"
eval INC_BLT_H=''
eval HAVE_BLT_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLT failed.
    To see the failed compile information, look in config.log,
    search for BLT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLT failed.
    To see the failed compile information, look in config.log,
    search for BLT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" blt.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLT include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLT include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" BLT; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLT library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLT library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLT):  BLT library and headers
##



if test "$IS_WIN" = "yes"; then
  # Windows BLT needs these other libs
  BLT_LIB_FLAG="$BLT_LIB_FLAG -lgdi32 -lwinspool -lcomdlg32"
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${BLT_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval BLT_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_BLT_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_BLT_H='"$_new_path"'






# -- check TCL version == 8.3.2 and TK version == 8.3.2
CORRECT_TCL_VERSION=no
CORRECT_TK_VERSION=no
CORRECT_ITCL_VERSION=no

# if we don't have the tcl/tkConfig.sh files, we can grab the version number from the header file
if ! test -f "$_sci_lib/tclConfig.sh"; then
  TCL_VERSION=`grep TCL_VERSION $sci_thirdparty_include/tcl.h | head -n 1 | awk '{print $3}' | sed 's,\",,g'`
  TCL_PATCH_LEVEL=".`grep TCL_RELEASE_SERIAL $sci_thirdparty_include/tcl.h | head -n 1 | awk '{print $3}'`"
  TCL_PREFIX=$sci_thirdparty_dir
fi

if ! test -f "$_sci_lib/tkConfig.sh"; then
  TK_VERSION=`grep TK_VERSION $sci_thirdparty_include/tk.h | head -n 1 | awk '{print $3}' | sed 's,\",,g'`
  TK_PATCH_LEVEL=".`grep TK_RELEASE_SERIAL $sci_thirdparty_include/tk.h | head -n 1 | awk '{print $3}'`"
fi


    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="8.3.2"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for Tcl version 8.3.2" >&5
echo $ECHO_N "checking for Tcl version 8.3.2... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TCL_VERSION$TCL_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="8.3.2"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for Tk version 8.3.2" >&5
echo $ECHO_N "checking for Tk version 8.3.2... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TK_VERSION$TK_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi


    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="$TK_VERSION$TK_PATCH_LEVEL"
    _CUR_1_=""
    _CUR_2_=""

    echo "$as_me:$LINENO: checking for equal Tcl and Tk version $TK_VERSION$TK_PATCH_LEVEL" >&5
echo $ECHO_N "checking for equal Tcl and Tk version $TK_VERSION$TK_PATCH_LEVEL... $ECHO_C" >&6

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test "-ne"; then
      _SCI_COMP_="-ne"
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TCL_VERSION$TCL_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$as_me:$LINENO: result: yes ($_SCI_REPORT_)" >&5
echo "${ECHO_T}yes ($_SCI_REPORT_)" >&6
      eval $_SCI_CORRECT_
    else
      echo "$as_me:$LINENO: result: no ($_SCI_REPORT_)" >&5
echo "${ECHO_T}no ($_SCI_REPORT_)" >&6
      eval $_SCI_NOTCORRECT_
    fi








##  --  search for xerces-c++ --
_sci_optional=required
if test "$with_xercesc"; then
  _xer_lib_path="$with_xercesc/lib"
  _xer_inc="$with_xercesc/include"
  _sci_optional=specific
else
  _xer_lib_path="$sci_thirdparty_lib"
  _xer_inc="$sci_thirdparty_include"
fi

_xer_lib="xerces-c"
case $host in
  *aix*)
      # Needed on blue pacific for stricmp
      _xer_lib="xerces-c cfgdce"
      ;;
esac


##
## SCI_TRY_LINK (XERCES_C):  xerces library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : XERCES_C
## arg 2 : xerces library and headers
## arg 3 : xercesc/dom/DOMNamedNodeMap.hpp xercesc/util/PlatformUtils.hpp xercesc/parsers/XercesDOMParser.hpp xercesc/dom/DOMNode.hpp xercesc/util/XMLUni.hpp xercesc/sax/SAXException.hpp xercesc/sax/SAXParseException.hpp xercesc/sax/ErrorHandler.hpp
## arg 4 : $_xer_inc
## arg 5 : $_xer_lib
## arg 6 : $_xer_lib_path
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_XERCES_C        => lib path
##      XERCES_C_LIB_DIR_FLAG   => all the -L's
##      XERCES_C_LIB_FLAG       => all the -l's
##      HAVE_XERCES_C           => yes or no
##      INC_XERCES_C_H          => all the -I's
##      HAVE_XERCES_C_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for xerces library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for xerces library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for xerces library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for xerces library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for xerces library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for xerces library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_xer_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_xer_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for XERCES_C include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for XERCES_C include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_xer_inc) of XERCES_C check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_xer_inc) of XERCES_C check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "$_xer_lib"; then

   found_framework=no
   for lib in "" $_xer_lib; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of XERCES_C check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of XERCES_C check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_xer_lib_path"; then

   for path in "" $_xer_lib_path; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of XERCES_C check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of XERCES_C check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_xer_lib_path (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_xer_lib_path; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for XERCES_C only one library path may be specified for arg 6 (you had: $_xer_lib_path).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for XERCES_C only one library path may be specified for arg 6 (you had: $_xer_lib_path).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_xer_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_xer_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_xer_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for XERCES_C only one include path may be specified for arg 4 (you had: $_xer_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for XERCES_C only one include path may be specified for arg 4 (you had: $_xer_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" xercesc/dom/DOMNamedNodeMap.hpp xercesc/util/PlatformUtils.hpp xercesc/parsers/XercesDOMParser.hpp xercesc/dom/DOMNode.hpp xercesc/util/XMLUni.hpp xercesc/sax/SAXException.hpp xercesc/sax/SAXParseException.hpp xercesc/sax/ErrorHandler.hpp; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  DOMNode *node = 0;
  node->getNodeName();

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_XERCES_C='"$_xer_lib_path"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval XERCES_C_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval XERCES_C_LIB_FLAG="'$final_libs'"
eval HAVE_XERCES_C="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_XERCES_C_H="'$final_incs'"
eval HAVE_XERCES_C_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_XERCES_C=''
eval XERCES_C_LIB_DIR_FLAG=''
eval XERCES_C_LIB_FLAG=''
eval HAVE_XERCES_C="no"
eval INC_XERCES_C_H=''
eval HAVE_XERCES_C_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required XERCES_C failed.
    To see the failed compile information, look in config.log,
    search for XERCES_C. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required XERCES_C failed.
    To see the failed compile information, look in config.log,
    search for XERCES_C. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" xercesc/dom/DOMNamedNodeMap.hpp xercesc/util/PlatformUtils.hpp xercesc/parsers/XercesDOMParser.hpp xercesc/dom/DOMNode.hpp xercesc/util/XMLUni.hpp xercesc/sax/SAXException.hpp xercesc/sax/SAXParseException.hpp xercesc/sax/ErrorHandler.hpp; do
    #echo looking for $_xer_inc/$i
    if test ! -e $_xer_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested XERCES_C include file '$_xer_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested XERCES_C include file '$_xer_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" $_xer_lib; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_xer_lib_path/lib$i.so && test ! -e $_xer_lib_path/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested XERCES_C library file '$_xer_lib_path/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested XERCES_C library file '$_xer_lib_path/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (XERCES_C):  xerces library and headers
##




##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${XERCES_C_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval XERCES_C_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_XERCES_C_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_XERCES_C_H='"$_new_path"'






##  ----------------------------------------------------------------------
##  ----------  required checks for optional libraries and headers  ------
##  ----------------------------------------------------------------------

##  --  search for optional headers  ------------------------------------


##
## SCI_TRY_LINK (SSTREAM):  sstream header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : SSTREAM
## arg 2 : sstream header
## arg 3 : sstream
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_SSTREAM        => lib path
##      SSTREAM_LIB_DIR_FLAG   => all the -L's
##      SSTREAM_LIB_FLAG       => all the -l's
##      HAVE_SSTREAM           => yes or no
##      INC_SSTREAM_H          => all the -I's
##      HAVE_SSTREAM_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for sstream header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for sstream header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for sstream header (optional)" >&5
echo $ECHO_N "checking for sstream header (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for sstream header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for sstream header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of SSTREAM check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of SSTREAM check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of SSTREAM check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of SSTREAM check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SSTREAM only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SSTREAM only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SSTREAM only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SSTREAM only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" sstream; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_SSTREAM='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval SSTREAM_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval SSTREAM_LIB_FLAG="'$final_libs'"
eval HAVE_SSTREAM="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_SSTREAM_H="'$final_incs'"
eval HAVE_SSTREAM_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_SSTREAM=''
eval SSTREAM_LIB_DIR_FLAG=''
eval SSTREAM_LIB_FLAG=''
eval HAVE_SSTREAM="no"
eval INC_SSTREAM_H=''
eval HAVE_SSTREAM_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required SSTREAM failed.
    To see the failed compile information, look in config.log,
    search for SSTREAM. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required SSTREAM failed.
    To see the failed compile information, look in config.log,
    search for SSTREAM. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" sstream; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested SSTREAM include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested SSTREAM include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested SSTREAM library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested SSTREAM library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (SSTREAM):  sstream header
##



if test "$HAVE_SSTREAM" = "yes"; then
   SSTREAM_COMPAT="no"
else
   # Use SCIRun sstream compatibility files...
   SSTREAM_COMPAT="yes"
fi



##  --  search for SGI'S or Win32's traceback library  ------------------------------

_sci_optional=optional
if test "$with_exc"; then
  _sci_lib="$with_exc"
  _sci_inc="$with_exc/../include"
  _sci_optional=specific
else
  _sci_lib=
  _sci_inc=
fi

if test "$IS_WIN" = "yes"; then
  # it's 'imagehlp' but call it EXC anyway so we don't have to change
  # other config parameters

##
## SCI_TRY_LINK (EXC):  WIN32 traceback library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : EXC
## arg 2 : WIN32 traceback library and headers
## arg 3 : windows.h imagehlp.h
## arg 4 : $_sci_inc
## arg 5 : imagehlp
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_EXC        => lib path
##      EXC_LIB_DIR_FLAG   => all the -L's
##      EXC_LIB_FLAG       => all the -l's
##      HAVE_EXC           => yes or no
##      INC_EXC_H          => all the -I's
##      HAVE_EXC_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for WIN32 traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for WIN32 traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for WIN32 traceback library and headers (required)" >&5
echo $ECHO_N "checking for WIN32 traceback library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for WIN32 traceback library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for WIN32 traceback library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for EXC include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for EXC include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "imagehlp"; then

   found_framework=no
   for lib in "" imagehlp; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" windows.h imagehlp.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_EXC='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval EXC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval EXC_LIB_FLAG="'$final_libs'"
eval HAVE_EXC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_EXC_H="'$final_incs'"
eval HAVE_EXC_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_EXC=''
eval EXC_LIB_DIR_FLAG=''
eval EXC_LIB_FLAG=''
eval HAVE_EXC="no"
eval INC_EXC_H=''
eval HAVE_EXC_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" windows.h imagehlp.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested EXC include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested EXC include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" imagehlp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested EXC library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested EXC library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (EXC):  WIN32 traceback library and headers
##


else

##
## SCI_TRY_LINK (EXC):  traceback library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : EXC
## arg 2 : traceback library and headers
## arg 3 : libexc.h
## arg 4 : $_sci_inc
## arg 5 : exc
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_EXC        => lib path
##      EXC_LIB_DIR_FLAG   => all the -L's
##      EXC_LIB_FLAG       => all the -l's
##      HAVE_EXC           => yes or no
##      INC_EXC_H          => all the -I's
##      HAVE_EXC_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for traceback library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for traceback library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for traceback library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for traceback library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for EXC include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for EXC include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "exc"; then

   found_framework=no
   for lib in "" exc; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" libexc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_EXC='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval EXC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval EXC_LIB_FLAG="'$final_libs'"
eval HAVE_EXC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_EXC_H="'$final_incs'"
eval HAVE_EXC_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_EXC=''
eval EXC_LIB_DIR_FLAG=''
eval EXC_LIB_FLAG=''
eval HAVE_EXC="no"
eval INC_EXC_H=''
eval HAVE_EXC_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" libexc.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested EXC include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested EXC include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" exc; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested EXC library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested EXC library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (EXC):  traceback library and headers
##


fi

if test "$HAVE_EXC" = "yes" -a "$IS_WIN" != "yes"; then
  DEF_EXC="#define HAVE_EXC 1"
fi

if test "$with_exc" && test ! "$DEF_EXC"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the EXC components is missing." >&5
echo "$as_me: error: One or more of the EXC components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi




sci_defs_files="$sci_defs_files include/sci_defs/exe_testdefs.h"

##  --  search for gzopen (and related)  ----------------------------------

## Since variables create by this section are used to check for PNG
## and TEEM stuff this section needs to preceed them.

_sci_optional=required
_sci_lib=
_sci_inc=

if test "$with_zlib"; then
  if test "$with_zlib" = "yes"; then
    { echo "$as_me:$LINENO: WARNING: Zlib is already required - you do not need to specify --with-zlib." >&5
echo "$as_me: WARNING: Zlib is already required - you do not need to specify --with-zlib." >&2;}
  else
    _sci_lib="$with_zlib/lib"
    _sci_inc="$with_zlib/include"
    _sci_optional=specific
  fi
fi


##
## SCI_TRY_LINK (Z):  zlib library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : Z
## arg 2 : zlib library and header
## arg 3 : zlib.h
## arg 4 : $_sci_inc
## arg 5 : z
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_Z        => lib path
##      Z_LIB_DIR_FLAG   => all the -L's
##      Z_LIB_FLAG       => all the -l's
##      HAVE_Z           => yes or no
##      INC_Z_H          => all the -I's
##      HAVE_Z_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for zlib library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for zlib library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for zlib library and header ($_sci_optional)" >&5
echo $ECHO_N "checking for zlib library and header ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for zlib library and header must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for zlib library and header must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for Z include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for Z include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of Z check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of Z check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "z"; then

   found_framework=no
   for lib in "" z; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of Z check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of Z check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of Z check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of Z check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for Z only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for Z only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for Z only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for Z only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" zlib.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_Z='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval Z_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval Z_LIB_FLAG="'$final_libs'"
eval HAVE_Z="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_Z_H="'$final_incs'"
eval HAVE_Z_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_Z=''
eval Z_LIB_DIR_FLAG=''
eval Z_LIB_FLAG=''
eval HAVE_Z="no"
eval INC_Z_H=''
eval HAVE_Z_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required Z failed.
    To see the failed compile information, look in config.log,
    search for Z. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required Z failed.
    To see the failed compile information, look in config.log,
    search for Z. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" zlib.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested Z include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested Z include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" z; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested Z library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested Z library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (Z):  zlib library and header
##



if test "$HAVE_Z" = "yes"; then
   DEF_Z="#define HAVE_ZLIB 1"
fi

if test "$with_zlib" && test ! "$DEF_Z"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the GZOPEN components is missing." >&5
echo "$as_me: error: One or more of the GZOPEN components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi





sci_defs_files="$sci_defs_files include/sci_defs/z_testdefs.h"

##  --  search for jpeg and tiff -----------------------------------------

_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_jpeg"; then
   if test "$with_jpeg" = "yes"; then
      _sci_optional=required
   else
      _sci_lib="$with_jpeg/lib"
      _sci_inc="$with_jpeg/include"
      _sci_optional=specific
   fi
fi


##
## SCI_TRY_LINK (JPEG):  jpeg library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : JPEG
## arg 2 : jpeg library
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : jpeg
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_JPEG        => lib path
##      JPEG_LIB_DIR_FLAG   => all the -L's
##      JPEG_LIB_FLAG       => all the -l's
##      HAVE_JPEG           => yes or no
##      INC_JPEG_H          => all the -I's
##      HAVE_JPEG_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for jpeg library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for jpeg library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for jpeg library ($_sci_optional)" >&5
echo $ECHO_N "checking for jpeg library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for jpeg library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for jpeg library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for JPEG include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for JPEG include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of JPEG check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of JPEG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "jpeg"; then

   found_framework=no
   for lib in "" jpeg; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of JPEG check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of JPEG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of JPEG check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of JPEG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for JPEG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for JPEG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for JPEG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for JPEG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_JPEG='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval JPEG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval JPEG_LIB_FLAG="'$final_libs'"
eval HAVE_JPEG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_JPEG_H="'$final_incs'"
eval HAVE_JPEG_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_JPEG=''
eval JPEG_LIB_DIR_FLAG=''
eval JPEG_LIB_FLAG=''
eval HAVE_JPEG="no"
eval INC_JPEG_H=''
eval HAVE_JPEG_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required JPEG failed.
    To see the failed compile information, look in config.log,
    search for JPEG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required JPEG failed.
    To see the failed compile information, look in config.log,
    search for JPEG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested JPEG include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested JPEG include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" jpeg; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested JPEG library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested JPEG library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (JPEG):  jpeg library
##






_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_tiff"; then
   if test "$with_tiff" = "yes"; then
      _sci_optional=required
   else
      _sci_lib="$with_tiff/lib"
      _sci_inc="$with_tiff/include"
      _sci_optional=specific
   fi
fi


##
## SCI_TRY_LINK (TIFF):  tiff library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TIFF
## arg 2 : tiff library
## arg 3 : tiff.h
## arg 4 : $_sci_inc
## arg 5 : tiff
## arg 6 : $_sci_lib
## arg 7 : $M_LIB_DIR_FLAG $M_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_TIFF        => lib path
##      TIFF_LIB_DIR_FLAG   => all the -L's
##      TIFF_LIB_FLAG       => all the -l's
##      HAVE_TIFF           => yes or no
##      INC_TIFF_H          => all the -I's
##      HAVE_TIFF_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for tiff library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for tiff library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for tiff library ($_sci_optional)" >&5
echo $ECHO_N "checking for tiff library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for tiff library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for tiff library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for TIFF include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for TIFF include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TIFF check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TIFF check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "tiff"; then

   found_framework=no
   for lib in "" tiff; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of TIFF check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TIFF check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of TIFF check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TIFF check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TIFF only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TIFF only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TIFF only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TIFF only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $M_LIB_DIR_FLAG $M_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" tiff.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_TIFF='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TIFF_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TIFF_LIB_FLAG="'$final_libs'"
eval HAVE_TIFF="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TIFF_H="'$final_incs'"
eval HAVE_TIFF_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_TIFF=''
eval TIFF_LIB_DIR_FLAG=''
eval TIFF_LIB_FLAG=''
eval HAVE_TIFF="no"
eval INC_TIFF_H=''
eval HAVE_TIFF_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required TIFF failed.
    To see the failed compile information, look in config.log,
    search for TIFF. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required TIFF failed.
    To see the failed compile information, look in config.log,
    search for TIFF. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" tiff.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested TIFF include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested TIFF include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" tiff; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested TIFF library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested TIFF library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TIFF):  tiff library
##






##  --  search for png --------------------------------------

# Default values:
_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_png" = "yes"; then
  # If --with-png is specified without a parameter, then it makes it required
  _sci_optional=required
else
  if test "$with_png"; then
    # If --with-png has a parameter, then use it
    _sci_lib="$with_png"
    _sci_inc="$with_png/include"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=specific
  fi
fi


##
## SCI_TRY_LINK (PNG):  png library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PNG
## arg 2 : png library and headers
## arg 3 : png.h
## arg 4 : $_sci_inc
## arg 5 : png
## arg 6 : $_sci_lib
## arg 7 : $Z_LIB_DIR_FLAG $Z_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PNG        => lib path
##      PNG_LIB_DIR_FLAG   => all the -L's
##      PNG_LIB_FLAG       => all the -l's
##      HAVE_PNG           => yes or no
##      INC_PNG_H          => all the -I's
##      HAVE_PNG_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for png library and headers (optional)" >&5
echo $ECHO_N "checking for png library and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for png library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for png library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PNG include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PNG include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of PNG check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of PNG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "png"; then

   found_framework=no
   for lib in "" png; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $Z_LIB_DIR_FLAG $Z_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" png.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PNG='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PNG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PNG_LIB_FLAG="'$final_libs'"
eval HAVE_PNG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PNG_H="'$final_incs'"
eval HAVE_PNG_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PNG=''
eval PNG_LIB_DIR_FLAG=''
eval PNG_LIB_FLAG=''
eval HAVE_PNG="no"
eval INC_PNG_H=''
eval HAVE_PNG_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" png.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PNG include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested PNG include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" png; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PNG library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PNG library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PNG):  png library and headers
##



# Now check for the correct version.
if test "$HAVE_PNG" = "yes"; then

    echo "$as_me:$LINENO: checking for PNG version 1.0.2 or better." >&5
echo $ECHO_N "checking for PNG version 1.0.2 or better.... $ECHO_C" >&6
    cat > conftest-png.c <<EOF

         #include <png.h>
         #include <stdio.h>

         int main() {

           if (PNG_LIBPNG_VER < 10002) {
	       printf("1\n");
	   } else {
	       printf("0\n");
           }
          return 0;
         }
EOF
    #echo "$CC $INC_PNG_H conftest-png.c -o conftest-png"
    $CC $INC_PNG_H conftest-png.c -o conftest-png
    #ls -l conftest-png
    png_error=`./conftest-png`
    rm -f conftest-png conftest-png.c

    if test "$png_error" != "0"; then
       echo "$as_me:$LINENO: result: PNG library too old.  Need at least 1.0.2.  Turning off PNG." >&5
echo "${ECHO_T}PNG library too old.  Need at least 1.0.2.  Turning off PNG." >&6
       DEF_PNG=""
       HAVE_PNG="no"
       PNG_LIB_FLAG=""
       PNG_LIB_DIR_FLAG=""
       INC_PNG_H=""
       DEF_PNG=""
    else
       echo "$as_me:$LINENO: result: yes." >&5
echo "${ECHO_T}yes." >&6
       DEF_PNG="#define HAVE_PNG 1"
    fi

    break
fi

if test "$HAVE_PNG" = "no"; then
  # Try looking in a sci specific location (but only if it exists)
  if test -d /usr/sci/local; then

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=/usr/sci/local/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=/usr/sci/local/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=/usr/sci/local/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=/usr/sci/local/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=/usr/sci/local/lib
    fi
  fi
  eval png_lib_dir='"$_new_lib_path"'


##
## SCI_TRY_LINK (PNG):  png library and headers (SCI)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PNG
## arg 2 : png library and headers (SCI)
## arg 3 : png.h
## arg 4 : /usr/sci/local/include
## arg 5 : png
## arg 6 : $png_lib_dir
## arg 7 : $Z_LIB_DIR_FLAG $Z_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PNG        => lib path
##      PNG_LIB_DIR_FLAG   => all the -L's
##      PNG_LIB_FLAG       => all the -l's
##      HAVE_PNG           => yes or no
##      INC_PNG_H          => all the -I's
##      HAVE_PNG_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers (SCI).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers (SCI).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for png library and headers (SCI) (optional)" >&5
echo $ECHO_N "checking for png library and headers (SCI) (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for png library and headers (SCI) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for png library and headers (SCI) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If /usr/sci/local/include (the -I paths) is blank, do nothing, else do the for statement.

for inc in /usr/sci/local/include; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PNG include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PNG include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 (/usr/sci/local/include) of PNG check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 (/usr/sci/local/include) of PNG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "png"; then

   found_framework=no
   for lib in "" png; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$png_lib_dir"; then

   for path in "" $png_lib_dir; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $png_lib_dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $png_lib_dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $png_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $png_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in /usr/sci/local/include
  __sci_pass=false
  __sci_first_time=true
  for value in "" /usr/sci/local/include; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "/usr/sci/local/include" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: /usr/sci/local/include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: /usr/sci/local/include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $Z_LIB_DIR_FLAG $Z_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" png.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PNG='"$png_lib_dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PNG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PNG_LIB_FLAG="'$final_libs'"
eval HAVE_PNG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PNG_H="'$final_incs'"
eval HAVE_PNG_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PNG=''
eval PNG_LIB_DIR_FLAG=''
eval PNG_LIB_FLAG=''
eval HAVE_PNG="no"
eval INC_PNG_H=''
eval HAVE_PNG_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" png.h; do
    #echo looking for /usr/sci/local/include/$i
    if test ! -e /usr/sci/local/include/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PNG include file '/usr/sci/local/include/$i' was not found" >&5
echo "$as_me: error: Specifically requested PNG include file '/usr/sci/local/include/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" png; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $png_lib_dir/lib$i.so && test ! -e $png_lib_dir/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PNG library file '$png_lib_dir/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PNG library file '$png_lib_dir/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PNG):  png library and headers (SCI)
##


  fi
else
  if test "$_sci_optional" = "specific"; then
       echo "$as_me:$LINENO: checking that PNG is in requestion location '$with_png/lib'" >&5
echo $ECHO_N "checking that PNG is in requestion location '$with_png/lib'... $ECHO_C" >&6
       # verify that it was found in the location requested.
       if test ! -e $with_png/lib/libpng.so &&
          test ! -e $with_png/lib/libpng.a &&
          test ! -e $with_png/lib/libpng.dylib; then
            echo
            { { echo "$as_me:$LINENO: error: Found libpng but not in requested directory: $with_png/lib" >&5
echo "$as_me: error: Found libpng but not in requested directory: $with_png/lib" >&2;}
   { (exit 1); exit 1; }; }
       fi
       echo "$as_me:$LINENO: result: yes." >&5
echo "${ECHO_T}yes." >&6
    fi
fi

if test "$with_png" && test ! "$DEF_PNG"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the png components is missing." >&5
echo "$as_me: error: One or more of the png components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi







##  --  check if exceptions work properly --------------------------------

echo "$as_me:$LINENO: checking for working exceptions." >&5
echo $ECHO_N "checking for working exceptions.... $ECHO_C" >&6
cat > conftest-exc.cc <<EOF

    #include <stdio.h>

    int main() {
      try {
        throw "hello world";
      }
      catch( const char* e ) {
        printf("error is %s\n", e);
      }
    }
EOF
    $CXX -o conftest-exc conftest-exc.cc
    exc_error=`./conftest-exc >& the_void`
    if test "$?" != "0"; then
       echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
       enable_exceptions_crash=1
       EXCEPTIONS_CRASH_DEF="#define EXCEPTIONS_CRASH 1"
    else
       echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6
       enable_exceptions_crash=0
       EXCEPTIONS_CRASH_DEF=""
    fi

    rm -r conftest-exc.cc conftest-exc the_void


##  --  search for mpeg  -------------------------------------------------

_sci_optional=optional
if test "$with_mpeg"; then
  _sci_lib="$with_mpeg/lib"
  _sci_optional=specific
else
  _sci_lib="$sci_thirdparty_lib"
fi


##
## SCI_TRY_LINK (MPEGE):  MPEG library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPEGE
## arg 2 : MPEG library
## arg 3 :
## arg 4 :
## arg 5 : mpege
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPEGE        => lib path
##      MPEGE_LIB_DIR_FLAG   => all the -L's
##      MPEGE_LIB_FLAG       => all the -l's
##      HAVE_MPEGE           => yes or no
##      INC_MPEGE_H          => all the -I's
##      HAVE_MPEGE_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for MPEG library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for MPEG library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for MPEG library ($_sci_optional)" >&5
echo $ECHO_N "checking for MPEG library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for MPEG library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for MPEG library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "mpege"; then

   found_framework=no
   for lib in "" mpege; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPEGE check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPEGE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPEGE check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPEGE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPEGE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPEGE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPEGE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPEGE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPEGE='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPEGE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPEGE_LIB_FLAG="'$final_libs'"
eval HAVE_MPEGE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPEGE_H="'$final_incs'"
eval HAVE_MPEGE_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPEGE=''
eval MPEGE_LIB_DIR_FLAG=''
eval MPEGE_LIB_FLAG=''
eval HAVE_MPEGE="no"
eval INC_MPEGE_H=''
eval HAVE_MPEGE_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPEGE failed.
    To see the failed compile information, look in config.log,
    search for MPEGE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPEGE failed.
    To see the failed compile information, look in config.log,
    search for MPEGE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPEGE include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPEGE include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpege; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPEGE library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPEGE library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPEGE):  MPEG library
##



if test "$HAVE_MPEGE" = "yes"; then
  DEF_MPEG="#define HAVE_MPEG 1"
fi

if test "$with_mpeg" && test ! "$DEF_MPEG"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the MPEG components is missing." >&5
echo "$as_me: error: One or more of the MPEG components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${MPEGE_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval MPEGE_LIB_DIR_FLAG='"$_new_path"'






##  --  search for ImageMagick --------------------------------------

# Default values:
_sci_optional=optional
_sci_lib="$sci_thirdparty_lib"

if test "$with_magick" = "yes"; then
  # If --with-magick is specified without a parameter, then it makes it required
  _sci_optional=required
else
  if test "$with_magick"; then
    # If --with-magick has a parameter, then use it
    _sci_lib="$with_magick/lib"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=specific
  fi
fi

echo "$as_me:$LINENO: checking for $_sci_optional ImageMagick" >&5
echo $ECHO_N "checking for $_sci_optional ImageMagick... $ECHO_C" >&6

if test ! -e $_sci_lib/../bin/Magick-config; then
   { echo "$as_me:$LINENO: WARNING: Magick-config on in SCIRun Thirdparty installation.  Going to" >&5
echo "$as_me: WARNING: Magick-config on in SCIRun Thirdparty installation.  Going to" >&2;}
   { echo "$as_me:$LINENO: WARNING: try to find it based on the location of the 'convert' program." >&5
echo "$as_me: WARNING: try to find it based on the location of the 'convert' program." >&2;}
   # ImageMagick not in SCIRun Thirdparty... Therefore it probably is
   # just in /usr/lib...
   MAGICK_DIR=`which convert`
   if test -z "$MAGICK_DIR"; then
      _sci_lib=$MAGICK_DIR/../lib
   else
      { echo "$as_me:$LINENO: WARNING: 'convert' program not found..." >&5
echo "$as_me: WARNING: 'convert' program not found..." >&2;}
   fi
fi

found_magic_config="no"

if test -e $_sci_lib/../bin/Magick-config; then
    found_magic_config="yes"
    echo
    echo "$as_me:$LINENO: result: Using $_sci_lib/../bin/Magick-config to set ImageMagick variables." >&5
echo "${ECHO_T}Using $_sci_lib/../bin/Magick-config to set ImageMagick variables." >&6

    MAG_LIBS=`$_sci_lib/../bin/Magick-config --libs`
    MAG_DIRS=`$_sci_lib/../bin/Magick-config --ldflags`

    #MAGICK_LIB_DIR_FLAG=
    #SCI_REMOVE_MINUS_L(MAGICK_LIB_FLAG,$MAG_DIRS,$MAG_LIBS)

    MAGICK_LIB_DIR_FLAG=`$_sci_lib/../bin/Magick-config --ldflags`
    MAGICK_LIB_FLAG=`$_sci_lib/../bin/Magick-config --libs`
    includes=`$_sci_lib/../bin/Magick-config --cppflags`


##
## SCI_TRY_LINK (MAGICK):  ImageMagick library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MAGICK
## arg 2 : ImageMagick library and headers
## arg 3 : magick/magick.h
## arg 4 : $includes
## arg 5 : $MAGICK_LIB_FLAG
## arg 6 : $MAGICK_LIB_DIR_FLAG
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MAGICK        => lib path
##      MAGICK_LIB_DIR_FLAG   => all the -L's
##      MAGICK_LIB_FLAG       => all the -l's
##      HAVE_MAGICK           => yes or no
##      INC_MAGICK_H          => all the -I's
##      HAVE_MAGICK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for ImageMagick library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for ImageMagick library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for ImageMagick library and headers (required)" >&5
echo $ECHO_N "checking for ImageMagick library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for ImageMagick library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for ImageMagick library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $includes (the -I paths) is blank, do nothing, else do the for statement.

for inc in $includes; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MAGICK include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MAGICK include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($includes) of MAGICK check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($includes) of MAGICK check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "$MAGICK_LIB_FLAG"; then

   found_framework=no
   for lib in "" $MAGICK_LIB_FLAG; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MAGICK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MAGICK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$MAGICK_LIB_DIR_FLAG"; then

   for path in "" $MAGICK_LIB_DIR_FLAG; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MAGICK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MAGICK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $MAGICK_LIB_DIR_FLAG (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $MAGICK_LIB_DIR_FLAG; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MAGICK only one library path may be specified for arg 6 (you had: $MAGICK_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MAGICK only one library path may be specified for arg 6 (you had: $MAGICK_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $includes
  __sci_pass=false
  __sci_first_time=true
  for value in "" $includes; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$includes" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MAGICK only one include path may be specified for arg 4 (you had: $includes).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MAGICK only one include path may be specified for arg 4 (you had: $includes).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" magick/magick.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MAGICK='"$MAGICK_LIB_DIR_FLAG"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MAGICK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MAGICK_LIB_FLAG="'$final_libs'"
eval HAVE_MAGICK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MAGICK_H="'$final_incs'"
eval HAVE_MAGICK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MAGICK=''
eval MAGICK_LIB_DIR_FLAG=''
eval MAGICK_LIB_FLAG=''
eval HAVE_MAGICK="no"
eval INC_MAGICK_H=''
eval HAVE_MAGICK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MAGICK failed.
    To see the failed compile information, look in config.log,
    search for MAGICK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MAGICK failed.
    To see the failed compile information, look in config.log,
    search for MAGICK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" magick/magick.h; do
    #echo looking for $includes/$i
    if test ! -e $includes/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MAGICK include file '$includes/$i' was not found" >&5
echo "$as_me: error: Specifically requested MAGICK include file '$includes/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" $MAGICK_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $MAGICK_LIB_DIR_FLAG/lib$i.so && test ! -e $MAGICK_LIB_DIR_FLAG/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MAGICK library file '$MAGICK_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MAGICK library file '$MAGICK_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MAGICK):  ImageMagick library and headers
##



    DEF_MAGICK="#define HAVE_MAGICK 1"
    break
fi

if test "$found_magic_config" = "no"; then
   echo "$as_me:$LINENO: result: no." >&5
echo "${ECHO_T}no." >&6
   if test "$_sci_optional" != "optional"; then
     echo
     { echo "$as_me:$LINENO: WARNING: Cannot find a Magick-config file to get ImageMagick variables." >&5
echo "$as_me: WARNING: Cannot find a Magick-config file to get ImageMagick variables." >&2;}
     { echo "$as_me:$LINENO: WARNING: This file usually resides in Magicklib_dir/../bin/Magick-config." >&5
echo "$as_me: WARNING: This file usually resides in Magicklib_dir/../bin/Magick-config." >&2;}
     { echo "$as_me:$LINENO: WARNING: Please install ImageMagick and then reconfigure." >&5
echo "$as_me: WARNING: Please install ImageMagick and then reconfigure." >&2;}
   fi
fi

if test "$with_magick" && test ! "$DEF_MAGICK"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the ImageMagick components is missing." >&5
echo "$as_me: error: One or more of the ImageMagick components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${MAGICK_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval MAGICK_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_MAGICK_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_MAGICK_H='"$_new_path"'







sci_defs_files="$sci_defs_files include/sci_defs/image_testdefs.h"

##  --  search for scisock --------------------------------------






sci_defs_files="$sci_defs_files include/sci_defs/scisock_testdefs.h"

##  --  search for unp --------------------------------------

if test "$with_unp" = "yes"; then
  { { echo "$as_me:$LINENO: error: Please provide the location of the UNP package: --with-unp=<dir>" >&5
echo "$as_me: error: Please provide the location of the UNP package: --with-unp=<dir>" >&2;}
   { (exit 1); exit 1; }; }
fi

if test "$with_unp"; then
  _sci_lib="$with_unp/lib"
  _sci_inc="$with_unp/include"
else
  _sci_lib="$sci_thirdparty_lib"
  _sci_inc="$sci_thirdparty_include"
fi


##
## SCI_TRY_LINK (UNP):  unp socket library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : UNP
## arg 2 : unp socket library and headers
## arg 3 : extern_C unpv12e/unp.h unpv12e/unpthread.h
## arg 4 : $_sci_inc
## arg 5 : unp scisock
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_UNP        => lib path
##      UNP_LIB_DIR_FLAG   => all the -L's
##      UNP_LIB_FLAG       => all the -l's
##      HAVE_UNP           => yes or no
##      INC_UNP_H          => all the -I's
##      HAVE_UNP_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for unp socket library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for unp socket library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for unp socket library and headers (optional)" >&5
echo $ECHO_N "checking for unp socket library and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for unp socket library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for unp socket library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for UNP include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for UNP include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of UNP check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of UNP check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "unp scisock"; then

   found_framework=no
   for lib in "" unp scisock; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of UNP check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of UNP check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of UNP check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of UNP check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for UNP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for UNP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for UNP only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for UNP only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" extern_C unpv12e/unp.h unpv12e/unpthread.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  Connect(0, NULL, 0);

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_UNP='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval UNP_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval UNP_LIB_FLAG="'$final_libs'"
eval HAVE_UNP="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_UNP_H="'$final_incs'"
eval HAVE_UNP_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_UNP=''
eval UNP_LIB_DIR_FLAG=''
eval UNP_LIB_FLAG=''
eval HAVE_UNP="no"
eval INC_UNP_H=''
eval HAVE_UNP_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required UNP failed.
    To see the failed compile information, look in config.log,
    search for UNP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required UNP failed.
    To see the failed compile information, look in config.log,
    search for UNP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" extern_C unpv12e/unp.h unpv12e/unpthread.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested UNP include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested UNP include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" unp scisock; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested UNP library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested UNP library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (UNP):  unp socket library and headers
##







##  --  search for the fortran library  ----------------------------------
# Always check for fortran, since we now always try to enable blas

F_LIB_FLAG=""
F_LIB_DIR_FLAG=""

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$sci_required_fortran" = "yes"; then
  _sci_optional=required
fi

if test "$with_fortran" = "yes"; then
  _sci_optional=required
elif test "$with_fortran"; then
  _sci_lib="$with_fortran/lib"
  _sci_inc="$with_fortran/include"
  _sci_optional=specific
fi

case $host in
  *-irix*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : ftn fortran
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "ftn fortran"; then

   found_framework=no
   for lib in "" ftn fortran; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ftn fortran; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    ;;
  *aix*)
    # AIX Fortran Library Check

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : xlf90
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "xlf90"; then

   found_framework=no
   for lib in "" xlf90; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" xlf90; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    ;;
  *linux*)
    # Linux Library Check
    if test "$F77" = "pgf77"; then

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : pgftnrtl
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "pgftnrtl"; then

   found_framework=no
   for lib in "" pgftnrtl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" pgftnrtl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    elif test "$F77" = "gfortran-4.0"; then

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : gfortran
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "gfortran"; then

   found_framework=no
   for lib in "" gfortran; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" gfortran; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    elif test "$F77" = "ifort"; then

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : ifcore
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "ifcore"; then

   found_framework=no
   for lib in "" ifcore; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ifcore; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    else

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in "" g2c; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    fi
    ;;
  *dec*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : for Ufor
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "for Ufor"; then

   found_framework=no
   for lib in "" for Ufor; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" for Ufor; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    ;;
  *-darwin*)
    # OSX Library Check
    if test "$F77" = "xlf"; then

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : xlf90
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for F include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for F include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "xlf90"; then

   found_framework=no
   for lib in "" xlf90; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" xlf90; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    else

##
## SCI_TRY_LINK (F):  fotran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fotran libraries
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : gfortran
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fotran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fotran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fotran libraries (optional)" >&5
echo $ECHO_N "checking for fotran libraries (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fotran libraries must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fotran libraries must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for F include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for F include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "gfortran"; then

   found_framework=no
   for lib in "" gfortran; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" gfortran; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fotran libraries
##


      if test "$HAVE_F" = "no"; then

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for F include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for F include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in "" g2c; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


      fi
    fi
    ;;
  *-pc-mingw*)
    # Mingw g77 and libg2c

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in "" g2c; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    ;;
  *)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : F77
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_F        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for fortran libraries ($_sci_optional)" >&5
echo $ECHO_N "checking for fortran libraries ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "F77"; then

   found_framework=no
   for lib in "" F77; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_F='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_F=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested F include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested F include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" F77; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested F library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


    ;;
esac




##  --  search for Camal (Sandia meshing library) ------------------------

_sci_optional=optional

if test "$with_camal" = "yes"; then
  # If --with-camal is specified without a parameter, then it makes it required
  _sci_optional=required
else
  if test "$with_camal"; then
    # If --with-camal has a parameter, then use it
    _sci_lib="$with_camal"
    _sci_inc="$with_camal/include"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=specific
  fi
fi

if test "$_sci_optional" != "optional" && test "$HAVE_F" != "yes"; then
   { { echo "$as_me:$LINENO: error: Fortran library not found but is required for CAMAL!" >&5
echo "$as_me: error: Fortran library not found but is required for CAMAL!" >&2;}
   { (exit 1); exit 1; }; }
fi

if test "$IS_OSX" = "yes"; then

##
## SCI_TRY_LINK (CAMAL):  CAMAL library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : CAMAL
## arg 2 : CAMAL library
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : CMLTet210 CMLUtl210
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_CAMAL        => lib path
##      CAMAL_LIB_DIR_FLAG   => all the -L's
##      CAMAL_LIB_FLAG       => all the -l's
##      HAVE_CAMAL           => yes or no
##      INC_CAMAL_H          => all the -I's
##      HAVE_CAMAL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for CAMAL library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for CAMAL library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for CAMAL library ($_sci_optional)" >&5
echo $ECHO_N "checking for CAMAL library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for CAMAL library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for CAMAL library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for CAMAL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for CAMAL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of CAMAL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of CAMAL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "CMLTet210 CMLUtl210"; then

   found_framework=no
   for lib in "" CMLTet210 CMLUtl210; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of CAMAL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of CAMAL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of CAMAL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of CAMAL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CAMAL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CAMAL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CAMAL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CAMAL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_CAMAL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval CAMAL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval CAMAL_LIB_FLAG="'$final_libs'"
eval HAVE_CAMAL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_CAMAL_H="'$final_incs'"
eval HAVE_CAMAL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_CAMAL=''
eval CAMAL_LIB_DIR_FLAG=''
eval CAMAL_LIB_FLAG=''
eval HAVE_CAMAL="no"
eval INC_CAMAL_H=''
eval HAVE_CAMAL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required CAMAL failed.
    To see the failed compile information, look in config.log,
    search for CAMAL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required CAMAL failed.
    To see the failed compile information, look in config.log,
    search for CAMAL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested CAMAL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested CAMAL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" CMLTet210 CMLUtl210; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested CAMAL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested CAMAL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (CAMAL):  CAMAL library
##


  if test "$HAVE_CAMAL" = "yes"; then
    CAMAL_LIB_DIR_FLAG="$CAMAL_LIB_DIR_FLAG -Wl,-read_only_relocs,warning -single_module"
  fi
else

##
## SCI_TRY_LINK (CAMAL):  CAMAL library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : CAMAL
## arg 2 : CAMAL library
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : CMLTet202
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_CAMAL        => lib path
##      CAMAL_LIB_DIR_FLAG   => all the -L's
##      CAMAL_LIB_FLAG       => all the -l's
##      HAVE_CAMAL           => yes or no
##      INC_CAMAL_H          => all the -I's
##      HAVE_CAMAL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for CAMAL library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for CAMAL library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for CAMAL library ($_sci_optional)" >&5
echo $ECHO_N "checking for CAMAL library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for CAMAL library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for CAMAL library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for CAMAL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for CAMAL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of CAMAL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of CAMAL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "CMLTet202"; then

   found_framework=no
   for lib in "" CMLTet202; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of CAMAL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of CAMAL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of CAMAL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of CAMAL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CAMAL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CAMAL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CAMAL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CAMAL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_CAMAL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval CAMAL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval CAMAL_LIB_FLAG="'$final_libs'"
eval HAVE_CAMAL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_CAMAL_H="'$final_incs'"
eval HAVE_CAMAL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_CAMAL=''
eval CAMAL_LIB_DIR_FLAG=''
eval CAMAL_LIB_FLAG=''
eval HAVE_CAMAL="no"
eval INC_CAMAL_H=''
eval HAVE_CAMAL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required CAMAL failed.
    To see the failed compile information, look in config.log,
    search for CAMAL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required CAMAL failed.
    To see the failed compile information, look in config.log,
    search for CAMAL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested CAMAL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested CAMAL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" CMLTet202; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested CAMAL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested CAMAL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (CAMAL):  CAMAL library
##


fi

if test "$HAVE_CAMAL" = "yes"; then
  DEF_CAMAL="#define HAVE_CAMAL 1"
fi

if test "$with_camal" && test ! "$DEF_CAMAL"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the CAMAL components is missing." >&5
echo "$as_me: error: One or more of the CAMAL components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi







##  --  search for atlas stuff  -------------------------------------------

if test "$with_blas" && test "$with_atlas"; then
  { { echo "$as_me:$LINENO: error: You cannot use both --with-blas and --with-atlas." >&5
echo "$as_me: error: You cannot use both --with-blas and --with-atlas." >&2;}
   { (exit 1); exit 1; }; }
fi

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_atlas" = "yes"; then
  _sci_optional=required
elif test "$with_atlas"; then
  _sci_lib="$with_atlas/lib"
  _sci_inc="$with_atlas/include"
  _sci_optional=specific
fi

case $host in
  *-darwin*)
     if test "$with_atlas" && test "$with_atlas" != yes ; then
       { { echo "$as_me:$LINENO: error: Don't specify a path for atlas when on a Mac (we use vecLib by default.)" >&5
echo "$as_me: error: Don't specify a path for atlas when on a Mac (we use vecLib by default.)" >&2;}
   { (exit 1); exit 1; }; }
     fi

##
## SCI_TRY_LINK (BLAS):  atlas version of libraries and headers (OSX)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : atlas version of libraries and headers (OSX)
## arg 3 : vecLib/cblas.h
## arg 4 : -faltivec
## arg 5 :
## arg 6 :
## arg 7 : -framework vecLib
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers (OSX).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers (OSX).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for atlas version of libraries and headers (OSX) ($_sci_optional)" >&5
echo $ECHO_N "checking for atlas version of libraries and headers (OSX) ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for atlas version of libraries and headers (OSX) must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for atlas version of libraries and headers (OSX) must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If -faltivec (the -I paths) is blank, do nothing, else do the for statement.

for inc in -faltivec; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLAS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLAS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 (-faltivec) of BLAS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 (-faltivec) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in -faltivec
  __sci_pass=false
  __sci_first_time=true
  for value in "" -faltivec; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "-faltivec" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: -faltivec).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: -faltivec).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs -framework vecLib $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vecLib/cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vecLib/cblas.h; do
    #echo looking for -faltivec/$i
    if test ! -e -faltivec/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '-faltivec/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '-faltivec/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  atlas version of libraries and headers (OSX)
##


     ;;
   *)

##
## SCI_TRY_LINK (BLAS):  atlas version of libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : atlas version of libraries and headers
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : cblas f77blas atlas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for atlas version of libraries and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for atlas version of libraries and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for atlas version of libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for atlas version of libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLAS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLAS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "cblas f77blas atlas"; then

   found_framework=no
   for lib in "" cblas f77blas atlas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cblas f77blas atlas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  atlas version of libraries and headers
##


     ;;
esac

HAVE_CBLAS=$HAVE_BLAS
DEF_CBLAS=$DEF_BLAS

if test "$HAVE_BLAS" = "yes"; then
  DEF_BLAS="#define HAVE_BLAS 1"
  DEF_CBLAS="#define HAVE_CBLAS 1"
  sci_required_blas=no
fi


##  --  search for blas stuff  -------------------------------------------

_sci_lib=
_sci_inc=

if test "$HAVE_BLAS" != "yes"; then
  # if HAVE_BLAS is yes at this point, then atlas has been found and we
  # don't want to check for blas.

  if test "$with_blas" && test "$with_blas" != "yes"; then
    _sci_lib="$with_blas/lib"
    _sci_inc="$with_blas/include"
    _sci_specific=yes
  fi

  case $host in
    *aix*)

##
## SCI_TRY_LINK (BLAS):  essl library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : essl library
## arg 3 :
## arg 4 :
## arg 5 : essl
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for essl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for essl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for essl library (required)" >&5
echo $ECHO_N "checking for essl library (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for essl library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for essl library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "essl"; then

   found_framework=no
   for lib in "" essl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" essl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  essl library
##


       ;;
    *dec*)

##
## SCI_TRY_LINK (BLAS):  cxml library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : cxml library
## arg 3 :
## arg 4 :
## arg 5 : cxml
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for cxml library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for cxml library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for cxml library (required)" >&5
echo $ECHO_N "checking for cxml library (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for cxml library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for cxml library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "cxml"; then

   found_framework=no
   for lib in "" cxml; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cxml; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  cxml library
##


       ;;
    *)
       # Can't use the "specific" key word as we are testing for a number
       # of different configurations.

##
## SCI_TRY_LINK (BLAS):  blas and cblas libraries-1
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and cblas libraries-1
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : cblas blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for blas and cblas libraries-1 (optional)" >&5
echo $ECHO_N "checking for blas and cblas libraries-1 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for blas and cblas libraries-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for blas and cblas libraries-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLAS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLAS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "cblas blas"; then

   found_framework=no
   for lib in "" cblas blas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cblas blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and cblas libraries-1
##


       if test "$HAVE_BLAS" = "yes"; then
          HAVE_CBLAS=yes

	  DEF_CBLAS="#define HAVE_CBLAS 1"

       else

##
## SCI_TRY_LINK (BLAS):  blas and scs libraries-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and scs libraries-2
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : blas scs_mp
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and scs libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and scs libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for blas and scs libraries-2 (optional)" >&5
echo $ECHO_N "checking for blas and scs libraries-2 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for blas and scs libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for blas and scs libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLAS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLAS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "blas scs_mp"; then

   found_framework=no
   for lib in "" blas scs_mp; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas scs_mp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and scs libraries-2
##


          if test "$HAVE_BLAS" = "no"; then
             #scs library should be used on the SGI altix
             #SCI_TRY_LINK(BLAS,blas and scs libraries-2,cblas.h,
             #   $_sci_inc,blas scs_mp,$_sci_lib,$F_LIB_FLAG,,optional)

##
## SCI_TRY_LINK (BLAS):  blas and cblas libraries-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and cblas libraries-2
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for blas and cblas libraries-2 (optional)" >&5
echo $ECHO_N "checking for blas and cblas libraries-2 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for blas and cblas libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for blas and cblas libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BLAS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BLAS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in "" blas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and cblas libraries-2
##


             if test "$HAVE_BLAS" = "yes"; then
                HAVE_CBLAS=yes

                DEF_CBLAS="#define HAVE_CBLAS 1"

             else

##
## SCI_TRY_LINK (BLAS):  blas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas library
## arg 3 :
## arg 4 :
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for blas library (optional)" >&5
echo $ECHO_N "checking for blas library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in "" blas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas library
##


                if test "$HAVE_BLAS" = "no"; then

##
## SCI_TRY_LINK (BLAS):  optional fblas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : optional fblas library
## arg 3 :
## arg 4 :
## arg 5 : fblas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for optional fblas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for optional fblas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for optional fblas library (optional)" >&5
echo $ECHO_N "checking for optional fblas library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for optional fblas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for optional fblas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "fblas"; then

   found_framework=no
   for lib in "" fblas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" fblas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  optional fblas library
##


                else
                   # Verify it was in the right spot
                   if test "$_sci_specific" = "yes"; then

##
## SCI_TRY_LINK (BLAS):  blas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas library
## arg 3 :
## arg 4 :
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : specific
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BLAS        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for blas library (specific)" >&5
echo $ECHO_N "checking for blas library (specific)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "specific" != "optional" -a "specific" != "required" -a "specific" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had specific.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had specific.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in "" blas; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "specific" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BLAS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BLAS=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "specific" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "specific" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested BLAS include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BLAS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas library
##


                   fi
                fi
             fi
          fi
       fi
       ;;
  esac

  if test "$HAVE_BLAS" = "yes"; then
    DEF_BLAS="#define HAVE_BLAS 1"
  fi

  if test "$with_blas" && test ! "$DEF_BLAS"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the BLAS components is missing." >&5
echo "$as_me: error: One or more of the BLAS components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

fi # end sci_required_blas

# these are set above by atlas check if atlas check succeeded







sci_defs_files="$sci_defs_files include/sci_defs/blas_testdefs.h"

##  --  search for lapack stuff  -----------------------------------------

# DAV, FIX ME
# _sci_optional=optional
#if test "$sci_required_lapack" = "yes" ; then
#   _sci_optional=required
#fi

if test "$HAVE_F" = "yes" && test "$HAVE_BLAS" = "yes"; then
  if test "$with_lapack"; then
    _sci_lib="$with_lapack"
  else
    _sci_lib="$LIB_DIR_BLAS"
  fi
fi

case $host in
  *-darwin*)

##
## SCI_TRY_LINK (LAPACK):  lapack version oflibraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : lapack version oflibraries and headers
## arg 3 : vecLib/clapack.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 : -faltivec -framework vecLib
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LAPACK        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for lapack version oflibraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for lapack version oflibraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for lapack version oflibraries and headers (optional)" >&5
echo $ECHO_N "checking for lapack version oflibraries and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for lapack version oflibraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for lapack version oflibraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in "" ; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in "" ; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs -faltivec -framework vecLib $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vecLib/clapack.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LAPACK='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LAPACK=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vecLib/clapack.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested LAPACK include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK library file '/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LAPACK library file '/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  lapack version oflibraries and headers
##


     if test "$HAVE_LAPACK" = yes ; then
        LAPACK_LIB_FLAG="-faltivec -framework vecLib"
     fi
     ;;
   *)

##
## SCI_TRY_LINK (LAPACK):  lapack library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : lapack library
## arg 3 :
## arg 4 :
## arg 5 : lapack
## arg 6 : $_sci_lib
## arg 7 : $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LAPACK        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for lapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for lapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for lapack library (optional)" >&5
echo $ECHO_N "checking for lapack library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for lapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for lapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "lapack"; then

   found_framework=no
   for lib in "" lapack; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LAPACK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LAPACK=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested LAPACK include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" lapack; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  lapack library
##


     ;;
esac

if test "$HAVE_LAPACK" != "yes"; then

##
## SCI_TRY_LINK (LAPACK):  flapack library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : flapack library
## arg 3 :
## arg 4 :
## arg 5 : flapack
## arg 6 : $_sci_lib
## arg 7 : $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LAPACK        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for flapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for flapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for flapack library (optional)" >&5
echo $ECHO_N "checking for flapack library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for flapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for flapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "flapack"; then

   found_framework=no
   for lib in "" flapack; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LAPACK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LAPACK=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested LAPACK include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" flapack; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  flapack library
##


fi

# In some cases, some files need complib.sgimath_mp for the lapack
# library.  I have created this new var LAPACKMP to keep track of this
# information.  If the configure script finds complib.sgimath_mp, then
# the LAPACKMP vars will be updated.  If it does not, then the LAPACK
# vars will be used.
HAVE_LAPACKMP=$HAVE_LAPACK
LAPACKMP_LIB_FLAG=$LAPACK_LIB_FLAG
LAPACKMP_LIB_DIR_FLAG=$LAPACK_LIB_DIR_FLAG

if test "$HAVE_LAPACK" != "yes"; then

##
## SCI_TRY_LINK (LAPACK):  complib.sgimath library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : complib.sgimath library
## arg 3 :
## arg 4 :
## arg 5 : complib.sgimath
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LAPACK        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for complib.sgimath library (optional)" >&5
echo $ECHO_N "checking for complib.sgimath library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for complib.sgimath library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for complib.sgimath library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "complib.sgimath"; then

   found_framework=no
   for lib in "" complib.sgimath; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LAPACK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LAPACK=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested LAPACK include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" complib.sgimath; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LAPACK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  complib.sgimath library
##


  if test "$HAVE_LAPACK" = "yes"; then
       { echo "$as_me:$LINENO: WARNING: Using complib for lapack" >&5
echo "$as_me: WARNING: Using complib for lapack" >&2;}

##
## SCI_TRY_LINK (LAPACKMP):  complib.sgimath_mp library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACKMP
## arg 2 : complib.sgimath_mp library
## arg 3 :
## arg 4 :
## arg 5 : complib.sgimath_mp
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LAPACKMP        => lib path
##      LAPACKMP_LIB_DIR_FLAG   => all the -L's
##      LAPACKMP_LIB_FLAG       => all the -l's
##      HAVE_LAPACKMP           => yes or no
##      INC_LAPACKMP_H          => all the -I's
##      HAVE_LAPACKMP_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath_mp library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath_mp library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for complib.sgimath_mp library (optional)" >&5
echo $ECHO_N "checking for complib.sgimath_mp library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for complib.sgimath_mp library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for complib.sgimath_mp library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "complib.sgimath_mp"; then

   found_framework=no
   for lib in "" complib.sgimath_mp; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LAPACKMP check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACKMP check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LAPACKMP check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACKMP check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACKMP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACKMP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LAPACKMP only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LAPACKMP only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LAPACKMP='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACKMP_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACKMP_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACKMP="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACKMP_H="'$final_incs'"
eval HAVE_LAPACKMP_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LAPACKMP=''
eval LAPACKMP_LIB_DIR_FLAG=''
eval LAPACKMP_LIB_FLAG=''
eval HAVE_LAPACKMP="no"
eval INC_LAPACKMP_H=''
eval HAVE_LAPACKMP_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LAPACKMP failed.
    To see the failed compile information, look in config.log,
    search for LAPACKMP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LAPACKMP failed.
    To see the failed compile information, look in config.log,
    search for LAPACKMP. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACKMP include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested LAPACKMP include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" complib.sgimath_mp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LAPACKMP library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LAPACKMP library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACKMP):  complib.sgimath_mp library
##


  fi
fi

if test "$HAVE_LAPACK" = "yes"; then
  DEF_LAPACK="#define HAVE_LAPACK 1"
fi

if test "$with_lapack" && test ! "$DEF_LAPACK"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the LAPACK components is missing." >&5
echo "$as_me: error: One or more of the LAPACK components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi









sci_defs_files="$sci_defs_files include/sci_defs/lapack_testdefs.h"

##  --  search for mpi  --------------------------------------------------

if test "$sci_required_mpi" = "yes"; then
  echo
  { echo "$as_me:$LINENO: checking for required MPI components......" >&5
echo "$as_me: checking for required MPI components......" >&6;}
  echo

  case $host in
  #  *aix*)
        # On LLNL blue pacific, the "mp" compilers (scripts) automagically
        # include the paths to mpi stuff...  However, if you don't want
        # them to automatically force you to run in poe (batch) mode, you
        # can comment this out and link in MPI directly yourself.
        # The resulting executable works in non-mpi mode which can be easier
        # to debug (and to get to run as you don't go through the poe system.)
        # It is possible that the executable will not work in MPI mode.
        #
        # AC_MSG_WARN(On blue pacific the mp compilers automatically specify mpi.  No check made.)
        #
        # The reason you have to specify xlC/KCC above, and change it to
        # mpxlC/mpKCC here is that configure uses the compiler to create test
        # programs to figure things out about the system.  If you use
        # the mpCC compiler, then the test programs will not run (as they
        # try to run in POE mode.)
        #
        # CC="mp$CC"
        # CXX="mp$CXX"
        # ;;
     *)
        _sci_optional=optional
        if test "$with_mpi"; then
           if test "$with_mpi" = "yes"; then
              _sci_optional=required
           else
              _sci_optional=specific
              _sci_lib="$with_mpi/lib"
              _sci_inc="$with_mpi/include"
           fi
        fi

	# After each attempt to locate mpi, we need to verify that the mpi it
	# chose is in the path we specified.  This is because some machines
	# have MPI installed in a standard location and sometimes will choose
	# that one over the one we specified.
	the_file=libmpi

        # /usr/include/mpi is the standard location of mpi on some linux dists.

##
## SCI_TRY_LINK (MPI):  mpi library and header-1
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-1
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi lam util pmpi
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpi library and header-1 (optional)" >&5
echo $ECHO_N "checking for mpi library and header-1 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpi library and header-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpi library and header-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi lam util pmpi"; then

   found_framework=no
   for lib in "" mpi lam util pmpi; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi lam util pmpi; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-1
##



        if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
           test ! -e $with_mpi/lib/$the_file.so &&
           test ! -e $with_mpi/lib/$the_file.a &&
           test ! -e $with_mpi/lib/$the_file.dylib; then
             { echo "$as_me:$LINENO: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&5
echo "$as_me: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&2;}
	     HAVE_MPI="no"
        fi

        if test "$HAVE_MPI" != "yes"; then
          # Try without pmpi (and with pthreads) (for the newer version
          # of lam mpi.
          # Use -DMPIPP_H so we don't include mpi++.h where we don't want it.


##
## SCI_TRY_LINK (MPI):  mpi library and header-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-2
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi lam util pthread
## arg 6 : $_sci_lib
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpi library and header-2 (optional)" >&5
echo $ECHO_N "checking for mpi library and header-2 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpi library and header-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpi library and header-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi lam util pthread"; then

   found_framework=no
   for lib in "" mpi lam util pthread; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi lam util pthread; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-2
##



          # verify that it was found in the location requested.
          if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
             test ! -e $with_mpi/lib/$the_file.so &&
             test ! -e $with_mpi/lib/$the_file.a &&
             test ! -e $with_mpi/lib/$the_file.dylib; then
             { echo "$as_me:$LINENO: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&5
echo "$as_me: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&2;}
	     HAVE_MPI="no"
          fi

          if test "$HAVE_MPI" != "yes"; then
             # If building with newer LAM on OSX, pthreads and util not needed.

##
## SCI_TRY_LINK (MPI):  mpi library and header-3
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-3
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : lam mpi
## arg 6 : $_sci_lib
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-3.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-3.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpi library and header-3 (optional)" >&5
echo $ECHO_N "checking for mpi library and header-3 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpi library and header-3 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpi library and header-3 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "lam mpi"; then

   found_framework=no
   for lib in "" lam mpi; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" lam mpi; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-3
##



             # verify that it was found in the location requested
             if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
                test ! -e $with_mpi/lib/$the_file.so &&
                test ! -e $with_mpi/lib/$the_file.a &&
                test ! -e $with_mpi/lib/$the_file.dylib; then
                { echo "$as_me:$LINENO: WARNING: Found libmpi but not in the requested directory: $with_mpi/lib" >&5
echo "$as_me: WARNING: Found libmpi but not in the requested directory: $with_mpi/lib" >&2;}
                HAVE_MPI="no"
             fi

             if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpi library and header-4
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-4
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi
## arg 6 : $_sci_lib
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-4.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-4.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpi library and header-4 (optional)" >&5
echo $ECHO_N "checking for mpi library and header-4 (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpi library and header-4 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpi library and header-4 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi"; then

   found_framework=no
   for lib in "" mpi; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-4
##



                # verify that it was found in the location requested.
                if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
                   test ! -e $with_mpi/lib/$the_file.so &&
                   test ! -e $with_mpi/lib/$the_file.a &&
                   test ! -e $with_mpi/lib/$the_file.dylib; then
                   { echo "$as_me:$LINENO: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&5
echo "$as_me: WARNING: Found libmpi but not in requested directory: $with_mpi/lib" >&2;}
                   HAVE_MPI="no"
                fi

                if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpich library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpich library and header
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpich pmpich
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpich library and header (optional)" >&5
echo $ECHO_N "checking for mpich library and header (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpich library and header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpich library and header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpich pmpich"; then

   found_framework=no
   for lib in "" mpich pmpich; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpich pmpich; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpich library and header
##



                   if test "$HAVE_MPI" = "yes"; then
                      HAVE_MPICH="yes"
                   fi
                fi
             fi
          fi
        fi

        if test "$HAVE_MPI" = "yes"; then

           if test "$_sci_optional" = "specific"; then
              the_file=libmpi
              if test "$HAVE_MPICH" = "yes"; then
                the_file=libmpich
              fi

              # verify that it was found in the location requested.
              if test ! -e $with_mpi/lib/$the_file.so &&
                 test ! -e $with_mpi/lib/$the_file.a &&
                 test ! -e $with_mpi/lib/$the_file.dylib; then
                   echo
                   { { echo "$as_me:$LINENO: error: Found libmpi but not in requested directory: $with_mpi/lib" >&5
echo "$as_me: error: Found libmpi but not in requested directory: $with_mpi/lib" >&2;}
   { (exit 1); exit 1; }; }
              fi
           fi

           if test "$HAVE_MPICH" = "yes"; then
             DEF_MPI="#define HAVE_MPICH 1"
           else
             DEF_MPI="#define HAVE_MPI 1"
           fi
        fi

        if test "$with_mpi" && test ! "$DEF_MPI"; then
          echo
          { { echo "$as_me:$LINENO: error: One or more of the MPI components is missing." >&5
echo "$as_me: error: One or more of the MPI components is missing." >&2;}
   { (exit 1); exit 1; }; }
          echo
        fi

  esac

  if test ! "$DEF_MPI"; then
     echo

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: one or more of the MPI components is missing." >&5
echo "$as_me: error: one or more of the MPI components is missing." >&2;}
   { (exit 1); exit 1; }; }

  fi
fi #end sci_required_mpi






sci_defs_files="$sci_defs_files include/sci_defs/mpi_testdefs.h"

##  --  search for petsc stuff  ------------------------------------------
# a required check for an optional library for base scirun, due to that
# fact that if MatrixSolver will utilize uni-petsc if it exists, and uni-petsc
# depends upon petsc - also check for mpi-uni as it most often exists in the
# same directory

# We only use the optimized petsc lib even if we are building a debug SCIRun
#if test "$debug" = "yes"; then
#  PETSC_SUB=libg
#else
  PETSC_SUB=libO
#fi
PETSC_VERSION_DIR=petsc-2.2.1

case $host in
  *-irix*)
    if test "$enable_64bit" = "yes"; then
      PETSC_ARCH=IRIX64
    else
      PETSC_ARCH=IRIX32
    fi
    ;;
  *linux*)
    if test "$enable_64bit" = "yes"; then
      PETSC_ARCH=linux64
    else
      PETSC_ARCH=linux
    fi
    ;;
  *-dec*)
    if test "$petsc"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: PETSC ARCH not set for Tru64.  Need to fix this." >&5
echo "$as_me: error: PETSC ARCH not set for Tru64.  Need to fix this." >&2;}
   { (exit 1); exit 1; }; }

    else
      PETSC_ARCH=dec
    fi
    ;;
  *-aix*)
    PETSC_ARCH=rs6000_sp
    ;;
  *-darwin*)
    PETSC_ARCH=ppc
    ;;
  *-pc-mingw*)
    PETSC_ARCH=win
    ;;
  *)
    PETSC_ARCH=""
    ;;
esac

# check for mpi-uni if either --with-unipetsc or --with-mpiuni,
#   check here to look in petsc's subdirs.
#  --  search for mpi-uni  --------------------------------------------
# Again required for the following uni-petsc checks, that attempt to support
# the MatrixSolver module.

_sci_lib=
_sci_inc=

if test "$with_mpiuni" = "yes"; then
  echo
  { { echo "$as_me:$LINENO: error: You must specify a directory with the --with-mpiuni=dir." >&5
echo "$as_me: error: You must specify a directory with the --with-mpiuni=dir." >&2;}
   { (exit 1); exit 1; }; }
  echo
elif test "$with_unipetsc"; then
  _sci_lib="$with_unipetsc/lib/$PETSC_SUB/$PETSC_ARCH"
  if test ! -d "$_sci_lib" || test ! -d "$with_unipetsc/include/mpiuni" ||
     test ! -d "$with_unipetsc/bmake/$PETSC_ARCH" ; then
    echo
    { echo "$as_me:$LINENO: WARNING: Specified unipetsc directory is invalid.  One of the following dirs does not exist:" >&5
echo "$as_me: WARNING: Specified unipetsc directory is invalid.  One of the following dirs does not exist:" >&2;}
    { echo "$as_me:$LINENO: WARNING: $_sci_lib" >&5
echo "$as_me: WARNING: $_sci_lib" >&2;}
    { echo "$as_me:$LINENO: WARNING: $with_unipetsc/include/mpiuni" >&5
echo "$as_me: WARNING: $with_unipetsc/include/mpiuni" >&2;}
    { echo "$as_me:$LINENO: WARNING: $with_unipetsc/bmake/$PETSC_ARCH" >&5
echo "$as_me: WARNING: $with_unipetsc/bmake/$PETSC_ARCH" >&2;}
    { { echo "$as_me:$LINENO: error: Please fix this problem and reconfigure." >&5
echo "$as_me: error: Please fix this problem and reconfigure." >&2;}
   { (exit 1); exit 1; }; }
  fi
  _sci_inc="$with_unipetsc/include/mpiuni $with_unipetsc/bmake/$PETSC_ARCH"
fi


##
## SCI_TRY_LINK (MPI_UNI):  mpi-uni libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI_UNI
## arg 2 : mpi-uni libraries and headers
## arg 3 : mpi.h
## arg 4 : $_sci_inc
## arg 5 : mpiuni
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI_UNI        => lib path
##      MPI_UNI_LIB_DIR_FLAG   => all the -L's
##      MPI_UNI_LIB_FLAG       => all the -l's
##      HAVE_MPI_UNI           => yes or no
##      INC_MPI_UNI_H          => all the -I's
##      HAVE_MPI_UNI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpi-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpi-uni libraries and headers (optional)" >&5
echo $ECHO_N "checking for mpi-uni libraries and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpi-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpi-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI_UNI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI_UNI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpiuni"; then

   found_framework=no
   for lib in "" mpiuni; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI_UNI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI_UNI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI_UNI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI_UNI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI_UNI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_UNI_H="'$final_incs'"
eval HAVE_MPI_UNI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI_UNI=''
eval MPI_UNI_LIB_DIR_FLAG=''
eval MPI_UNI_LIB_FLAG=''
eval HAVE_MPI_UNI="no"
eval INC_MPI_UNI_H=''
eval HAVE_MPI_UNI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI_UNI failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI_UNI failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI_UNI include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI_UNI include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpiuni; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI_UNI):  mpi-uni libraries and headers
##



if test "$HAVE_MPI_UNI" != "yes"; then

##
## SCI_TRY_LINK (MPI_UNICH):  mpiunich and pmpiunich libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI_UNICH
## arg 2 : mpiunich and pmpiunich libraries
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : mpiunich pmpiunich
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MPI_UNICH        => lib path
##      MPI_UNICH_LIB_DIR_FLAG   => all the -L's
##      MPI_UNICH_LIB_FLAG       => all the -l's
##      HAVE_MPI_UNICH           => yes or no
##      INC_MPI_UNICH_H          => all the -I's
##      HAVE_MPI_UNICH_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpiunich and pmpiunich libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mpiunich and pmpiunich libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mpiunich and pmpiunich libraries (optional)" >&5
echo $ECHO_N "checking for mpiunich and pmpiunich libraries (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mpiunich and pmpiunich libraries must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mpiunich and pmpiunich libraries must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MPI_UNICH include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MPI_UNICH include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNICH check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNICH check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpiunich pmpiunich"; then

   found_framework=no
   for lib in "" mpiunich pmpiunich; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MPI_UNICH check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI_UNICH check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MPI_UNICH check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI_UNICH check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI_UNICH only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI_UNICH only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MPI_UNICH only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MPI_UNICH only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MPI_UNICH='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_UNICH_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_UNICH_LIB_FLAG="'$final_libs'"
eval HAVE_MPI_UNICH="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_UNICH_H="'$final_incs'"
eval HAVE_MPI_UNICH_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MPI_UNICH=''
eval MPI_UNICH_LIB_DIR_FLAG=''
eval MPI_UNICH_LIB_FLAG=''
eval HAVE_MPI_UNICH="no"
eval INC_MPI_UNICH_H=''
eval HAVE_MPI_UNICH_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MPI_UNICH failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNICH. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MPI_UNICH failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNICH. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI_UNICH include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested MPI_UNICH include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpiunich pmpiunich; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MPI_UNICH library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MPI_UNICH library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI_UNICH):  mpiunich and pmpiunich libraries
##



   if test "$HAVE_MPI_UNICH" = "yes"; then
     LIB_DIR_MPI_UNI="$LIB_DIR_MPI_UNICH"
     MPI_UNI_LIB_FLAG="$MPI_UNICH_LIB_FLAG"
     MPI_UNI_LIB_DIR_FLAG="$MPI_UNICH_LIB_DIR_FLAG"
   fi
fi

if test "$HAVE_MPI_UNI" = "yes"; then
   if test "$HAVE_MPI_UNICH" = "yes"; then
     DEF_MPI_UNI="#define HAVE_MPI_UNICH 1"
   else
     DEF_MPI_UNI="#define HAVE_MPI_UNI 1"
   fi
fi

if test "$with_mpiuni" && test ! "$DEF_MPI_UNI"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the MPI_UNI components is missing." >&5
echo "$as_me: error: One or more of the MPI_UNI components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi

if test "$with_unipetsc" && test ! "$DEF_MPI_UNI"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the MPI_UNI components is missing." >&5
echo "$as_me: error: One or more of the MPI_UNI components is missing." >&2;}
   { (exit 1); exit 1; }; }
  echo
fi







#  --  search for PETSc  --------------------------------------------
if test -z "$PETSC_ARCH"; then
   { { echo "$as_me:$LINENO: error: PETSC_ARCH environment var is not set.  Please set." >&5
echo "$as_me: error: PETSC_ARCH environment var is not set.  Please set." >&2;}
   { (exit 1); exit 1; }; }
fi

# Make sure we have either mpi or mpi-uni, blas, and lapack
# It seems that under AIX and OSF, the libs that cover blas also cover lapack
if (test "$HAVE_MPI" = "yes" || test "$HAVE_MPI_UNI" = "yes") && test "$HAVE_BLAS" = "yes" &&
   (test "$PETSC_ARCH" = "rs6000_sp" || test "$PETSC_ARCH" = "dec" ||
    test "$HAVE_LAPACK" = "yes"); then

  _sci_lib_dir=
  _sci_inc=

  if test "$with_petsc"; then
    _sci_lib_dir="$with_petsc/lib/$PETSC_SUB/$PETSC_ARCH"
    _sci_inc="$with_petsc/bmake/$PETSC_ARCH $with_petsc/include"
  else
    # Modify _sci_dirs to have correct path information:
    for i in $sci_thirdparty_dir; do
      if test ! -d "$i"; then
        continue
      fi

      #this is where the lib actually lives
      if test ! -d "$i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"; then
        continue
      fi

      _sci_lib_dir="$_sci_lib_dir $i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"
      _sci_inc="$_sci_inc $i/$PETSC_VERSION_DIR/include $i/$PETSC_VERSION_DIR/bmake/$PETSC_ARCH"
    done
  fi

# For Petsc 2.2 use this line below:   petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG,
# Use -DMPIPP_H so we don't include mpi++.h where we don't want it.


##
## SCI_TRY_LINK (PETSC):  petsc libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC
## arg 2 : petsc libraries and headers
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG
## arg 6 : $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG
## arg 7 : $INC_MPI_H -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PETSC        => lib path
##      PETSC_LIB_DIR_FLAG   => all the -L's
##      PETSC_LIB_FLAG       => all the -l's
##      HAVE_PETSC           => yes or no
##      INC_PETSC_H          => all the -I's
##      HAVE_PETSC_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for petsc libraries and headers (optional)" >&5
echo $ECHO_N "checking for petsc libraries and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PETSC include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PETSC include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG"; then

   found_framework=no
   for lib in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG"; then

   for path in "" $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC only one library path may be specified for arg 6 (you had: $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC only one library path may be specified for arg 6 (you had: $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $INC_MPI_H -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PETSC='"$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_H="'$final_incs'"
eval HAVE_PETSC_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PETSC=''
eval PETSC_LIB_DIR_FLAG=''
eval PETSC_LIB_FLAG=''
eval HAVE_PETSC="no"
eval INC_PETSC_H=''
eval HAVE_PETSC_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PETSC failed.
    To see the failed compile information, look in config.log,
    search for PETSC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PETSC failed.
    To see the failed compile information, look in config.log,
    search for PETSC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC include file '$_sci_inc /usr/include/petsc/$i' was not found" >&5
echo "$as_me: error: Specifically requested PETSC include file '$_sci_inc /usr/include/petsc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/lib$i.so && test ! -e $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC library file '$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PETSC library file '$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC):  petsc libraries and headers
##



  if test "$HAVE_PETSC" = "yes" ; then
    DEF_PETSC="#define HAVE_PETSC 1"
  else
    # Give it a shot on the old petsc version if we're not doing Uintah
    if test "$pkg_Uintah" != "yes"; then

##
## SCI_TRY_LINK (PETSC):  petsc libraries and headers (old)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC
## arg 2 : petsc libraries and headers (old)
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petsccontrib petscsnes petscts petscsles $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG
## arg 6 : $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG
## arg 7 : $INC_MPI_H -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PETSC        => lib path
##      PETSC_LIB_DIR_FLAG   => all the -L's
##      PETSC_LIB_FLAG       => all the -l's
##      HAVE_PETSC           => yes or no
##      INC_PETSC_H          => all the -I's
##      HAVE_PETSC_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers (old).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers (old).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for petsc libraries and headers (old) (optional)" >&5
echo $ECHO_N "checking for petsc libraries and headers (old) (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers (old) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers (old) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PETSC include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PETSC include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petsccontrib petscsnes petscts petscsles $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG"; then

   found_framework=no
   for lib in "" petsc petscvec petscmat petscdm petsccontrib petscsnes petscts petscsles $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG"; then

   for path in "" $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC only one library path may be specified for arg 6 (you had: $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC only one library path may be specified for arg 6 (you had: $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $INC_MPI_H -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PETSC='"$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_H="'$final_incs'"
eval HAVE_PETSC_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PETSC=''
eval PETSC_LIB_DIR_FLAG=''
eval PETSC_LIB_FLAG=''
eval HAVE_PETSC="no"
eval INC_PETSC_H=''
eval HAVE_PETSC_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PETSC failed.
    To see the failed compile information, look in config.log,
    search for PETSC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PETSC failed.
    To see the failed compile information, look in config.log,
    search for PETSC. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC include file '$_sci_inc /usr/include/petsc/$i' was not found" >&5
echo "$as_me: error: Specifically requested PETSC include file '$_sci_inc /usr/include/petsc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petsccontrib petscsnes petscts petscsles $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_FLAG $DL_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/lib$i.so && test ! -e $_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC library file '$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PETSC library file '$_sci_lib_dir $LAPACK_LIB_DIR_FLAG $BLAS_LIB_DIR_FLAG $MPI_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC):  petsc libraries and headers (old)
##


      if test "$HAVE_PETSC" = "yes"; then
        DEF_PETSC="#define HAVE_PESC 1"
      fi
    fi

  fi

  if test "$with_petsc" && test ! "$DEF_PETSC"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the PETSc components is missing." >&5
echo "$as_me: error: One or more of the PETSc components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

  #  --  search for uni-petsc  --------------------------------------------

  if test "$HAVE_PETSC" != "yes" ; then

    # Only check for uni petsc if petsc not found.
    _sci_lib=""
    _sci_inc=""

    if test "$with_unipetsc"; then
      _sci_lib="$with_unipetsc/lib/$PETSC_SUB/$PETSC_ARCH"
      _sci_inc="$with_unipetsc/bmake/$PETSC_ARCH $with_unipetsc/include"
    fi

# For petsc 2.2 use this line below:  petsc petscvec petscmat petscdm petscsnes petscts petscksp,
# Use -DMPIPP_H so we don't include mpi++.h where we don't want it.

##
## SCI_TRY_LINK (PETSC_UNI):  petsc-uni libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC_UNI
## arg 2 : petsc-uni libraries and headers
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts petscksp
## arg 6 : $_sci_lib
## arg 7 : $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_FLAG -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PETSC_UNI        => lib path
##      PETSC_UNI_LIB_DIR_FLAG   => all the -L's
##      PETSC_UNI_LIB_FLAG       => all the -l's
##      HAVE_PETSC_UNI           => yes or no
##      INC_PETSC_UNI_H          => all the -I's
##      HAVE_PETSC_UNI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for petsc-uni libraries and headers (optional)" >&5
echo $ECHO_N "checking for petsc-uni libraries and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for petsc-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for petsc-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PETSC_UNI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PETSC_UNI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts petscksp"; then

   found_framework=no
   for lib in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_FLAG -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PETSC_UNI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_UNI_H="'$final_incs'"
eval HAVE_PETSC_UNI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PETSC_UNI=''
eval PETSC_UNI_LIB_DIR_FLAG=''
eval PETSC_UNI_LIB_FLAG=''
eval HAVE_PETSC_UNI="no"
eval INC_PETSC_UNI_H=''
eval HAVE_PETSC_UNI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" >&5
echo "$as_me: error: Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PETSC_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC_UNI):  petsc-uni libraries and headers
##



    if test "$HAVE_PETSC_UNI" = "yes" ; then
      DEF_PETSC_UNI="#define PETSC_UNI 1"
    else
    # Give it a shot on the old petsc-uni version

##
## SCI_TRY_LINK (PETSC_UNI):  petsc libraries and headers (old)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC_UNI
## arg 2 : petsc libraries and headers (old)
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts
## arg 6 : $_sci_lib
## arg 7 : $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_FLAG -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PETSC_UNI        => lib path
##      PETSC_UNI_LIB_DIR_FLAG   => all the -L's
##      PETSC_UNI_LIB_FLAG       => all the -l's
##      HAVE_PETSC_UNI           => yes or no
##      INC_PETSC_UNI_H          => all the -I's
##      HAVE_PETSC_UNI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers (old).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers (old).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for petsc libraries and headers (old) (optional)" >&5
echo $ECHO_N "checking for petsc libraries and headers (old) (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers (old) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for petsc libraries and headers (old) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for PETSC_UNI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for PETSC_UNI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts"; then

   found_framework=no
   for lib in "" petsc petscvec petscmat petscdm petscsnes petscts; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_FLAG -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PETSC_UNI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_UNI_H="'$final_incs'"
eval HAVE_PETSC_UNI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PETSC_UNI=''
eval PETSC_UNI_LIB_DIR_FLAG=''
eval PETSC_UNI_LIB_FLAG=''
eval HAVE_PETSC_UNI="no"
eval INC_PETSC_UNI_H=''
eval HAVE_PETSC_UNI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" >&5
echo "$as_me: error: Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PETSC_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PETSC_UNI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC_UNI):  petsc libraries and headers (old)
##


      if test "$HAVE_PETSC_UNI" = "yes" ; then
        DEF_PETSC_UNI="#define PETSC_UNI 1"
      fi
    fi



    if test "$with_unipetsc" && test ! "$DEF_PETSC_UNI"; then
      echo
      { { echo "$as_me:$LINENO: error: One or more of the UNI-PETSC components is missing." >&5
echo "$as_me: error: One or more of the UNI-PETSC components is missing." >&2;}
   { (exit 1); exit 1; }; }
      echo
    fi
  fi

else
  { echo "$as_me:$LINENO: WARNING: One or more of MPI or BLAS or LAPACK is missing." >&5
echo "$as_me: WARNING: One or more of MPI or BLAS or LAPACK is missing." >&2;}
  { echo "$as_me:$LINENO: WARNING: HAVE_MPI: $HAVE_MPI" >&5
echo "$as_me: WARNING: HAVE_MPI: $HAVE_MPI" >&2;}
  { echo "$as_me:$LINENO: WARNING: HAVE_MPI_UNI: $HAVE_MPI_UNI" >&5
echo "$as_me: WARNING: HAVE_MPI_UNI: $HAVE_MPI_UNI" >&2;}
  { echo "$as_me:$LINENO: WARNING: HAVE_BLAS: $HAVE_BLAS" >&5
echo "$as_me: WARNING: HAVE_BLAS: $HAVE_BLAS" >&2;}
  { echo "$as_me:$LINENO: WARNING: HAVE_LAPACK: $HAVE_LAPACK" >&5
echo "$as_me: WARNING: HAVE_LAPACK: $HAVE_LAPACK" >&2;}
  { echo "$as_me:$LINENO: WARNING: Not configuring PETSc." >&5
echo "$as_me: WARNING: Not configuring PETSc." >&2;}
fi












sci_defs_files="$sci_defs_files include/sci_defs/petsc_testdefs.h"

##  --  search for Insight  ---------------------------------------------------

if test "$sci_required_insight" = "yes"; then

  # Insight is a large distribution.
  # we do not want to check all of it. We thus check only if the
  # include and lib Insight dirs exist.

  echo "$as_me:$LINENO: checking for Insight." >&5
echo $ECHO_N "checking for Insight.... $ECHO_C" >&6

  if test "$with_insight"; then
    dir="$with_insight"
  else
    dir="/usr/local/lib/InsightToolkit"
  fi

  if test -a "$dir/ITKConfig.cmake"; then
    INC_INSIGHT_H="`cat $dir/ITKConfig.cmake | grep 'SET(ITK_INCLUDE_DIRS' | sed 's/SET(ITK_INCLUDE_DIRS \"/;/' | sed 's/\")//' | sed 's/;/ -I/g' | tr -d '\r'`"
    insight_libs_dir="`cat $dir/ITKConfig.cmake | grep 'SET(ITK_LIBRARY_DIRS' | sed 's/SET(ITK_LIBRARY_DIRS \"/;/' | sed 's/\")//' | sed 's/;//g' | tr -d '\r'`"
    INSIGHT_LIB_DIR_FLAG="$LDRUN_PREFIX$insight_libs_dir -L$insight_libs_dir"
    INSIGHT_LIB_FLAG="-lITKFEM -lITKIO -lITKMetaIO -lITKAlgorithms -lITKStatistics -lITKBasicFilters -lITKCommon  -litkvnl -litkvnl_algo -litknetlib -litksys -lITKDICOMParser"

    if test -a "$insight_libs_dir/libitkzlib.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkzlib"
    elif test "$HAVE_Z" = "yes"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $Z_LIB_DIR_FLAG $Z_LIB_FLAG"
    fi

    if test -a "$insight_libs_dir/libitktiff.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litktiff"
    elif test "$HAVE_TIFF" = "yes"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $TIFF_LIB_DIR_FLAG $TIFF_LIB_FLAG"
    fi


    INSIGHT_JPEG_LINKED=no

    if test -a "$insight_libs_dir/libitkjpeg8.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkjpeg8"
       INSIGHT_JPEG_LINKED=yes
    elif test "$HAVE_JPEG" = "yes" && test "$INSIGHT_JPEG_LINKED" = "no" ; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $JPEG_LIB_DIR_FLAG $JPEG_LIB_FLAG"
       INSIGHT_JPEG_LINKED=yes
    fi

    if test -a "$insight_libs_dir/libitkjpeg12.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkjpeg12"
       INSIGHT_JPEG_LINKED=yes
    elif test "$HAVE_JPEG" = "yes" && test "$INSIGHT_JPEG_LINKED" = "no" ; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $JPEG_LIB_DIR_FLAG $JPEG_LIB_FLAG"
       INSIGHT_JPEG_LINKED=yes
    fi

    if test -a "$insight_libs_dir/libitkjpeg16.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkjpeg16"
       INSIGHT_JPEG_LINKED=yes
    elif test "$HAVE_JPEG" = "yes" && test "$INSIGHT_JPEG_LINKED" = "no" ; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $JPEG_LIB_DIR_FLAG $JPEG_LIB_FLAG"
       INSIGHT_JPEG_LINKED=yes
    fi

    if test -a "$insight_libs_dir/libitkjpeg.$SO_OR_ARCHIVE_EXTENSION" && test "$INSIGHT_JPEG_LINKED" = "no"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkjpeg"
       INSIGHT_JPEG_LINKED=yes
    elif test "$HAVE_JPEG" = "yes" && test "$INSIGHT_JPEG_LINKED" = "no"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $JPEG_LIB_DIR_FLAG $JPEG_LIB_FLAG"
       INSIGHT_JPEG_LINKED=yes
    fi

    if test -a "$insight_libs_dir/libITKNrrdIO.$SO_OR_ARCHIVE_EXTENSION"; then
       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -lITKNrrdIO"
    fi

    if ! test "$HAVE_PNG" = "yes"; then
      echo "note: using libitkpng"
      INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkpng"
    else
      INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG $PNG_LIB_DIR_FLAG $PNG_LIB_FLAG"
    fi


#    INSIGHT_VERSION_MINOR="`cat $dir/ITKConfig.cmake | grep 'SET(ITK_VERSION_MINOR' | sed 's/SET(ITK_VERSION_MINOR \"//' | sed 's/\")//' | tr -d '\r'`"
#    INSIGHT_VERSION_MAJOR="`cat $dir/ITKConfig.cmake | grep 'SET(ITK_VERSION_MAJOR' | sed 's/SET(ITK_VERSION_MAJOR \"//' | sed 's/\")//' | tr -d '\r'`"
#    if test "$INSIGHT_VERSION_MAJOR" = "2"; then
#       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -lITKNrrdIO -litktiff -litkjpeg8 -litkjpeg12 -litkjpeg16"
#    elif test "$INSIGHT_VERSION_MINOR" = "9"; then
#       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litktiff -litkjpeg8 -litkjpeg12 -litkjpeg16"
#    elif test "$INSIGHT_VERSION_MINOR" = "8" || test "$INSIGHT_VERSION_MINOR" = "6"; then
#       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litktiff -litkjpeg"
#    elif test "$INSIGHT_VERSION_MINOR" = "4"; then
#       INSIGHT_LIB_FLAG="$INSIGHT_LIB_FLAG -litkjpeg"
#    fi


#    INSIGHT_LIB_FLAG="`cat $dir/ITKConfig.cmake | grep 'SET(ITK_LIBRARIES' | sed 's/SET(ITK_LIBRARIES//' | sed 's/)//' | sed 's/ / -l/g'`"

    DEF_INSIGHT="#define HAVE_INSIGHT"
    HAVE_INSIGHT="yes"

    echo "$as_me:$LINENO: result: $dir" >&5
echo "${ECHO_T}$dir" >&6
  else
    echo "$as_me:$LINENO: result: not found." >&5
echo "${ECHO_T}not found." >&6
  fi

  if test "$with_insight" && test ! "$DEF_INSIGHT"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the INSIGHT components is missing." >&5
echo "$as_me: error: One or more of the INSIGHT components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

fi






sci_defs_files="$sci_defs_files include/sci_defs/insight_testdefs.h"

##  --  search for Ptolemy II ---------------------------------------------------
if test "$sci_required_ptolemyII" = "yes"; then

  echo "$as_me:$LINENO: checking for Java." >&5
echo $ECHO_N "checking for Java.... $ECHO_C" >&6

  # check for Java
  # Java version check should go here
  if test -z "$with_java"; then

    { echo "$as_me:$LINENO: WARNING: Java is required by the Ptolemy package." >&5
echo "$as_me: WARNING: Java is required by the Ptolemy package." >&2;}
    echo "$as_me:$LINENO: checking for environment variable JAVA_HOME or JAVAHOME" >&5
echo $ECHO_N "checking for environment variable JAVA_HOME or JAVAHOME... $ECHO_C" >&6

    if test -z "$JAVA_HOME"; then
      if test -z "$JAVAHOME"; then # Ptolemy build uses JAVAHOME

	{ echo "$as_me:$LINENO: WARNING: Package Ptolemy requires Java." >&5
echo "$as_me: WARNING: Package Ptolemy requires Java." >&2;}
	{ { echo "$as_me:$LINENO: error: Use the --with-java=DIR option or set the environment variable JAVA_HOME to the directory that contains your Java distribution." >&5
echo "$as_me: error: Use the --with-java=DIR option or set the environment variable JAVA_HOME to the directory that contains your Java distribution." >&2;}
   { (exit 1); exit 1; }; }

      else # JAVAHOME set in environment
	jdir="$JAVAHOME"
      fi
    else # JAVA_HOME set in environment
      jdir="$JAVA_HOME"
    fi
  else # --with-java
    jdir="$with_java"
  fi

  if test -d "$jdir"; then
    echo "$as_me:$LINENO: result: $jdir" >&5
echo "${ECHO_T}$jdir" >&6

    JAVA_PATH="$jdir"
  else

    { { echo "$as_me:$LINENO: error: Java installation directory is missing." >&5
echo "$as_me: error: Java installation directory is missing." >&2;}
   { (exit 1); exit 1; }; }

  fi

  echo "$as_me:$LINENO: checking for Ptolemy II." >&5
echo $ECHO_N "checking for Ptolemy II.... $ECHO_C" >&6


  # search here
  if test "$with_ptolemyII"; then
    pdir="$with_ptolemyII"
  fi

  if test -d "$pdir"; then
    echo "$as_me:$LINENO: result: $pdir" >&5
echo "${ECHO_T}$pdir" >&6

    PTOLEMY_PATH="$pdir"
    PTOLEMY_CLASSPATH="$PTOLEMY_PATH:/lib/diva.jar:/lib/java_cup.jar:/lib/sootclasses.jar:/lib/jasminclasses.jar:/lib/ptCal.jar:/lib/ptjacl.jar:/lib/jython.jar:/lib/mapss.jar:/lib/saxon7.jar:/ptolemy/ptolemy.jar:/ptolemy/ptsupport.jar:/ptolemy/vergil/vergil.jar:$JAVA_PATH/jre:/lib/rt.jar"
    HAVE_PTOLEMY="yes"
    DEF_PTOLEMY="#define HAVE_PTOLEMY 1"
  else
    { { echo "$as_me:$LINENO: error: Ptolemy II directory is missing." >&5
echo "$as_me: error: Ptolemy II directory is missing." >&2;}
   { (exit 1); exit 1; }; }
  fi

fi






sci_defs_files="$sci_defs_files include/sci_defs/ptolemy_testdefs.h"

##  --  search for xalan  ---------------------------------------------------
if test "$sci_required_xalan" ; then
  echo "$as_me:$LINENO: checking for xalan-j." >&5
echo $ECHO_N "checking for xalan-j.... $ECHO_C" >&6

  if test "$with_xalan"; then
	dir="$with_xalan"
  else
	dir="$sci_thirdparty_dir"
  fi
  if test -a $dir/bin/xalan.jar -a $dir/bin/xml-apis.jar -a $dir/bin/xercesImpl.jar; then
	echo "$as_me:$LINENO: result: $dir" >&5
echo "${ECHO_T}$dir" >&6
	XALAN_PATH="$dir/bin/xalan.jar:$dir/bin/xml-apis.jar:$dir/bin/xercesImpl.jar"
        DEF_XALAN="#define XALAN 1"
  else
	echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
  fi

  if test "$with_xalana" && test ! "$DEF_XALAN"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the XALAN components is missing." >&5
echo "$as_me: error: One or more of the XALAN components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

fi



##  --  if building uintah, search for TAU makefile  ---------------------

if test "$sci_required_tau" = "yes"; then
  if test ! -f "$with_tau" ; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: $with_tau does not exist.  Bye!" >&5
echo "$as_me: error: $with_tau does not exist.  Bye!" >&2;}
   { (exit 1); exit 1; }; }

  fi

  echo "$as_me:$LINENO: result: Using TAU makefile: $with_tau" >&5
echo "${ECHO_T}Using TAU makefile: $with_tau" >&6

  cat > conftest-tau.cc <<EOF

  #include <Profile/Profiler.h>

  int main(int argc, char **argv)
  {
    TAU_PROFILE("main", "int (int, char **)", TAU_DEFAULT);
    TAU_PROFILE_INIT(argc, argv);
    return 0;
  }
EOF

  cat > conftest-tau-makefile <<EOF
include $with_tau
all:
	\$(TAU_CXX) -o conftest-tau-a.out \$(TAU_DEFS) \$(TAU_INCLUDE) conftest-tau.cc \$(TAU_SHLIBS) \$(TAU_MPI_LIBS)
EOF

  ac_try="$MAKE TAU_MAKEFILE=$with_tau -f conftest-tau-makefile > conftestout1 2> conftesterr1"
  (eval $ac_try) 2>&5
  ac_status=$?
  rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
  if test "$ac_status" != 0; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: TAU libraries not working. Bye!" >&5
echo "$as_me: error: TAU libraries not working. Bye!" >&2;}
   { (exit 1); exit 1; }; }

  fi

  TAU_MAKEFILE="$with_tau"
fi



##  --  search for Babel  ----------------------------------------------------

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_babel" = "yes"; then
  _sci_optional=required
elif test "$with_babel"; then
  _sci_lib="$with_babel/lib"
  _sci_inc="$with_babel/include"
  _sci_optional=specific
fi


##
## SCI_TRY_LINK (SIDL):  sidl library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : SIDL
## arg 2 : sidl library and headers
## arg 3 : sidl.h
## arg 4 : $_sci_inc
## arg 5 : sidl
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_SIDL        => lib path
##      SIDL_LIB_DIR_FLAG   => all the -L's
##      SIDL_LIB_FLAG       => all the -l's
##      HAVE_SIDL           => yes or no
##      INC_SIDL_H          => all the -I's
##      HAVE_SIDL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for sidl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for sidl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for sidl library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for sidl library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for sidl library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for sidl library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for SIDL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for SIDL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of SIDL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of SIDL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "sidl"; then

   found_framework=no
   for lib in "" sidl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of SIDL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of SIDL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of SIDL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of SIDL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SIDL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SIDL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SIDL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SIDL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" sidl.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_SIDL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval SIDL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval SIDL_LIB_FLAG="'$final_libs'"
eval HAVE_SIDL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_SIDL_H="'$final_incs'"
eval HAVE_SIDL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_SIDL=''
eval SIDL_LIB_DIR_FLAG=''
eval SIDL_LIB_FLAG=''
eval HAVE_SIDL="no"
eval INC_SIDL_H=''
eval HAVE_SIDL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required SIDL failed.
    To see the failed compile information, look in config.log,
    search for SIDL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required SIDL failed.
    To see the failed compile information, look in config.log,
    search for SIDL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" sidl.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested SIDL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested SIDL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" sidl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested SIDL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested SIDL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (SIDL):  sidl library and headers
##



BABEL_BIN=""

{ echo "$as_me:$LINENO: checking for babel in $LIB_DIR_SIDL/../bin..." >&5
echo "$as_me: checking for babel in $LIB_DIR_SIDL/../bin..." >&6;}
# Extract the first word of "babel", so it can be a program name with args.
set dummy babel; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_BABEL_BIN+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$BABEL_BIN"; then
  ac_cv_prog_BABEL_BIN="$BABEL_BIN" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $LIB_DIR_SIDL/../bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_BABEL_BIN="$LIB_DIR_SIDL/../bin/babel"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_BABEL_BIN" && ac_cv_prog_BABEL_BIN="NONE"
fi
fi
BABEL_BIN=$ac_cv_prog_BABEL_BIN
if test -n "$BABEL_BIN"; then
  echo "$as_me:$LINENO: result: $BABEL_BIN" >&5
echo "${ECHO_T}$BABEL_BIN" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


if test "$HAVE_SIDL" = "yes" && test $BABEL_BIN != "NONE"; then
   DEF_BABEL="#define HAVE_BABEL 1"
   HAVE_BABEL="yes"
fi

if test "$with_babel" && test ! "$DEF_BABEL"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the Babel components is missing." >&5
echo "$as_me: error: One or more of the Babel components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi








sci_defs_files="$sci_defs_files include/sci_defs/babel_testdefs.h"

##  --  search for netsolve ----------------------------------------------

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_netsolve" = "yes"; then
  _sci_optional=required
elif test "$with_netsolve"; then
  _sci_lib="$with_netsolve/lib"
  _sci_inc="$with_netsolve/include"
  _sci_optional=specific
fi


##
## SCI_TRY_LINK (NETSOLVE):  netsolve library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : NETSOLVE
## arg 2 : netsolve library
## arg 3 :
## arg 4 :
## arg 5 : netsolve
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_NETSOLVE        => lib path
##      NETSOLVE_LIB_DIR_FLAG   => all the -L's
##      NETSOLVE_LIB_FLAG       => all the -l's
##      HAVE_NETSOLVE           => yes or no
##      INC_NETSOLVE_H          => all the -I's
##      HAVE_NETSOLVE_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for netsolve library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for netsolve library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for netsolve library ($_sci_optional)" >&5
echo $ECHO_N "checking for netsolve library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for netsolve library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for netsolve library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "netsolve"; then

   found_framework=no
   for lib in "" netsolve; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of NETSOLVE check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of NETSOLVE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of NETSOLVE check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of NETSOLVE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for NETSOLVE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for NETSOLVE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for NETSOLVE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for NETSOLVE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_NETSOLVE='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval NETSOLVE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval NETSOLVE_LIB_FLAG="'$final_libs'"
eval HAVE_NETSOLVE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_NETSOLVE_H="'$final_incs'"
eval HAVE_NETSOLVE_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_NETSOLVE=''
eval NETSOLVE_LIB_DIR_FLAG=''
eval NETSOLVE_LIB_FLAG=''
eval HAVE_NETSOLVE="no"
eval INC_NETSOLVE_H=''
eval HAVE_NETSOLVE_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required NETSOLVE failed.
    To see the failed compile information, look in config.log,
    search for NETSOLVE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required NETSOLVE failed.
    To see the failed compile information, look in config.log,
    search for NETSOLVE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested NETSOLVE include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested NETSOLVE include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" netsolve; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested NETSOLVE library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested NETSOLVE library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (NETSOLVE):  netsolve library
##







##  --  search for glut  -----------------------------------------------

if test "$sci_required_glut" = "yes"; then

   libs="$GL_LIB_DIR_FLAG $GL_LIB_FLAG $X_LIB_FLAG $GLU_OTHERS_FLAG"

   if test "$with_glut"; then
     _sci_lib_glut="$with_glut"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_glut/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_glut/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glut/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_glut/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glut/lib
    fi
  fi
  eval _sci_lib_glut='"$_new_lib_path"'

     if test "$with_opengl"; then
       _sci_lib_ogl="$with_opengl"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_ogl/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_ogl/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_ogl/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_ogl/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_ogl/lib
    fi
  fi
  eval _sci_lib_ogl='"$_new_lib_path"'

       _sci_lib="$_sci_lib_glut $_sci_lib_ogl"
       _sci_inc="$with_glut/include $with_opengl/include"
     else
       _sci_lib_X="/usr/X11R6"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_X/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_X/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_X/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_X/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_X/lib
    fi
  fi
  eval _sci_lib_X='"$_new_lib_path"'

       _sci_lib="$_sci_lib_glut $_sci_lib_X"
       _sci_inc="$with_glut/include /usr/X11R6/include"
     fi
   else
     if test "$with_opengl"; then
       _sci_lib="$sci_thirdparty_lib $with_opengl/lib"
       _sci_inc="$sci_thirdparty_include $with_opengl/include"
     else
       _sci_lib="$sci_thirdparty_lib /usr/X11R6/lib"
       _sci_inc="$sci_thirdparty_include /usr/X11R6/include"
     fi
   fi


##
## SCI_TRY_LINK (GLUT):  glut library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GLUT
## arg 2 : glut library and headers
## arg 3 : GL/glut.h
## arg 4 : $_sci_inc
## arg 5 : glut
## arg 6 : $_sci_lib
## arg 7 : $libs
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GLUT        => lib path
##      GLUT_LIB_DIR_FLAG   => all the -L's
##      GLUT_LIB_FLAG       => all the -l's
##      HAVE_GLUT           => yes or no
##      INC_GLUT_H          => all the -I's
##      HAVE_GLUT_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for glut library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for glut library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for glut library and headers (required)" >&5
echo $ECHO_N "checking for glut library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for glut library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for glut library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GLUT include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GLUT include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLUT check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLUT check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "glut"; then

   found_framework=no
   for lib in "" glut; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GLUT check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GLUT check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GLUT check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GLUT check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLUT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLUT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLUT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLUT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $libs $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" GL/glut.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GLUT='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GLUT_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GLUT_LIB_FLAG="'$final_libs'"
eval HAVE_GLUT="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GLUT_H="'$final_incs'"
eval HAVE_GLUT_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GLUT=''
eval GLUT_LIB_DIR_FLAG=''
eval GLUT_LIB_FLAG=''
eval HAVE_GLUT="no"
eval INC_GLUT_H=''
eval HAVE_GLUT_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GLUT failed.
    To see the failed compile information, look in config.log,
    search for GLUT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GLUT failed.
    To see the failed compile information, look in config.log,
    search for GLUT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" GL/glut.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLUT include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GLUT include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" glut; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLUT library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GLUT library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GLUT):  glut library and headers
##



  if test "$GLUT_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
    { echo "$as_me:$LINENO: WARNING: \"$GLUT_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$GLUT_LIB_DIR_FLAG\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: \"flag for GLUT has been removed.\"" >&5
echo "$as_me: WARNING: \"flag for GLUT has been removed.\"" >&2;}
    GLUT_LIB_DIR_FLAG=""
  fi

fi #end sci_required_glut






##  --  search for glui  -----------------------------------------------
if test "$sci_required_glui" = "yes"; then
   if test "$with_glui"; then

     ## Set the path for glut and glui
     _sci_lib_glut="$with_glut"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_glut/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_glut/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glut/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_glut/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glut/lib
    fi
  fi
  eval _sci_lib_glut='"$_new_lib_path"'

     _sci_lib_glui="$with_glui"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_glui/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_glui/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glui/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_glui/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_glui/lib
    fi
  fi
  eval _sci_lib_glui='"$_new_lib_path"'


     if test "$with_opengl"; then
       ## OpenGL path
       _sci_lib_ogl="$with_opengl"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_ogl/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_ogl/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_ogl/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_ogl/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_ogl/lib
    fi
  fi
  eval _sci_lib_ogl='"$_new_lib_path"'

       _sci_lib="$_sci_lib_glut $_sci_lib_glui $_sci_lib_ogl"
       _sci_inc="$with_glut/include $with_glui/include $with_opengl/include"
     else
       ## X path
       _sci_lib_X="/usr/X11R6"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib_X/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib_X/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_X/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib_X/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib_X/lib
    fi
  fi
  eval _sci_lib_X='"$_new_lib_path"'

       _sci_lib="$_sci_lib_glut $_sci_lib_glui $_sci_lib_X"
       _sci_inc="$with_glut/include $with_glui/include /usr/X11R6/include"
     fi
   else
     if test "$with_opengl"; then
       _sci_lib="$sci_thirdparty_lib $with_opengl/lib"
       _sci_inc="$sci_thirdparty_include $with_opengl/include"
     else
       _sci_lib="$sci_thirdparty_lib /usr/X11R6/lib"
       _sci_inc="$sci_thirdparty_include /usr/X11R6/include"
     fi
   fi


##
## SCI_TRY_LINK (GLUI):  glui library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GLUI
## arg 2 : glui library and headers
## arg 3 : GL/glut.h glui.h
## arg 4 : $_sci_inc
## arg 5 : glui
## arg 6 : $_sci_lib
## arg 7 : $libs $GLUT_LIB_DIR_FLAG $GLUT_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GLUI        => lib path
##      GLUI_LIB_DIR_FLAG   => all the -L's
##      GLUI_LIB_FLAG       => all the -l's
##      HAVE_GLUI           => yes or no
##      INC_GLUI_H          => all the -I's
##      HAVE_GLUI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for glui library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for glui library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for glui library and headers (required)" >&5
echo $ECHO_N "checking for glui library and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for glui library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for glui library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GLUI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GLUI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLUI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLUI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "glui"; then

   found_framework=no
   for lib in "" glui; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GLUI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GLUI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GLUI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GLUI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLUI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLUI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLUI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLUI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $libs $GLUT_LIB_DIR_FLAG $GLUT_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" GL/glut.h glui.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GLUI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GLUI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GLUI_LIB_FLAG="'$final_libs'"
eval HAVE_GLUI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GLUI_H="'$final_incs'"
eval HAVE_GLUI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GLUI=''
eval GLUI_LIB_DIR_FLAG=''
eval GLUI_LIB_FLAG=''
eval HAVE_GLUI="no"
eval INC_GLUI_H=''
eval HAVE_GLUI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GLUI failed.
    To see the failed compile information, look in config.log,
    search for GLUI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GLUI failed.
    To see the failed compile information, look in config.log,
    search for GLUI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" GL/glut.h glui.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLUI include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GLUI include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" glui; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLUI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GLUI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GLUI):  glui library and headers
##



  if test "$GLUI_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
    { echo "$as_me:$LINENO: WARNING: \"$GLUI_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$GLUI_LIB_DIR_FLAG\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: \"flag for GLUI has been removed.\"" >&5
echo "$as_me: WARNING: \"flag for GLUI has been removed.\"" >&2;}
    GLUI_LIB_DIR_FLAG=""
  fi

fi # end sci_required_glui






##  --  search for oogl  -----------------------------------------------
if test "$sci_required_oogl" = "yes"; then
  # Modify _sci_dirs to have correct path information:
  if test "$with_oogl"; then
    _sci_lib="$with_oogl/lib"
    _sci_inc="$with_oogl/include"
  else
    for i in $sci_thirdparty_dir; do
      if test ! -d "$i"; then
        continue
      fi

      #this is where the lib actually lives
      if test ! -d "$i/OOGL/lib"; then
        continue
      fi

      _sci_lib="$_sci_dirs $i/OOGL/lib"
      _sci_inc="$_sci_dirs $i/OOGL/include"
    done
  fi
  # Only check for OOGL if the user did not say without-oogl.
  if test "$with_oogl" != "no"; then

##
## SCI_TRY_LINK (OOGL):  oogl library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : OOGL
## arg 2 : oogl library and headers
## arg 3 : oogl/basicTexture.h oogl/shadedPrim.h
## arg 4 : $_sci_inc
## arg 5 : oogl
## arg 6 : $_sci_lib
## arg 7 : $INC_GLUT_H $INC_GLUI_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_OOGL        => lib path
##      OOGL_LIB_DIR_FLAG   => all the -L's
##      OOGL_LIB_FLAG       => all the -l's
##      HAVE_OOGL           => yes or no
##      INC_OOGL_H          => all the -I's
##      HAVE_OOGL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for oogl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for oogl library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for oogl library and headers (optional)" >&5
echo $ECHO_N "checking for oogl library and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for oogl library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for oogl library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for OOGL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for OOGL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of OOGL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of OOGL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "oogl"; then

   found_framework=no
   for lib in "" oogl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of OOGL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of OOGL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of OOGL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of OOGL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for OOGL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for OOGL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for OOGL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for OOGL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $INC_GLUT_H $INC_GLUI_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" oogl/basicTexture.h oogl/shadedPrim.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_OOGL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval OOGL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval OOGL_LIB_FLAG="'$final_libs'"
eval HAVE_OOGL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_OOGL_H="'$final_incs'"
eval HAVE_OOGL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_OOGL=''
eval OOGL_LIB_DIR_FLAG=''
eval OOGL_LIB_FLAG=''
eval HAVE_OOGL="no"
eval INC_OOGL_H=''
eval HAVE_OOGL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required OOGL failed.
    To see the failed compile information, look in config.log,
    search for OOGL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required OOGL failed.
    To see the failed compile information, look in config.log,
    search for OOGL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" oogl/basicTexture.h oogl/shadedPrim.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested OOGL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested OOGL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" oogl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested OOGL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested OOGL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (OOGL):  oogl library and headers
##


  fi

  if test "$HAVE_OOGL" = "yes"; then
    DEF_OOGL="#define HAVE_OOGL 1"
  fi

  if test "$with_oogl" && test ! "$DEF_OOGL"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the OOGL components is missing." >&5
echo "$as_me: error: One or more of the OOGL components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

  if test "$OOGL_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
    { echo "$as_me:$LINENO: WARNING: \"$OOGL_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$OOGL_LIB_DIR_FLAG\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: \"flag for OOGL has been removed.\"" >&5
echo "$as_me: WARNING: \"flag for OOGL has been removed.\"" >&2;}
    OOGL_LIB_DIR_FLAG=""
  fi

fi # end sci_required_oogl






##  --  search for glew  -----------------------------------------------
if test "$sci_required_glew" = "yes"; then
  if test "$with_glew"; then
    # first find the opengl headers and libraries
    if test "$with_opengl"; then
      _sci_lib="$with_glew/lib $with_opengl/lib"
      _sci_inc="$with_glew/include $with_opengl/include"
    else
      _sci_lib="$with_glew/lib /usr/X11R6/lib"
      _sci_inc="$with_glew/include /usr/X11R6/include"
    fi
  else
    if test "$with_opengl"; then
      _sci_lib="/usr/X11R6/lib $with_opengl/lib"
      _sci_inc="/usr/X11R6/include $with_opengl/include"
    else
      _sci_lib="/usr/X11R6/lib"
      _sci_inc="/usr/X11R6/include"
    fi
  fi

# Was:
#    #include<GL/glew.h>
#
#    #ifndef GLAPIENTRY
#      #define GLAPIENTRY
#    #endif
#
#    #ifndef GLEWAPI
#      #define GLEWAPI
#    #endif
#    #include<GL/glxew.h>


##
## SCI_TRY_LINK (GLEW):  glew libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GLEW
## arg 2 : glew libraries and headers
## arg 3 : GL/glew.h GL/glxew.h
## arg 4 : $_sci_inc
## arg 5 : GLEW
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GLEW        => lib path
##      GLEW_LIB_DIR_FLAG   => all the -L's
##      GLEW_LIB_FLAG       => all the -l's
##      HAVE_GLEW           => yes or no
##      INC_GLEW_H          => all the -I's
##      HAVE_GLEW_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for glew libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for glew libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for glew libraries and headers (optional)" >&5
echo $ECHO_N "checking for glew libraries and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for glew libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for glew libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GLEW include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GLEW include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLEW check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLEW check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "GLEW"; then

   found_framework=no
   for lib in "" GLEW; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GLEW check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GLEW check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GLEW check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GLEW check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLEW only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLEW only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLEW only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLEW only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" GL/glew.h GL/glxew.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GLEW='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GLEW_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GLEW_LIB_FLAG="'$final_libs'"
eval HAVE_GLEW="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GLEW_H="'$final_incs'"
eval HAVE_GLEW_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GLEW=''
eval GLEW_LIB_DIR_FLAG=''
eval GLEW_LIB_FLAG=''
eval HAVE_GLEW="no"
eval INC_GLEW_H=''
eval HAVE_GLEW_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GLEW failed.
    To see the failed compile information, look in config.log,
    search for GLEW. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GLEW failed.
    To see the failed compile information, look in config.log,
    search for GLEW. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" GL/glew.h GL/glxew.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLEW include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GLEW include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" GLEW; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLEW library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GLEW library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GLEW):  glew libraries and headers
##



  if test "$HAVE_GLEW" = "yes"; then
    DEF_GLEW="#define HAVE_GLEW 1"
  fi

  if test "$with_glew" && test ! "$DEF_GLEW"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the GLEW components is missing." >&5
echo "$as_me: error: One or more of the GLEW components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

  if test "$GLEW_LIB_DIR_FLAG" && test "$enable_rpath" = "no"; then
    { echo "$as_me:$LINENO: WARNING: \"$GLEW_LIB_DIR_FLAG\"" >&5
echo "$as_me: WARNING: \"$GLEW_LIB_DIR_FLAG\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: \"flag for GLEW has been removed.\"" >&5
echo "$as_me: WARNING: \"flag for GLEW has been removed.\"" >&2;}
    GLEW_LIB_DIR_FLAG=""
  fi

fi # end sci_required_glew






##  --  search for freetype stuff  -------------------------------------------
# Default values:
_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_freetype" = "yes"; then
  # If --with-freetype is specified without a parameter, then it makes it required
  _sci_optional=required
elif test "$with_freetype"; then
  # If --with-freetype has a parameter, then use it
  _sci_lib="$with_freetype/lib"
  _sci_inc="$with_freetype/include"
  _sci_optional=specific
fi

echo "$as_me:$LINENO: checking for $_sci_optional freetype" >&5
echo $ECHO_N "checking for $_sci_optional freetype... $ECHO_C" >&6

found_freetype_config="no"

if test -z "$_sci_lib"; then
   freetype_bin=/usr/bin
else
   freetype_bin=$_sci_lib/../bin
fi

if test -e $freetype_bin/freetype-config; then
    found_freetype_config="yes"
    echo
    echo "$as_me:$LINENO: result: Using $freetype_bin/freetype-config to set freetype variables." >&5
echo "${ECHO_T}Using $freetype_bin/freetype-config to set freetype variables." >&6

    includes=`$freetype_bin/freetype-config --cflags`

##
## SCI_TRY_LINK (FREETYPE):  freetype library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : FREETYPE
## arg 2 : freetype library and headers
## arg 3 : ft2build.h
## arg 4 : $_sci_inc
## arg 5 : freetype
## arg 6 : $_sci_lib
## arg 7 : $includes
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_FREETYPE        => lib path
##      FREETYPE_LIB_DIR_FLAG   => all the -L's
##      FREETYPE_LIB_FLAG       => all the -l's
##      HAVE_FREETYPE           => yes or no
##      INC_FREETYPE_H          => all the -I's
##      HAVE_FREETYPE_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for freetype library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for freetype library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for freetype library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for freetype library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for freetype library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for freetype library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for FREETYPE include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for FREETYPE include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FREETYPE check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FREETYPE check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "freetype"; then

   found_framework=no
   for lib in "" freetype; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of FREETYPE check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of FREETYPE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of FREETYPE check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of FREETYPE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FREETYPE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FREETYPE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FREETYPE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FREETYPE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $includes $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ft2build.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_FREETYPE='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval FREETYPE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval FREETYPE_LIB_FLAG="'$final_libs'"
eval HAVE_FREETYPE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_FREETYPE_H="'$final_incs'"
eval HAVE_FREETYPE_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_FREETYPE=''
eval FREETYPE_LIB_DIR_FLAG=''
eval FREETYPE_LIB_FLAG=''
eval HAVE_FREETYPE="no"
eval INC_FREETYPE_H=''
eval HAVE_FREETYPE_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required FREETYPE failed.
    To see the failed compile information, look in config.log,
    search for FREETYPE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required FREETYPE failed.
    To see the failed compile information, look in config.log,
    search for FREETYPE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ft2build.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested FREETYPE include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested FREETYPE include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" freetype; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested FREETYPE library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested FREETYPE library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (FREETYPE):  freetype library and headers
##



    INC_FREETYPE_H="$INC_FREETYPE_H $includes"

    DEF_FREETYPE="#define HAVE_FREETYPE 1"
fi

if test "$found_freetype_config" = "no"; then
   echo "$as_me:$LINENO: result: No 'freetype-config' file found in $freetype_bin.  Skipping Freetype check." >&5
echo "${ECHO_T}No 'freetype-config' file found in $freetype_bin.  Skipping Freetype check." >&6
   if test "$_sci_optional" != "optional"; then
     echo
     { echo "$as_me:$LINENO: WARNING: Cannot find a freetype-config file to get freetype variables." >&5
echo "$as_me: WARNING: Cannot find a freetype-config file to get freetype variables." >&2;}
     { echo "$as_me:$LINENO: WARNING: This file usually resides in freetypelib_dir/../bin/freetype-config." >&5
echo "$as_me: WARNING: This file usually resides in freetypelib_dir/../bin/freetype-config." >&2;}
     { echo "$as_me:$LINENO: WARNING: Please install freetype and then reconfigure." >&5
echo "$as_me: WARNING: Please install freetype and then reconfigure." >&2;}
   fi
fi

if test "$with_freetype" && test ! "$DEF_FREETYPE"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the freetype components is missing." >&5
echo "$as_me: error: One or more of the freetype components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi







##  --  search for ftgl stuff  -------------------------------------------
_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_ftgl" = "yes"; then
  _sci_optional=required
elif test "$with_ftgl"; then
  _sci_lib="$with_ftgl/lib"
  _sci_inc="$with_ftgl/include"
  _sci_optional=specific
fi


##
## SCI_TRY_LINK (FTGL):  ftgl library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : FTGL
## arg 2 : ftgl library
## arg 3 : FTGL/FTGLTextureFont.h
## arg 4 : $_sci_inc
## arg 5 : ftgl
## arg 6 : $_sci_lib
## arg 7 : $INC_FREETYPE_H $FREETYPE_LIB_DIR_FLAG $FREETYPE_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_FTGL        => lib path
##      FTGL_LIB_DIR_FLAG   => all the -L's
##      FTGL_LIB_FLAG       => all the -l's
##      HAVE_FTGL           => yes or no
##      INC_FTGL_H          => all the -I's
##      HAVE_FTGL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for ftgl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for ftgl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for ftgl library ($_sci_optional)" >&5
echo $ECHO_N "checking for ftgl library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for ftgl library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for ftgl library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for FTGL include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for FTGL include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FTGL check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FTGL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "ftgl"; then

   found_framework=no
   for lib in "" ftgl; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of FTGL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of FTGL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of FTGL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of FTGL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FTGL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FTGL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for FTGL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for FTGL only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $INC_FREETYPE_H $FREETYPE_LIB_DIR_FLAG $FREETYPE_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" FTGL/FTGLTextureFont.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_FTGL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval FTGL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval FTGL_LIB_FLAG="'$final_libs'"
eval HAVE_FTGL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_FTGL_H="'$final_incs'"
eval HAVE_FTGL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_FTGL=''
eval FTGL_LIB_DIR_FLAG=''
eval FTGL_LIB_FLAG=''
eval HAVE_FTGL="no"
eval INC_FTGL_H=''
eval HAVE_FTGL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required FTGL failed.
    To see the failed compile information, look in config.log,
    search for FTGL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required FTGL failed.
    To see the failed compile information, look in config.log,
    search for FTGL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" FTGL/FTGLTextureFont.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested FTGL include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested FTGL include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ftgl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested FTGL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested FTGL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (FTGL):  ftgl library
##



if test "$HAVE_FTGL" = "yes"; then
  DEF_FTGL="#define HAVE_FTGL 1"
fi

if test "$with_ftgl" && test ! "$DEF_FTGL"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the FTGL components is missing." >&5
echo "$as_me: error: One or more of the FTGL components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi






sci_defs_files="$sci_defs_files include/sci_defs/ogl_testdefs.h"


##  --  search for audio  -----------------------------------------------

if test "$sci_required_audio" = "yes"; then
  _sci_lib="$with_audio"


##
## SCI_TRY_LINK (AUDIO):  audio library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : AUDIO
## arg 2 : audio library
## arg 3 :
## arg 4 :
## arg 5 : audio audiofile
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_AUDIO        => lib path
##      AUDIO_LIB_DIR_FLAG   => all the -L's
##      AUDIO_LIB_FLAG       => all the -l's
##      HAVE_AUDIO           => yes or no
##      INC_AUDIO_H          => all the -I's
##      HAVE_AUDIO_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for audio library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for audio library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for audio library (optional)" >&5
echo $ECHO_N "checking for audio library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for audio library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for audio library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "audio audiofile"; then

   found_framework=no
   for lib in "" audio audiofile; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of AUDIO check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of AUDIO check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of AUDIO check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of AUDIO check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for AUDIO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for AUDIO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for AUDIO only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for AUDIO only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_AUDIO='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval AUDIO_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval AUDIO_LIB_FLAG="'$final_libs'"
eval HAVE_AUDIO="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_AUDIO_H="'$final_incs'"
eval HAVE_AUDIO_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_AUDIO=''
eval AUDIO_LIB_DIR_FLAG=''
eval AUDIO_LIB_FLAG=''
eval HAVE_AUDIO="no"
eval INC_AUDIO_H=''
eval HAVE_AUDIO_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required AUDIO failed.
    To see the failed compile information, look in config.log,
    search for AUDIO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required AUDIO failed.
    To see the failed compile information, look in config.log,
    search for AUDIO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested AUDIO include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested AUDIO include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" audio audiofile; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested AUDIO library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested AUDIO library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (AUDIO):  audio library
##



  if test "$HAVE_AUDIO" = "yes"; then
    DEF_AUDIO="#define HAVE_AUDIO 1"
  fi

  if test "$with_audio" && test ! "$DEF_AUDIO"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the AUDIO components is missing." >&5
echo "$as_me: error: One or more of the AUDIO components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

fi # end sci_required_audio





sci_defs_files="$sci_defs_files include/sci_defs/audio_testdefs.h"

##  --  search for teem  -------------------------------------------------

# Default values: (Really required, but need to give info to user if fails.)
#                 (See below.)
_sci_optional=optional
_sci_lib="$sci_thirdparty_lib"
_sci_inc="$sci_thirdparty_include"

if test "$with_teem"; then
  if test "$with_teem" = "yes"; then
    { echo "$as_me:$LINENO: WARNING: Teem is already required - you do not need to specify --with-teem." >&5
echo "$as_me: WARNING: Teem is already required - you do not need to specify --with-teem." >&2;}
  else
    # If --with-teem has a parameter, then use it
    _sci_lib="$with_teem/lib"
    _sci_inc="$with_teem/include"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=specific
  fi
fi

# Determine if teem is using png.  Assume teem is either in the 3rd Party
# or where the user has specified (as we are going to use nm to look at its
# symbols and are not trying to link against it (at this point.))

result=`nm $_sci_lib/libteem.a | grep png_write_info`
if test _sci_optional != "optional" && test -n "$result" && test "$HAVE_PNG" != "yes"; then
   { echo "$as_me:$LINENO: WARNING: Teem was built with PNG support.  However the SCIRun configure" >&5
echo "$as_me: WARNING: Teem was built with PNG support.  However the SCIRun configure" >&2;}
   { echo "$as_me:$LINENO: WARNING: did not find PNG.  You need to determine where it is... as" >&5
echo "$as_me: WARNING: did not find PNG.  You need to determine where it is... as" >&2;}
   { echo "$as_me:$LINENO: WARNING: Teem seems to have found it already.  You will most likely then need" >&5
echo "$as_me: WARNING: Teem seems to have found it already.  You will most likely then need" >&2;}
   { echo "$as_me:$LINENO: WARNING: to use --with-png=/dir/above/dir/having/libpng on your configure line." >&5
echo "$as_me: WARNING: to use --with-png=/dir/above/dir/having/libpng on your configure line." >&2;}
   { { echo "$as_me:$LINENO: error: Please fix this problem and then configure again." >&5
echo "$as_me: error: Please fix this problem and then configure again." >&2;}
   { (exit 1); exit 1; }; }
fi


##
## SCI_TRY_LINK (TEEM):  teem library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TEEM
## arg 2 : teem library and headers
## arg 3 : teem/nrrd.h teem/ten.h
## arg 4 : $_sci_inc
## arg 5 : teem $PNG_LIB_FLAG $Z_LIB_FLAG -lm
## arg 6 : $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_TEEM        => lib path
##      TEEM_LIB_DIR_FLAG   => all the -L's
##      TEEM_LIB_FLAG       => all the -l's
##      HAVE_TEEM           => yes or no
##      INC_TEEM_H          => all the -I's
##      HAVE_TEEM_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for teem library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for teem library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for teem library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for teem library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for teem library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for teem library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for TEEM include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for TEEM include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TEEM check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TEEM check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "teem $PNG_LIB_FLAG $Z_LIB_FLAG -lm"; then

   found_framework=no
   for lib in "" teem $PNG_LIB_FLAG $Z_LIB_FLAG -lm; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of TEEM check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TEEM check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG"; then

   for path in "" $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of TEEM check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TEEM check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TEEM only one library path may be specified for arg 6 (you had: $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TEEM only one library path may be specified for arg 6 (you had: $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TEEM only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TEEM only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" teem/nrrd.h teem/ten.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

float a[3], b[9], c[7];
tenEigensolve_f(a,b,c);


  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_TEEM='"$_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TEEM_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TEEM_LIB_FLAG="'$final_libs'"
eval HAVE_TEEM="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TEEM_H="'$final_incs'"
eval HAVE_TEEM_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_TEEM=''
eval TEEM_LIB_DIR_FLAG=''
eval TEEM_LIB_FLAG=''
eval HAVE_TEEM="no"
eval INC_TEEM_H=''
eval HAVE_TEEM_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required TEEM failed.
    To see the failed compile information, look in config.log,
    search for TEEM. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required TEEM failed.
    To see the failed compile information, look in config.log,
    search for TEEM. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" teem/nrrd.h teem/ten.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested TEEM include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested TEEM include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" teem $PNG_LIB_FLAG $Z_LIB_FLAG -lm; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG/lib$i.so && test ! -e $_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested TEEM library file '$_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested TEEM library file '$_sci_lib $PNG_LIB_DIR_FLAG $Z_LIB_DIR_FLAG/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TEEM):  teem library and headers
##



if test "$HAVE_TEEM" = "yes"; then
   DEF_TEEM="#define HAVE_TEEM 1"
else
   { echo "$as_me:$LINENO: WARNING: Teem thirdparty library check failed.  This most likely" >&5
echo "$as_me: WARNING: Teem thirdparty library check failed.  This most likely" >&2;}
   { echo "$as_me:$LINENO: WARNING: means one of two things.  1. Could not find the teem" >&5
echo "$as_me: WARNING: means one of two things.  1. Could not find the teem" >&2;}
   { echo "$as_me:$LINENO: WARNING: thirdparty library files.  or 2. Your teem thirdparty" >&5
echo "$as_me: WARNING: thirdparty library files.  or 2. Your teem thirdparty" >&2;}
   { echo "$as_me:$LINENO: WARNING: is too old.  Look in config.log for more information." >&5
echo "$as_me: WARNING: is too old.  Look in config.log for more information." >&2;}
   { echo "$as_me:$LINENO: WARNING: If the error message is something like:" >&5
echo "$as_me: WARNING: If the error message is something like:" >&2;}
   { echo "$as_me:$LINENO: WARNING: \`tenEigensolve_f' undeclared then you most likely" >&5
echo "$as_me: WARNING: \`tenEigensolve_f' undeclared then you most likely" >&2;}
   { echo "$as_me:$LINENO: WARNING: have too old of a thirdparty." >&5
echo "$as_me: WARNING: have too old of a thirdparty." >&2;}
   { { echo "$as_me:$LINENO: error: One or more of the TEEM components is missing." >&5
echo "$as_me: error: One or more of the TEEM components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${TEEM_LIB_DIR_FLAG}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval TEEM_LIB_DIR_FLAG='"$_new_path"'


##
## SCI_SUBST_THIRDPARTY_DIR:
##
## arguments mean:
## arg 1 : This variable will searched for the substring of the expansion of $sci_thirdparty_dir
## and that substring will be replaced with $(SCIRUN_THIRDPARTY_DIR)
##
  _new_path=${INC_TEEM_H}
  _fulldir=`cd ${sci_thirdparty_dir}; pwd`
  _new_path=`echo $_new_path | sed 's%'${_fulldir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  _new_path=`echo $_new_path | sed 's%'${sci_thirdparty_dir}'%\$(SCIRUN_THIRDPARTY_DIR)%g'`
  eval INC_TEEM_H='"$_new_path"'







sci_defs_files="$sci_defs_files include/sci_defs/teem_testdefs.h"

##  --  search for mdsplus  -------------------------------------------------

if test "$sci_required_mdsplus" = "yes"; then
  if test "$with_mdsplus"; then
    _sci_lib="$with_mdsplus/lib"
    _sci_inc="$with_mdsplus/include"
  else
    _sci_lib="/usr/local/mdsplus/lib"
    _sci_inc="/usr/local/mdsplus/include"
  fi

# mdsplus is a C lib so it has to be checked as a C file not CC.
  cxx="$CXX"
  CXX="$CC"

  ext="$ac_ext"
  ac_ext="c"


##
## SCI_TRY_LINK (MDSPLUS):  mdslib library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MDSPLUS
## arg 2 : mdslib library and headers
## arg 3 : mdslib.h
## arg 4 : $_sci_inc
## arg 5 : MdsLib_client
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_MDSPLUS        => lib path
##      MDSPLUS_LIB_DIR_FLAG   => all the -L's
##      MDSPLUS_LIB_FLAG       => all the -l's
##      HAVE_MDSPLUS           => yes or no
##      INC_MDSPLUS_H          => all the -I's
##      HAVE_MDSPLUS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for mdslib library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for mdslib library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for mdslib library and headers (optional)" >&5
echo $ECHO_N "checking for mdslib library and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for mdslib library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for mdslib library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for MDSPLUS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for MDSPLUS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MDSPLUS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MDSPLUS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "MdsLib_client"; then

   found_framework=no
   for lib in "" MdsLib_client; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of MDSPLUS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MDSPLUS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of MDSPLUS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MDSPLUS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MDSPLUS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MDSPLUS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for MDSPLUS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for MDSPLUS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mdslib.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_MDSPLUS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MDSPLUS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MDSPLUS_LIB_FLAG="'$final_libs'"
eval HAVE_MDSPLUS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MDSPLUS_H="'$final_incs'"
eval HAVE_MDSPLUS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_MDSPLUS=''
eval MDSPLUS_LIB_DIR_FLAG=''
eval MDSPLUS_LIB_FLAG=''
eval HAVE_MDSPLUS="no"
eval INC_MDSPLUS_H=''
eval HAVE_MDSPLUS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required MDSPLUS failed.
    To see the failed compile information, look in config.log,
    search for MDSPLUS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required MDSPLUS failed.
    To see the failed compile information, look in config.log,
    search for MDSPLUS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mdslib.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested MDSPLUS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested MDSPLUS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" MdsLib_client; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested MDSPLUS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested MDSPLUS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MDSPLUS):  mdslib library and headers
##



  if test "$HAVE_MDSPLUS" = "yes"; then
     DEF_MDSPLUS="#define HAVE_MDSPLUS 1"
  fi

  if test "$with_mdsplus" && test ! "$DEF_MDSPLUS"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the MDSPLUS components is missing." >&5
echo "$as_me: error: One or more of the MDSPLUS components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

# Restore the previous settings.
  CXX="$cxx"
  ac_ext="$ext"
fi #end sci_required_mdsplus





sci_defs_files="$sci_defs_files include/sci_defs/mdsplus_testdefs.h"

##  --  search for hdf5  -------------------------------------------------

# The sci_required_hdf5 could have been set to yes when using the
# with_hdf5 agument or from a package in the aclocal.m4 it.
# These are the only two locations that the sci_required_* should be set.

if test "$sci_required_hdf5" = "yes"; then

  _sci_optional=required
  if test "$with_hdf5"; then
    if test "$with_hdf5" != "yes"; then
      _sci_lib="$with_hdf5/lib"			# user defined directory
      _sci_inc="$with_hdf5/include"
      _sci_optional=specific
    fi
  fi


##
## SCI_TRY_LINK (HDF5):  hdf5 library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : HDF5
## arg 2 : hdf5 library and headers
## arg 3 : hdf5.h
## arg 4 : $_sci_inc
## arg 5 : hdf5
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_HDF5        => lib path
##      HDF5_LIB_DIR_FLAG   => all the -L's
##      HDF5_LIB_FLAG       => all the -l's
##      HAVE_HDF5           => yes or no
##      INC_HDF5_H          => all the -I's
##      HAVE_HDF5_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for hdf5 library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for hdf5 library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for hdf5 library and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for hdf5 library and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for hdf5 library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for hdf5 library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for HDF5 include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for HDF5 include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HDF5 check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HDF5 check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "hdf5"; then

   found_framework=no
   for lib in "" hdf5; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of HDF5 check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of HDF5 check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of HDF5 check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of HDF5 check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for HDF5 only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for HDF5 only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for HDF5 only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for HDF5 only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" hdf5.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_HDF5='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval HDF5_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval HDF5_LIB_FLAG="'$final_libs'"
eval HAVE_HDF5="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_HDF5_H="'$final_incs'"
eval HAVE_HDF5_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_HDF5=''
eval HDF5_LIB_DIR_FLAG=''
eval HDF5_LIB_FLAG=''
eval HAVE_HDF5="no"
eval INC_HDF5_H=''
eval HAVE_HDF5_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required HDF5 failed.
    To see the failed compile information, look in config.log,
    search for HDF5. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required HDF5 failed.
    To see the failed compile information, look in config.log,
    search for HDF5. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" hdf5.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested HDF5 include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested HDF5 include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" hdf5; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested HDF5 library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested HDF5 library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (HDF5):  hdf5 library and headers
##



  # Set the DEF_HDF5 var which is placed in the hdf5_testdefs.h.in
  # Incude hdf5_defs.h in your code to optionally use the library.
  if test "$HAVE_HDF5" = "yes"; then
     DEF_HDF5="#define HAVE_HDF5 1"
  fi

fi #end sci_required_hdf5

		# Place this var in the hdf5_testdefs.h.in
		# Place this var in the configVars.mk.in
		# Place this var in the configVars.mk.in
	# Place this var in the configVars.mk.in
sci_defs_files="$sci_defs_files include/sci_defs/hdf5_testdefs.h"

##  --  search for perfex  -----------------------------------------------

if test "$sci_required_perfex" = "yes"; then

  _sci_lib=


##
## SCI_TRY_LINK (PERFEX):  perfex library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PERFEX
## arg 2 : perfex library
## arg 3 :
## arg 4 :
## arg 5 : perfex
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_PERFEX        => lib path
##      PERFEX_LIB_DIR_FLAG   => all the -L's
##      PERFEX_LIB_FLAG       => all the -l's
##      HAVE_PERFEX           => yes or no
##      INC_PERFEX_H          => all the -I's
##      HAVE_PERFEX_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for perfex library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for perfex library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for perfex library (required)" >&5
echo $ECHO_N "checking for perfex library (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for perfex library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for perfex library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "perfex"; then

   found_framework=no
   for lib in "" perfex; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of PERFEX check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PERFEX check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of PERFEX check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PERFEX check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PERFEX only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PERFEX only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for PERFEX only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for PERFEX only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_PERFEX='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PERFEX_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PERFEX_LIB_FLAG="'$final_libs'"
eval HAVE_PERFEX="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PERFEX_H="'$final_incs'"
eval HAVE_PERFEX_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_PERFEX=''
eval PERFEX_LIB_DIR_FLAG=''
eval PERFEX_LIB_FLAG=''
eval HAVE_PERFEX="no"
eval INC_PERFEX_H=''
eval HAVE_PERFEX_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required PERFEX failed.
    To see the failed compile information, look in config.log,
    search for PERFEX. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required PERFEX failed.
    To see the failed compile information, look in config.log,
    search for PERFEX. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested PERFEX include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested PERFEX include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" perfex; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested PERFEX library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested PERFEX library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PERFEX):  perfex library
##



  if test "$HAVE_PERFEX" = "yes"; then
    DEF_PERFEX="#define HAVE_PERFEX 1"
  fi
fi






##  --  search for crypto --------------------------------

if test "$sci_required_crypto" = "yes"; then
  if test "$with_crypto"; then
    _sci_lib="$with_crypto/lib"
  else
    _sci_lib="$with_globus/lib"
  fi


##
## SCI_TRY_LINK (CRYPTO):  crypto library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : CRYPTO
## arg 2 : crypto library
## arg 3 :
## arg 4 :
## arg 5 : crypto
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_CRYPTO        => lib path
##      CRYPTO_LIB_DIR_FLAG   => all the -L's
##      CRYPTO_LIB_FLAG       => all the -l's
##      HAVE_CRYPTO           => yes or no
##      INC_CRYPTO_H          => all the -I's
##      HAVE_CRYPTO_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for crypto library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for crypto library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for crypto library (optional)" >&5
echo $ECHO_N "checking for crypto library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for crypto library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for crypto library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "crypto"; then

   found_framework=no
   for lib in "" crypto; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of CRYPTO check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of CRYPTO check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of CRYPTO check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of CRYPTO check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CRYPTO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CRYPTO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for CRYPTO only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for CRYPTO only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_CRYPTO='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval CRYPTO_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval CRYPTO_LIB_FLAG="'$final_libs'"
eval HAVE_CRYPTO="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_CRYPTO_H="'$final_incs'"
eval HAVE_CRYPTO_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_CRYPTO=''
eval CRYPTO_LIB_DIR_FLAG=''
eval CRYPTO_LIB_FLAG=''
eval HAVE_CRYPTO="no"
eval INC_CRYPTO_H=''
eval HAVE_CRYPTO_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required CRYPTO failed.
    To see the failed compile information, look in config.log,
    search for CRYPTO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required CRYPTO failed.
    To see the failed compile information, look in config.log,
    search for CRYPTO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested CRYPTO include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested CRYPTO include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" crypto; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested CRYPTO library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested CRYPTO library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (CRYPTO):  crypto library
##



  if test "$HAVE_CRYPTO" = "yes"; then
    DEF_CRYPTO="#define HAVE_CRYPTO 1"
  fi

  if test "$with_crypto" && test ! "$DEF_CRYPTO"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the CRYPTO components is missing." >&5
echo "$as_me: error: One or more of the CRYPTO components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_crypto




sci_defs_files="$sci_defs_files include/sci_defs/crypto_testdefs.h"

##  --  search for ssl ---------------------------------

if test "$sci_required_ssl" = "yes"; then

  _sci_lib=

  if test "$with_ssl"; then
    _sci_lib="$with_ssl/lib"
  else
    _sci_lib="$sci_thirdparty_lib"
  fi


##
## SCI_TRY_LINK (SSL):  ssl library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : SSL
## arg 2 : ssl library
## arg 3 :
## arg 4 :
## arg 5 : ssl crypto
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_SSL        => lib path
##      SSL_LIB_DIR_FLAG   => all the -L's
##      SSL_LIB_FLAG       => all the -l's
##      HAVE_SSL           => yes or no
##      INC_SSL_H          => all the -I's
##      HAVE_SSL_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for ssl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for ssl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for ssl library (optional)" >&5
echo $ECHO_N "checking for ssl library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for ssl library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for ssl library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "ssl crypto"; then

   found_framework=no
   for lib in "" ssl crypto; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of SSL check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of SSL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of SSL check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of SSL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SSL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SSL only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for SSL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for SSL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_SSL='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval SSL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval SSL_LIB_FLAG="'$final_libs'"
eval HAVE_SSL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_SSL_H="'$final_incs'"
eval HAVE_SSL_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_SSL=''
eval SSL_LIB_DIR_FLAG=''
eval SSL_LIB_FLAG=''
eval HAVE_SSL="no"
eval INC_SSL_H=''
eval HAVE_SSL_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required SSL failed.
    To see the failed compile information, look in config.log,
    search for SSL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required SSL failed.
    To see the failed compile information, look in config.log,
    search for SSL. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested SSL include file '/$i' was not found" >&5
echo "$as_me: error: Specifically requested SSL include file '/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ssl crypto; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested SSL library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested SSL library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (SSL):  ssl library
##



  if test "$HAVE_SSL" = "yes"; then
    DEF_SSL="#define HAVE_SSL 1"
  fi

  if test "$with_ssl" && test ! "$DEF_SSL"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the SSL components is missing." >&5
echo "$as_me: error: One or more of the SSL components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_ssl




sci_defs_files="$sci_defs_files include/sci_defs/ssl_testdefs.h"

##  --  globus nexus  ----------------------------------------------------

if test "$sci_required_globus" = "yes"; then

  if test "$with_globus"; then
    _sci_lib="$with_globus/lib"
    _sci_inc="$with_globus/include"
  else
    _sci_lib="$sci_thirdparty_lib"
    _sci_inc="$sci_thirdparty_include"
  fi

  if test ! "$DEF_SSL"; then
    { { echo "$as_me:$LINENO: error: SSL library not found.  This will cause globus check to fail.  Use --with-ssl=path_to_ssl." >&5
echo "$as_me: error: SSL library not found.  This will cause globus check to fail.  Use --with-ssl=path_to_ssl." >&2;}
   { (exit 1); exit 1; }; }
  fi
  if test ! "$DEF_CRYPTO"; then
    { { echo "$as_me:$LINENO: error: CRYPTO library not found.  This will cause globus check to fail.  Use --with-crypto=path_to_crypto" >&5
echo "$as_me: error: CRYPTO library not found.  This will cause globus check to fail.  Use --with-crypto=path_to_crypto" >&2;}
   { (exit 1); exit 1; }; }
  fi

  MISC_LIB_FLAG="$SSL_LIB_DIR_FLAG $SSL_LIB_FLAG $CRYPTO_LIB_DIR_FLAG $CRYPTO_LIB_FLAG"


##
## SCI_TRY_LINK (GLOBUS):  globus library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : GLOBUS
## arg 2 : globus library and headers
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : globus_dc pthread
## arg 6 : $_sci_lib
## arg 7 : $MISC_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_GLOBUS        => lib path
##      GLOBUS_LIB_DIR_FLAG   => all the -L's
##      GLOBUS_LIB_FLAG       => all the -l's
##      HAVE_GLOBUS           => yes or no
##      INC_GLOBUS_H          => all the -I's
##      HAVE_GLOBUS_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for globus library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for globus library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for globus library and headers (optional)" >&5
echo $ECHO_N "checking for globus library and headers (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for globus library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for globus library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for GLOBUS include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for GLOBUS include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLOBUS check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of GLOBUS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "globus_dc pthread"; then

   found_framework=no
   for lib in "" globus_dc pthread; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of GLOBUS check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of GLOBUS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of GLOBUS check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of GLOBUS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLOBUS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLOBUS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for GLOBUS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for GLOBUS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $MISC_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_GLOBUS='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval GLOBUS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval GLOBUS_LIB_FLAG="'$final_libs'"
eval HAVE_GLOBUS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_GLOBUS_H="'$final_incs'"
eval HAVE_GLOBUS_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_GLOBUS=''
eval GLOBUS_LIB_DIR_FLAG=''
eval GLOBUS_LIB_FLAG=''
eval HAVE_GLOBUS="no"
eval INC_GLOBUS_H=''
eval HAVE_GLOBUS_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required GLOBUS failed.
    To see the failed compile information, look in config.log,
    search for GLOBUS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required GLOBUS failed.
    To see the failed compile information, look in config.log,
    search for GLOBUS. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLOBUS include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested GLOBUS include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" globus_dc pthread; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested GLOBUS library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested GLOBUS library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (GLOBUS):  globus library and headers
##



  # If no with-globus on command line, but we have found globus, try
  # the one we found when doing the following AC_CHECK_FILES:
  if test "$with_globus"; then
    with_globus_lib=$with_globus
  else
    with_globus_lib=$LIB_DIR_GLOBUS/..
  fi

  # These globus libs need SCIRun thread files to link.  Because we
  # don't have them yet (we haven't compiled SCIRun yet...), we
  # can't test for linking.  Therefore we just test for existence.
  as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_common.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_common.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_common.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_common.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_common.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_nexus.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_nexus.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_nexus.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_nexus.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_nexus.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_io.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_io.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_io.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_io.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_io.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_utp.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_utp.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_utp.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_utp.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_utp.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_mp.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_mp.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_mp.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_mp.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_mp.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_gss_assist.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_gss_assist.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_gss_assist.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_gss_assist.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_gss_assist.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_gss.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_gss.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_gss.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_gss.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_gss.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/lib/libglobus_gaa.so" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/lib/libglobus_gaa.so" >&5
echo $ECHO_N "checking for $with_globus_lib/lib/libglobus_gaa.so... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/lib/libglobus_gaa.so"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/lib/libglobus_gaa.so" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi
as_ac_File=`echo "ac_cv_file_$with_globus_lib/include/globus_nexus.h" | $as_tr_sh`
echo "$as_me:$LINENO: checking for $with_globus_lib/include/globus_nexus.h" >&5
echo $ECHO_N "checking for $with_globus_lib/include/globus_nexus.h... $ECHO_C" >&6
if eval "test \"\${$as_ac_File+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  test "$cross_compiling" = yes &&
  { { echo "$as_me:$LINENO: error: cannot check for file existence when cross compiling" >&5
echo "$as_me: error: cannot check for file existence when cross compiling" >&2;}
   { (exit 1); exit 1; }; }
if test -r "$with_globus_lib/include/globus_nexus.h"; then
  eval "$as_ac_File=yes"
else
  eval "$as_ac_File=no"
fi
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_File'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_File'}'`" >&6
if test `eval echo '${'$as_ac_File'}'` = yes; then

cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$with_globus_lib/include/globus_nexus.h" | $as_tr_cpp` 1
_ACEOF


else
  HAVE_GLOBUS=""
fi


  if test "$HAVE_GLOBUS" = "yes"; then
    DEF_GLOBUS="#define HAVE_GLOBUS 1"
    GLOBUS_LIB_FLAG="$GLOBUS_LIB_FLAG -lglobus_common -lglobus_nexus -lglobus_io -lglobus_mp -lglobus_gss_assist -lglobus_gss -lglobus_gaa $MISC_LIB_FLAG"
    INC_GLOBUS_H=-I"$with_globus"/include
  fi

  if test "$with_globus" && test ! "$DEF_GLOBUS"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the GLOBUS components is missing." >&5
echo "$as_me: error: One or more of the GLOBUS components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi

fi #end sci_required_globus






sci_defs_files="$sci_defs_files include/sci_defs/globus_testdefs.h"

##  --  search for Qt  ----------------------------------------------------

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_qt" = "yes"; then
  _sci_optional=required
elif test "$with_qt"; then
  _sci_lib="$with_qt/lib"
  _sci_inc="$with_qt/include"
  _sci_optional=specific
fi

# Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (QT_MT):  qt library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : QT_MT
## arg 2 : qt library
## arg 3 : qcanvas.h
## arg 4 : $_sci_inc
## arg 5 : qt-mt
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_QT_MT        => lib path
##      QT_MT_LIB_DIR_FLAG   => all the -L's
##      QT_MT_LIB_FLAG       => all the -l's
##      HAVE_QT_MT           => yes or no
##      INC_QT_MT_H          => all the -I's
##      HAVE_QT_MT_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for qt library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for qt library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for qt library (optional)" >&5
echo $ECHO_N "checking for qt library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for qt library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for qt library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for QT_MT include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for QT_MT include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of QT_MT check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of QT_MT check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "qt-mt"; then

   found_framework=no
   for lib in "" qt-mt; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of QT_MT check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of QT_MT check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of QT_MT check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of QT_MT check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for QT_MT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for QT_MT only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for QT_MT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for QT_MT only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" qcanvas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_QT_MT='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval QT_MT_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval QT_MT_LIB_FLAG="'$final_libs'"
eval HAVE_QT_MT="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_QT_MT_H="'$final_incs'"
eval HAVE_QT_MT_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_QT_MT=''
eval QT_MT_LIB_DIR_FLAG=''
eval QT_MT_LIB_FLAG=''
eval HAVE_QT_MT="no"
eval INC_QT_MT_H=''
eval HAVE_QT_MT_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required QT_MT failed.
    To see the failed compile information, look in config.log,
    search for QT_MT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required QT_MT failed.
    To see the failed compile information, look in config.log,
    search for QT_MT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" qcanvas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested QT_MT include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested QT_MT include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" qt-mt; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested QT_MT library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested QT_MT library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (QT_MT):  qt library
##


QT_MOC_BIN=""
{ echo "$as_me:$LINENO: checking for moc in $LIB_DIR_QT_MT/../bin..." >&5
echo "$as_me: checking for moc in $LIB_DIR_QT_MT/../bin..." >&6;}
# Extract the first word of "moc", so it can be a program name with args.
set dummy moc; ac_word=$2
echo "$as_me:$LINENO: checking for $ac_word" >&5
echo $ECHO_N "checking for $ac_word... $ECHO_C" >&6
if test "${ac_cv_prog_QT_MOC_BIN+set}" = set; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  if test -n "$QT_MOC_BIN"; then
  ac_cv_prog_QT_MOC_BIN="$QT_MOC_BIN" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $LIB_DIR_QT_MT/../bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for ac_exec_ext in '' $ac_executable_extensions; do
  if $as_executable_p "$as_dir/$ac_word$ac_exec_ext"; then
    ac_cv_prog_QT_MOC_BIN="$LIB_DIR_QT_MT/../bin/moc"
    echo "$as_me:$LINENO: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
done

  test -z "$ac_cv_prog_QT_MOC_BIN" && ac_cv_prog_QT_MOC_BIN="NOMOC"
fi
fi
QT_MOC_BIN=$ac_cv_prog_QT_MOC_BIN
if test -n "$QT_MOC_BIN"; then
  echo "$as_me:$LINENO: result: $QT_MOC_BIN" >&5
echo "${ECHO_T}$QT_MOC_BIN" >&6
else
  echo "$as_me:$LINENO: result: no" >&5
echo "${ECHO_T}no" >&6
fi


if test "$HAVE_QT_MT" = "yes" && test $QT_MOC_BIN != "NOMOC"; then
   DEF_QT="#define HAVE_QT 1"
   HAVE_QT="yes"
fi

if test "$with_qt" && test ! "$DEF_QT"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the QT components is missing." >&5
echo "$as_me: error: One or more of the QT components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi







sci_defs_files="$sci_defs_files include/sci_defs/qt_testdefs.h"

##  --  search for ruby  ----------------------------------------------------
if test "$sci_required_ruby" = "yes"; then
  _sci_optional=optional

  if test "$with_ruby" = "yes"; then
    # --with-ruby has been specified without a parameter.
    _sci_lib="$sci_thirdparty_lib"
    _ruby_inc="$sci_thirdparty_include"
    _sci_optional=required
  else
   if test "$with_ruby"; then
     #if --with-ruby has been specified with a parameter, then use that parameter
    _sci_lib="$with_ruby/lib"
    # A standard ruby install only places include files in platform-specific directories and does
    # not bother to create symlinks.  We have to search for the .h files here.  This may fail where
    # multiple builds of ruby are placed under the same root install tree.  If "find" fails, then the
    # configure will also fail unless ruby.h is in a standard path.
    echo "Searching for ruby.h under $with_ruby"
    _ruby_inc=`find $with_ruby -name "ruby.h" -print | sed 's/ruby.h//'`
    _sci_optional=specific
   fi
  fi

  # Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (RUBY):  ruby library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : RUBY
## arg 2 : ruby library
## arg 3 : ruby.h
## arg 4 : $_ruby_inc
## arg 5 : ruby-static
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_RUBY        => lib path
##      RUBY_LIB_DIR_FLAG   => all the -L's
##      RUBY_LIB_FLAG       => all the -l's
##      HAVE_RUBY           => yes or no
##      INC_RUBY_H          => all the -I's
##      HAVE_RUBY_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for ruby library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for ruby library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for ruby library ($_sci_optional)" >&5
echo $ECHO_N "checking for ruby library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for ruby library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for ruby library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_ruby_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_ruby_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for RUBY include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for RUBY include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_ruby_inc) of RUBY check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_ruby_inc) of RUBY check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "ruby-static"; then

   found_framework=no
   for lib in "" ruby-static; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of RUBY check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of RUBY check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of RUBY check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of RUBY check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for RUBY only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for RUBY only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_ruby_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_ruby_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_ruby_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for RUBY only one include path may be specified for arg 4 (you had: $_ruby_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for RUBY only one include path may be specified for arg 4 (you had: $_ruby_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ruby.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_RUBY='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval RUBY_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval RUBY_LIB_FLAG="'$final_libs'"
eval HAVE_RUBY="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_RUBY_H="'$final_incs'"
eval HAVE_RUBY_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_RUBY=''
eval RUBY_LIB_DIR_FLAG=''
eval RUBY_LIB_FLAG=''
eval HAVE_RUBY="no"
eval INC_RUBY_H=''
eval HAVE_RUBY_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required RUBY failed.
    To see the failed compile information, look in config.log,
    search for RUBY. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required RUBY failed.
    To see the failed compile information, look in config.log,
    search for RUBY. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ruby.h; do
    #echo looking for $_ruby_inc/$i
    if test ! -e $_ruby_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested RUBY include file '$_ruby_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested RUBY include file '$_ruby_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ruby-static; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested RUBY library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested RUBY library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (RUBY):  ruby library
##



  if test "$HAVE_RUBY" = "yes"; then
     DEF_RUBY="#define HAVE_RUBY 1"
     HAVE_RUBY="yes"
  fi

  if test "$with_ruby" && test ! "$DEF_RUBY"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the ruby components are missing." >&5
echo "$as_me: error: One or more of the ruby components are missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_ruby






sci_defs_files="$sci_defs_files include/sci_defs/ruby_testdefs.h"

##  --  search for tao corba ----------------------------------------------------
if test "$sci_required_tao" = "yes"; then
  if test "$with_tao" = "yes"; then
    # --with-tao has been specified without a parameter.
    _sci_lib="$sci_thirdparty_lib"
    _tao_inc="$sci_thirdparty_include"
  else
   if test "$with_tao"; then
    _sci_lib="$with_tao/ace"
    _tao_inc="$with_tao $with_tao/ace $with_tao/TAO $with_tao/TAO/tao"
   fi
  fi

  # Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (TAO):  tao corba library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TAO
## arg 2 : tao corba library
## arg 3 : pre.h
## arg 4 : $_tao_inc
## arg 5 : TAO_IORTable TAO_PortableServer TAO_IORInterceptor TAO ACE
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_TAO        => lib path
##      TAO_LIB_DIR_FLAG   => all the -L's
##      TAO_LIB_FLAG       => all the -l's
##      HAVE_TAO           => yes or no
##      INC_TAO_H          => all the -I's
##      HAVE_TAO_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for tao corba library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for tao corba library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for tao corba library (optional)" >&5
echo $ECHO_N "checking for tao corba library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for tao corba library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for tao corba library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_tao_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_tao_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for TAO include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for TAO include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_tao_inc) of TAO check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_tao_inc) of TAO check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "TAO_IORTable TAO_PortableServer TAO_IORInterceptor TAO ACE"; then

   found_framework=no
   for lib in "" TAO_IORTable TAO_PortableServer TAO_IORInterceptor TAO ACE; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of TAO check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TAO check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of TAO check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TAO check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TAO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TAO only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_tao_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_tao_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_tao_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for TAO only one include path may be specified for arg 4 (you had: $_tao_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for TAO only one include path may be specified for arg 4 (you had: $_tao_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" pre.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_TAO='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TAO_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TAO_LIB_FLAG="'$final_libs'"
eval HAVE_TAO="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TAO_H="'$final_incs'"
eval HAVE_TAO_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_TAO=''
eval TAO_LIB_DIR_FLAG=''
eval TAO_LIB_FLAG=''
eval HAVE_TAO="no"
eval INC_TAO_H=''
eval HAVE_TAO_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required TAO failed.
    To see the failed compile information, look in config.log,
    search for TAO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required TAO failed.
    To see the failed compile information, look in config.log,
    search for TAO. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" pre.h; do
    #echo looking for $_tao_inc/$i
    if test ! -e $_tao_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested TAO include file '$_tao_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested TAO include file '$_tao_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" TAO_IORTable TAO_PortableServer TAO_IORInterceptor TAO ACE; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested TAO library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested TAO library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TAO):  tao corba library
##



  if test "$HAVE_TAO" = "yes"; then
     DEF_TAO="#define HAVE_TAO 1"
     HAVE_TAO="yes"
  fi

  if test "$with_tao" && test ! "$DEF_TAO"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the Tao components are missing." >&5
echo "$as_me: error: One or more of the Tao components are missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_tao






sci_defs_files="$sci_defs_files include/sci_defs/tao_testdefs.h"

##  --  search for vtk  ----------------------------------------------------
if test "$sci_required_vtk" = "yes"; then
  if test "$with_vtk"; then
    _sci_lib="$with_vtk/lib/vtk"
    _vtk_inc="$with_vtk/include/vtk"
  else
    _sci_lib="$sci_thirdparty_lib"
    _vtk_inc="$sci_thirdparty_include"
  fi

  # Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (VTK):  vtk library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : VTK
## arg 2 : vtk library
## arg 3 : vtkImageData.h
## arg 4 : $_vtk_inc
## arg 5 : vtkCommon vtkFiltering vtkGraphics vtkImaging vtkRendering vtkIO vtkjpeg vtkpng vtkzlib
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_VTK        => lib path
##      VTK_LIB_DIR_FLAG   => all the -L's
##      VTK_LIB_FLAG       => all the -l's
##      HAVE_VTK           => yes or no
##      INC_VTK_H          => all the -I's
##      HAVE_VTK_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for vtk library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for vtk library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for vtk library (optional)" >&5
echo $ECHO_N "checking for vtk library (optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for vtk library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for vtk library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_vtk_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_vtk_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for VTK include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for VTK include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_vtk_inc) of VTK check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_vtk_inc) of VTK check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "vtkCommon vtkFiltering vtkGraphics vtkImaging vtkRendering vtkIO vtkjpeg vtkpng vtkzlib"; then

   found_framework=no
   for lib in "" vtkCommon vtkFiltering vtkGraphics vtkImaging vtkRendering vtkIO vtkjpeg vtkpng vtkzlib; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of VTK check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of VTK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of VTK check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of VTK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for VTK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for VTK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_vtk_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_vtk_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_vtk_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for VTK only one include path may be specified for arg 4 (you had: $_vtk_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for VTK only one include path may be specified for arg 4 (you had: $_vtk_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vtkImageData.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_VTK='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval VTK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval VTK_LIB_FLAG="'$final_libs'"
eval HAVE_VTK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_VTK_H="'$final_incs'"
eval HAVE_VTK_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_VTK=''
eval VTK_LIB_DIR_FLAG=''
eval VTK_LIB_FLAG=''
eval HAVE_VTK="no"
eval INC_VTK_H=''
eval HAVE_VTK_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required VTK failed.
    To see the failed compile information, look in config.log,
    search for VTK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required VTK failed.
    To see the failed compile information, look in config.log,
    search for VTK. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vtkImageData.h; do
    #echo looking for $_vtk_inc/$i
    if test ! -e $_vtk_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested VTK include file '$_vtk_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested VTK include file '$_vtk_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" vtkCommon vtkFiltering vtkGraphics vtkImaging vtkRendering vtkIO vtkjpeg vtkpng vtkzlib; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested VTK library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested VTK library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (VTK):  vtk library
##




  if test "$HAVE_VTK" = "yes"; then
     DEF_VTK="#define HAVE_VTK 1"
     HAVE_VTK="yes"
  fi

  if test "$with_vtk" && test ! "$DEF_VTK"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the vtk components are missing." >&5
echo "$as_me: error: One or more of the vtk components are missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_vtk






sci_defs_files="$sci_defs_files include/sci_defs/vtk_testdefs.h"

##  --  search for VDT  ----------------------------------------------------

if test "$sci_required_vdt" = "yes"; then
  if test "$with_vdt"; then
    _vdtbase="$with_vdt"
  else
    _vdtbase=$sci_thirdparty_dir
  fi

  for i in $_vdtbase; do
    if test ! -d "$i"; then
      continue
    fi

    #from here we should find src/vdt/bin
    if test ! -d "$i/src/vdt/bin"; then
      continue
    fi

    guess=`sh $i/src/vdt/bin/config.guess`
    ad=`sh $i/src/vdt/bin/config.sub $guess`

    #this is where the lib actually lives
    if test ! -d "$i/src/vdt/VDT/lib/$ad"; then
      continue
    fi
    _vdt_inc="$i/src/vdt/VDT/src $i/src/vdt/G3D/include $i/src/vdt/Ckit/include $i/src/vdt/LOBS/include $i/src/vdt/PiRaT/include $i/src/vdt/Meschach $i/src/vdt/lp_solve_2.2 $i/src/vdt/Elixir/include"
    _vdt_lib_path="$i/src/vdt/VDT/lib/$ad $i/src/vdt/Elixir/lib/$ad $i/src/vdt/lp_solve_2.2/$ad $i/src/vdt/PiRaT/lib/$ad $i/src/vdt/LOBS/lib/$ad $i/src/vdt/G3D/lib/$ad $i/src/vdt/Ckit/lib/$ad $i/src/vdt/Meschach/$ad"

    _vdt_libs="esi elixir lpk pirat lobs3d lobs2d lobs1d g3d ckit meschach vdt"

    MISC_LIB_FLAGS="$X_LIB_DIR_FLAG $X_LIB_FLAG $M_LIB_FLAG $LEX_LIB_FLAG"


##
## SCI_TRY_LINK (VDT):  vdt libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : VDT
## arg 2 : vdt libraries and headers
## arg 3 : vdt.h
## arg 4 : $_vdt_inc
## arg 5 : $_vdt_libs
## arg 6 : $_vdt_lib_path
## arg 7 : $MISC_LIB_FLAGS
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_VDT        => lib path
##      VDT_LIB_DIR_FLAG   => all the -L's
##      VDT_LIB_FLAG       => all the -l's
##      HAVE_VDT           => yes or no
##      INC_VDT_H          => all the -I's
##      HAVE_VDT_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for vdt libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for vdt libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for vdt libraries and headers (required)" >&5
echo $ECHO_N "checking for vdt libraries and headers (required)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for vdt libraries and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for vdt libraries and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_vdt_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_vdt_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for VDT include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for VDT include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_vdt_inc) of VDT check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_vdt_inc) of VDT check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "$_vdt_libs"; then

   found_framework=no
   for lib in "" $_vdt_libs; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of VDT check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of VDT check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_vdt_lib_path"; then

   for path in "" $_vdt_lib_path; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of VDT check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of VDT check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_vdt_lib_path (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_vdt_lib_path; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for VDT only one library path may be specified for arg 6 (you had: $_vdt_lib_path).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for VDT only one library path may be specified for arg 6 (you had: $_vdt_lib_path).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_vdt_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_vdt_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_vdt_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for VDT only one include path may be specified for arg 4 (you had: $_vdt_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for VDT only one include path may be specified for arg 4 (you had: $_vdt_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs $MISC_LIB_FLAGS $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vdt.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

    VDT_triangulate();

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_VDT='"$_vdt_lib_path"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval VDT_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval VDT_LIB_FLAG="'$final_libs'"
eval HAVE_VDT="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_VDT_H="'$final_incs'"
eval HAVE_VDT_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_VDT=''
eval VDT_LIB_DIR_FLAG=''
eval VDT_LIB_FLAG=''
eval HAVE_VDT="no"
eval INC_VDT_H=''
eval HAVE_VDT_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required VDT failed.
    To see the failed compile information, look in config.log,
    search for VDT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required VDT failed.
    To see the failed compile information, look in config.log,
    search for VDT. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vdt.h; do
    #echo looking for $_vdt_inc/$i
    if test ! -e $_vdt_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested VDT include file '$_vdt_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested VDT include file '$_vdt_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" $_vdt_libs; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_vdt_lib_path/lib$i.so && test ! -e $_vdt_lib_path/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested VDT library file '$_vdt_lib_path/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested VDT library file '$_vdt_lib_path/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (VDT):  vdt libraries and headers
##



    if test "$HAVE_VDT" = "yes"; then
      DEF_VDT="#define HAVE_VDT 1"
      break
    fi
  done

  if test "$with_vdt" && test ! "$DEF_VDT"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the VDT components is missing." >&5
echo "$as_me: error: One or more of the VDT components is missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_vdt





sci_defs_files="$sci_defs_files include/sci_defs/vdt_testdefs.h"

##  --  search for hypre stuff  ------------------------------------------

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_hypre" = "yes"; then
  _sci_optional=required
elif test "$with_hypre"; then
  _sci_lib="$with_hypre/lib"
  _sci_inc="$with_hypre/include"
  _sci_optional=specific
fi


##
## SCI_TRY_LINK (HYPRE):  HYPRE libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : HYPRE
## arg 2 : HYPRE libraries and headers
## arg 3 : HYPRE.h
## arg 4 : $_sci_inc
## arg 5 : HYPRE_struct_mv HYPRE_struct_ls HYPRE_blas HYPRE_LSI
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_HYPRE        => lib path
##      HYPRE_LIB_DIR_FLAG   => all the -L's
##      HYPRE_LIB_FLAG       => all the -l's
##      HAVE_HYPRE           => yes or no
##      INC_HYPRE_H          => all the -I's
##      HAVE_HYPRE_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for HYPRE libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for HYPRE libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for HYPRE libraries and headers ($_sci_optional)" >&5
echo $ECHO_N "checking for HYPRE libraries and headers ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for HYPRE libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for HYPRE libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for HYPRE include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for HYPRE include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HYPRE check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HYPRE check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "HYPRE_struct_mv HYPRE_struct_ls HYPRE_blas HYPRE_LSI"; then

   found_framework=no
   for lib in "" HYPRE_struct_mv HYPRE_struct_ls HYPRE_blas HYPRE_LSI; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of HYPRE check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of HYPRE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of HYPRE check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of HYPRE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for HYPRE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for HYPRE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for HYPRE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for HYPRE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" HYPRE.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_HYPRE='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval HYPRE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval HYPRE_LIB_FLAG="'$final_libs'"
eval HAVE_HYPRE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_HYPRE_H="'$final_incs'"
eval HAVE_HYPRE_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_HYPRE=''
eval HYPRE_LIB_DIR_FLAG=''
eval HYPRE_LIB_FLAG=''
eval HAVE_HYPRE="no"
eval INC_HYPRE_H=''
eval HAVE_HYPRE_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required HYPRE failed.
    To see the failed compile information, look in config.log,
    search for HYPRE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required HYPRE failed.
    To see the failed compile information, look in config.log,
    search for HYPRE. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" HYPRE.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested HYPRE include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested HYPRE include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" HYPRE_struct_mv HYPRE_struct_ls HYPRE_blas HYPRE_LSI; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested HYPRE library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested HYPRE library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (HYPRE):  HYPRE libraries and headers
##



if test "$HAVE_HYPRE" = "yes" ; then
  DEF_HYPRE="#define HAVE_HYPRE 1"
fi

if test "$with_hypre" && test ! "$DEF_HYPRE"; then
  echo
  { { echo "$as_me:$LINENO: error: One or more of the HYPRE components is missing." >&5
echo "$as_me: error: One or more of the HYPRE components is missing." >&2;}
   { (exit 1); exit 1; }; }
fi







sci_defs_files="$sci_defs_files include/sci_defs/hypre_testdefs.h"

##  --  search for boost stuff  -------------------------------------------
if test "$sci_required_boost" = "yes"; then
  _sci_optional=required

  if test "$with_boost" = ""; then
    _sci_lib=/usr/local/lib/
    _sci_inc="/usr/local/include"
  else
  if test "$with_boost" = "yes"; then
    # --with-boost has been specified without a parameter.
    _sci_lib=/usr/local/lib/
    _sci_inc=/usr/local/include
  else
   if test "$with_boost"; then
     #if --with-boost has been specified with a parameter, then use that parameter
    _sci_lib="$with_boost/lib"
    _sci_inc="$with_boost/include"
    _sci_optional=specific
   fi
  fi
  fi


  case $host in
    *linux*)
       boost_ver=gcc_mt
       ;;
    *-darwin*)
       boost_ver=1_32
       ;;
    *)
       #assume there is no specific version
       ;;
  esac

  # Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (BOOST):  boost library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BOOST
## arg 2 : boost library
## arg 3 : boost/program_options.hpp
## arg 4 : $_sci_inc
## arg 5 : boost_program_options-$boost_ver
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_BOOST        => lib path
##      BOOST_LIB_DIR_FLAG   => all the -L's
##      BOOST_LIB_FLAG       => all the -l's
##      HAVE_BOOST           => yes or no
##      INC_BOOST_H          => all the -I's
##      HAVE_BOOST_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for boost library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for boost library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for boost library ($_sci_optional)" >&5
echo $ECHO_N "checking for boost library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for boost library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for boost library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for BOOST include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for BOOST include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BOOST check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BOOST check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "boost_program_options-$boost_ver"; then

   found_framework=no
   for lib in "" boost_program_options-$boost_ver; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of BOOST check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BOOST check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of BOOST check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BOOST check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BOOST only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BOOST only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for BOOST only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for BOOST only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" boost/program_options.hpp; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_BOOST='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BOOST_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BOOST_LIB_FLAG="'$final_libs'"
eval HAVE_BOOST="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BOOST_H="'$final_incs'"
eval HAVE_BOOST_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_BOOST=''
eval BOOST_LIB_DIR_FLAG=''
eval BOOST_LIB_FLAG=''
eval HAVE_BOOST="no"
eval INC_BOOST_H=''
eval HAVE_BOOST_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required BOOST failed.
    To see the failed compile information, look in config.log,
    search for BOOST. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required BOOST failed.
    To see the failed compile information, look in config.log,
    search for BOOST. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" boost/program_options.hpp; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested BOOST include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested BOOST include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" boost_program_options-$boost_ver; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested BOOST library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested BOOST library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BOOST):  boost library
##



  if test "$HAVE_BOOST" = "yes"; then
     DEF_BOOST="#define HAVE_BOOST"
     HAVE_BOOST="yes"
  fi

  if test "$with_boost" && test ! "$DEF_BOOST"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the boost components are missing." >&5
echo "$as_me: error: One or more of the boost components are missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_boost







sci_defs_files="$sci_defs_files include/sci_defs/boost_testdefs.h"

##  --  search for loki stuff  -------------------------------------------
if test "$sci_required_loki" = "yes"; then
  _sci_optional=required

  if test "$with_loki" = ""; then
    _sci_lib=/usr/local/lib/
    _sci_inc="/usr/local/include"
  else
  if test "$with_boost" = "yes"; then
    # --with-boost has been specified without a parameter.
    _sci_lib=/usr/local/lib/
    _sci_inc=/usr/local/include
  else
   if test "$with_boost"; then
     #if --with-boost has been specified with a parameter, then use that parameter
    _sci_lib="$with_loki"
    _sci_inc="$with_loki"
    _sci_optional=specific
   fi
  fi
  fi

  # Only looking for one .h file... assuming all the rest are in the same place.

##
## SCI_TRY_LINK (LOKI):  loki library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LOKI
## arg 2 : loki library
## arg 3 : loki/Singleton.h
## arg 4 : $_sci_inc
## arg 5 : loki
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LIB_DIR_LOKI        => lib path
##      LOKI_LIB_DIR_FLAG   => all the -L's
##      LOKI_LIB_FLAG       => all the -l's
##      HAVE_LOKI           => yes or no
##      INC_LOKI_H          => all the -I's
##      HAVE_LOKI_H         => yes or no

if test 9 != 9; then
     { { echo "$as_me:$LINENO: error: Wrong number of parameters (9) for SCI-TRY-LINK for loki library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Wrong number of parameters (9) for SCI-TRY-LINK for loki library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi


echo "$as_me:$LINENO: checking for loki library ($_sci_optional)" >&5
echo $ECHO_N "checking for loki library ($_sci_optional)... $ECHO_C" >&6
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     { { echo "$as_me:$LINENO: error: Last parameter of SCI-TRY-LINK for loki library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: Last parameter of SCI-TRY-LINK for loki library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     { { echo "$as_me:$LINENO: error: Please do not specify /usr/include as the location for LOKI include files." >&5
echo "$as_me: error: Please do not specify /usr/include as the location for LOKI include files." >&2;}
   { (exit 1); exit 1; }; }
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { echo "$as_me:$LINENO: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of LOKI check.  Skipping $inc." >&5
echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of LOKI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "loki"; then

   found_framework=no
   for lib in "" loki; do

      if test -z "$lib"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -n "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -l options are allowed in arg 5 of LOKI check (disregarding $lib)." >&5
echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LOKI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         final_lib=-l$lib
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in "" $_sci_lib; do

      if test -z "$path"; then
         # SGI sh needs the "" in the for statement... so skip it here.
         continue
      fi

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { echo "$as_me:$LINENO: WARNING: Only -L options are allowed in arg 6 of LOKI check (disregarding $path)." >&5
echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LOKI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { echo "$as_me:$LINENO: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LOKI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LOKI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       { { echo "$as_me:$LINENO: error: For specific SCI-TRY-LINK test for LOKI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&5
echo "$as_me: error: For specific SCI-TRY-LINK test for LOKI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." >&2;}
   { (exit 1); exit 1; }; }
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" loki/Singleton.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

eval LIB_DIR_LOKI='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in "" $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" && test "$_dir" != "-L$SCI_THIRDPARTY_LIB_DIR"; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX$SCI_THIRDPARTY_LIB_DIR%%g"`
_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LOKI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $LIBS; do
  bad_l_arg=`echo "$_lib" | grep "\-L"`
  bad_i_arg=`echo "$_lib" | grep "\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LOKI_LIB_FLAG="'$final_libs'"
eval HAVE_LOKI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LOKI_H="'$final_incs'"
eval HAVE_LOKI_H="yes"

echo "$as_me:$LINENO: result: yes" >&5
echo "${ECHO_T}yes" >&6

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5


eval LIB_DIR_LOKI=''
eval LOKI_LIB_DIR_FLAG=''
eval LOKI_LIB_FLAG=''
eval HAVE_LOKI="no"
eval INC_LOKI_H=''
eval HAVE_LOKI_H="no"
echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { echo "$as_me:$LINENO: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

{ { echo "$as_me:$LINENO: error: Test for required LOKI failed.
    To see the failed compile information, look in config.log,
    search for LOKI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&5
echo "$as_me: error: Test for required LOKI failed.
    To see the failed compile information, look in config.log,
    search for LOKI. Please install the relevant libraries
     or specify the correct paths and try to configure again." >&2;}
   { (exit 1); exit 1; }; }

fi

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" loki/Singleton.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     { { echo "$as_me:$LINENO: error: Specifically requested LOKI include file '$_sci_inc/$i' was not found" >&5
echo "$as_me: error: Specifically requested LOKI include file '$_sci_inc/$i' was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
  # Make sure the exact libraries were found
  for i in "" loki; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a; then
     { { echo "$as_me:$LINENO: error: Specifically requested LOKI library file '$_sci_lib/$i' (.so or .a) was not found" >&5
echo "$as_me: error: Specifically requested LOKI library file '$_sci_lib/$i' (.so or .a) was not found" >&2;}
   { (exit 1); exit 1; }; }
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LOKI):  loki library
##



  if test "$HAVE_LOKI" = "yes"; then
    DEF_LOKI="#define HAVE_LOKI"
    HAVE_LOKI="yes"
  fi

  if test "$with_loki" && test ! "$DEF_LOKI"; then
    echo
    { { echo "$as_me:$LINENO: error: One or more of the loki components are missing." >&5
echo "$as_me: error: One or more of the loki components are missing." >&2;}
   { (exit 1); exit 1; }; }
    echo
  fi
fi # end sci_required_loki






sci_defs_files="$sci_defs_files include/sci_defs/loki_testdefs.h"


##  --  finis flags  ------------------------------------------------
case $host in
  *-irix*)
    LDFLAGS="$LDFLAGS -J\$(MAKE_PARALLELISM) $(TLINK)"
    ;;
  *linux*)
    ;;
  *aix*)
    ;;
  *dec*)
    ;;
  *)
    ;;
esac


## -- grep of the code suggests only those dependent upon CCA need this.
##  --  search for uuid functions, either uuid_create or uuid_generate ----

if test "$sci_required_uuid" = "yes"; then


for ac_header in sys/uuid.h uuid/uuid.h
do
as_ac_Header=`echo "ac_cv_header_$ac_header" | $as_tr_sh`
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo "$as_me:$LINENO: checking for $ac_header" >&5
echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6
else
  # Is the header compilable?
echo "$as_me:$LINENO: checking $ac_header usability" >&5
echo $ECHO_N "checking $ac_header usability... $ECHO_C" >&6
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
$ac_includes_default
#include <$ac_header>
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  ac_header_compiler=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

ac_header_compiler=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
echo "$as_me:$LINENO: result: $ac_header_compiler" >&5
echo "${ECHO_T}$ac_header_compiler" >&6

# Is the header present?
echo "$as_me:$LINENO: checking $ac_header presence" >&5
echo $ECHO_N "checking $ac_header presence... $ECHO_C" >&6
cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <$ac_header>
_ACEOF
if { (eval echo "$as_me:$LINENO: \"$ac_cpp conftest.$ac_ext\"") >&5
  (eval $ac_cpp conftest.$ac_ext) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } >/dev/null; then
  if test -s conftest.err; then
    ac_cpp_err=$ac_cxx_preproc_warn_flag
    ac_cpp_err=$ac_cpp_err$ac_cxx_werror_flag
  else
    ac_cpp_err=
  fi
else
  ac_cpp_err=yes
fi
if test -z "$ac_cpp_err"; then
  ac_header_preproc=yes
else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

  ac_header_preproc=no
fi
rm -f conftest.err conftest.$ac_ext
echo "$as_me:$LINENO: result: $ac_header_preproc" >&5
echo "${ECHO_T}$ac_header_preproc" >&6

# So?  What about this header?
case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in
  yes:no: )
    { echo "$as_me:$LINENO: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&5
echo "$as_me: WARNING: $ac_header: accepted by the compiler, rejected by the preprocessor!" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the compiler's result" >&5
echo "$as_me: WARNING: $ac_header: proceeding with the compiler's result" >&2;}
    ac_header_preproc=yes
    ;;
  no:yes:* )
    { echo "$as_me:$LINENO: WARNING: $ac_header: present but cannot be compiled" >&5
echo "$as_me: WARNING: $ac_header: present but cannot be compiled" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header:     check for missing prerequisite headers?" >&5
echo "$as_me: WARNING: $ac_header:     check for missing prerequisite headers?" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: see the Autoconf documentation" >&5
echo "$as_me: WARNING: $ac_header: see the Autoconf documentation" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&5
echo "$as_me: WARNING: $ac_header:     section \"Present But Cannot Be Compiled\"" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: proceeding with the preprocessor's result" >&5
echo "$as_me: WARNING: $ac_header: proceeding with the preprocessor's result" >&2;}
    { echo "$as_me:$LINENO: WARNING: $ac_header: in the future, the compiler will take precedence" >&5
echo "$as_me: WARNING: $ac_header: in the future, the compiler will take precedence" >&2;}
    (
      cat <<\_ASBOX
## ---------------------------------------- ##
## Report this to scirun-users@sci.utah.edu ##
## ---------------------------------------- ##
_ASBOX
    ) |
      sed "s/^/$as_me: WARNING:     /" >&2
    ;;
esac
echo "$as_me:$LINENO: checking for $ac_header" >&5
echo $ECHO_N "checking for $ac_header... $ECHO_C" >&6
if eval "test \"\${$as_ac_Header+set}\" = set"; then
  echo $ECHO_N "(cached) $ECHO_C" >&6
else
  eval "$as_ac_Header=\$ac_header_preproc"
fi
echo "$as_me:$LINENO: result: `eval echo '${'$as_ac_Header'}'`" >&5
echo "${ECHO_T}`eval echo '${'$as_ac_Header'}'`" >&6

fi
if test `eval echo '${'$as_ac_Header'}'` = yes; then
  cat >>confdefs.h <<_ACEOF
#define `echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done

  # This is typical on SGI and ??
  echo "$as_me:$LINENO: checking for uuid_create in sys/uuid.h" >&5
echo $ECHO_N "checking for uuid_create in sys/uuid.h... $ECHO_C" >&6
  cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */
#include <sys/types.h>
               extern "C" {
                  #include <sys/uuid.h>
               }
int
main ()
{
char* uuid_str;
  	 uuid_t uuid;
  	 uint_t status;
  	 uuid_create(&uuid, &status);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  have_uuid=yes
           cat >>confdefs.h <<\_ACEOF
#define HAVE_SYS_UUID_H 1
_ACEOF

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

have_uuid=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
  echo "$as_me:$LINENO: result: $have_uuid" >&5
echo "${ECHO_T}$have_uuid" >&6

  if test "$have_uuid" != "yes"; then
    # This is typical on linux and ??

    echo "$as_me:$LINENO: checking for uuid_generate in uuid/uuid.h" >&5
echo $ECHO_N "checking for uuid_generate in uuid/uuid.h... $ECHO_C" >&6
    cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

  extern "C" { // The linux uuid.h doesn't have this, so we need exter C here
  #include <uuid/uuid.h>
  }
int
main ()
{
uuid_t uuid;
  	 char uuid_str[64];
  	 uuid_generate(uuid);
  	 uuid_unparse(uuid, uuid_str);
  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext
if { (eval echo "$as_me:$LINENO: \"$ac_compile\"") >&5
  (eval $ac_compile) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest.$ac_objext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then
  have_uuid=yes
           cat >>confdefs.h <<\_ACEOF
#define HAVE_UUID_UUID_H 1
_ACEOF

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

have_uuid=no
fi
rm -f conftest.err conftest.$ac_objext conftest.$ac_ext
    echo "$as_me:$LINENO: result: $have_uuid" >&5
echo "${ECHO_T}$have_uuid" >&6
  fi

  if test "$have_uuid" = "yes"; then
    echo "$as_me:$LINENO: checking for uuid library" >&5
echo $ECHO_N "checking for uuid library... $ECHO_C" >&6
    old_LIBS="$LIBS"
    for i in -luuid ""; do
      LIBS="$old_LIBS $i"
      cat >conftest.$ac_ext <<_ACEOF
/* confdefs.h.  */
_ACEOF
cat confdefs.h >>conftest.$ac_ext
cat >>conftest.$ac_ext <<_ACEOF
/* end confdefs.h.  */

  #if HAVE_SYS_UUID_H
  #include <sys/types.h>
  extern "C" { // SGI uuid.h doesn't have this, so we need extern C here
  #include <sys/uuid.h>
  }
  #define UUID_CREATE
  #else
  #if HAVE_UUID_UUID_H
  extern "C" { // The linux uuid.h does not have this, so we need extern C here
  #include <uuid/uuid.h>
  }
  #define UUID_GENERATE
  #endif
  #endif

int
main ()
{

    uuid_t uuid;
  #if defined(UUID_CREATE)
    char* uuid_str;
    uint_t status;
    uuid_create(&uuid, &status);
    uuid_to_string(&uuid, &uuid_str, &status);
  #else
  #if defined( UUID_GENERATE)
    char uuid_str[64];
    uuid_generate( uuid );
    uuid_unparse(uuid, uuid_str);
  #endif
  #endif

  ;
  return 0;
}
_ACEOF
rm -f conftest.$ac_objext conftest$ac_exeext
if { (eval echo "$as_me:$LINENO: \"$ac_link\"") >&5
  (eval $ac_link) 2>conftest.er1
  ac_status=$?
  grep -v '^ *+' conftest.er1 >conftest.err
  rm -f conftest.er1
  cat conftest.err >&5
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); } &&
	 { ac_try='test -z "$ac_cxx_werror_flag"
			 || test ! -s conftest.err'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; } &&
	 { ac_try='test -s conftest$ac_exeext'
  { (eval echo "$as_me:$LINENO: \"$ac_try\"") >&5
  (eval $ac_try) 2>&5
  ac_status=$?
  echo "$as_me:$LINENO: \$? = $ac_status" >&5
  (exit $ac_status); }; }; then

    UUID_LIB_FLAG=$i
    break

else
  echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

fi
rm -f conftest.err conftest.$ac_objext \
      conftest$ac_exeext conftest.$ac_ext
    done
    if test "$UUID_LIB_FLAG" != unknown; then
      if test "$UUID_LIB_FLAG"; then
        echo "$as_me:$LINENO: result: $UUID_LIB_FLAG" >&5
echo "${ECHO_T}$UUID_LIB_FLAG" >&6
      else
        echo "$as_me:$LINENO: result: none required" >&5
echo "${ECHO_T}none required" >&6
      fi
      HAVE_UUID="yes"
    else
      echo "$as_me:$LINENO: result: not found" >&5
echo "${ECHO_T}not found" >&6
      have_uuid=no
      HAVE_UUID="no"
    fi
    LIBS="$old_LIBS"
  fi
fi # end sci_required_uuid




##  --  See if we have everything needed for SCIRun2 ----------------------

if test "$enable_scirun2" = "yes"; then
  if test "$have_uuid" != "yes"; then
    case $host in
      *linux*)
        { echo "$as_me:$LINENO: WARNING: uuid_generate function and libuuid not found.  Will use custom uuid generation instead." >&5
echo "$as_me: WARNING: uuid_generate function and libuuid not found.  Will use custom uuid generation instead." >&2;}
        ;;
      ## For now, don't check for uuid if on macintosh.
      *-darwin*)
        { echo "$as_me:$LINENO: WARNING: Skipping uuid check on MAC. Will use custom uuid generation instead." >&5
echo "$as_me: WARNING: Skipping uuid check on MAC. Will use custom uuid generation instead." >&2;}
        ;;
      *)
        { echo "$as_me:$LINENO: WARNING: cannot find uuid_generate or uuid_create.  Will use custom uuid generation instead." >&5
echo "$as_me: WARNING: cannot find uuid_generate or uuid_create.  Will use custom uuid generation instead." >&2;}
        ;;
    esac
  fi
  BUILD_SCIRUN2="yes"
else
  BUILD_SCIRUN2="no"
fi



##  ---------------------------------------------------------------------
##  --------------------  Fix Frost config vars  ------------------------
##  ---------------------------------------------------------------------
##  Now that we have run configure with the (xlc,xlC,xlf) compilers, we
##  need to change those to (mpxlc,mpxlC,mpxlf) which automatically use
##  the mpi libraries, so we need to set the MPI variables to be blank.
##  ---------------------------------------------------------------------

  case $host in
    *aix*)
	CC=`echo $CC | sed 's,x,mpx,g'`
	CXX=`echo $CXX | sed 's,x,mpx,g'`
	F77=`echo $F77 | sed 's,x,mpx,g'`
	MPI_LIB_FLAG=""
	MPI_LIB_DIR_FLAG=""
	INC_MPI_H=""
	;;
  esac


##  ---------------------------------------------------------------------
##  --------------------  generate output files  ------------------------
##  ---------------------------------------------------------------------

if test -n "$WOFF_NUMBERS"; then
  for num in $WOFF_NUMBERS; do
    if test -z "$WOFF_COMMA_LIST"; then
       WOFF_COMMA_LIST="$num"
    else
       WOFF_COMMA_LIST="$WOFF_COMMA_LIST,$num"
    fi
    WOFF_STRING="$WOFF_STRING -Wl,-woff -Wl,$num"
  done
  WOFF_STRING="-woff $WOFF_COMMA_LIST $WOFF_STRING"
fi




  sci_arg_var_list="$sci_arg_var_list CXXFLAGS"


scirun_obj_dir=`pwd`;
scirun_src_dir=`(cd ${srcdir};pwd)`

if test "$IS_WIN" = "yes"; then
  scirun_obj_dir=`echo "$scirun_obj_dir" | sed 's,/,,' | sed 's,/,:/,'`
  scirun_src_dir=`echo "$scirun_src_dir" | sed 's,/,,' | sed 's,/,:/,'`
fi




                                                  ac_config_files="$ac_config_files configVars.mk Makefile on-the-fly-libs/Makefile disjointPackageMakefile $sci_defs_files"


##   Only do the following if configuring with Uintah
##   Add a list of Uintah specific output files.
if test "$pkg_Uintah" = "yes" ; then
             ac_config_files="$ac_config_files Packages/Uintah/tools/fspec.pl"

fi

#  ignore --no-create and --no-recursion flags
no_create=no
no_recursion=no

# these are to alias pwd to the right thing in the config.status
# script so that pwd returns the same value for a path even if you
# get there by two different paths (symbolic links)
cat > sedscript << SCIEOF
/debug=false/i\\
alias pwd=$sci_pwd
SCIEOF




          ac_config_commands="$ac_config_commands do_stamp"

cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, don't put newlines in cache variables' values.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
{
  (set) 2>&1 |
    case `(ac_space=' '; set | grep ac_space) 2>&1` in
    *ac_space=\ *)
      # `set' does not quote correctly, so add quotes (double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \).
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;;
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n \
	"s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1=\\2/p"
      ;;
    esac;
} |
  sed '
     t clear
     : clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
     t end
     /^ac_cv_env/!s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     : end' >>confcache
if diff $cache_file confcache >/dev/null 2>&1; then :; else
  if test -w $cache_file; then
    test "x$cache_file" != "x/dev/null" && echo "updating cache $cache_file"
    cat confcache >$cache_file
  else
    echo "not updating unwritable cache $cache_file"
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

# VPATH may cause trouble with some makes, so we remove $(srcdir),
# ${srcdir} and @srcdir@ from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=/{
s/:*\$(srcdir):*/:/;
s/:*\${srcdir}:*/:/;
s/:*@srcdir@:*/:/;
s/^\([^=]*=[	 ]*\):*/\1/;
s/:*$//;
s/^[^=]*=[	 ]*$//;
}'
fi

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_i=`echo "$ac_i" |
	 sed 's/\$U\././;s/\.o$//;s/\.obj$//'`
  # 2. Add them.
  ac_libobjs="$ac_libobjs $ac_i\$U.$ac_objext"
  ac_ltlibobjs="$ac_ltlibobjs $ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs



: ${CONFIG_STATUS=./config.status}
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ echo "$as_me:$LINENO: creating $CONFIG_STATUS" >&5
echo "$as_me: creating $CONFIG_STATUS" >&6;}
cat >$CONFIG_STATUS <<_ACEOF
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false
SHELL=\${CONFIG_SHELL-$SHELL}
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF
## --------------------- ##
## M4sh Initialization.  ##
## --------------------- ##

# Be Bourne compatible
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then
  emulate sh
  NULLCMD=:
  # Zsh 3.x and 4.x performs word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
elif test -n "${BASH_VERSION+set}" && (set -o posix) >/dev/null 2>&1; then
  set -o posix
fi
DUALCASE=1; export DUALCASE # for MKS sh

# Support unset when possible.
if ( (MAIL=60; unset MAIL) || exit) >/dev/null 2>&1; then
  as_unset=unset
else
  as_unset=false
fi


# Work around bugs in pre-3.0 UWIN ksh.
$as_unset ENV MAIL MAILPATH
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
for as_var in \
  LANG LANGUAGE LC_ADDRESS LC_ALL LC_COLLATE LC_CTYPE LC_IDENTIFICATION \
  LC_MEASUREMENT LC_MESSAGES LC_MONETARY LC_NAME LC_NUMERIC LC_PAPER \
  LC_TELEPHONE LC_TIME
do
  if (set +x; test -z "`(eval $as_var=C; export $as_var) 2>&1`"); then
    eval $as_var=C; export $as_var
  else
    $as_unset $as_var
  fi
done

# Required to use basename.
if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

if (basename /) >/dev/null 2>&1 && test "X`basename / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi


# Name of the executable.
as_me=`$as_basename "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)$' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{ s//\1/; q; }
  	  /^X\/\(\/\/\)$/{ s//\1/; q; }
  	  /^X\/\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`


# PATH needs CR, and LINENO needs CR and PATH.
# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  echo "#! /bin/sh" >conf$$.sh
  echo  "exit 0"   >>conf$$.sh
  chmod +x conf$$.sh
  if (PATH="/nonexistent;."; conf$$.sh) >/dev/null 2>&1; then
    PATH_SEPARATOR=';'
  else
    PATH_SEPARATOR=:
  fi
  rm -f conf$$.sh
fi


  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2"  || {
  # Find who we are.  Look in the path if we contain no path at all
  # relative or not.
  case $0 in
    *[\\/]* ) as_myself=$0 ;;
    *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
done

       ;;
  esac
  # We did not find ourselves, most probably we were run as `sh COMMAND'
  # in which case we are not to be found in the path.
  if test "x$as_myself" = x; then
    as_myself=$0
  fi
  if test ! -f "$as_myself"; then
    { { echo "$as_me:$LINENO: error: cannot find myself; rerun with an absolute path" >&5
echo "$as_me: error: cannot find myself; rerun with an absolute path" >&2;}
   { (exit 1); exit 1; }; }
  fi
  case $CONFIG_SHELL in
  '')
    as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  for as_base in sh bash ksh sh5; do
	 case $as_dir in
	 /*)
	   if ("$as_dir/$as_base" -c '
  as_lineno_1=$LINENO
  as_lineno_2=$LINENO
  as_lineno_3=`(expr $as_lineno_1 + 1) 2>/dev/null`
  test "x$as_lineno_1" != "x$as_lineno_2" &&
  test "x$as_lineno_3"  = "x$as_lineno_2" ') 2>/dev/null; then
	     $as_unset BASH_ENV || test "${BASH_ENV+set}" != set || { BASH_ENV=; export BASH_ENV; }
	     $as_unset ENV || test "${ENV+set}" != set || { ENV=; export ENV; }
	     CONFIG_SHELL=$as_dir/$as_base
	     export CONFIG_SHELL
	     exec "$CONFIG_SHELL" "$0" ${1+"$@"}
	   fi;;
	 esac
       done
done
;;
  esac

  # Create $as_me.lineno as a copy of $as_myself, but with $LINENO
  # uniformly replaced by the line number.  The first 'sed' inserts a
  # line-number line before each line; the second 'sed' does the real
  # work.  The second script uses 'N' to pair each line-number line
  # with the numbered line, and appends trailing '-' during
  # substitution so that $LINENO is not a special case at line end.
  # (Raja R Harinath suggested sed '=', and Paul Eggert wrote the
  # second 'sed' script.  Blame Lee E. McMahon for sed's syntax.  :-)
  sed '=' <$as_myself |
    sed '
      N
      s,$,-,
      : loop
      s,^\(['$as_cr_digits']*\)\(.*\)[$]LINENO\([^'$as_cr_alnum'_]\),\1\2\1\3,
      t loop
      s,-$,,
      s,^['$as_cr_digits']*\n,,
    ' >$as_me.lineno &&
  chmod +x $as_me.lineno ||
    { { echo "$as_me:$LINENO: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&5
echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2;}
   { (exit 1); exit 1; }; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensible to this).
  . ./$as_me.lineno
  # Exit status is that of the last command.
  exit
}


case `echo "testing\c"; echo 1,2,3`,`echo -n testing; echo 1,2,3` in
  *c*,-n*) ECHO_N= ECHO_C='
' ECHO_T='	' ;;
  *c*,*  ) ECHO_N=-n ECHO_C= ECHO_T= ;;
  *)       ECHO_N= ECHO_C='\c' ECHO_T= ;;
esac

if expr a : '\(a\)' >/dev/null 2>&1; then
  as_expr=expr
else
  as_expr=false
fi

rm -f conf$$ conf$$.exe conf$$.file
echo >conf$$.file
if ln -s conf$$.file conf$$ 2>/dev/null; then
  # We could just check for DJGPP; but this test a) works b) is more generic
  # and c) will remain valid once DJGPP supports symlinks (DJGPP 2.04).
  if test -f conf$$.exe; then
    # Don't use ln at all; we don't have any links
    as_ln_s='cp -p'
  else
    as_ln_s='ln -s'
  fi
elif ln conf$$.file conf$$ 2>/dev/null; then
  as_ln_s=ln
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.file

if mkdir -p . 2>/dev/null; then
  as_mkdir_p=:
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

as_executable_p="test -f"

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


# IFS
# We need space, tab and new line, in precisely that order.
as_nl='
'
IFS=" 	$as_nl"

# CDPATH.
$as_unset CDPATH

exec 6>&1

# Open the log real soon, to keep \$[0] and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.  Logging --version etc. is OK.
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
} >&5
cat >&5 <<_CSEOF

This file was extended by SCIRun $as_me 1.24, which was
generated by GNU Autoconf 2.59.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

_CSEOF
echo "on `(hostname || uname -n) 2>/dev/null | sed 1q`" >&5
echo >&5
_ACEOF

# Files that config.status was made for.
if test -n "$ac_config_files"; then
  echo "config_files=\"$ac_config_files\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_headers"; then
  echo "config_headers=\"$ac_config_headers\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_links"; then
  echo "config_links=\"$ac_config_links\"" >>$CONFIG_STATUS
fi

if test -n "$ac_config_commands"; then
  echo "config_commands=\"$ac_config_commands\"" >>$CONFIG_STATUS
fi

cat >>$CONFIG_STATUS <<\_ACEOF

ac_cs_usage="\
\`$as_me' instantiates files from templates according to the
current configuration.

Usage: $0 [OPTIONS] [FILE]...

  -h, --help       print this help, then exit
  -V, --version    print version number, then exit
  -q, --quiet      do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
  --file=FILE[:TEMPLATE]
		   instantiate the configuration file FILE
  --header=FILE[:TEMPLATE]
		   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <bug-autoconf@gnu.org>."
_ACEOF

cat >>$CONFIG_STATUS <<_ACEOF
ac_cs_version="\\
SCIRun config.status 1.24
configured by $0, generated by GNU Autoconf 2.59,
  with options \\"`echo "$ac_configure_args" | sed 's/[\\""\`\$]/\\\\&/g'`\\"

Copyright (C) 2003 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."
srcdir=$srcdir
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF
# If no file are specified by the user, then we need to provide default
# value.  By we need to know if files were specified by the user.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=*)
    ac_option=`expr "x$1" : 'x\([^=]*\)='`
    ac_optarg=`expr "x$1" : 'x[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  -*)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  *) # This is not an option, so the user has probably given explicit
     # arguments.
     ac_option=$1
     ac_need_defaults=false;;
  esac

  case $ac_option in
  # Handling of the options.
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --vers* | -V )
    echo "$ac_cs_version"; exit 0 ;;
  --he | --h)
    # Conflict between --help and --header
    { { echo "$as_me:$LINENO: error: ambiguous option: $1
Try \`$0 --help' for more information." >&5
echo "$as_me: error: ambiguous option: $1
Try \`$0 --help' for more information." >&2;}
   { (exit 1); exit 1; }; };;
  --help | --hel | -h )
    echo "$ac_cs_usage"; exit 0 ;;
  --debug | --d* | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    CONFIG_FILES="$CONFIG_FILES $ac_optarg"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    CONFIG_HEADERS="$CONFIG_HEADERS $ac_optarg"
    ac_need_defaults=false;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) { { echo "$as_me:$LINENO: error: unrecognized option: $1
Try \`$0 --help' for more information." >&5
echo "$as_me: error: unrecognized option: $1
Try \`$0 --help' for more information." >&2;}
   { (exit 1); exit 1; }; } ;;

  *) ac_config_targets="$ac_config_targets $1" ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF
if \$ac_cs_recheck; then
  echo "running $SHELL $0 " $ac_configure_args \$ac_configure_extra_args " --no-create --no-recursion" >&6
  exec $SHELL $0 $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
fi

_ACEOF





cat >>$CONFIG_STATUS <<\_ACEOF
for ac_config_target in $ac_config_targets
do
  case "$ac_config_target" in
  # Handling of arguments.
  "configVars.mk" ) CONFIG_FILES="$CONFIG_FILES configVars.mk" ;;
  "Makefile" ) CONFIG_FILES="$CONFIG_FILES Makefile" ;;
  "on-the-fly-libs/Makefile" ) CONFIG_FILES="$CONFIG_FILES on-the-fly-libs/Makefile" ;;
  "disjointPackageMakefile" ) CONFIG_FILES="$CONFIG_FILES disjointPackageMakefile" ;;
  "$sci_defs_files" ) CONFIG_FILES="$CONFIG_FILES $sci_defs_files" ;;
  "Packages/Uintah/tools/fspec.pl" ) CONFIG_FILES="$CONFIG_FILES Packages/Uintah/tools/fspec.pl" ;;
  "do_stamp" ) CONFIG_COMMANDS="$CONFIG_COMMANDS do_stamp" ;;
  "include/sci_defs/config_testdefs.h" ) CONFIG_HEADERS="$CONFIG_HEADERS include/sci_defs/config_testdefs.h" ;;
  *) { { echo "$as_me:$LINENO: error: invalid argument: $ac_config_target" >&5
echo "$as_me: error: invalid argument: $ac_config_target" >&2;}
   { (exit 1); exit 1; }; };;
  esac
done

# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason to put it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Create a temporary directory, and hook for its removal unless debugging.
$debug ||
{
  trap 'exit_status=$?; rm -rf $tmp && exit $exit_status' 0
  trap '{ (exit 1); exit 1; }' 1 2 13 15
}

# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d -q "./confstatXXXXXX") 2>/dev/null` &&
  test -n "$tmp" && test -d "$tmp"
}  ||
{
  tmp=./confstat$$-$RANDOM
  (umask 077 && mkdir $tmp)
} ||
{
   echo "$me: cannot create a temporary directory in ." >&2
   { (exit 1); exit 1; }
}

_ACEOF

cat >>$CONFIG_STATUS <<_ACEOF

#
# CONFIG_FILES section.
#

# No need to generate the scripts if there are no CONFIG_FILES.
# This happens for instance when ./config.status config.h
if test -n "\$CONFIG_FILES"; then
  # Protect against being on the right side of a sed subst in config.status.
  sed 's/,@/@@/; s/@,/@@/; s/,;t t\$/@;t t/; /@;t t\$/s/[\\\\&,]/\\\\&/g;
   s/@@/,@/; s/@@/@,/; s/@;t t\$/,;t t/' >\$tmp/subs.sed <<\\CEOF
s,@SHELL@,$SHELL,;t t
s,@PATH_SEPARATOR@,$PATH_SEPARATOR,;t t
s,@PACKAGE_NAME@,$PACKAGE_NAME,;t t
s,@PACKAGE_TARNAME@,$PACKAGE_TARNAME,;t t
s,@PACKAGE_VERSION@,$PACKAGE_VERSION,;t t
s,@PACKAGE_STRING@,$PACKAGE_STRING,;t t
s,@PACKAGE_BUGREPORT@,$PACKAGE_BUGREPORT,;t t
s,@exec_prefix@,$exec_prefix,;t t
s,@prefix@,$prefix,;t t
s,@program_transform_name@,$program_transform_name,;t t
s,@bindir@,$bindir,;t t
s,@sbindir@,$sbindir,;t t
s,@libexecdir@,$libexecdir,;t t
s,@datadir@,$datadir,;t t
s,@sysconfdir@,$sysconfdir,;t t
s,@sharedstatedir@,$sharedstatedir,;t t
s,@localstatedir@,$localstatedir,;t t
s,@libdir@,$libdir,;t t
s,@includedir@,$includedir,;t t
s,@oldincludedir@,$oldincludedir,;t t
s,@infodir@,$infodir,;t t
s,@mandir@,$mandir,;t t
s,@build_alias@,$build_alias,;t t
s,@host_alias@,$host_alias,;t t
s,@target_alias@,$target_alias,;t t
s,@DEFS@,$DEFS,;t t
s,@ECHO_C@,$ECHO_C,;t t
s,@ECHO_N@,$ECHO_N,;t t
s,@ECHO_T@,$ECHO_T,;t t
s,@LIBS@,$LIBS,;t t
s,@CC@,$CC,;t t
s,@CFLAGS@,$CFLAGS,;t t
s,@LDFLAGS@,$LDFLAGS,;t t
s,@CXX@,$CXX,;t t
s,@CPPFLAGS@,$CPPFLAGS,;t t
s,@CXXFLAGS@,$CXXFLAGS,;t t
s,@F77@,$F77,;t t
s,@FFLAGS@,$FFLAGS,;t t
s,@CPP@,$CPP,;t t
s,@CXXCPP@,$CXXCPP,;t t
s,@build@,$build,;t t
s,@build_cpu@,$build_cpu,;t t
s,@build_vendor@,$build_vendor,;t t
s,@build_os@,$build_os,;t t
s,@host@,$host,;t t
s,@host_cpu@,$host_cpu,;t t
s,@host_vendor@,$host_vendor,;t t
s,@host_os@,$host_os,;t t
s,@DEF_CHROMIUM@,$DEF_CHROMIUM,;t t
s,@DEF_NO_DYNAMIC_CAST@,$DEF_NO_DYNAMIC_CAST,;t t
s,@DEF_BUILD_DATAFLOW@,$DEF_BUILD_DATAFLOW,;t t
s,@BUILD_DATAFLOW@,$BUILD_DATAFLOW,;t t
s,@DEF_COLLAB_VIS@,$DEF_COLLAB_VIS,;t t
s,@HAVE_COLLAB_VIS@,$HAVE_COLLAB_VIS,;t t
s,@IS_OSX@,$IS_OSX,;t t
s,@IS_WIN@,$IS_WIN,;t t
s,@ac_ct_CC@,$ac_ct_CC,;t t
s,@EXEEXT@,$EXEEXT,;t t
s,@OBJEXT@,$OBJEXT,;t t
s,@EGREP@,$EGREP,;t t
s,@ac_ct_CXX@,$ac_ct_CXX,;t t
s,@ac_ct_F77@,$ac_ct_F77,;t t
s,@SO_OR_ARCHIVE_EXTENSION@,$SO_OR_ARCHIVE_EXTENSION,;t t
s,@NOPRINTDIR@,$NOPRINTDIR,;t t
s,@PACKAGE_DIRS@,$PACKAGE_DIRS,;t t
s,@LOAD_PACKAGE@,$LOAD_PACKAGE,;t t
s,@EXENAME@,$EXENAME,;t t
s,@LARGESOS@,$LARGESOS,;t t
s,@TIME_IMPL@,$TIME_IMPL,;t t
s,@DEF_MALLOC@,$DEF_MALLOC,;t t
s,@DEF_MALLOC_LINENUMBERS@,$DEF_MALLOC_LINENUMBERS,;t t
s,@ASSERTION_LEVEL@,$ASSERTION_LEVEL,;t t
s,@THROW_LEVEL@,$THROW_LEVEL,;t t
s,@OGL_ERR_MACRO@,$OGL_ERR_MACRO,;t t
s,@AS@,$AS,;t t
s,@LD@,$LD,;t t
s,@NEED_OSX_HACK@,$NEED_OSX_HACK,;t t
s,@DEF_NEED_OSX_HACK@,$DEF_NEED_OSX_HACK,;t t
s,@NBITS@,$NBITS,;t t
s,@WIN_DLLFLAGS@,$WIN_DLLFLAGS,;t t
s,@CC_DEPEND_MODE@,$CC_DEPEND_MODE,;t t
s,@CC_DEPEND_REGEN@,$CC_DEPEND_REGEN,;t t
s,@CC_DEPEND_EXT@,$CC_DEPEND_EXT,;t t
s,@F77_DEPEND_MODE@,$F77_DEPEND_MODE,;t t
s,@F77_DEPEND_REGEN@,$F77_DEPEND_REGEN,;t t
s,@F77_DEPEND_EXT@,$F77_DEPEND_EXT,;t t
s,@MAKE@,$MAKE,;t t
s,@GMAKE@,$GMAKE,;t t
s,@AWK@,$AWK,;t t
s,@BUILD_PLUME@,$BUILD_PLUME,;t t
s,@YACC@,$YACC,;t t
s,@LEX@,$LEX,;t t
s,@LEXLIB@,$LEXLIB,;t t
s,@LEX_OUTPUT_ROOT@,$LEX_OUTPUT_ROOT,;t t
s,@LEX_LIB_FLAG@,$LEX_LIB_FLAG,;t t
s,@ETAGS@,$ETAGS,;t t
s,@PERL@,$PERL,;t t
s,@FORTRAN_UNDERSCORE@,$FORTRAN_UNDERSCORE,;t t
s,@G77@,$G77,;t t
s,@SOFLAGS@,$SOFLAGS,;t t
s,@ASFLAGS@,$ASFLAGS,;t t
s,@LDRUN_PREFIX@,$LDRUN_PREFIX,;t t
s,@extra_cflags@,$extra_cflags,;t t
s,@MAKE_PARALLELISM@,$MAKE_PARALLELISM,;t t
s,@NEED_SONAME@,$NEED_SONAME,;t t
s,@REPOSITORY_FLAGS@,$REPOSITORY_FLAGS,;t t
s,@TEMPLATE_TAG@,$TEMPLATE_TAG,;t t
s,@TEMPLATE_BOX@,$TEMPLATE_BOX,;t t
s,@SCI_THIRDPARTY_DIR@,$SCI_THIRDPARTY_DIR,;t t
s,@INC_SCI_THIRDPARTY_H@,$INC_SCI_THIRDPARTY_H,;t t
s,@SCI_THIRDPARTY_LIB_DIR@,$SCI_THIRDPARTY_LIB_DIR,;t t
s,@SCI_THIRDPARTY_LIB_DIR_FLAG@,$SCI_THIRDPARTY_LIB_DIR_FLAG,;t t
s,@M_LIB_FLAG@,$M_LIB_FLAG,;t t
s,@M_LIB_DIR_FLAG@,$M_LIB_DIR_FLAG,;t t
s,@X_LIB_FLAG@,$X_LIB_FLAG,;t t
s,@X_LIB_DIR_FLAG@,$X_LIB_DIR_FLAG,;t t
s,@THREAD_IMPL@,$THREAD_IMPL,;t t
s,@THREAD_LIB_FLAG@,$THREAD_LIB_FLAG,;t t
s,@SOCKET_LIB_FLAG@,$SOCKET_LIB_FLAG,;t t
s,@DEF_THREAD@,$DEF_THREAD,;t t
s,@SEMAPHORE_LIB_FLAG@,$SEMAPHORE_LIB_FLAG,;t t
s,@GL_LIB_FLAG@,$GL_LIB_FLAG,;t t
s,@GL_LIB_DIR_FLAG@,$GL_LIB_DIR_FLAG,;t t
s,@INC_GL_H@,$INC_GL_H,;t t
s,@DEF_OGL_EXT_HDRS@,$DEF_OGL_EXT_HDRS,;t t
s,@COMPILE_AVR@,$COMPILE_AVR,;t t
s,@DEF_HAVE_AVR@,$DEF_HAVE_AVR,;t t
s,@DL_LIB_FLAG@,$DL_LIB_FLAG,;t t
s,@DL_LIB_DIR_FLAG@,$DL_LIB_DIR_FLAG,;t t
s,@DEF_STAT64@,$DEF_STAT64,;t t
s,@DEF_IEEEFP@,$DEF_IEEEFP,;t t
s,@DEF_HASHMAP@,$DEF_HASHMAP,;t t
s,@LIB_DIR_TCL@,$LIB_DIR_TCL,;t t
s,@TCL_LIB_FLAG@,$TCL_LIB_FLAG,;t t
s,@TCL_LIB_DIR_FLAG@,$TCL_LIB_DIR_FLAG,;t t
s,@INC_TCL_H@,$INC_TCL_H,;t t
s,@TK_LIB_FLAG@,$TK_LIB_FLAG,;t t
s,@TK_LIB_DIR_FLAG@,$TK_LIB_DIR_FLAG,;t t
s,@INC_TK_H@,$INC_TK_H,;t t
s,@LIB_DIR_ITCL@,$LIB_DIR_ITCL,;t t
s,@ITCL_LIB_FLAG@,$ITCL_LIB_FLAG,;t t
s,@ITCL_LIB_DIR_FLAG@,$ITCL_LIB_DIR_FLAG,;t t
s,@INC_ITCL_H@,$INC_ITCL_H,;t t
s,@ITK_LIB_FLAG@,$ITK_LIB_FLAG,;t t
s,@ITK_LIB_DIR_FLAG@,$ITK_LIB_DIR_FLAG,;t t
s,@INC_ITK_H@,$INC_ITK_H,;t t
s,@BLT_LIB_FLAG@,$BLT_LIB_FLAG,;t t
s,@BLT_LIB_DIR_FLAG@,$BLT_LIB_DIR_FLAG,;t t
s,@INC_BLT_H@,$INC_BLT_H,;t t
s,@TCL_PREFIX@,$TCL_PREFIX,;t t
s,@TCL_VERSION@,$TCL_VERSION,;t t
s,@TK_VERSION@,$TK_VERSION,;t t
s,@ITCL_WIDGETS@,$ITCL_WIDGETS,;t t
s,@XERCES_C_LIB_FLAG@,$XERCES_C_LIB_FLAG,;t t
s,@XERCES_C_LIB_DIR_FLAG@,$XERCES_C_LIB_DIR_FLAG,;t t
s,@INC_XERCESC_H@,$INC_XERCESC_H,;t t
s,@SSTREAM_COMPAT@,$SSTREAM_COMPAT,;t t
s,@EXC_LIB_FLAG@,$EXC_LIB_FLAG,;t t
s,@EXC_LIB_DIR_FLAG@,$EXC_LIB_DIR_FLAG,;t t
s,@DEF_EXC@,$DEF_EXC,;t t
s,@Z_LIB_FLAG@,$Z_LIB_FLAG,;t t
s,@Z_LIB_DIR_FLAG@,$Z_LIB_DIR_FLAG,;t t
s,@INC_Z_H@,$INC_Z_H,;t t
s,@DEF_Z@,$DEF_Z,;t t
s,@JPEG_LIB_FLAG@,$JPEG_LIB_FLAG,;t t
s,@JPEG_LIB_DIR_FLAG@,$JPEG_LIB_DIR_FLAG,;t t
s,@TIFF_LIB_FLAG@,$TIFF_LIB_FLAG,;t t
s,@TIFF_LIB_DIR_FLAG@,$TIFF_LIB_DIR_FLAG,;t t
s,@PNG_LIB_FLAG@,$PNG_LIB_FLAG,;t t
s,@PNG_LIB_DIR_FLAG@,$PNG_LIB_DIR_FLAG,;t t
s,@INC_PNG_H@,$INC_PNG_H,;t t
s,@DEF_PNG@,$DEF_PNG,;t t
s,@EXCEPTIONS_CRASH_DEF@,$EXCEPTIONS_CRASH_DEF,;t t
s,@MPEGE_LIB_FLAG@,$MPEGE_LIB_FLAG,;t t
s,@MPEGE_LIB_DIR_FLAG@,$MPEGE_LIB_DIR_FLAG,;t t
s,@DEF_MPEG@,$DEF_MPEG,;t t
s,@MAGICK_LIB_FLAG@,$MAGICK_LIB_FLAG,;t t
s,@MAGICK_LIB_DIR_FLAG@,$MAGICK_LIB_DIR_FLAG,;t t
s,@INC_MAGICK_H@,$INC_MAGICK_H,;t t
s,@DEF_MAGICK@,$DEF_MAGICK,;t t
s,@SCISOCK_LIB_FLAG@,$SCISOCK_LIB_FLAG,;t t
s,@SCISOCK_LIB_DIR_FLAG@,$SCISOCK_LIB_DIR_FLAG,;t t
s,@INC_SCISOCK_H@,$INC_SCISOCK_H,;t t
s,@UNP_LIB_FLAG@,$UNP_LIB_FLAG,;t t
s,@UNP_LIB_DIR_FLAG@,$UNP_LIB_DIR_FLAG,;t t
s,@INC_UNP_H@,$INC_UNP_H,;t t
s,@F_LIB_FLAG@,$F_LIB_FLAG,;t t
s,@F_LIB_DIR_FLAG@,$F_LIB_DIR_FLAG,;t t
s,@CAMAL_LIB_FLAG@,$CAMAL_LIB_FLAG,;t t
s,@INC_CAMAL_H@,$INC_CAMAL_H,;t t
s,@CAMAL_LIB_DIR_FLAG@,$CAMAL_LIB_DIR_FLAG,;t t
s,@DEF_CAMAL@,$DEF_CAMAL,;t t
s,@HAVE_CAMAL@,$HAVE_CAMAL,;t t
s,@HAVE_CBLAS@,$HAVE_CBLAS,;t t
s,@DEF_CBLAS@,$DEF_CBLAS,;t t
s,@HAVE_BLAS@,$HAVE_BLAS,;t t
s,@INC_BLAS_H@,$INC_BLAS_H,;t t
s,@BLAS_LIB_FLAG@,$BLAS_LIB_FLAG,;t t
s,@BLAS_LIB_DIR_FLAG@,$BLAS_LIB_DIR_FLAG,;t t
s,@DEF_BLAS@,$DEF_BLAS,;t t
s,@HAVE_LAPACK@,$HAVE_LAPACK,;t t
s,@DEF_LAPACK@,$DEF_LAPACK,;t t
s,@LAPACK_LIB_FLAG@,$LAPACK_LIB_FLAG,;t t
s,@LAPACK_LIB_DIR_FLAG@,$LAPACK_LIB_DIR_FLAG,;t t
s,@HAVE_LAPACKMP@,$HAVE_LAPACKMP,;t t
s,@LAPACKMP_LIB_FLAG@,$LAPACKMP_LIB_FLAG,;t t
s,@LAPACKMP_LIB_DIR_FLAG@,$LAPACKMP_LIB_DIR_FLAG,;t t
s,@HAVE_MPI@,$HAVE_MPI,;t t
s,@DEF_MPI@,$DEF_MPI,;t t
s,@INC_MPI_H@,$INC_MPI_H,;t t
s,@MPI_LIB_FLAG@,$MPI_LIB_FLAG,;t t
s,@MPI_LIB_DIR_FLAG@,$MPI_LIB_DIR_FLAG,;t t
s,@DEF_MPI_UNI@,$DEF_MPI_UNI,;t t
s,@INC_MPI_UNI_H@,$INC_MPI_UNI_H,;t t
s,@MPI_UNI_LIB_FLAG@,$MPI_UNI_LIB_FLAG,;t t
s,@MPI_UNI_LIB_DIR_FLAG@,$MPI_UNI_LIB_DIR_FLAG,;t t
s,@HAVE_PETSC@,$HAVE_PETSC,;t t
s,@PETSC_LIB_FLAG@,$PETSC_LIB_FLAG,;t t
s,@PETSC_LIB_DIR_FLAG@,$PETSC_LIB_DIR_FLAG,;t t
s,@DEF_PETSC@,$DEF_PETSC,;t t
s,@INC_PETSC_H@,$INC_PETSC_H,;t t
s,@HAVE_PETSC_UNI@,$HAVE_PETSC_UNI,;t t
s,@PETSC_UNI_LIB_FLAG@,$PETSC_UNI_LIB_FLAG,;t t
s,@PETSC_UNI_LIB_DIR_FLAG@,$PETSC_UNI_LIB_DIR_FLAG,;t t
s,@DEF_PETSC_UNI@,$DEF_PETSC_UNI,;t t
s,@INC_PETSC_UNI_H@,$INC_PETSC_UNI_H,;t t
s,@HAVE_INSIGHT@,$HAVE_INSIGHT,;t t
s,@DEF_INSIGHT@,$DEF_INSIGHT,;t t
s,@INC_INSIGHT_H@,$INC_INSIGHT_H,;t t
s,@INSIGHT_LIB_FLAG@,$INSIGHT_LIB_FLAG,;t t
s,@INSIGHT_LIB_DIR_FLAG@,$INSIGHT_LIB_DIR_FLAG,;t t
s,@HAVE_PTOLEMY@,$HAVE_PTOLEMY,;t t
s,@DEF_PTOLEMY@,$DEF_PTOLEMY,;t t
s,@JAVA_PATH@,$JAVA_PATH,;t t
s,@PTOLEMY_PATH@,$PTOLEMY_PATH,;t t
s,@PTOLEMY_CLASSPATH@,$PTOLEMY_CLASSPATH,;t t
s,@XALAN_PATH@,$XALAN_PATH,;t t
s,@TAU_MAKEFILE@,$TAU_MAKEFILE,;t t
s,@BABEL_BIN@,$BABEL_BIN,;t t
s,@HAVE_BABEL@,$HAVE_BABEL,;t t
s,@DEF_BABEL@,$DEF_BABEL,;t t
s,@INC_SIDL_H@,$INC_SIDL_H,;t t
s,@SIDL_LIB_FLAG@,$SIDL_LIB_FLAG,;t t
s,@SIDL_LIB_DIR_FLAG@,$SIDL_LIB_DIR_FLAG,;t t
s,@NETSOLVE_LIB_FLAG@,$NETSOLVE_LIB_FLAG,;t t
s,@NETSOLVE_LIB_DIR_FLAG@,$NETSOLVE_LIB_DIR_FLAG,;t t
s,@INC_GLUT_H@,$INC_GLUT_H,;t t
s,@GLUT_LIB_FLAG@,$GLUT_LIB_FLAG,;t t
s,@GLUT_LIB_DIR_FLAG@,$GLUT_LIB_DIR_FLAG,;t t
s,@INC_GLUI_H@,$INC_GLUI_H,;t t
s,@GLUI_LIB_FLAG@,$GLUI_LIB_FLAG,;t t
s,@GLUI_LIB_DIR_FLAG@,$GLUI_LIB_DIR_FLAG,;t t
s,@DEF_OOGL@,$DEF_OOGL,;t t
s,@INC_OOGL_H@,$INC_OOGL_H,;t t
s,@OOGL_LIB_FLAG@,$OOGL_LIB_FLAG,;t t
s,@OOGL_LIB_DIR_FLAG@,$OOGL_LIB_DIR_FLAG,;t t
s,@DEF_GLEW@,$DEF_GLEW,;t t
s,@INC_GLEW_H@,$INC_GLEW_H,;t t
s,@GLEW_LIB_FLAG@,$GLEW_LIB_FLAG,;t t
s,@GLEW_LIB_DIR_FLAG@,$GLEW_LIB_DIR_FLAG,;t t
s,@FREETYPE_LIB_FLAG@,$FREETYPE_LIB_FLAG,;t t
s,@FREETYPE_LIB_DIR_FLAG@,$FREETYPE_LIB_DIR_FLAG,;t t
s,@DEF_FREETYPE@,$DEF_FREETYPE,;t t
s,@INC_FREETYPE_H@,$INC_FREETYPE_H,;t t
s,@FTGL_LIB_FLAG@,$FTGL_LIB_FLAG,;t t
s,@FTGL_LIB_DIR_FLAG@,$FTGL_LIB_DIR_FLAG,;t t
s,@DEF_FTGL@,$DEF_FTGL,;t t
s,@INC_FTGL_H@,$INC_FTGL_H,;t t
s,@DEF_AUDIO@,$DEF_AUDIO,;t t
s,@HAVE_AUDIO@,$HAVE_AUDIO,;t t
s,@AUDIO_LIB_FLAG@,$AUDIO_LIB_FLAG,;t t
s,@AUDIO_LIB_DIR_FLAG@,$AUDIO_LIB_DIR_FLAG,;t t
s,@HAVE_TEEM@,$HAVE_TEEM,;t t
s,@DEF_TEEM@,$DEF_TEEM,;t t
s,@INC_TEEM_H@,$INC_TEEM_H,;t t
s,@TEEM_LIB_FLAG@,$TEEM_LIB_FLAG,;t t
s,@TEEM_LIB_DIR_FLAG@,$TEEM_LIB_DIR_FLAG,;t t
s,@DEF_MDSPLUS@,$DEF_MDSPLUS,;t t
s,@INC_MDSPLUS_H@,$INC_MDSPLUS_H,;t t
s,@MDSPLUS_LIB_FLAG@,$MDSPLUS_LIB_FLAG,;t t
s,@MDSPLUS_LIB_DIR_FLAG@,$MDSPLUS_LIB_DIR_FLAG,;t t
s,@DEF_HDF5@,$DEF_HDF5,;t t
s,@INC_HDF5_H@,$INC_HDF5_H,;t t
s,@HDF5_LIB_FLAG@,$HDF5_LIB_FLAG,;t t
s,@HDF5_LIB_DIR_FLAG@,$HDF5_LIB_DIR_FLAG,;t t
s,@DEF_PERFEX@,$DEF_PERFEX,;t t
s,@PERFEX_LIB_FLAG@,$PERFEX_LIB_FLAG,;t t
s,@PERFEX_LIB_DIR_FLAG@,$PERFEX_LIB_DIR_FLAG,;t t
s,@DEF_CRYPTO@,$DEF_CRYPTO,;t t
s,@CRYPTO_LIB_FLAG@,$CRYPTO_LIB_FLAG,;t t
s,@CRYPTO_LIB_DIR_FLAG@,$CRYPTO_LIB_DIR_FLAG,;t t
s,@DEF_SSL@,$DEF_SSL,;t t
s,@SSL_LIB_FLAG@,$SSL_LIB_FLAG,;t t
s,@SSL_LIB_DIR_FLAG@,$SSL_LIB_DIR_FLAG,;t t
s,@HAVE_GLOBUS@,$HAVE_GLOBUS,;t t
s,@DEF_GLOBUS@,$DEF_GLOBUS,;t t
s,@INC_GLOBUS_H@,$INC_GLOBUS_H,;t t
s,@GLOBUS_LIB_FLAG@,$GLOBUS_LIB_FLAG,;t t
s,@GLOBUS_LIB_DIR_FLAG@,$GLOBUS_LIB_DIR_FLAG,;t t
s,@QT_MOC_BIN@,$QT_MOC_BIN,;t t
s,@HAVE_QT@,$HAVE_QT,;t t
s,@DEF_QT@,$DEF_QT,;t t
s,@INC_QT_MT_H@,$INC_QT_MT_H,;t t
s,@QT_MT_LIB_FLAG@,$QT_MT_LIB_FLAG,;t t
s,@QT_MT_LIB_DIR_FLAG@,$QT_MT_LIB_DIR_FLAG,;t t
s,@HAVE_RUBY@,$HAVE_RUBY,;t t
s,@DEF_RUBY@,$DEF_RUBY,;t t
s,@INC_RUBY_H@,$INC_RUBY_H,;t t
s,@RUBY_LIB_FLAG@,$RUBY_LIB_FLAG,;t t
s,@RUBY_LIB_DIR_FLAG@,$RUBY_LIB_DIR_FLAG,;t t
s,@HAVE_TAO@,$HAVE_TAO,;t t
s,@DEF_TAO@,$DEF_TAO,;t t
s,@INC_TAO_H@,$INC_TAO_H,;t t
s,@TAO_LIB_FLAG@,$TAO_LIB_FLAG,;t t
s,@TAO_LIB_DIR_FLAG@,$TAO_LIB_DIR_FLAG,;t t
s,@HAVE_VTK@,$HAVE_VTK,;t t
s,@DEF_VTK@,$DEF_VTK,;t t
s,@INC_VTK_H@,$INC_VTK_H,;t t
s,@VTK_LIB_FLAG@,$VTK_LIB_FLAG,;t t
s,@VTK_LIB_DIR_FLAG@,$VTK_LIB_DIR_FLAG,;t t
s,@DEF_VDT@,$DEF_VDT,;t t
s,@INC_VDT_H@,$INC_VDT_H,;t t
s,@VDT_LIB_FLAG@,$VDT_LIB_FLAG,;t t
s,@VDT_LIB_DIR_FLAG@,$VDT_LIB_DIR_FLAG,;t t
s,@HAVE_HYPRE@,$HAVE_HYPRE,;t t
s,@DEF_HYPRE@,$DEF_HYPRE,;t t
s,@INC_HYPRE_H@,$INC_HYPRE_H,;t t
s,@HYPRE_LIB_FLAG@,$HYPRE_LIB_FLAG,;t t
s,@HYPRE_LIB_DIR_FLAG@,$HYPRE_LIB_DIR_FLAG,;t t
s,@BOOST_LIB_FLAG@,$BOOST_LIB_FLAG,;t t
s,@BOOST_LIB_DIR_FLAG@,$BOOST_LIB_DIR_FLAG,;t t
s,@DEF_BOOST@,$DEF_BOOST,;t t
s,@INC_BOOST_H@,$INC_BOOST_H,;t t
s,@LOKI_LIB_FLAG@,$LOKI_LIB_FLAG,;t t
s,@LOKI_LIB_DIR_FLAG@,$LOKI_LIB_DIR_FLAG,;t t
s,@DEF_LOKI@,$DEF_LOKI,;t t
s,@INC_LOKI_H@,$INC_LOKI_H,;t t
s,@HAVE_UUID@,$HAVE_UUID,;t t
s,@UUID_LIB_FLAG@,$UUID_LIB_FLAG,;t t
s,@BUILD_SCIRUN2@,$BUILD_SCIRUN2,;t t
s,@WOFF_STRING@,$WOFF_STRING,;t t
s,@scirun_obj_dir@,$scirun_obj_dir,;t t
s,@scirun_src_dir@,$scirun_src_dir,;t t
s,@LIBOBJS@,$LIBOBJS,;t t
s,@LTLIBOBJS@,$LTLIBOBJS,;t t
CEOF

_ACEOF

  cat >>$CONFIG_STATUS <<\_ACEOF
  # Split the substitutions into bite-sized pieces for seds with
  # small command number limits, like on Digital OSF/1 and HP-UX.
  ac_max_sed_lines=48
  ac_sed_frag=1 # Number of current file.
  ac_beg=1 # First line for current file.
  ac_end=$ac_max_sed_lines # Line after last line for current file.
  ac_more_lines=:
  ac_sed_cmds=
  while $ac_more_lines; do
    if test $ac_beg -gt 1; then
      sed "1,${ac_beg}d; ${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
    else
      sed "${ac_end}q" $tmp/subs.sed >$tmp/subs.frag
    fi
    if test ! -s $tmp/subs.frag; then
      ac_more_lines=false
    else
      # The purpose of the label and of the branching condition is to
      # speed up the sed processing (if there are no `@' at all, there
      # is no need to browse any of the substitutions).
      # These are the two extra sed commands mentioned above.
      (echo ':t
  /@[a-zA-Z_][a-zA-Z_0-9]*@/!b' && cat $tmp/subs.frag) >$tmp/subs-$ac_sed_frag.sed
      if test -z "$ac_sed_cmds"; then
	ac_sed_cmds="sed -f $tmp/subs-$ac_sed_frag.sed"
      else
	ac_sed_cmds="$ac_sed_cmds | sed -f $tmp/subs-$ac_sed_frag.sed"
      fi
      ac_sed_frag=`expr $ac_sed_frag + 1`
      ac_beg=$ac_end
      ac_end=`expr $ac_end + $ac_max_sed_lines`
    fi
  done
  if test -z "$ac_sed_cmds"; then
    ac_sed_cmds=cat
  fi
fi # test -n "$CONFIG_FILES"

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
for ac_file in : $CONFIG_FILES; do test "x$ac_file" = x: && continue
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case $ac_file in
  - | *:- | *:-:* ) # input from stdin
	cat >$tmp/stdin
	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  * )   ac_file_in=$ac_file.in ;;
  esac

  # Compute @srcdir@, @top_srcdir@, and @INSTALL@ for subdirectories.
  ac_dir=`(dirname "$ac_file") 2>/dev/null ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
  { if $as_mkdir_p; then
    mkdir -p "$ac_dir"
  else
    as_dir="$ac_dir"
    as_dirs=
    while test ! -d "$as_dir"; do
      as_dirs="$as_dir $as_dirs"
      as_dir=`(dirname "$as_dir") 2>/dev/null ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
    done
    test ! -n "$as_dirs" || mkdir $as_dirs
  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
   { (exit 1); exit 1; }; }; }

  ac_builddir=.

if test "$ac_dir" != .; then
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A "../" for each directory in $ac_dir_suffix.
  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
else
  ac_dir_suffix= ac_top_builddir=
fi

case $srcdir in
  .)  # No --srcdir option.  We are building in place.
    ac_srcdir=.
    if test -z "$ac_top_builddir"; then
       ac_top_srcdir=.
    else
       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
    fi ;;
  [\\/]* | ?:[\\/]* )  # Absolute path.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir ;;
  *) # Relative path.
    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_builddir$srcdir ;;
esac

# Do not use `cd foo && pwd` to compute absolute paths, because
# the directories may not exist.
case `pwd` in
.) ac_abs_builddir="$ac_dir";;
*)
  case "$ac_dir" in
  .) ac_abs_builddir=`pwd`;;
  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
  *) ac_abs_builddir=`pwd`/"$ac_dir";;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_builddir=${ac_top_builddir}.;;
*)
  case ${ac_top_builddir}. in
  .) ac_abs_top_builddir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_srcdir=$ac_srcdir;;
*)
  case $ac_srcdir in
  .) ac_abs_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_srcdir=$ac_top_srcdir;;
*)
  case $ac_top_srcdir in
  .) ac_abs_top_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
  esac;;
esac



  if test x"$ac_file" != x-; then
    { echo "$as_me:$LINENO: creating $ac_file" >&5
echo "$as_me: creating $ac_file" >&6;}
    rm -f "$ac_file"
  fi
  # Let's still pretend it is `configure' which instantiates (i.e., don't
  # use $as_me), people would be surprised to read:
  #    /* config.h.  Generated by config.status.  */
  if test x"$ac_file" = x-; then
    configure_input=
  else
    configure_input="$ac_file.  "
  fi
  configure_input=$configure_input"Generated from `echo $ac_file_in |
				     sed 's,.*/,,'` by configure."

  # First look for the input files in the build tree, otherwise in the
  # src tree.
  ac_file_inputs=`IFS=:
    for f in $ac_file_in; do
      case $f in
      -) echo $tmp/stdin ;;
      [\\/$]*)
	 # Absolute (can't be DOS-style, as IFS=:)
	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 echo "$f";;
      *) # Relative
	 if test -f "$f"; then
	   # Build tree
	   echo "$f"
	 elif test -f "$srcdir/$f"; then
	   # Source tree
	   echo "$srcdir/$f"
	 else
	   # /dev/null tree
	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 fi;;
      esac
    done` || { (exit 1); exit 1; }
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF
  sed "$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s,@configure_input@,$configure_input,;t t
s,@srcdir@,$ac_srcdir,;t t
s,@abs_srcdir@,$ac_abs_srcdir,;t t
s,@top_srcdir@,$ac_top_srcdir,;t t
s,@abs_top_srcdir@,$ac_abs_top_srcdir,;t t
s,@builddir@,$ac_builddir,;t t
s,@abs_builddir@,$ac_abs_builddir,;t t
s,@top_builddir@,$ac_top_builddir,;t t
s,@abs_top_builddir@,$ac_abs_top_builddir,;t t
" $ac_file_inputs | (eval "$ac_sed_cmds") >$tmp/out
  rm -f $tmp/stdin
  if test x"$ac_file" != x-; then
    mv $tmp/out $ac_file
  else
    cat $tmp/out
    rm -f $tmp/out
  fi

done
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF

#
# CONFIG_HEADER section.
#

# These sed commands are passed to sed as "A NAME B NAME C VALUE D", where
# NAME is the cpp macro being defined and VALUE is the value it is being given.
#
# ac_d sets the value in "#define NAME VALUE" lines.
ac_dA='s,^\([	 ]*\)#\([	 ]*define[	 ][	 ]*\)'
ac_dB='[	 ].*$,\1#\2'
ac_dC=' '
ac_dD=',;t'
# ac_u turns "#undef NAME" without trailing blanks into "#define NAME VALUE".
ac_uA='s,^\([	 ]*\)#\([	 ]*\)undef\([	 ][	 ]*\)'
ac_uB='$,\1#\2define\3'
ac_uC=' '
ac_uD=',;t'

for ac_file in : $CONFIG_HEADERS; do test "x$ac_file" = x: && continue
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case $ac_file in
  - | *:- | *:-:* ) # input from stdin
	cat >$tmp/stdin
	ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  *:* ) ac_file_in=`echo "$ac_file" | sed 's,[^:]*:,,'`
	ac_file=`echo "$ac_file" | sed 's,:.*,,'` ;;
  * )   ac_file_in=$ac_file.in ;;
  esac

  test x"$ac_file" != x- && { echo "$as_me:$LINENO: creating $ac_file" >&5
echo "$as_me: creating $ac_file" >&6;}

  # First look for the input files in the build tree, otherwise in the
  # src tree.
  ac_file_inputs=`IFS=:
    for f in $ac_file_in; do
      case $f in
      -) echo $tmp/stdin ;;
      [\\/$]*)
	 # Absolute (can't be DOS-style, as IFS=:)
	 test -f "$f" || { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 # Do quote $f, to prevent DOS paths from being IFS'd.
	 echo "$f";;
      *) # Relative
	 if test -f "$f"; then
	   # Build tree
	   echo "$f"
	 elif test -f "$srcdir/$f"; then
	   # Source tree
	   echo "$srcdir/$f"
	 else
	   # /dev/null tree
	   { { echo "$as_me:$LINENO: error: cannot find input file: $f" >&5
echo "$as_me: error: cannot find input file: $f" >&2;}
   { (exit 1); exit 1; }; }
	 fi;;
      esac
    done` || { (exit 1); exit 1; }
  # Remove the trailing spaces.
  sed 's/[	 ]*$//' $ac_file_inputs >$tmp/in

_ACEOF

# Transform confdefs.h into two sed scripts, `conftest.defines' and
# `conftest.undefs', that substitutes the proper values into
# config.h.in to produce config.h.  The first handles `#define'
# templates, and the second `#undef' templates.
# And first: Protect against being on the right side of a sed subst in
# config.status.  Protect against being in an unquoted here document
# in config.status.
rm -f conftest.defines conftest.undefs
# Using a here document instead of a string reduces the quoting nightmare.
# Putting comments in sed scripts is not portable.
#
# `end' is used to avoid that the second main sed command (meant for
# 0-ary CPP macros) applies to n-ary macro definitions.
# See the Autoconf documentation for `clear'.
cat >confdef2sed.sed <<\_ACEOF
s/[\\&,]/\\&/g
s,[\\$`],\\&,g
t clear
: clear
s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 (][^	 (]*\)\(([^)]*)\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1\2${ac_dC}\3${ac_dD},gp
t end
s,^[	 ]*#[	 ]*define[	 ][	 ]*\([^	 ][^	 ]*\)[	 ]*\(.*\)$,${ac_dA}\1${ac_dB}\1${ac_dC}\2${ac_dD},gp
: end
_ACEOF
# If some macros were called several times there might be several times
# the same #defines, which is useless.  Nevertheless, we may not want to
# sort them, since we want the *last* AC-DEFINE to be honored.
uniq confdefs.h | sed -n -f confdef2sed.sed >conftest.defines
sed 's/ac_d/ac_u/g' conftest.defines >conftest.undefs
rm -f confdef2sed.sed

# This sed command replaces #undef with comments.  This is necessary, for
# example, in the case of _POSIX_SOURCE, which is predefined and required
# on some systems where configure will not decide to define it.
cat >>conftest.undefs <<\_ACEOF
s,^[	 ]*#[	 ]*undef[	 ][	 ]*[a-zA-Z_][a-zA-Z_0-9]*,/* & */,
_ACEOF

# Break up conftest.defines because some shells have a limit on the size
# of here documents, and old seds have small limits too (100 cmds).
echo '  # Handle all the #define templates only if necessary.' >>$CONFIG_STATUS
echo '  if grep "^[	 ]*#[	 ]*define" $tmp/in >/dev/null; then' >>$CONFIG_STATUS
echo '  # If there are no defines, we may have an empty if/fi' >>$CONFIG_STATUS
echo '  :' >>$CONFIG_STATUS
rm -f conftest.tail
while grep . conftest.defines >/dev/null
do
  # Write a limited-size here document to $tmp/defines.sed.
  echo '  cat >$tmp/defines.sed <<CEOF' >>$CONFIG_STATUS
  # Speed up: don't consider the non `#define' lines.
  echo '/^[	 ]*#[	 ]*define/!b' >>$CONFIG_STATUS
  # Work around the forget-to-reset-the-flag bug.
  echo 't clr' >>$CONFIG_STATUS
  echo ': clr' >>$CONFIG_STATUS
  sed ${ac_max_here_lines}q conftest.defines >>$CONFIG_STATUS
  echo 'CEOF
  sed -f $tmp/defines.sed $tmp/in >$tmp/out
  rm -f $tmp/in
  mv $tmp/out $tmp/in
' >>$CONFIG_STATUS
  sed 1,${ac_max_here_lines}d conftest.defines >conftest.tail
  rm -f conftest.defines
  mv conftest.tail conftest.defines
done
rm -f conftest.defines
echo '  fi # grep' >>$CONFIG_STATUS
echo >>$CONFIG_STATUS

# Break up conftest.undefs because some shells have a limit on the size
# of here documents, and old seds have small limits too (100 cmds).
echo '  # Handle all the #undef templates' >>$CONFIG_STATUS
rm -f conftest.tail
while grep . conftest.undefs >/dev/null
do
  # Write a limited-size here document to $tmp/undefs.sed.
  echo '  cat >$tmp/undefs.sed <<CEOF' >>$CONFIG_STATUS
  # Speed up: don't consider the non `#undef'
  echo '/^[	 ]*#[	 ]*undef/!b' >>$CONFIG_STATUS
  # Work around the forget-to-reset-the-flag bug.
  echo 't clr' >>$CONFIG_STATUS
  echo ': clr' >>$CONFIG_STATUS
  sed ${ac_max_here_lines}q conftest.undefs >>$CONFIG_STATUS
  echo 'CEOF
  sed -f $tmp/undefs.sed $tmp/in >$tmp/out
  rm -f $tmp/in
  mv $tmp/out $tmp/in
' >>$CONFIG_STATUS
  sed 1,${ac_max_here_lines}d conftest.undefs >conftest.tail
  rm -f conftest.undefs
  mv conftest.tail conftest.undefs
done
rm -f conftest.undefs

cat >>$CONFIG_STATUS <<\_ACEOF
  # Let's still pretend it is `configure' which instantiates (i.e., don't
  # use $as_me), people would be surprised to read:
  #    /* config.h.  Generated by config.status.  */
  if test x"$ac_file" = x-; then
    echo "/* Generated by configure.  */" >$tmp/config.h
  else
    echo "/* $ac_file.  Generated by configure.  */" >$tmp/config.h
  fi
  cat $tmp/in >>$tmp/config.h
  rm -f $tmp/in
  if test x"$ac_file" != x-; then
    if diff $ac_file $tmp/config.h >/dev/null 2>&1; then
      { echo "$as_me:$LINENO: $ac_file is unchanged" >&5
echo "$as_me: $ac_file is unchanged" >&6;}
    else
      ac_dir=`(dirname "$ac_file") 2>/dev/null ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
      { if $as_mkdir_p; then
    mkdir -p "$ac_dir"
  else
    as_dir="$ac_dir"
    as_dirs=
    while test ! -d "$as_dir"; do
      as_dirs="$as_dir $as_dirs"
      as_dir=`(dirname "$as_dir") 2>/dev/null ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
    done
    test ! -n "$as_dirs" || mkdir $as_dirs
  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
   { (exit 1); exit 1; }; }; }

      rm -f $ac_file
      mv $tmp/config.h $ac_file
    fi
  else
    cat $tmp/config.h
    rm -f $tmp/config.h
  fi
done
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF

#
# CONFIG_COMMANDS section.
#
for ac_file in : $CONFIG_COMMANDS; do test "x$ac_file" = x: && continue
  ac_dest=`echo "$ac_file" | sed 's,:.*,,'`
  ac_source=`echo "$ac_file" | sed 's,[^:]*:,,'`
  ac_dir=`(dirname "$ac_dest") 2>/dev/null ||
$as_expr X"$ac_dest" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_dest" : 'X\(//\)[^/]' \| \
	 X"$ac_dest" : 'X\(//\)$' \| \
	 X"$ac_dest" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$ac_dest" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
  { if $as_mkdir_p; then
    mkdir -p "$ac_dir"
  else
    as_dir="$ac_dir"
    as_dirs=
    while test ! -d "$as_dir"; do
      as_dirs="$as_dir $as_dirs"
      as_dir=`(dirname "$as_dir") 2>/dev/null ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| \
	 .     : '\(.\)' 2>/dev/null ||
echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{ s//\1/; q; }
  	  /^X\(\/\/\)[^/].*/{ s//\1/; q; }
  	  /^X\(\/\/\)$/{ s//\1/; q; }
  	  /^X\(\/\).*/{ s//\1/; q; }
  	  s/.*/./; q'`
    done
    test ! -n "$as_dirs" || mkdir $as_dirs
  fi || { { echo "$as_me:$LINENO: error: cannot create directory \"$ac_dir\"" >&5
echo "$as_me: error: cannot create directory \"$ac_dir\"" >&2;}
   { (exit 1); exit 1; }; }; }

  ac_builddir=.

if test "$ac_dir" != .; then
  ac_dir_suffix=/`echo "$ac_dir" | sed 's,^\.[\\/],,'`
  # A "../" for each directory in $ac_dir_suffix.
  ac_top_builddir=`echo "$ac_dir_suffix" | sed 's,/[^\\/]*,../,g'`
else
  ac_dir_suffix= ac_top_builddir=
fi

case $srcdir in
  .)  # No --srcdir option.  We are building in place.
    ac_srcdir=.
    if test -z "$ac_top_builddir"; then
       ac_top_srcdir=.
    else
       ac_top_srcdir=`echo $ac_top_builddir | sed 's,/$,,'`
    fi ;;
  [\\/]* | ?:[\\/]* )  # Absolute path.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir ;;
  *) # Relative path.
    ac_srcdir=$ac_top_builddir$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_builddir$srcdir ;;
esac

# Do not use `cd foo && pwd` to compute absolute paths, because
# the directories may not exist.
case `pwd` in
.) ac_abs_builddir="$ac_dir";;
*)
  case "$ac_dir" in
  .) ac_abs_builddir=`pwd`;;
  [\\/]* | ?:[\\/]* ) ac_abs_builddir="$ac_dir";;
  *) ac_abs_builddir=`pwd`/"$ac_dir";;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_builddir=${ac_top_builddir}.;;
*)
  case ${ac_top_builddir}. in
  .) ac_abs_top_builddir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_builddir=${ac_top_builddir}.;;
  *) ac_abs_top_builddir=$ac_abs_builddir/${ac_top_builddir}.;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_srcdir=$ac_srcdir;;
*)
  case $ac_srcdir in
  .) ac_abs_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_srcdir=$ac_srcdir;;
  *) ac_abs_srcdir=$ac_abs_builddir/$ac_srcdir;;
  esac;;
esac
case $ac_abs_builddir in
.) ac_abs_top_srcdir=$ac_top_srcdir;;
*)
  case $ac_top_srcdir in
  .) ac_abs_top_srcdir=$ac_abs_builddir;;
  [\\/]* | ?:[\\/]* ) ac_abs_top_srcdir=$ac_top_srcdir;;
  *) ac_abs_top_srcdir=$ac_abs_builddir/$ac_top_srcdir;;
  esac;;
esac


  { echo "$as_me:$LINENO: executing $ac_dest commands" >&5
echo "$as_me: executing $ac_dest commands" >&6;}
  case $ac_dest in
    do_stamp ) echo timestamp > stamp-h  ;;
  esac
done
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF

{ (exit 0); exit 0; }
_ACEOF
chmod +x $CONFIG_STATUS
ac_clean_files=$ac_clean_files_save

sed -f sedscript < config.status > config_test.status;\
			    mv config_test.status config.status ;\
			    chmod 755 config.status

# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || { (exit 1); exit 1; }
fi



for testfile in $sci_defs_files; do
  file=`echo $testfile | sed 's/test//'`

  if cmp -s $file $testfile 2>/dev/null; then
    echo "$as_me:$LINENO: result: $file is unchanged." >&5
echo "${ECHO_T}$file is unchanged." >&6
    rm -f $testfile
  else
    mv $testfile $file
    { echo "$as_me:$LINENO: WARNING: $file has changed." >&5
echo "$as_me: WARNING: $file has changed." >&2;}
  fi
done

#### Clean up: ####
## Possible temporary template directories
rm -rf ii_files
## sedscript
rm -f sedscript
