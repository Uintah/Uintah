#!/bin/csh
#__________________________________
#  This script plot the totalMassBurned and its sum
#   output and plot it using gnuplot.
#  Usage:
#     plotBurnedMass <dump postScript File (y/Y), default is no>
#
#  This requires gnuplot 3.8 or greater.
#__________________________________

set out = totalMassBurned.dat
if ( !(-e $out) ) then
    echo "Couldn't find your file $out"
  exit(1)
endif

set hardcopy = "n"
if ( $#argv == 1 ) then
  set hardcopy = $argv
endif 

grep -v "inf\|e+308" $out > $out.tmp
mv $out.tmp $out

#__________________________________
# post process the dat file
echo "computing cumulative sum of the mass burned"
awk 'NR==1 {sum=$2; printf("%15.16E %15.16E %15.16E\n", $1,$2,sum)} ; NR>1 {sum=sum + $2; printf("%15.16E %15.16E %15.16E\n", $1, $2, sum)}' < $out >& $out.tmp

#compute the relative time
awk 'NR==1 {init_time=$1; print 0} ; NR>1 {time=$1 - init_time; printf("%15.16E %15.16E %15.16E\n", time, $2, $3)}' < $out.tmp > $out.tmp1

echo "computing delta time"
awk '                               \
BEGIN {                             \
  old_t = 0;                        \
}                                   \
{                                   \
  printf("%15.16E\n", $1 - old_t);  \
  old_t = $1;                       \
}                                   \
' <$out.tmp1 > $out.tmp2

echo "computing massBurned rate"
paste -d " " $out.tmp1 $out.tmp2 > $out.tmp3

# time, massBurned/timestep, sumMassBurned, delT massBurned/sec
awk '                                                                           \
NR>1 {                                                                          \
  if ( $4 > 0.0) {                                                              \
    printf("%15.16E %15.16E %15.16E %15.16E %15.16E\n", $1, $2, $3, $4, $3/$4); \
  }                                                                             \
}                                                                               \
' < $out.tmp3 > $out.tmp4

/bin/rm $out.tmp[1-3]
/bin/rm $out.tmp

echo "" > gp


#__________________________________
# if making a hardcopy
if( $hardcopy == "y" || $hardcopy == "Y" ) then 
echo "Generating the postscript file plotMassBurned.ps"
/bin/rm gp
cat > gp << fin
set terminal postscript color solid "Times-Roman" 12
set output "plotMassBurned.ps"
fin
endif

#__________________________________
# generate the  plot script
cat >> gp << fin
set grid xtics ytics 
set y2tics
set timestamp "%m/%d/%y %H:%M"  80,-2
set ylabel 'Mass Burned /timestep  [Kg]' textcolor lt 1
set y2label 'Total Mass Burned [Kg]'     textcolor lt 2
set xlabel 'Physical Time[sec]

plot '$out.tmp4' using 1:2 t           'Mass Burned' with lines,\
     '$out.tmp4' using 1:3 axis x1y2 t 'Cum. Sum' with lines

fin
if( $hardcopy == "n") then
  echo "pause -1 'Hit return to exit'" >> gp
endif
#__________________________________
# plot it up
gnuplot gp

if($hardcopy == "y" || $hardcopy == "Y") then
  convert plotMassBurned.ps plotMassBurned.jpg
  mogrify -rotate 90 plotMassBurned.jpg
  /bin/rm plotMassBurned.ps
endif
# cleanup
/bin/rm gp $out.tmp4 plotMassBurned.ps
exit(1)
