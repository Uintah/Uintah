c*********************************************************************
c
c
c*********************************************************************

      SUBROUTINE profscalar(domainLow, domainHigh,
     $     domainLowCT, domainHighCT,
     &     indexLow, indexHigh,
     &     SCALAR, PCELL,
     &     SVAL, PFIELD,
     $     xminus, xplus, yminus, yplus, zminus, zplus,
     &     ierr)
C---------------------------------------------------------------------
C     THREE-DIMENSIONAL VERSION
C     THIS SUBROUTINE WILL ASSIGN FLAT VELOCITY PROFILES
C     AT THE APPROPRIATE BOUNDARY CONDITIONS
C     SK, 3/25/95: also sets flat profiles for density here
C     (instead of in profp.f - because if lrdpr density profiles are
C     also read in.)
C---------------------------------------------------------------------

      implicit none

#include "param4.h"

c*********************************************************************
c     Arguments :
c*********************************************************************
      integer domainLow(3)
      integer domainHigh(3)
      integer domainLowCT(3)
      integer domainHighCT(3)
      integer indexLow(3)
      integer indexHigh(3)
      integer PCELL(domainLowCT(1):domainHighCT(1), 
     &     domainLowCT(2):domainHighCT(2), 
     &     domainLowCT(3):domainHighCT(3))
      double precision SCALAR(domainLow(1):domainHigh(1), 
     &     domainLow(2):domainHigh(2), domainLow(3):domainHigh(3))
      double precision SVAL
      integer PFIELD
      integer xminus, xplus, yminus, yplus, zminus, zplus
      integer ierr

c*********************************************************************
c     Local Variables :
c*********************************************************************
      integer IST, JST, KST, IEND, JEND, KEND
      integer I, J, K

c*********************************************************************
c     Start :
c*********************************************************************
      IST = indexLow(1)
      JST = indexLow(2)
      KST = indexLow(3)
      IEND = indexHigh(1)
      JEND = indexHigh(2)
      KEND = indexHigh(3)
      if (xminus) ist = ist-1
      if (xplus) iend = iend+1
      if (yminus) jst = jst-1
      if (yplus) jend = jend +1
      if (zminus) kst = kst - 1
      if (zplus) kend = kend +1

      DO 200 K = kst,kend
         DO 190 J = jst,jend
            DO 180 I = ist,iend
               IF (PCELL(I,J,K).EQ.PFIELD) THEN
                  SCALAR(I,J,K) = SVAL
               END IF
 180        CONTINUE
 190     CONTINUE
 200  CONTINUE

      RETURN
      END

c*********************************************************************
c
c Revision 1.4  2000/10/12 20:07:41  sparker
c Commented out debug print statements
c Fixed bug in profscalar
c
c Revision 1.3  2000/10/11 16:37:31  rawat
c modified calpbc for ghost cells
c
c Revision 1.2  2000/06/30 22:41:19  bbanerje
c Corrected behavior of profv and profscalar
c
c Revision 1.1  2000/06/20 20:42:38  rawat
c added some more boundary stuff and modified interface to IntVector. Before
c compiling the code you need to update /Core/Geometry/IntVector.h
c
c Revision 1.1  2000/04/12 20:31:49  rawat
c modified PressureSolver and added fortran subroutines
c
c
c*********************************************************************
