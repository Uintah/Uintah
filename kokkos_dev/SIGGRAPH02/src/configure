#! /bin/sh

# Guess values for system-dependent variables and create Makefiles.
# Generated automatically using autoconf version 2.13 
# Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.
#
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.

# Defaults:
ac_help=
ac_default_prefix=/usr/local
# Any additions from configure.in:
ac_help="$ac_help
--with-thirdparty=<path-to-thirdparty>    <path-to-thirdparty>/lib/<all-thirdparty-libs}"
ac_help="$ac_help
--with-tcl=<path-to-tcl>          <path-to-tcl>/lib/libtcl.so"
ac_help="$ac_help
--with-xercesc=<path-to-tcl>      <path-to-tcl>/lib/libxerces-c.so"
ac_help="$ac_help
--with-teem=<path-to-tcl>         <path-to-tcl>/lib/libnrrd.so et al"
ac_help="$ac_help
--with-mpeg=<path-to-tcl>         <path-to-tcl>/lib/libmpege.so"
ac_help="$ac_help
--with-blas=<path-to-tcl>         <path-to-tcl>/lib/libblas.a"
ac_help="$ac_help
--with-lapack=<path-to-tcl>       <path-to-tcl>/lib/liblapack.a"
ac_help="$ac_help
--with-mpi=<path-to-mpi>          <path-to-mpi>"
ac_help="$ac_help
--with-mpiuni=<path-to-mpiuni>    <path-to-mpiuni>"
ac_help="$ac_help
--with-hypre=<path-to-hypre>      <path-to-hypre>"
ac_help="$ac_help
--with-petsc=<path-to-petsc>      <path-to-petsc>"
ac_help="$ac_help
--with-unipetsc=<path-to-tcl>     <path-to-tcl>/lib/libpetsc.so"
ac_help="$ac_help
--with-tau=<tau-makefile>         Specify Tau Makefile"
ac_help="$ac_help
--with-globus=DIR                 Use the globus installation in DIR"
ac_help="$ac_help
--with-qt=DIR                     Use the Qt installation in DIR"
ac_help="$ac_help
--with-opengl=DIR                     Use the OpenGL installation in DIR"
ac_help="$ac_help
--with-zlib=DIR                     Use the zlib installation in DIR"
ac_help="$ac_help
--with-vdt=DIR                    <path-to-vdt>"
ac_help="$ac_help
--with-imagemagick=DIR                    <path-to-imagemagick>"
ac_help="$ac_help
--with-mdsplus=<path-to-mdsplus>	<path-to-mdsplus>/lib/MdsLib_client.so"
ac_help="$ac_help
--with-glut=DIR                   Use the glut installation in DIR"
ac_help="$ac_help
--with-glui=DIR                   Use the glui installation in DIR"
ac_help="$ac_help
--enable-verbosity                Turn on verbose configure output"
ac_help="$ac_help
--enable-threads                  Specify a thread implementation (pthreads or irix)"
ac_help="$ac_help
--enable-debug                    Turn on debugging (usually -g flag)"
ac_help="$ac_help
--enable-optimize                 Turn on optimize (usually -O2 flag)"
ac_help="$ac_help
--enable-64bit                    Compile in 64 bit mode"
ac_help="$ac_help
--enable-32bit                    Compile in 32 bit mode"
ac_help="$ac_help
--enable-output-avg-walltime      Output ellapsed wall-times"
ac_help="$ac_help
--enable-perfex                   Use perfex hardware counters"
ac_help="$ac_help
--enable-package                  Build the specified packages"
ac_help="$ac_help
--enable-exename                  Override the default executable name"
ac_help="$ac_help
--enable-largesos                 Build one .so per directory"
ac_help="$ac_help
--enable-sci-malloc               Use SCI malloc checker"
ac_help="$ac_help
--enable-assertion-level=N        Use assertion level N (0-3)"
ac_help="$ac_help
--enable-scirun2                  build experimental SCIRun 2"
ac_help="$ac_help
  --with-x                use the X Window System"

# Initialize some variables set by options.
# The variables have the same names as the options, with
# dashes changed to underlines.
build=NONE
cache_file=./config.cache
exec_prefix=NONE
host=NONE
no_create=
nonopt=NONE
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
target=NONE
verbose=
x_includes=NONE
x_libraries=NONE
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datadir='${prefix}/share'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
libdir='${exec_prefix}/lib'
includedir='${prefix}/include'
oldincludedir='/usr/include'
infodir='${prefix}/info'
mandir='${prefix}/man'

# Initialize some other variables.
subdirs=
MFLAGS= MAKEFLAGS=
SHELL=${CONFIG_SHELL-/bin/sh}
# Maximum number of lines to put in a shell here document.
ac_max_here_lines=12

ac_prev=
for ac_option
do

  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval "$ac_prev=\$ac_option"
    ac_prev=
    continue
  fi

  case "$ac_option" in
  -*=*) ac_optarg=`echo "$ac_option" | sed 's/[-_a-zA-Z0-9]*=//'` ;;
  *) ac_optarg= ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case "$ac_option" in

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir="$ac_optarg" ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build="$ac_optarg" ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file="$ac_optarg" ;;

  -datadir | --datadir | --datadi | --datad | --data | --dat | --da)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=* | --data=* | --dat=* \
  | --da=*)
    datadir="$ac_optarg" ;;

  -disable-* | --disable-*)
    ac_feature=`echo $ac_option|sed -e 's/-*disable-//'`
    # Reject names that are not valid shell variable names.
    if test -n "`echo $ac_feature| sed 's/[-a-zA-Z0-9_]//g'`"; then
      { echo "configure: error: $ac_feature: invalid feature name" 1>&2; exit 1; }
    fi
    ac_feature=`echo $ac_feature| sed 's/-/_/g'`
    eval "enable_${ac_feature}=no" ;;

  -enable-* | --enable-*)
    ac_feature=`echo $ac_option|sed -e 's/-*enable-//' -e 's/=.*//'`
    # Reject names that are not valid shell variable names.
    if test -n "`echo $ac_feature| sed 's/[-_a-zA-Z0-9]//g'`"; then
      { echo "configure: error: $ac_feature: invalid feature name" 1>&2; exit 1; }
    fi
    ac_feature=`echo $ac_feature| sed 's/-/_/g'`
    case "$ac_option" in
      *=*) ;;
      *) ac_optarg=yes ;;
    esac
    eval "enable_${ac_feature}='$ac_optarg'" ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix="$ac_optarg" ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he)
    # Omit some internal or obsolete options to make the list less imposing.
    # This message is too long to be a string in the A/UX 3.1 sh.
    cat << EOF
Usage: configure [options] [host]
Options: [defaults in brackets after descriptions]
Configuration:
  --cache-file=FILE       cache test results in FILE
  --help                  print this message
  --no-create             do not create output files
  --quiet, --silent       do not print \`checking...' messages
  --version               print the version of autoconf that created configure
Directory and file names:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [same as prefix]
  --bindir=DIR            user executables in DIR [EPREFIX/bin]
  --sbindir=DIR           system admin executables in DIR [EPREFIX/sbin]
  --libexecdir=DIR        program executables in DIR [EPREFIX/libexec]
  --datadir=DIR           read-only architecture-independent data in DIR
                          [PREFIX/share]
  --sysconfdir=DIR        read-only single-machine data in DIR [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data in DIR
                          [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data in DIR [PREFIX/var]
  --libdir=DIR            object code libraries in DIR [EPREFIX/lib]
  --includedir=DIR        C header files in DIR [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc in DIR [/usr/include]
  --infodir=DIR           info documentation in DIR [PREFIX/info]
  --mandir=DIR            man documentation in DIR [PREFIX/man]
  --srcdir=DIR            find the sources in DIR [configure dir or ..]
  --program-prefix=PREFIX prepend PREFIX to installed program names
  --program-suffix=SUFFIX append SUFFIX to installed program names
  --program-transform-name=PROGRAM
                          run sed PROGRAM on installed program names
EOF
    cat << EOF
Host type:
  --build=BUILD           configure for building on BUILD [BUILD=HOST]
  --host=HOST             configure for HOST [guessed]
  --target=TARGET         configure for TARGET [TARGET=HOST]
Features and packages:
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
  --x-includes=DIR        X include files are in DIR
  --x-libraries=DIR       X library files are in DIR
EOF
    if test -n "$ac_help"; then
      echo "--enable and --with options recognized:$ac_help"
    fi
    exit 0 ;;

  -host | --host | --hos | --ho)
    ac_prev=host ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host="$ac_optarg" ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir="$ac_optarg" ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir="$ac_optarg" ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir="$ac_optarg" ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir="$ac_optarg" ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst \
  | --locals | --local | --loca | --loc | --lo)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* \
  | --locals=* | --local=* | --loca=* | --loc=* | --lo=*)
    localstatedir="$ac_optarg" ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir="$ac_optarg" ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir="$ac_optarg" ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix="$ac_optarg" ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix="$ac_optarg" ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix="$ac_optarg" ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name="$ac_optarg" ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir="$ac_optarg" ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir="$ac_optarg" ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site="$ac_optarg" ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir="$ac_optarg" ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir="$ac_optarg" ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target="$ac_optarg" ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers)
    echo "configure generated by autoconf version 2.13"
    exit 0 ;;

  -with-* | --with-*)
    ac_package=`echo $ac_option|sed -e 's/-*with-//' -e 's/=.*//'`
    # Reject names that are not valid shell variable names.
    if test -n "`echo $ac_package| sed 's/[-_a-zA-Z0-9]//g'`"; then
      { echo "configure: error: $ac_package: invalid package name" 1>&2; exit 1; }
    fi
    ac_package=`echo $ac_package| sed 's/-/_/g'`
    case "$ac_option" in
      *=*) ;;
      *) ac_optarg=yes ;;
    esac
    eval "with_${ac_package}='$ac_optarg'" ;;

  -without-* | --without-*)
    ac_package=`echo $ac_option|sed -e 's/-*without-//'`
    # Reject names that are not valid shell variable names.
    if test -n "`echo $ac_package| sed 's/[-a-zA-Z0-9_]//g'`"; then
      { echo "configure: error: $ac_package: invalid package name" 1>&2; exit 1; }
    fi
    ac_package=`echo $ac_package| sed 's/-/_/g'`
    eval "with_${ac_package}=no" ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes="$ac_optarg" ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries="$ac_optarg" ;;

  -*) { echo "configure: error: $ac_option: invalid option; use --help to show usage" 1>&2; exit 1; }
    ;;

  *)
    if test -n "`echo $ac_option| sed 's/[-a-z0-9.]//g'`"; then
      echo "configure: warning: $ac_option: invalid host type" 1>&2
    fi
    if test "x$nonopt" != xNONE; then
      { echo "configure: error: can only configure for one host and one target at a time" 1>&2; exit 1; }
    fi
    nonopt="$ac_option"
    ;;

  esac
done

if test -n "$ac_prev"; then
  { echo "configure: error: missing argument to --`echo $ac_prev | sed 's/_/-/g'`" 1>&2; exit 1; }
fi

trap 'rm -fr conftest* confdefs* core core.* *.core $ac_clean_files; exit 1' 1 2 15

# File descriptor usage:
# 0 standard input
# 1 file creation
# 2 errors and warnings
# 3 some systems may open it to /dev/tty
# 4 used on the Kubota Titan
# 6 checking for... messages and results
# 5 compiler messages saved in config.log
if test "$silent" = yes; then
  exec 6>/dev/null
else
  exec 6>&1
fi
exec 5>./config.log

echo "\
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.
" 1>&5

# Strip out --no-create and --no-recursion so they do not pile up.
# Also quote any args containing shell metacharacters.
ac_configure_args=
for ac_arg
do
  case "$ac_arg" in
  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c) ;;
  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r) ;;
  *" "*|*"	"*|*[\[\]\~\#\$\^\&\*\(\)\{\}\\\|\;\<\>\?]*)
  ac_configure_args="$ac_configure_args '$ac_arg'" ;;
  *) ac_configure_args="$ac_configure_args $ac_arg" ;;
  esac
done

# NLS nuisances.
# Only set these to C if already set.  These must not be set unconditionally
# because not all systems understand e.g. LANG=C (notably SCO).
# Fixing LC_MESSAGES prevents Solaris sh from translating var values in `set'!
# Non-C LC_CTYPE values break the ctype check.
if test "${LANG+set}"   = set; then LANG=C;   export LANG;   fi
if test "${LC_ALL+set}" = set; then LC_ALL=C; export LC_ALL; fi
if test "${LC_MESSAGES+set}" = set; then LC_MESSAGES=C; export LC_MESSAGES; fi
if test "${LC_CTYPE+set}"    = set; then LC_CTYPE=C;    export LC_CTYPE;    fi

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -rf conftest* confdefs.h
# AIX cpp loses on an empty file, so make sure it contains at least a newline.
echo > confdefs.h

# A filename unique to this package, relative to the directory that
# configure is in, which we can look for to find out if srcdir is correct.
ac_unique_file=

# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then its parent.
  ac_prog=$0
  ac_confdir=`echo $ac_prog|sed 's%/[^/][^/]*$%%'`
  test "x$ac_confdir" = "x$ac_prog" && ac_confdir=.
  srcdir=$ac_confdir
  if test ! -r $srcdir/$ac_unique_file; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r $srcdir/$ac_unique_file; then
  if test "$ac_srcdir_defaulted" = yes; then
    { echo "configure: error: can not find sources in $ac_confdir or .." 1>&2; exit 1; }
  else
    { echo "configure: error: can not find sources in $srcdir" 1>&2; exit 1; }
  fi
fi
srcdir=`echo "${srcdir}" | sed 's%\([^/]\)/*$%\1%'`

# Prefer explicitly selected file to automatically selected ones.
if test -z "$CONFIG_SITE"; then
  if test "x$prefix" != xNONE; then
    CONFIG_SITE="$prefix/share/config.site $prefix/etc/config.site"
  else
    CONFIG_SITE="$ac_default_prefix/share/config.site $ac_default_prefix/etc/config.site"
  fi
fi
for ac_site_file in $CONFIG_SITE; do
  if test -r "$ac_site_file"; then
    echo "loading site script $ac_site_file"
    . "$ac_site_file"
  fi
done

if test -r "$cache_file"; then
  echo "loading cache $cache_file"
  . $cache_file
else
  echo "creating cache $cache_file"
  > $cache_file
fi

ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross

ac_exeext=
ac_objext=o
if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
  # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
  if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
    ac_n= ac_c='
' ac_t='	'
  else
    ac_n=-n ac_c= ac_t=
  fi
else
  ac_n= ac_c='\c' ac_t=
fi



##  require autoconf version 2.0


##  set the location of config.guess, config.sub, and install.sh
ac_aux_dir=
for ac_dir in scripts $srcdir/scripts; do
  if test -f $ac_dir/install-sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install-sh -c"
    break
  elif test -f $ac_dir/install.sh; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install.sh -c"
    break
  fi
done
if test -z "$ac_aux_dir"; then
  { echo "configure: error: can not find install-sh or install.sh in scripts $srcdir/scripts" 1>&2; exit 1; }
fi
ac_config_guess=$ac_aux_dir/config.guess
ac_config_sub=$ac_aux_dir/config.sub
ac_configure=$ac_aux_dir/configure # This should be Cygnus configure.


##  set the autoconf list delimiter
IFS=' '

##  set the output header to "sci_config.h"


##  initialize the recognized argument lists
SCI_ARG_WITH_LIST="--no-create --no-recursion"
SCI_ARG_ENABLE_LIST=""

## Pass on the echo flags to the other scripts.
ECHO_N=$ac_n
ECHO_C=$ac_c




##  -- test if echo needs "-e" to behave correctly (ie: to use \n)
result=`echo -e abc`
if test "$result" = "abc"; then
  use_minus_e="-e"
fi

##  ---------------------------------------------------------------------
##  --------------------  new macro definitions  ------------------------
##  ---------------------------------------------------------------------

##  none of the new macros can be nested with or within other macros

##  these are platform sensitive - be very careful, when adding or
##  editing, to make sure it works on all required platforms

##  SCI_MSG_ERROR(message)
##
##     Wrapper for AC_MSG_ERROR but tells user to try configuring with
##     --enable-verbosity to get more help in figuring out what is
##     wrong.



##
##  SCI_CHECK_LIB(paths,
##                lib,
##                function,
##                other-libraries,
##                cxx,
##                optional)
##
##  - Check whether the function exists within the lib found in path(s).
##      (If "path" is blank (""), then see if the compiler automatically
##      finds it.)
##  - Set function to "main" if you want to see if the lib just exists.
##  - Use other-libraries to resolve undefined symbols.
##
##  - Sets the following shell variables (Note: $lib will be in all caps.):
##    (path is path to the library.  If not found, these are set to '')
##
##      Variable            Value
##      --------            -----
##      LIB$lib        =>   path
##      $lib_LIBRARY   =>   -Lpath
##      HAVE_LIB$lib   =>   yes
##
##  - cxx == "no" => C lib, don't need "extern C" stuff.
##        == "yes" or anything else => Lib being tested for is a C++ lib.
##        This is done because we need to be able to use this check on
##        C only libraries.  This is done before we call
##        AC_LANG_CPLUSPLUS (which (I think) switches everything into
##        C++ only mode.)
##  - optional: whether this library is optional.  If the library is
##        not found and is marked as not-optional, configure will
##        exit and print diagnostic info.  
##        PARAMETER MUST BE SET TO EITHER: "not-optional", or "optional".
##


## END SCI_CHECK_LIB

##
##  SCI_CHECK_HEADERS(paths,
##                    header-list,
##                    other-paths,
##                    cxx,
##                    optional)
##
##  If "paths" is blank, see if compiler can find it in a generic
##  path.  Otherwise, check whether the listed headers exist in the
##  path(s).  Use 'other-paths' if the headers nee to #include other
##  headers in different paths
##
##  cxx == "yes" => c++ header
##      == "no" or anything else => C header, 
##
##  SCI_CHECK_HEADERS will set (in allcaps):
##                       Example       If found        If not found
#                          Name     (& not generic)  (or in generic path)
##                      ---------   ---------------  --------------------
##  INC$<first-header>  INCMATH_H       -I$path               ''
##  HAVE_<HEADER_H>     HAVE_MATH_H      'yes'                ''
##


## END SCI CHECK HEADERS

##
##  SCI_CHECK_VERSION(prog,verflag,need-version,if-correct,if-not-correct,comp)
##
##  check whether the prog's version is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##



##
##  SCI_CHECK_VAR_VERSION(name,var,need-version,if-correct,if-not-correct,comp)
##
##  check whether the var (which represents a version number) version
##  is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##



##
##  SCI_CHECK_OS_VERSION(need-version,if-correct,if-not-correct,comp)
##
##  check whether the OS's version (uname -r) is >= need-version.
##  currently only supports version numbers of the form NUM(.NUM)*, no
##  letters allowed!  comp is the optional comparison used to _reject_
##  the program's version - the default is "-gt" (i.e. is need > have)
##



##
##  SCI_ARG_WITH(arg-string, usage-string, if-used, if-not-used)
##
##    if an arg is provide to the "with", the arg must be a directory
##    or a file.  If not, a configure error is raised.  This will avoid
##    the problem of mis-typing the name of the "--with" dir/file.
##
##    does the same thing as AC_ARG_WITH (infact, it uses it), but
##    also appends arg-string to the master list of arg-strings
##



##
##  SCI_ARG_ENABLE(arg-string, usage-string, if-used, if-not-used)
##
##  does the same thing as AC_ARG_ENABLE (infact, it uses it), but
##  also appends arg-string to the master list of arg-strings
##



##  --------------------------------------------------------------------
##  Save off the arguments to configure, being careful to save 
##  Package strings for later parsing.
##  --------------------------------------------------------------------

IFS='^'
args=`echo "$*" | sed 's% %_%g'`
myargs=`echo $args | sed 's%\^% %g'`
IFS=' '

DIRNAME_IS=`type dirname | sed 's%^.* %%'`
BASENAME_IS=`type dirname | sed 's%^.* %%'`

## We use both of these in a number of spots, so I think this is fair:
## (Eventually we could write our own if necessary...
if test -z "$DIRNAME_IS" -o -z "$BASENAME_IS"; then
  { echo "configure: error: dirname or basename not found.  Configure script won't work!" 1>&2; exit 1; }
fi

if test "$CC" = ""; then
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:807: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_CC="gcc"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
CC="$ac_cv_prog_CC"
if test -n "$CC"; then
  echo "$ac_t""$CC" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:837: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_prog_rejected=no
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      if test "$ac_dir/$ac_word" = "/usr/ucb/cc"; then
        ac_prog_rejected=yes
	continue
      fi
      ac_cv_prog_CC="cc"
      break
    fi
  done
  IFS="$ac_save_ifs"
if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# -gt 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    set dummy "$ac_dir/$ac_word" "$@"
    shift
    ac_cv_prog_CC="$@"
  fi
fi
fi
fi
CC="$ac_cv_prog_CC"
if test -n "$CC"; then
  echo "$ac_t""$CC" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

  if test -z "$CC"; then
    case "`uname -s`" in
    *win32* | *WIN32*)
      # Extract the first word of "cl", so it can be a program name with args.
set dummy cl; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:888: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_CC'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_CC="cl"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
CC="$ac_cv_prog_CC"
if test -n "$CC"; then
  echo "$ac_t""$CC" 1>&6
else
  echo "$ac_t""no" 1>&6
fi
 ;;
    esac
  fi
  test -z "$CC" && { echo "configure: error: no acceptable cc found in \$PATH" 1>&2; exit 1; }
fi

echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works""... $ac_c" 1>&6
echo "configure:920: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) works" >&5

ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross

cat > conftest.$ac_ext << EOF

#line 931 "configure"
#include "confdefs.h"

main(){return(0);}
EOF
if { (eval echo configure:936: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  ac_cv_prog_cc_works=yes
  # If we can't run a trivial program, we are probably using a cross compiler.
  if (./conftest; exit) 2>/dev/null; then
    ac_cv_prog_cc_cross=no
  else
    ac_cv_prog_cc_cross=yes
  fi
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  ac_cv_prog_cc_works=no
fi
rm -fr conftest*
ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross

echo "$ac_t""$ac_cv_prog_cc_works" 1>&6
if test $ac_cv_prog_cc_works = no; then
  { echo "configure: error: installation or configuration problem: C compiler cannot create executables." 1>&2; exit 1; }
fi
echo $ac_n "checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
echo "configure:962: checking whether the C compiler ($CC $CFLAGS $LDFLAGS) is a cross-compiler" >&5
echo "$ac_t""$ac_cv_prog_cc_cross" 1>&6
cross_compiling=$ac_cv_prog_cc_cross

echo $ac_n "checking whether we are using GNU C""... $ac_c" 1>&6
echo "configure:967: checking whether we are using GNU C" >&5
if eval "test \"`echo '$''{'ac_cv_prog_gcc'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.c <<EOF
#ifdef __GNUC__
  yes;
#endif
EOF
if { ac_try='${CC-cc} -E conftest.c'; { (eval echo configure:976: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
  ac_cv_prog_gcc=yes
else
  ac_cv_prog_gcc=no
fi
fi

echo "$ac_t""$ac_cv_prog_gcc" 1>&6

if test $ac_cv_prog_gcc = yes; then
  GCC=yes
else
  GCC=
fi

ac_test_CFLAGS="${CFLAGS+set}"
ac_save_CFLAGS="$CFLAGS"
CFLAGS=
echo $ac_n "checking whether ${CC-cc} accepts -g""... $ac_c" 1>&6
echo "configure:995: checking whether ${CC-cc} accepts -g" >&5
if eval "test \"`echo '$''{'ac_cv_prog_cc_g'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  echo 'void f(){}' > conftest.c
if test -z "`${CC-cc} -g -c conftest.c 2>&1`"; then
  ac_cv_prog_cc_g=yes
else
  ac_cv_prog_cc_g=no
fi
rm -f conftest*

fi

echo "$ac_t""$ac_cv_prog_cc_g" 1>&6
if test "$ac_test_CFLAGS" = set; then
  CFLAGS="$ac_save_CFLAGS"
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi

  echo "configure: warning: C compiler not specified with 'CC' environment variable.\n\t \
	    Using default... $CC" 1>&2
  
fi

if test "$CXX" = ""; then
  for ac_prog in $CCC c++ g++ gcc CC cxx cc++ cl
do
# Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:1037: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_CXX'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_CXX="$ac_prog"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
CXX="$ac_cv_prog_CXX"
if test -n "$CXX"; then
  echo "$ac_t""$CXX" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

test -n "$CXX" && break
done
test -n "$CXX" || CXX="gcc"


echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works""... $ac_c" 1>&6
echo "configure:1069: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) works" >&5

ac_ext=C
# CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='${CXX-g++} -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cxx_cross

cat > conftest.$ac_ext << EOF

#line 1080 "configure"
#include "confdefs.h"

int main(){return(0);}
EOF
if { (eval echo configure:1085: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  ac_cv_prog_cxx_works=yes
  # If we can't run a trivial program, we are probably using a cross compiler.
  if (./conftest; exit) 2>/dev/null; then
    ac_cv_prog_cxx_cross=no
  else
    ac_cv_prog_cxx_cross=yes
  fi
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  ac_cv_prog_cxx_works=no
fi
rm -fr conftest*
ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross

echo "$ac_t""$ac_cv_prog_cxx_works" 1>&6
if test $ac_cv_prog_cxx_works = no; then
  { echo "configure: error: installation or configuration problem: C++ compiler cannot create executables." 1>&2; exit 1; }
fi
echo $ac_n "checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
echo "configure:1111: checking whether the C++ compiler ($CXX $CXXFLAGS $LDFLAGS) is a cross-compiler" >&5
echo "$ac_t""$ac_cv_prog_cxx_cross" 1>&6
cross_compiling=$ac_cv_prog_cxx_cross

echo $ac_n "checking whether we are using GNU C++""... $ac_c" 1>&6
echo "configure:1116: checking whether we are using GNU C++" >&5
if eval "test \"`echo '$''{'ac_cv_prog_gxx'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.C <<EOF
#ifdef __GNUC__
  yes;
#endif
EOF
if { ac_try='${CXX-g++} -E conftest.C'; { (eval echo configure:1125: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
  ac_cv_prog_gxx=yes
else
  ac_cv_prog_gxx=no
fi
fi

echo "$ac_t""$ac_cv_prog_gxx" 1>&6

if test $ac_cv_prog_gxx = yes; then
  GXX=yes
else
  GXX=
fi

ac_test_CXXFLAGS="${CXXFLAGS+set}"
ac_save_CXXFLAGS="$CXXFLAGS"
CXXFLAGS=
echo $ac_n "checking whether ${CXX-g++} accepts -g""... $ac_c" 1>&6
echo "configure:1144: checking whether ${CXX-g++} accepts -g" >&5
if eval "test \"`echo '$''{'ac_cv_prog_cxx_g'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  echo 'void f(){}' > conftest.cc
if test -z "`${CXX-g++} -g -c conftest.cc 2>&1`"; then
  ac_cv_prog_cxx_g=yes
else
  ac_cv_prog_cxx_g=no
fi
rm -f conftest*

fi

echo "$ac_t""$ac_cv_prog_cxx_g" 1>&6
if test "$ac_test_CXXFLAGS" = set; then
  CXXFLAGS="$ac_save_CXXFLAGS"
elif test $ac_cv_prog_cxx_g = yes; then
  if test "$GXX" = yes; then
    CXXFLAGS="-g -O2"
  else
    CXXFLAGS="-g"
  fi
else
  if test "$GXX" = yes; then
    CXXFLAGS="-O2"
  else
    CXXFLAGS=
  fi
fi

  echo "configure: warning: C++ compiler not specified with 'CXX' environment variable.\n\t \
	    Using default... $CXX" 1>&2

fi
if test "$F77" = ""; then
  if test -z "$F77"; then
  for ac_prog in g77 f77 f2c
do
# Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:1186: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_F77'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$F77"; then
  ac_cv_prog_F77="$F77" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_F77="$ac_prog"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
F77="$ac_cv_prog_F77"
if test -n "$F77"; then
  echo "$ac_t""$F77" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

test -n "$F77" && break
done

    test -z "$F77" && { echo "configure: error: no acceptable Fortran 77 compiler found in \$PATH" 1>&2; exit 1; }
fi

echo $ac_n "checking whether the Fortran 77 compiler ($F77 $FFLAGS $LDFLAGS) works""... $ac_c" 1>&6
echo "configure:1219: checking whether the Fortran 77 compiler ($F77 $FFLAGS $LDFLAGS) works" >&5

ac_ext=f
ac_compile='${F77-f77} -c $FFLAGS conftest.$ac_ext 1>&5'
ac_link='${F77-f77} -o conftest${ac_exeext} $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_f77_cross

cat > conftest.$ac_ext << EOF

      program conftest
      end

EOF
if { (eval echo configure:1232: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  ac_cv_prog_f77_works=yes
  # If we can't run a trivial program, we are probably using a cross compiler.
  if (./conftest; exit) 2>/dev/null; then
    ac_cv_prog_f77_cross=no
  else
    ac_cv_prog_f77_cross=yes
  fi
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  ac_cv_prog_f77_works=no
fi
rm -fr conftest*
ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross

echo "$ac_t""$ac_cv_prog_f77_works" 1>&6
if test $ac_cv_prog_f77_works = no; then
  { echo "configure: error: installation or configuration problem: Fortran 77 compiler cannot create executables." 1>&2; exit 1; }
fi
echo $ac_n "checking whether the Fortran 77 compiler ($F77 $FFLAGS $LDFLAGS) is a cross-compiler""... $ac_c" 1>&6
echo "configure:1258: checking whether the Fortran 77 compiler ($F77 $FFLAGS $LDFLAGS) is a cross-compiler" >&5
echo "$ac_t""$ac_cv_prog_f77_cross" 1>&6
cross_compiling=$ac_cv_prog_f77_cross

echo $ac_n "checking whether we are using GNU Fortran 77""... $ac_c" 1>&6
echo "configure:1263: checking whether we are using GNU Fortran 77" >&5
if eval "test \"`echo '$''{'ac_cv_prog_g77'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.fpp <<EOF
#ifdef __GNUC__
  yes
#endif
EOF
if { ac_try='$F77 -E conftest.fpp'; { (eval echo configure:1272: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }; } | egrep yes >/dev/null 2>&1; then
  ac_cv_prog_g77=yes
else
  ac_cv_prog_g77=no
fi
fi

echo "$ac_t""$ac_cv_prog_g77" 1>&6

if test $ac_cv_prog_g77 = yes; then
  G77=yes
  ac_test_FFLAGS="${FFLAGS+set}"
  ac_save_FFLAGS="$FFLAGS"
  FFLAGS=
  echo $ac_n "checking whether $F77 accepts -g""... $ac_c" 1>&6
echo "configure:1287: checking whether $F77 accepts -g" >&5
if eval "test \"`echo '$''{'ac_cv_prog_f77_g'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.f << EOF
       program conftest
       end
EOF
if test -z "`$F77 -g -c conftest.f 2>&1`"; then
  ac_cv_prog_f77_g=yes
else
  ac_cv_prog_f77_g=no
fi
rm -f conftest*

fi

echo "$ac_t""$ac_cv_prog_f77_g" 1>&6
  if test "$ac_test_FFLAGS" = set; then
    FFLAGS="$ac_save_FFLAGS"
  elif test $ac_cv_prog_f77_g = yes; then
    FFLAGS="-g -O2"
  else
    FFLAGS="-O2"
  fi
else
  G77=
  test "${FFLAGS+set}" = set || FFLAGS="-g"
fi

  echo "configure: warning: Fortran compiler not specified with 'F77' environment \
	    variable. Using default... $F77" 1>&2
fi

CC_REALLY_IS=`type $CC | sed 's%^.* %%'`
# Going to look for "as", "ld", etc in this dir:
COMPILER_DIR=`dirname $CC_REALLY_IS`

##  --------------------------------------------------------------------
##  ------------------  declare all arguments here  --------------------
##  --------------------------------------------------------------------

##
##  Use the SCI_ARG_WITH and SCI_ARG_ENABLE macros to declare arguments
##


    ##  SCI_ARG_WITH

    # Check whether --with-thirdparty or --without-thirdparty was given.
if test "${with_thirdparty+set}" = set; then
  withval="$with_thirdparty"
  thirdparty="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-thirdparty --without-thirdparty"
else
  thirdparty=""
fi
 

    if test -n "$thirdparty" -a ! -e "$thirdparty"; then
      { echo "configure: error: The file or directory parameter ($thirdparty) specified for --with-thirdparty does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-tcl or --without-tcl was given.
if test "${with_tcl+set}" = set; then
  withval="$with_tcl"
  tcl="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-tcl --without-tcl"
else
  tcl=""
fi
 

    if test -n "$tcl" -a ! -e "$tcl"; then
      { echo "configure: error: The file or directory parameter ($tcl) specified for --with-tcl does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-xercesc or --without-xercesc was given.
if test "${with_xercesc+set}" = set; then
  withval="$with_xercesc"
  xercesc="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-xercesc --without-xercesc"
else
  xercesc=""
fi
 

    if test -n "$xercesc" -a ! -e "$xercesc"; then
      { echo "configure: error: The file or directory parameter ($xercesc) specified for --with-xercesc does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-teem or --without-teem was given.
if test "${with_teem+set}" = set; then
  withval="$with_teem"
  teem="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-teem --without-teem"
else
  teem=""
fi
 

    if test -n "$teem" -a ! -e "$teem"; then
      { echo "configure: error: The file or directory parameter ($teem) specified for --with-teem does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-mpeg or --without-mpeg was given.
if test "${with_mpeg+set}" = set; then
  withval="$with_mpeg"
  mpeg="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-mpeg --without-mpeg"
else
  mpeg=""
fi
 

    if test -n "$mpeg" -a ! -e "$mpeg"; then
      { echo "configure: error: The file or directory parameter ($mpeg) specified for --with-mpeg does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-blas or --without-blas was given.
if test "${with_blas+set}" = set; then
  withval="$with_blas"
  blas="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-blas --without-blas"
else
  blas=""
fi
 

    if test -n "$blas" -a ! -e "$blas"; then
      { echo "configure: error: The file or directory parameter ($blas) specified for --with-blas does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-lapack or --without-lapack was given.
if test "${with_lapack+set}" = set; then
  withval="$with_lapack"
  lapack="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-lapack --without-lapack"
else
  lapack=""
fi
 

    if test -n "$lapack" -a ! -e "$lapack"; then
      { echo "configure: error: The file or directory parameter ($lapack) specified for --with-lapack does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-mpi or --without-mpi was given.
if test "${with_mpi+set}" = set; then
  withval="$with_mpi"
  mpi="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-mpi --without-mpi"
else
  mpi=""
fi
 

    if test -n "$mpi" -a ! -e "$mpi"; then
      { echo "configure: error: The file or directory parameter ($mpi) specified for --with-mpi does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-mpiuni or --without-mpiuni was given.
if test "${with_mpiuni+set}" = set; then
  withval="$with_mpiuni"
  mpiuni="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-mpiuni --without-mpiuni"
else
  mpiuni=""
fi
 

    if test -n "$mpiuni" -a ! -e "$mpiuni"; then
      { echo "configure: error: The file or directory parameter ($mpiuni) specified for --with-mpiuni does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-hypre or --without-hypre was given.
if test "${with_hypre+set}" = set; then
  withval="$with_hypre"
  hypre="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-hypre --without-hypre"
else
  hypre=""
fi
 

    if test -n "$hypre" -a ! -e "$hypre"; then
      { echo "configure: error: The file or directory parameter ($hypre) specified for --with-hypre does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-petsc or --without-petsc was given.
if test "${with_petsc+set}" = set; then
  withval="$with_petsc"
  petsc="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-petsc --without-petsc"
else
  petsc=""
fi
 

    if test -n "$petsc" -a ! -e "$petsc"; then
      { echo "configure: error: The file or directory parameter ($petsc) specified for --with-petsc does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-unipetsc or --without-unipetsc was given.
if test "${with_unipetsc+set}" = set; then
  withval="$with_unipetsc"
  unipetsc="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-unipetsc --without-unipetsc"
else
  unipetsc=""
fi
 

    if test -n "$unipetsc" -a ! -e "$unipetsc"; then
      { echo "configure: error: The file or directory parameter ($unipetsc) specified for --with-unipetsc does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-tau or --without-tau was given.
if test "${with_tau+set}" = set; then
  withval="$with_tau"
  tau="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-tau --without-tau"
else
  tau=""
fi
 

    if test -n "$tau" -a ! -e "$tau"; then
      { echo "configure: error: The file or directory parameter ($tau) specified for --with-tau does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-globus or --without-globus was given.
if test "${with_globus+set}" = set; then
  withval="$with_globus"
  with_globus="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-globus --without-globus"
else
  with_globus=${with_globus='no'}
fi
 

    if test -n "$globus" -a ! -e "$globus"; then
      { echo "configure: error: The file or directory parameter ($globus) specified for --with-globus does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-qt or --without-qt was given.
if test "${with_qt+set}" = set; then
  withval="$with_qt"
  with_qt="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-qt --without-qt"
else
  with_qt=${with_qt='no'}
fi
 

    if test -n "$qt" -a ! -e "$qt"; then
      { echo "configure: error: The file or directory parameter ($qt) specified for --with-qt does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-opengl or --without-opengl was given.
if test "${with_opengl+set}" = set; then
  withval="$with_opengl"
  with_opengl="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-opengl --without-opengl"
else
  with_opengl=${with_opengl='no'}
fi
 

    if test -n "$opengl" -a ! -e "$opengl"; then
      { echo "configure: error: The file or directory parameter ($opengl) specified for --with-opengl does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-zlib or --without-zlib was given.
if test "${with_zlib+set}" = set; then
  withval="$with_zlib"
  with_zlib="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-zlib --without-zlib"
else
  with_zlib=${with_zlib='no'}
fi
 

    if test -n "$zlib" -a ! -e "$zlib"; then
      { echo "configure: error: The file or directory parameter ($zlib) specified for --with-zlib does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-vdt or --without-vdt was given.
if test "${with_vdt+set}" = set; then
  withval="$with_vdt"
  with_vdt="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-vdt --without-vdt"
else
  with_vdt=${with_vdt='no'}
fi
 

    if test -n "$vdt" -a ! -e "$vdt"; then
      { echo "configure: error: The file or directory parameter ($vdt) specified for --with-vdt does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-imagemagick or --without-imagemagick was given.
if test "${with_imagemagick+set}" = set; then
  withval="$with_imagemagick"
  with_imagemagick="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-imagemagick --without-imagemagick"
else
  with_imagemagick=${with_imagemagick='no'}
fi
 

    if test -n "$imagemagick" -a ! -e "$imagemagick"; then
      { echo "configure: error: The file or directory parameter ($imagemagick) specified for --with-imagemagick does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-mdsplus or --without-mdsplus was given.
if test "${with_mdsplus+set}" = set; then
  withval="$with_mdsplus"
  mdsplus="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-mdsplus --without-mdsplus"
else
  mdsplus=""
fi
 

    if test -n "$mdsplus" -a ! -e "$mdsplus"; then
      { echo "configure: error: The file or directory parameter ($mdsplus) specified for --with-mdsplus does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-glut or --without-glut was given.
if test "${with_glut+set}" = set; then
  withval="$with_glut"
  with_glut="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-glut --without-glut"
else
  with_glut=${with_glut='no'}
fi
 

    if test -n "$glut" -a ! -e "$glut"; then
      { echo "configure: error: The file or directory parameter ($glut) specified for --with-glut does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  

    ##  SCI_ARG_WITH

    # Check whether --with-glui or --without-glui was given.
if test "${with_glui+set}" = set; then
  withval="$with_glui"
  with_glui="$withval"
      SCI_ARG_WITH_LIST="$SCI_ARG_WITH_LIST --with-glui --without-glui"
else
  with_glui=${with_gluip='no'}
fi
 

    if test -n "$glui" -a ! -e "$glui"; then
      { echo "configure: error: The file or directory parameter ($glui) specified for --with-glui does not exist!  Please verify that the path and file are correct." 1>&2; exit 1; }
    fi

  



    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-verbosity or --disable-verbosity was given.
if test "${enable_verbosity+set}" = set; then
  enableval="$enable_verbosity"
  debugging="yes"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-verbosity --disable-verbosity"
else
  debugging="no"
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-threads or --disable-threads was given.
if test "${enable_threads+set}" = set; then
  enableval="$enable_threads"
  threads="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-threads --disable-threads"
else
  threads=${threads='unknown'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-debug or --disable-debug was given.
if test "${enable_debug+set}" = set; then
  enableval="$enable_debug"
  debug="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-debug --disable-debug"
else
  debug="no"
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-optimize or --disable-optimize was given.
if test "${enable_optimize+set}" = set; then
  enableval="$enable_optimize"
  optimize="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-optimize --disable-optimize"
else
  optimize=${optimize='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-64bit or --disable-64bit was given.
if test "${enable_64bit+set}" = set; then
  enableval="$enable_64bit"
  is_64bit="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-64bit --disable-64bit"
else
  is_64bit=$i{is_64bit='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-32bit or --disable-32bit was given.
if test "${enable_32bit+set}" = set; then
  enableval="$enable_32bit"
  is_32bit="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-32bit --disable-32bit"
else
  is_32bit=$i{is_32bit='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-output-avg-walltime or --disable-output-avg-walltime was given.
if test "${enable_output_avg_walltime+set}" = set; then
  enableval="$enable_output_avg_walltime"
  output_avg_walltime="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-output-avg-walltime --disable-output-avg-walltime"
else
  output_avg_walltime=${output_avg_walltime='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-perfex or --disable-perfex was given.
if test "${enable_perfex+set}" = set; then
  enableval="$enable_perfex"
  perfex="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-perfex --disable-perfex"
else
  perfex=${perfex='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-package or --disable-package was given.
if test "${enable_package+set}" = set; then
  enableval="$enable_package"
  package="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-package --disable-package"
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-exename or --disable-exename was given.
if test "${enable_exename+set}" = set; then
  enableval="$enable_exename"
  exename="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-exename --disable-exename"
else
  exename=${exename='default'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-largesos or --disable-largesos was given.
if test "${enable_largesos+set}" = set; then
  enableval="$enable_largesos"
  largesos="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-largesos --disable-largesos"
else
  largesos=${largesos='no'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-sci-malloc or --disable-sci-malloc was given.
if test "${enable_sci_malloc+set}" = set; then
  enableval="$enable_sci_malloc"
  enable_sci_malloc="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-sci-malloc --disable-sci-malloc"
else
  enable_sci_malloc=${enable_sci_malloc='yes'}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-assertion-level or --disable-assertion-level was given.
if test "${enable_assertion_level+set}" = set; then
  enableval="$enable_assertion_level"
  enable_assertion_level="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-assertion-level --disable-assertion-level"
else
  enable_assertion_level=${enable_assertion_level=3}
fi
 

  

    ##  SCI_ARG_ENABLE
    
    # Check whether --enable-scirun2 or --disable-scirun2 was given.
if test "${enable_scirun2+set}" = set; then
  enableval="$enable_scirun2"
  enable_scirun2="$enableval"
      SCI_ARG_ENABLE_LIST="$SCI_ARG_ENABLE_LIST --enable-scirun2 --disable-scirun2"
else
  enable_scirun2=${enable_scirun2='no'}
fi
 

  

##  --------------------------------------------------------------------
##  -----------  check for unknown or mis-spelled arguments  -----------
##  --------------------------------------------------------------------

##
##  If you use SCI_ARG_WITH or SCI_ARG_ENABLE to declare arguments, they
##  will be added automatically to this check.  There should be no need
##  to modify this section.
##

FOUND_ARG=no
for i in $myargs; do
  i_mod=`echo $i | sed 's% %%g' | sed 's%=.*%%g'`
  for j in $SCI_ARG_WITH_LIST $SCI_ARG_ENABLE_LIST; do
    if test $i_mod = $j; then 
      FOUND_ARG=yes
      break
    fi
  done
  if test "$FOUND_ARG" = "yes"; then
    FOUND_ARG=no
    continue
  else
    echo
    
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: unknown (or mis-spelled) argument: $i." 1>&2; exit 1; }
  
  fi
done

##  --------------------------------------------------------------------
##  -----  determine host type, processor count and OS version  --------
##  --------------------------------------------------------------------

echo 

# Make sure we can run config.sub.
if ${CONFIG_SHELL-/bin/sh} $ac_config_sub sun4 >/dev/null 2>&1; then :
else { echo "configure: error: can not run $ac_config_sub" 1>&2; exit 1; }
fi

echo $ac_n "checking host system type""... $ac_c" 1>&6
echo "configure:1975: checking host system type" >&5

host_alias=$host
case "$host_alias" in
NONE)
  case $nonopt in
  NONE)
    if host_alias=`${CONFIG_SHELL-/bin/sh} $ac_config_guess`; then :
    else { echo "configure: error: can not guess host type; you must specify one" 1>&2; exit 1; }
    fi ;;
  *) host_alias=$nonopt ;;
  esac ;;
esac

host=`${CONFIG_SHELL-/bin/sh} $ac_config_sub $host_alias`
host_cpu=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\1/'`
host_vendor=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\2/'`
host_os=`echo $host | sed 's/^\([^-]*\)-\([^-]*\)-\(.*\)$/\3/'`
echo "$ac_t""$host" 1>&6


unset NUM_CPUS
case $host in
  *-irix*)
    
    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="6.5"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for OS version 6.5""... $ac_c" 1>&6
echo "configure:2010: checking for OS version 6.5" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "configure: error: wrong Irix version. exiting.;exit"; then
      _SCI_NOTCORRECT_='configure: error: wrong Irix version. exiting.;exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"    
    ;;
  *linux*)
    
    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.2.17"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for OS version 2.2.17""... $ac_c" 1>&6
echo "configure:2071: checking for OS version 2.2.17" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "configure: error: wrong Linux version. exiting.;exit"; then
      _SCI_NOTCORRECT_='configure: error: wrong Linux version. exiting.;exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
    ;;
  *-dec*)
    NUM_CPUS=1
    ;;
  *-aix*)
    NUM_CPUS=4
    ;;
  *)
    echo
    echo "configure: warning: !!!!!! This system is untested - You are on your own !!!!!!" 1>&2
    echo
    NUM_CPUS="1"
    ;;
esac

echo $ac_n "checking physical processor count""... $ac_c" 1>&6
echo "configure:2135: checking physical processor count" >&5
if test -z "$NUM_CPUS"; then
  NUM_CPUS="1"
fi
echo "$ac_t""$NUM_CPUS" 1>&6

## MAKE_PARALLELISM is used to tell the compiler how many cpus to use
## when linking.  1 is usually a good number to use per link,
## espcially for smaller number of cpu machines.  I think 4 is
## sufficient for even nirvana.
if test $NUM_CPUS -le 2 ; then
  MAKE_PARALLELISM=1
else
  if test $NUM_CPUS -le 8 ; then
    MAKE_PARALLELISM=2
  else
    MAKE_PARALLELISM=8
  fi
fi

echo $ac_n "checking host system word length""... $ac_c" 1>&6
echo "configure:2156: checking host system word length" >&5
if test "$is_64bit" = "yes"; then
  echo "$ac_t""64 bits" 1>&6
  if test "$is_32bit" = "yes"; then
    
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Both 64 and 32 bit compiles specified." 1>&2; exit 1; }
  
  fi
else
  echo "$ac_t""32 bits" 1>&6
fi

##  --------------------------------------------------------------------
##  ----------------------  set variable defaults  ---------------------
##  --------------------------------------------------------------------

##
##  DO NOT "hardcode" ANY libraries (i.e. no -l or -L or -I allowed).
##

TIME_IMPL=Time_unix.cc
TEMPLATE_TAG=
TEMPLATE_BOX="<>"
LDRUN_PREFIX="-Wl,-rpath -Wl,"
SO_OR_ARCHIVE_EXTENSION=so

ASSERTION_LEVEL=$enable_assertion_level

extra_cflags="";

if test "$output_avg_walltime" != "no"; then
  extra_cflags="-DOUTPUT_AVG_ELAPSED_WALLTIME ${extra_cflags}"
fi

PACKAGE_DIRS=""

path_to_src=`echo $0 | sed 's/configure//'`

if test "$path_to_src" = "./"; then
   echo "configure: warning: DO NOT CONFIGURE IN THE SRC DIRECTORY:" 1>&2
   echo "configure: warning: ___ Try creating a dir such as: ../archBITSdebug" 1>&2
   echo "configure: warning: ___ eg: ../sgi32opt or ../linux32debug" 1>&2
   echo "configure: warning: ___ cd to that dir and then type: ../src/configure params" 1>&2
   rm -f config.log config.cache confdefs.h conftest.out
   { echo "configure: error: You have been warned!" 1>&2; exit 1; }
fi

for i in $package; do
   if test ! -d "$path_to_src/Packages/$i"; then
      { echo "configure: error: Package '$i' does not exist (in $path_to_src"Packages")!" 1>&2; exit 1; }
   fi
   PACKAGE_DIRS=$PACKAGE_DIRS" Packages/$i"
done

LOAD_PACKAGE="SCIRun"
for i in $package; do
 LOAD_PACKAGE=$LOAD_PACKAGE,"$i"
done

if test "$exename" = "default"; then
  EXENAME=scirun
else
  EXENAME=$exename
fi

LARGESOS=$largesos

u=`echo $package | sed 's/.*Uintah.*/Uintah/'`
if test "$u" = "Uintah" ; then
   uintah=yes
else
   uintah=no
fi

need_rtrt=`echo $package | sed 's/.*rtrt.*/rtrt/'`
if test "$need_rtrt" = "rtrt" ; then
   need_rtrt="yes"
else
   need_rtrt="no"
fi

u=`echo $package | sed 's/.*VDT.*/VDT/'`
if test "$u" = "VDT" ; then
   wantvdt=yes
else
   wantvdt=no
fi

if test "$enable_sci_malloc" = "yes"; then
  MALLOC_DEFINE=""
else
  MALLOC_DEFINE="#define DISABLE_SCI_MALLOC"
fi

#########################################################################
## Make sure number of bit build for Thirdparty and SCIRun compile match
##

if test "$is_64bit" = "yes"; then
  case "$thirdparty" in 
  *32bit*)
	{ echo "configure: error: You specified 64 bit compile but have 32 bit Thirdparty?" 1>&2; exit 1; }
  esac
else
  case "$thirdparty" in 
  *64bit*)
	{ echo "configure: error: You specified 32 bit compile but have 64 bit Thirdparty?" 1>&2; exit 1; }
  esac
fi

#########################################################################
##  SCI_LAB_TP_DEFAULT is used to add "standard" library search paths
##  for those of us who are too lazy to type out all the --with paths

case $host in
  *-irix*) 
    no_optimize_flag=-O0
    if test "$is_64bit" = "yes"; then
      SCI_LAB_TP_DEFAULT=/res/sci/data1/SCIRun_Thirdparty_64
    else
      SCI_LAB_TP_DEFAULT=/res/sci/data1/SCIRun_Thirdparty_32
    fi
    TIME_IMPL=Time_irix.cc
    ;;
  *linux*)
    no_optimize_flag=-O0
    SCI_LAB_TP_DEFAULT="/res/sci/data1/SCIRun_Thirdparty_32_linux \
                        /local/SCIRun_Thirdparty_32 \
                        /local"
    ;;
  *-aix*)

    echo "configure: warning: AIX is not completely supported!" 1>&2

    # On AIX, don't automatically generate .so's.  Make .a's and then
    # later we will make .so's from them.
    SO_OR_ARCHIVE_EXTENSION=a
    case $CXX in
      *xlC*)
         # xlC does not know the -O0 flag.
         no_optimize_flag=
	 ;;
      *KCC*)
         no_optimize_flag=-O0
         ;;
      *g++*)
         no_optimize_flag=-O0
	 ;;
      *)
         echo "configure: warning: Do not know this compiler." 1>&2
         echo "configure: warning: Defaulting to -O0 for the no optimize flag." 1>&2
         ;;
    esac
    SCI_LAB_TP_DEFAULT=""
    ;;
  *)
    ;;
esac












#########################################################################
## Make sure number of bit build for Thirdparty and SCIRun compile match
##

if test "$is_64bit" = "yes"; then
  case "$thirdparty" in 
  *32bit*)
	
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: You specified 64 bit compile but have 32 bit Thirdparty?" 1>&2; exit 1; }
  
  esac
else
  case "$thirdparty" in 
  *64bit*)
	
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: You specified 32 bit compile but have 64 bit Thirdparty?" 1>&2; exit 1; }
  
  esac
fi

#########################################################################

##  ----------------------------------------------------------------------
##  ----------------  set host specific build tools  ---------------------
##  ----------------------------------------------------------------------

##  DO NOT "hardcode" ANY libraries here.

##  Require GCC for all platforms except Irix which requires MIPSpro
##  and AIX which uses xlC

echo
echo "checking for required build tools..." 1>&6
echo "configure:2380: checking for required build tools..." >&5
echo 

echo $ac_n "checking whether debug was enabled""... $ac_c" 1>&6
echo "configure:2384: checking whether debug was enabled" >&5
if test "$debug" = "no"; then
  echo "$ac_t""no" 1>&6
elif test "$debug" = "yes"; then
  extra_cflags="-g ${extra_cflags}"
  echo "$ac_t""yes (-g) " 1>&6
else
  extra_cflags="$debug ${extra_cflags}"
  echo "$ac_t""yes ($debug) " 1>&6
fi

echo $ac_n "checking whether optimize was enabled""... $ac_c" 1>&6
echo "configure:2396: checking whether optimize was enabled" >&5
if test "$optimize" = "no"; then
  if test "$debug" = "no"; then
    extra_cflags="-O2 ${extra_cflags}"
    echo "$ac_t""no (-O2) " 1>&6
  else
    extra_cflags="${no_optimize_flag} ${extra_cflags}"
    echo "$ac_t""no (${no_optimize_flag}) " 1>&6
  fi
elif test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}"
  echo "$ac_t""yes (-O2) " 1>&6
else
  extra_cflags="$optimize ${extra_cflags}"
  echo "$ac_t""yes ($optimize) " 1>&6
fi

if test "$perfex" != "no"; then
  extra_cflags="-DUSE_PERFEX_COUNTERS ${extra_cflags}"
fi

# Most fortran compilers need an "_" for C function names.
# Some have strange underscore needs.  This flag is used in the
# Packages/Uintah/tools/fspec.pl.in file to generate the correct
# cname of the fortran function.
FORTRAN_UNDERSCORE=end

if test ! -e "`type $CC | sed 's%^.* %%'`"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Could not find the specified C compiler ($CC)" 1>&2; exit 1; }
  
fi
if test ! -e "`type $CXX | sed 's%^.* %%'`"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Could not find the specified C++ compiler (CC)" 1>&2; exit 1; }
  
fi
if test ! -e "`type $F77 | sed 's%^.* %%'`"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Could not find the specified Fortran compiler ($F77)" 1>&2; exit 1; }
  
fi

case $host in 
  *-irix*)
    echo "configure: warning: Configure script only allows SGI compilers on IRIX." 1>&2
    echo "configure: warning: If this is a problem email scirun-develop@cs.utah.edu." 1>&2

    ac_objext=o
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $CC` version 7.3.1.1""... $ac_c" 1>&6
echo "configure:2476: checking for `basename $CC` version 7.3.1.1" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $CXX` version 7.3.1.1""... $ac_c" 1>&6
echo "configure:2533: checking for `basename $CXX` version 7.3.1.1" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $F77` version 7.3.1.1""... $ac_c" 1>&6
echo "configure:2590: checking for `basename $F77` version 7.3.1.1" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:2640: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_path_AS'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  case "$AS" in
  /*)
  ac_cv_path_AS="$AS" # Let the user override the test with a path.
  ;;
  ?:/*)			 
  ac_cv_path_AS="$AS" # Let the user override the test with a dos path.
  ;;
  *)
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$COMPILER_DIR"
  for ac_dir in $ac_dummy; do 
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_path_AS="$ac_dir/$ac_word"
      break
    fi
  done
  IFS="$ac_save_ifs"
  ;;
esac
fi
AS="$ac_cv_path_AS"
if test -n "$AS"; then
  echo "$ac_t""$AS" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

    if test -z "$AS"; then
      echo "configure: warning: Could not find the MIPSPro linker (as)" 1>&2
      { echo "configure: error: Looked in $COMPILER_DIR" 1>&2; exit 1; }
    fi
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="7.3.1.1"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $AS` version 7.3.1.1""... $ac_c" 1>&6
echo "configure:2686: checking for `basename $AS` version 7.3.1.1" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$AS -version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:2736: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_path_LD'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  case "$LD" in
  /*)
  ac_cv_path_LD="$LD" # Let the user override the test with a path.
  ;;
  ?:/*)			 
  ac_cv_path_LD="$LD" # Let the user override the test with a dos path.
  ;;
  *)
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$COMPILER_DIR"
  for ac_dir in $ac_dummy; do 
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_path_LD="$ac_dir/$ac_word"
      break
    fi
  done
  IFS="$ac_save_ifs"
  ;;
esac
fi
LD="$ac_cv_path_LD"
if test -n "$LD"; then
  echo "$ac_t""$LD" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

    if test -z "$LD"; then
      echo "configure: warning: Could not find the MIPSPro linker (ld)" 1>&2
      { echo "configure: error: Looked in $COMPILER_DIR" 1>&2; exit 1; }
    fi
    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure 
    WOFF=" -woff 3303,1047,1209,1110 -Wl,-woff,84 -woff 1342"
    CPPFLAGS=" $WOFF -LANG:std"
    if test "$is_64bit" = "yes"; then
      BASE_LIB_DIR=lib64
      BINARYFLAGS="-64 -mips4"
    else
      BASE_LIB_DIR=lib
      BINARYFLAGS="-n32 -mips4"
    fi
    FFLAGS="$BINARYFLAGS $extra_cflags"
    CFLAGS="-fullwarn -xansi -LANG:std $BINARYFLAGS $extra_cflags"
    CXXFLAGS="$CFLAGS"
    ASFLAGS="$BINARYFLAGS"
    SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(LIBDIR)so_locations $(TLINK) ${SOFLAGS}"
    LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved"
    echo $ac_n "checking if ${CC} talks too much""... $ac_c" 1>&6
echo "configure:2791: checking if ${CC} talks too much" >&5
    touch wow.c
    if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
      echo "$ac_t""yes" 1>&6
      echo "configure: warning: Using cc and CC wrappers in scripts/cc" 1>&2

      mkdir -p scripts
      sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
      sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
      chmod 755 scripts/cc scripts/CC

      CC="$(OBJTOP)/scripts/cc"
      CXX="$(OBJTOP)/scripts/CC"
    else
      echo "$ac_t""no" 1>&6
    fi
    rm -f wow.c wow.o
    ;;

  *-dec*)
    ac_objext=o

    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure 
    CPPFLAGS=" -model ansi -pthread -D__USE_STD_IOSTREAM"
    FFLAGS="$extra_cflags"
    CFLAGS="-model ansi -pthread $extra_cflags -D__USE_STD_IOSTREAM"
    CXXFLAGS="$CFLAGS"
    SOFLAGS="-shared -warning_unresolved -update_registry \$(LIBDIR)so_locations"
    LDFLAGS=""
    LDRUN_PREFIX="-rpath "
    REPOSITORY_FLAGS="-ptr"
    ;;

  *-aix*)

    # Xlf does not need/want an "_" on the names of fortran  
    # functions.  This var is used in fspec.pl.in in order not to
    # add the _ to the cname of the function.
    FORTRAN_UNDERSCORE=none

    # The IBM compilers don't use LDRUN_PREFIX.  By making it "-L"
    # The lib path with be repeated twice, but since the makefile
    # is set up assuming you need LDRUN_PREFIX, this is the easiest fix.
    LDRUN_PREFIX="-L"

    # xlc doesn't seem to like the <>...
    # KCC doesn't seem to like the <>...
    # g++ doesn't seem to like <> on the IBM either.
    TEMPLATE_BOX=

    case $CXX in
      *g++*)
         SOFLAGS="-shared ${SOFLAGS}"
         # bigtoc helps keep gcc from breaking...
         LDFLAGS="-Wl,-bbigtoc $LDFLAGS"
         ;;
      *)
#      for these compilers: *xlC*) or *KCC*)
         if test "$is_64bit" = "yes"; then
            BIT64FLAG=-q64
         fi
         CFLAGS="-qrtti=all $BIT64FLAG $CFLAGS"

         # Allows for better optimization and removes INFORMATION message.
         # I think this is necessary for both KCC and xlC...
         if test "$optimize" = "yes"; then
            CFLAGS="-qMAXMEM=4096 $CFLAGS"
         fi
         ;;
    esac

    CFLAGS="$CFLAGS $extra_cflags"

    FFLAGS="$extra_cflags"
    CXXFLAGS="$CFLAGS"

    CPP="$CC -c"
    CXXCPP="$CXX -c"

    ;;

  *)
    # put '_' at end and two '_'s if there is a '_' in name. 
    FORTRAN_UNDERSCORE=linux

    BASE_LIB_DIR=lib
    CFLAGS=" -Wall"
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $CC` version 2.95.3""... $ac_c" 1>&6
echo "configure:2890: checking for `basename $CC` version 2.95.3" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="0.5.25"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $F77` version 0.5.25""... $ac_c" 1>&6
echo "configure:2947: checking for `basename $F77` version 0.5.25" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  
    
    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $CXX` version 2.95.3""... $ac_c" 1>&6
echo "configure:3004: checking for `basename $CXX` version 2.95.3" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
      
    echo $ac_n "checking how to run the C preprocessor""... $ac_c" 1>&6
echo "configure:3052: checking how to run the C preprocessor" >&5
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
if eval "test \"`echo '$''{'ac_cv_prog_CPP'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
    # This must be in double quotes, not single quotes, because CPP may get
  # substituted into the Makefile and "${CC-cc}" will confuse make.
  CPP="${CC-cc} -E"
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp.
  cat > conftest.$ac_ext <<EOF
#line 3067 "configure"
#include "confdefs.h"
#include <assert.h>
Syntax Error
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:3073: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  :
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  CPP="${CC-cc} -E -traditional-cpp"
  cat > conftest.$ac_ext <<EOF
#line 3084 "configure"
#include "confdefs.h"
#include <assert.h>
Syntax Error
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:3090: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  :
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  CPP="${CC-cc} -nologo -E"
  cat > conftest.$ac_ext <<EOF
#line 3101 "configure"
#include "confdefs.h"
#include <assert.h>
Syntax Error
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:3107: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  :
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  CPP=/lib/cpp
fi
rm -f conftest*
fi
rm -f conftest*
fi
rm -f conftest*
  ac_cv_prog_CPP="$CPP"
fi
  CPP="$ac_cv_prog_CPP"
else
  ac_cv_prog_CPP="$CPP"
fi
echo "$ac_t""$CPP" 1>&6

    echo $ac_n "checking how to run the C++ preprocessor""... $ac_c" 1>&6
echo "configure:3132: checking how to run the C++ preprocessor" >&5
if test -z "$CXXCPP"; then
if eval "test \"`echo '$''{'ac_cv_prog_CXXCPP'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_ext=C
# CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='${CXX-g++} -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cxx_cross
  CXXCPP="${CXX-g++} -E"
  cat > conftest.$ac_ext <<EOF
#line 3145 "configure"
#include "confdefs.h"
#include <stdlib.h>
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:3150: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  :
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  CXXCPP=/lib/cpp
fi
rm -f conftest*
  ac_cv_prog_CXXCPP="$CXXCPP"
ac_ext=c
# CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CPP $CPPFLAGS'
ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cc_cross
fi
fi
CXXCPP="$ac_cv_prog_CXXCPP"
echo "$ac_t""$CXXCPP" 1>&6

    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3177: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_AS'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$AS"; then
  ac_cv_prog_AS="$AS" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_AS="as"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
AS="$ac_cv_prog_AS"
if test -n "$AS"; then
  echo "$ac_t""$AS" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3206: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_LD'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$LD"; then
  ac_cv_prog_LD="$LD" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_LD="ld"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
LD="$ac_cv_prog_LD"
if test -n "$LD"; then
  echo "$ac_t""$LD" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

    WOFF=" -w"
    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"
    FFLAGS="$FFLAGS $extra_cflags"
    CXXFLAGS="$CXXFLAGS $extra_cflags"
    SOFLAGS="-shared ${SOFLAGS}"
    NEED_SONAME=yes
    ;;
esac

echo $ac_n "checking $CC dependency regen switch""... $ac_c" 1>&6
echo "configure:3243: checking $CC dependency regen switch" >&5
rm -f configure-test.*
rm -rf configure-test-dir
mkdir configure-test-dir
echo "#include <stdio.h>" > configure-test-dir/configure-test.cc

# Try to automatically determine these three things
# One of twopass, move or normal
CC_DEPEND_MODE=unknown
# Compiler-specific flag
CC_DEPEND_REGEN=unknown
# Filename extension
CC_DEPEND_EXT=unknown

# Try -MDupdate
for flag in -MDupdate; do
  if test $CC_DEPEND_MODE = unknown; then
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.d -o configure-test-dir/configure-test.o configure-test-dir/configure-test.cc >/dev/null 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -f configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=normal
      CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
      CC_DEPEND_EXT=depend.mk
    fi
  fi
done

# Because xlC ignores anything after the -M (ie: -Mgarbage or -Mupdate
# is the same as -M) and creates a .u file anyway, to make the
# following test work, we need to get rid of the .u file and carry on:
rm -f configure-test-dir/configure-test.u

# Try -MD or -M
if test $CC_DEPEND_MODE = unknown; then
  for flag in -MD -M; do
    for ext in d u o.d; do
      rm -f configure-test.o configure-test-dir/configure-test.o
      ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc -o configure-test-dir/configure-test.o >/dev/null 2>conftest.out"
      (eval $ac_try) 2>&5
      if test -f configure-test-dir/configure-test.$ext ; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=normal
          break 2
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify
          break 2
        fi
      fi
      if test -f configure-test.$ext; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o:" configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=move
        elif grep "^configure-test.o:" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify2
        fi
        break 2
      fi
    done
  done
fi

# Last resort, try one that spits out to stdout
if test $CC_DEPEND_MODE = unknown; then
  for flag in -M; do
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc >configure-test-dir/configure-test.d 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -s configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=stdout
      CC_DEPEND_REGEN=$flag
      CC_DEPEND_EXT=d
      break
    fi
  done
fi

if test $CC_DEPEND_MODE = unknown; then
  { echo "configure: error: Cannot determine dependency generation flag" 1>&2; exit 1; }
fi

echo "$ac_t""$CC_DEPEND_REGEN (mode: $CC_DEPEND_MODE, ext: $CC_DEPEND_EXT)" 1>&6
rm -f configure-test.*
rm -rf configure-test-dir

F77_DEPEND_REGEN=$CC_DEPEND_REGEN
F77_DEPEND_MODE=$CC_DEPEND_MODE
F77_DEPEND_EXT=$CC_DEPEND_EXT







# Other programs

# Extract the first word of "gmake", so it can be a program name with args.
set dummy gmake; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3346: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_path_MAKE'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  case "$MAKE" in
  /*)
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a path.
  ;;
  ?:/*)			 
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a dos path.
  ;;
  *)
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do 
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_path_MAKE="$ac_dir/$ac_word"
      break
    fi
  done
  IFS="$ac_save_ifs"
  test -z "$ac_cv_path_MAKE" && ac_cv_path_MAKE="NOT_FOUND"
  ;;
esac
fi
MAKE="$ac_cv_path_MAKE"
if test -n "$MAKE"; then
  echo "$ac_t""$MAKE" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

if test "$MAKE" = "NOT_FOUND"; then
  # Extract the first word of "make", so it can be a program name with args.
set dummy make; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3383: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_path_MAKE'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  case "$MAKE" in
  /*)
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a path.
  ;;
  ?:/*)			 
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a dos path.
  ;;
  *)
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do 
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_path_MAKE="$ac_dir/$ac_word"
      break
    fi
  done
  IFS="$ac_save_ifs"
  test -z "$ac_cv_path_MAKE" && ac_cv_path_MAKE="NOT_FOUND"
  ;;
esac
fi
MAKE="$ac_cv_path_MAKE"
if test -n "$MAKE"; then
  echo "$ac_t""$MAKE" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

fi
if test "$MAKE" = "NOT_FOUND"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: GNU make not found." 1>&2; exit 1; }
  
fi

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="3.78.1"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for `basename $MAKE` version 3.78.1""... $ac_c" 1>&6
echo "configure:3439: checking for `basename $MAKE` version 3.78.1" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong GNU make version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong GNU make version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$MAKE --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  

for ac_prog in mawk gawk nawk awk
do
# Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3492: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_AWK'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_AWK="$ac_prog"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
AWK="$ac_cv_prog_AWK"
if test -n "$AWK"; then
  echo "$ac_t""$AWK" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

test -n "$AWK" && break
done

for ac_prog in 'bison -y' byacc
do
# Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3526: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_YACC'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$YACC"; then
  ac_cv_prog_YACC="$YACC" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_YACC="$ac_prog"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
YACC="$ac_cv_prog_YACC"
if test -n "$YACC"; then
  echo "$ac_t""$YACC" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

test -n "$YACC" && break
done
test -n "$YACC" || YACC="yacc"

# Extract the first word of "flex", so it can be a program name with args.
set dummy flex; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3559: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_LEX'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$LEX"; then
  ac_cv_prog_LEX="$LEX" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_LEX="flex"
      break
    fi
  done
  IFS="$ac_save_ifs"
  test -z "$ac_cv_prog_LEX" && ac_cv_prog_LEX="lex"
fi
fi
LEX="$ac_cv_prog_LEX"
if test -n "$LEX"; then
  echo "$ac_t""$LEX" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

if test -z "$LEXLIB"
then
  case "$LEX" in
  flex*) ac_lib=fl ;;
  *) ac_lib=l ;;
  esac
  echo $ac_n "checking for yywrap in -l$ac_lib""... $ac_c" 1>&6
echo "configure:3593: checking for yywrap in -l$ac_lib" >&5
ac_lib_var=`echo $ac_lib'_'yywrap | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-l$ac_lib  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 3601 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char yywrap();

int main() {
yywrap()
; return 0; }
EOF
if { (eval echo configure:3612: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  LEXLIB="-l$ac_lib"
else
  echo "$ac_t""no" 1>&6
fi

fi

if test "$uintah" = "yes" ; then
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3638: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_PERL'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_PERL="perl"
      break
    fi
  done
  IFS="$ac_save_ifs"
  test -z "$ac_cv_prog_PERL" && ac_cv_prog_PERL="echo configure: error: perl was not found in your PATH.;exit"
fi
fi
PERL="$ac_cv_prog_PERL"
if test -n "$PERL"; then
  echo "$ac_t""$PERL" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

else
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3669: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_PERL'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_PERL="perl"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
PERL="$ac_cv_prog_PERL"
if test -n "$PERL"; then
  echo "$ac_t""$PERL" 1>&6
else
  echo "$ac_t""no" 1>&6
fi

fi

if test "$PERL" = "perl"; then
  PERL=`type perl | sed 's%^.* %%'`
fi

# Extract the first word of "etags", so it can be a program name with args.
set dummy etags; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:3704: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_ETAGS'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$ETAGS"; then
  ac_cv_prog_ETAGS="$ETAGS" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$PATH"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_ETAGS="etags"
      break
    fi
  done
  IFS="$ac_save_ifs"
fi
fi
ETAGS="$ac_cv_prog_ETAGS"
if test -n "$ETAGS"; then
  echo "$ac_t""$ETAGS" 1>&6
else
  echo "$ac_t""no" 1>&6
fi


##  Create the Packages/Uintah/tools dir for later use.
if test "$uintah" = "yes" ; then
  if test ! -d "Packages/Uintah/tools"; then
    echo "$ac_t""Creating Packages/Uintah/tools directory" 1>&6
    mkdir -p "Packages/Uintah/tools"
  fi
  if test "$ac_cv_prog_g77" = "yes" ; then
     G77=1
  else
     G77=0
  fi
fi























##  set the default language after the build tools are found
ac_ext=C
# CXXFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='${CXX-g++} -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
ac_link='${CXX-g++} -o conftest${ac_exeext} $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
cross_compiling=$ac_cv_prog_cxx_cross


##  ----------  See if this is a 64 bit machine --------------------------
echo $ac_n "checking size of void*""... $ac_c" 1>&6
echo "configure:3777: checking size of void*" >&5
if eval "test \"`echo '$''{'ac_cv_sizeof_voidp'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test "$cross_compiling" = yes; then
  ac_cv_sizeof_voidp=0
else
  cat > conftest.$ac_ext <<EOF
#line 3785 "configure"
#include "confdefs.h"
#ifdef __cplusplus
extern "C" void exit(int);
#endif
#include <stdio.h>
main()
{
  FILE *f=fopen("conftestval", "w");
  if (!f) exit(1);
  fprintf(f, "%d\n", sizeof(void*));
  exit(0);
}
EOF
if { (eval echo configure:3799: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext} && (./conftest; exit) 2>/dev/null
then
  ac_cv_sizeof_voidp=`cat conftestval`
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -fr conftest*
  ac_cv_sizeof_voidp=0
fi
rm -fr conftest*
fi

fi
echo "$ac_t""$ac_cv_sizeof_voidp" 1>&6
cat >> confdefs.h <<EOF
#define SIZEOF_VOIDP $ac_cv_sizeof_voidp
EOF


case $ac_cv_sizeof_voidp in
 8)
  NBITS=64
  ;;
 4)
  NBITS=32
  ;;
 *)
  echo "configure: warning: This machine has some strange sizeof(void*): $ac_cv_sizeof_voidp." 1>&2
  echo "configure: warning: Usually this means that your LD_LIBRARY_PATH is set" 1>&2
  echo "configure: warning: incorrectly for the compiler you are using.  To verify" 1>&2
  echo "configure: warning: that this is the problem you will need to copy the C++" 1>&2
  echo "configure: warning: program ...about 8 lines long... from the end of the" 1>&2
  echo "configure: warning: config.log file and run the compile command which is just" 1>&2
  echo "configure: warning: before it in config.log.  Run the executable and see what" 1>&2
  echo "configure: warning: error message you get." 1>&2
  echo "configure: warning: You can also just fix your LD_LIBRARY_PATH if you know what" 1>&2
  echo "configure: warning: is wrong with it." 1>&2
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting due to size of void* problem! Read above warnings!" 1>&2; exit 1; }
  
  ;;
esac


##  SCI_LAB_TP_DEFAULT is used to add "standard" library search paths
##  for those of us who are too lazy to type out all the --with paths

TP_VERSION=1.4.2
TP_ARCH=`uname -s`
TP_COMPILER=gcc-3.0.4
ac_try="$CC -v > /dev/null 2> conftest.out"
(eval $ac_try) 2>&5
vers=`grep "gcc version" conftest.out | cut -d' ' -f 3`
rm -f conftest.out
if test -n "$vers"; then
  TP_COMPILER=gcc-$vers
else
  ac_try="$CC -version > /dev/null 2> conftest.out"
  (eval $ac_try) 2>&5
  vers=`grep MIPSpro conftest.out | cut -d' ' -f 4`
  rm -f conftest.out
  if test -n "$vers"; then
    TP_COMPILER=MIPSpro-$vers
  else
    TP_COMPILER=unknown
  fi
fi
TP_BASE=/usr/sci/projects
TP_SUBDIR=$TP_ARCH/$TP_COMPILER-${NBITS}bit
TP_PATH=$TP_BASE/SCIRun/Thirdparty/$TP_VERSION/$TP_SUBDIR

CCATP_VERSION=1.0.0
CCATP_PATH=$TP_BASE/CCA/Thirdparty/$CCATP_VERSION/$TP_SUBDIR

UINTAHTP_VERSION=1.0.0
UINTAHTP_PATH=$TP_BASE/Uintah/Thirdparty/$UINTAHTP_VERSION/$TP_SUBDIR


SCI_LAB_TP_DEFAULT="$TP_PATH \
                    $CCATP_PATH \
                    $UINTAHTP_PATH"
case $host in
  *-irix*) 
    if test "$is_64bit" = "yes"; then
      SCI_LAB_TP_DEFAULT="/res/sci/data1/SCIRun_Thirdparty_64 \
                          $SCI_LAB_TP_DEFAULT"
    else
      SCI_LAB_TP_DEFAULT="/res/sci/data1/SCIRun_Thirdparty_32 \
                          $SCI_LAB_TP_DEFAULT"
    fi
    ;;
  *linux*)
    SCI_LAB_TP_DEFAULT="/res/sci/data1/SCIRun_Thirdparty_32_linux \
                        $SCI_LAB_TP_DEFAULT \
                        /local/SCIRun_Thirdparty_32 \
                        /local"
    ;;
  *-aix*)
    echo "configure: warning: AIX is not completely supported!" 1>&2
    SCI_LAB_TP_DEFAULT=""
    ;;
  *)
    ;;
esac

for i in $SCI_LAB_TP_DEFAULT; do
   SCI_LAB_TP_LIBS="$SCI_LAB_TP_LIBS $i/lib"
done

##  ----------------------------------------------------------------------
##  ----------  search for required libraries and headers  ---------------
##  ----------------------------------------------------------------------

echo 
echo "checking for required standard components..." 1>&6
echo "configure:3921: checking for required standard components..." >&5
echo

##  --  search for the math library  -------------------------------------


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   m"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for m) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes m (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo m | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lm""... $ac_c" 1>&6
echo "configure:3991: checking for -lm" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lm""... $ac_c" 1>&6
echo "configure:3997: checking for main in -lm" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lm $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libm.a" -o -f "$_CHECK_PATH_/libm.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     math.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="math.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for math.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:4227: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:4344: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

##  --  search for X  ----------------------------------------------------
# If we find X, set shell vars x_includes and x_libraries to the
# paths, otherwise set no_x=yes.
# Uses ac_ vars as temps to allow command line to override cache and checks.
# --without-x overrides everything else, but does not touch the cache.
echo $ac_n "checking for X""... $ac_c" 1>&6
echo "configure:4462: checking for X" >&5

# Check whether --with-x or --without-x was given.
if test "${with_x+set}" = set; then
  withval="$with_x"
  :
fi

# $have_x is `yes', `no', `disabled', or empty when we do not yet know.
if test "x$with_x" = xno; then
  # The user explicitly disabled X.
  have_x=disabled
else
  if test "x$x_includes" != xNONE && test "x$x_libraries" != xNONE; then
    # Both variables are already set.
    have_x=yes
  else
if eval "test \"`echo '$''{'ac_cv_have_x'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  # One or both of the vars are not set, and there is no cached value.
ac_x_includes=NO ac_x_libraries=NO
rm -fr conftestdir
if mkdir conftestdir; then
  cd conftestdir
  # Make sure to not put "make" in the Imakefile rules, since we grep it out.
  cat > Imakefile <<'EOF'
acfindx:
	@echo 'ac_im_incroot="${INCROOT}"; ac_im_usrlibdir="${USRLIBDIR}"; ac_im_libdir="${LIBDIR}"'
EOF
  if (xmkmf) >/dev/null 2>/dev/null && test -f Makefile; then
    # GNU make sometimes prints "make[1]: Entering...", which would confuse us.
    eval `${MAKE-make} acfindx 2>/dev/null | grep -v make`
    # Open Windows xmkmf reportedly sets LIBDIR instead of USRLIBDIR.
    for ac_extension in a so sl; do
      if test ! -f $ac_im_usrlibdir/libX11.$ac_extension &&
        test -f $ac_im_libdir/libX11.$ac_extension; then
        ac_im_usrlibdir=$ac_im_libdir; break
      fi
    done
    # Screen out bogus values from the imake configuration.  They are
    # bogus both because they are the default anyway, and because
    # using them would break gcc on systems where it needs fixed includes.
    case "$ac_im_incroot" in
	/usr/include) ;;
	*) test -f "$ac_im_incroot/X11/Xos.h" && ac_x_includes="$ac_im_incroot" ;;
    esac
    case "$ac_im_usrlibdir" in
	/usr/lib | /lib) ;;
	*) test -d "$ac_im_usrlibdir" && ac_x_libraries="$ac_im_usrlibdir" ;;
    esac
  fi
  cd ..
  rm -fr conftestdir
fi

if test "$ac_x_includes" = NO; then
  # Guess where to find include files, by looking for this one X11 .h file.
  test -z "$x_direct_test_include" && x_direct_test_include=X11/Intrinsic.h

  # First, try using that file with no special directory specified.
cat > conftest.$ac_ext <<EOF
#line 4524 "configure"
#include "confdefs.h"
#include <$x_direct_test_include>
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:4529: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  rm -rf conftest*
  # We can compile using X headers with no special include directory.
ac_x_includes=
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  # Look for the header file in a standard set of common directories.
# Check X11 before X11Rn because it is often a symlink to the current release.
  for ac_dir in               \
    /usr/X11/include          \
    /usr/X11R6/include        \
    /usr/X11R5/include        \
    /usr/X11R4/include        \
                              \
    /usr/include/X11          \
    /usr/include/X11R6        \
    /usr/include/X11R5        \
    /usr/include/X11R4        \
                              \
    /usr/local/X11/include    \
    /usr/local/X11R6/include  \
    /usr/local/X11R5/include  \
    /usr/local/X11R4/include  \
                              \
    /usr/local/include/X11    \
    /usr/local/include/X11R6  \
    /usr/local/include/X11R5  \
    /usr/local/include/X11R4  \
                              \
    /usr/X386/include         \
    /usr/x386/include         \
    /usr/XFree86/include/X11  \
                              \
    /usr/include              \
    /usr/local/include        \
    /usr/unsupported/include  \
    /usr/athena/include       \
    /usr/local/x11r5/include  \
    /usr/lpp/Xamples/include  \
                              \
    /usr/openwin/include      \
    /usr/openwin/share/include \
    ; \
  do
    if test -r "$ac_dir/$x_direct_test_include"; then
      ac_x_includes=$ac_dir
      break
    fi
  done
fi
rm -f conftest*
fi # $ac_x_includes = NO

if test "$ac_x_libraries" = NO; then
  # Check for the libraries.

  test -z "$x_direct_test_library" && x_direct_test_library=Xt
  test -z "$x_direct_test_function" && x_direct_test_function=XtMalloc

  # See if we find them without any special options.
  # Don't add to $LIBS permanently.
  ac_save_LIBS="$LIBS"
  LIBS="-l$x_direct_test_library $LIBS"
cat > conftest.$ac_ext <<EOF
#line 4598 "configure"
#include "confdefs.h"

int main() {
${x_direct_test_function}()
; return 0; }
EOF
if { (eval echo configure:4605: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  LIBS="$ac_save_LIBS"
# We can link X programs with no special library path.
ac_x_libraries=
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  LIBS="$ac_save_LIBS"
# First see if replacing the include by lib works.
# Check X11 before X11Rn because it is often a symlink to the current release.
for ac_dir in `echo "$ac_x_includes" | sed s/include/lib/` \
    /usr/X11/lib          \
    /usr/X11R6/lib        \
    /usr/X11R5/lib        \
    /usr/X11R4/lib        \
                          \
    /usr/lib/X11          \
    /usr/lib/X11R6        \
    /usr/lib/X11R5        \
    /usr/lib/X11R4        \
                          \
    /usr/local/X11/lib    \
    /usr/local/X11R6/lib  \
    /usr/local/X11R5/lib  \
    /usr/local/X11R4/lib  \
                          \
    /usr/local/lib/X11    \
    /usr/local/lib/X11R6  \
    /usr/local/lib/X11R5  \
    /usr/local/lib/X11R4  \
                          \
    /usr/X386/lib         \
    /usr/x386/lib         \
    /usr/XFree86/lib/X11  \
                          \
    /usr/lib              \
    /usr/local/lib        \
    /usr/unsupported/lib  \
    /usr/athena/lib       \
    /usr/local/x11r5/lib  \
    /usr/lpp/Xamples/lib  \
    /lib/usr/lib/X11	  \
                          \
    /usr/openwin/lib      \
    /usr/openwin/share/lib \
    ; \
do
  for ac_extension in a so sl; do
    if test -r $ac_dir/lib${x_direct_test_library}.$ac_extension; then
      ac_x_libraries=$ac_dir
      break 2
    fi
  done
done
fi
rm -f conftest*
fi # $ac_x_libraries = NO

if test "$ac_x_includes" = NO || test "$ac_x_libraries" = NO; then
  # Didn't find X anywhere.  Cache the known absence of X.
  ac_cv_have_x="have_x=no"
else
  # Record where we found X for the cache.
  ac_cv_have_x="have_x=yes \
	        ac_x_includes=$ac_x_includes ac_x_libraries=$ac_x_libraries"
fi
fi
  fi
  eval "$ac_cv_have_x"
fi # $with_x != no

if test "$have_x" != yes; then
  echo "$ac_t""$have_x" 1>&6
  no_x=yes
else
  # If each of the values was on the command line, it overrides each guess.
  test "x$x_includes" = xNONE && x_includes=$ac_x_includes
  test "x$x_libraries" = xNONE && x_libraries=$ac_x_libraries
  # Update the cache value to reflect the command line values.
  ac_cv_have_x="have_x=yes \
		ac_x_includes=$x_includes ac_x_libraries=$x_libraries"
  echo "$ac_t""libraries $x_libraries, headers $x_includes" 1>&6
fi

if test "$no_x" = yes; then
  # Not all programs may use this symbol, but it does not hurt to define it.
  cat >> confdefs.h <<\EOF
#define X_DISPLAY_MISSING 1
EOF

  X_CFLAGS= X_PRE_LIBS= X_LIBS= X_EXTRA_LIBS=
else
  if test -n "$x_includes"; then
    X_CFLAGS="$X_CFLAGS -I$x_includes"
  fi

  # It would also be nice to do this for all -L options, not just this one.
  if test -n "$x_libraries"; then
    X_LIBS="$X_LIBS -L$x_libraries"
    # For Solaris; some versions of Sun CC require a space after -R and
    # others require no space.  Words are not sufficient . . . .
    case "`(uname -sr) 2>/dev/null`" in
    "SunOS 5"*)
      echo $ac_n "checking whether -R must be followed by a space""... $ac_c" 1>&6
echo "configure:4711: checking whether -R must be followed by a space" >&5
      ac_xsave_LIBS="$LIBS"; LIBS="$LIBS -R$x_libraries"
      cat > conftest.$ac_ext <<EOF
#line 4714 "configure"
#include "confdefs.h"

int main() {

; return 0; }
EOF
if { (eval echo configure:4721: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  ac_R_nospace=yes
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  ac_R_nospace=no
fi
rm -f conftest*
      if test $ac_R_nospace = yes; then
	echo "$ac_t""no" 1>&6
	X_LIBS="$X_LIBS -R$x_libraries"
      else
	LIBS="$ac_xsave_LIBS -R $x_libraries"
	cat > conftest.$ac_ext <<EOF
#line 4737 "configure"
#include "confdefs.h"

int main() {

; return 0; }
EOF
if { (eval echo configure:4744: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  ac_R_space=yes
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  ac_R_space=no
fi
rm -f conftest*
	if test $ac_R_space = yes; then
	  echo "$ac_t""yes" 1>&6
	  X_LIBS="$X_LIBS -R $x_libraries"
	else
	  echo "$ac_t""neither works" 1>&6
	fi
      fi
      LIBS="$ac_xsave_LIBS"
    esac
  fi

  # Check for system-dependent libraries X programs must link with.
  # Do this before checking for the system-independent R6 libraries
  # (-lICE), since we may need -lsocket or whatever for X linking.

  if test "$ISC" = yes; then
    X_EXTRA_LIBS="$X_EXTRA_LIBS -lnsl_s -linet"
  else
    # Martyn.Johnson@cl.cam.ac.uk says this is needed for Ultrix, if the X
    # libraries were built with DECnet support.  And karl@cs.umb.edu says
    # the Alpha needs dnet_stub (dnet does not exist).
    echo $ac_n "checking for dnet_ntoa in -ldnet""... $ac_c" 1>&6
echo "configure:4776: checking for dnet_ntoa in -ldnet" >&5
ac_lib_var=`echo dnet'_'dnet_ntoa | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-ldnet  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 4784 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char dnet_ntoa();

int main() {
dnet_ntoa()
; return 0; }
EOF
if { (eval echo configure:4798: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="$X_EXTRA_LIBS -ldnet"
else
  echo "$ac_t""no" 1>&6
fi

    if test $ac_cv_lib_dnet_dnet_ntoa = no; then
      echo $ac_n "checking for dnet_ntoa in -ldnet_stub""... $ac_c" 1>&6
echo "configure:4820: checking for dnet_ntoa in -ldnet_stub" >&5
ac_lib_var=`echo dnet_stub'_'dnet_ntoa | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-ldnet_stub  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 4828 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char dnet_ntoa();

int main() {
dnet_ntoa()
; return 0; }
EOF
if { (eval echo configure:4842: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="$X_EXTRA_LIBS -ldnet_stub"
else
  echo "$ac_t""no" 1>&6
fi

    fi

    # msh@cis.ufl.edu says -lnsl (and -lsocket) are needed for his 386/AT,
    # to get the SysV transport functions.
    # chad@anasazi.com says the Pyramis MIS-ES running DC/OSx (SVR4)
    # needs -lnsl.
    # The nsl library prevents programs from opening the X display
    # on Irix 5.2, according to dickey@clark.net.
    echo $ac_n "checking for gethostbyname""... $ac_c" 1>&6
echo "configure:4871: checking for gethostbyname" >&5
if eval "test \"`echo '$''{'ac_cv_func_gethostbyname'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 4876 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char gethostbyname(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char gethostbyname();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_gethostbyname) || defined (__stub___gethostbyname)
choke me
#else
gethostbyname();
#endif

; return 0; }
EOF
if { (eval echo configure:4902: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_func_gethostbyname=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_func_gethostbyname=no"
fi
rm -f conftest*
fi

if eval "test \"`echo '$ac_cv_func_'gethostbyname`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  :
else
  echo "$ac_t""no" 1>&6
fi

    if test $ac_cv_func_gethostbyname = no; then
      echo $ac_n "checking for gethostbyname in -lnsl""... $ac_c" 1>&6
echo "configure:4923: checking for gethostbyname in -lnsl" >&5
ac_lib_var=`echo nsl'_'gethostbyname | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-lnsl  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 4931 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char gethostbyname();

int main() {
gethostbyname()
; return 0; }
EOF
if { (eval echo configure:4945: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="$X_EXTRA_LIBS -lnsl"
else
  echo "$ac_t""no" 1>&6
fi

    fi

    # lieder@skyler.mavd.honeywell.com says without -lsocket,
    # socket/setsockopt and other routines are undefined under SCO ODT
    # 2.0.  But -lsocket is broken on IRIX 5.2 (and is not necessary
    # on later versions), says simon@lia.di.epfl.ch: it contains
    # gethostby* variants that don't use the nameserver (or something).
    # -lsocket must be given before -lnsl if both are needed.
    # We assume that if connect needs -lnsl, so does gethostbyname.
    echo $ac_n "checking for connect""... $ac_c" 1>&6
echo "configure:4975: checking for connect" >&5
if eval "test \"`echo '$''{'ac_cv_func_connect'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 4980 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char connect(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char connect();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_connect) || defined (__stub___connect)
choke me
#else
connect();
#endif

; return 0; }
EOF
if { (eval echo configure:5006: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_func_connect=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_func_connect=no"
fi
rm -f conftest*
fi

if eval "test \"`echo '$ac_cv_func_'connect`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  :
else
  echo "$ac_t""no" 1>&6
fi

    if test $ac_cv_func_connect = no; then
      echo $ac_n "checking for connect in -lsocket""... $ac_c" 1>&6
echo "configure:5027: checking for connect in -lsocket" >&5
ac_lib_var=`echo socket'_'connect | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-lsocket $X_EXTRA_LIBS $LIBS"
cat > conftest.$ac_ext <<EOF
#line 5035 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char connect();

int main() {
connect()
; return 0; }
EOF
if { (eval echo configure:5049: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="-lsocket $X_EXTRA_LIBS"
else
  echo "$ac_t""no" 1>&6
fi

    fi

    # gomez@mi.uni-erlangen.de says -lposix is necessary on A/UX.
    echo $ac_n "checking for remove""... $ac_c" 1>&6
echo "configure:5073: checking for remove" >&5
if eval "test \"`echo '$''{'ac_cv_func_remove'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 5078 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char remove(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char remove();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_remove) || defined (__stub___remove)
choke me
#else
remove();
#endif

; return 0; }
EOF
if { (eval echo configure:5104: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_func_remove=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_func_remove=no"
fi
rm -f conftest*
fi

if eval "test \"`echo '$ac_cv_func_'remove`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  :
else
  echo "$ac_t""no" 1>&6
fi

    if test $ac_cv_func_remove = no; then
      echo $ac_n "checking for remove in -lposix""... $ac_c" 1>&6
echo "configure:5125: checking for remove in -lposix" >&5
ac_lib_var=`echo posix'_'remove | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-lposix  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 5133 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char remove();

int main() {
remove()
; return 0; }
EOF
if { (eval echo configure:5147: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="$X_EXTRA_LIBS -lposix"
else
  echo "$ac_t""no" 1>&6
fi

    fi

    # BSDI BSD/OS 2.1 needs -lipc for XOpenDisplay.
    echo $ac_n "checking for shmat""... $ac_c" 1>&6
echo "configure:5171: checking for shmat" >&5
if eval "test \"`echo '$''{'ac_cv_func_shmat'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 5176 "configure"
#include "confdefs.h"
/* System header to define __stub macros and hopefully few prototypes,
    which can conflict with char shmat(); below.  */
#include <assert.h>
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char shmat();

int main() {

/* The GNU C library defines this for functions which it implements
    to always fail with ENOSYS.  Some functions are actually named
    something starting with __ and the normal name is an alias.  */
#if defined (__stub_shmat) || defined (__stub___shmat)
choke me
#else
shmat();
#endif

; return 0; }
EOF
if { (eval echo configure:5202: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_func_shmat=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_func_shmat=no"
fi
rm -f conftest*
fi

if eval "test \"`echo '$ac_cv_func_'shmat`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  :
else
  echo "$ac_t""no" 1>&6
fi

    if test $ac_cv_func_shmat = no; then
      echo $ac_n "checking for shmat in -lipc""... $ac_c" 1>&6
echo "configure:5223: checking for shmat in -lipc" >&5
ac_lib_var=`echo ipc'_'shmat | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-lipc  $LIBS"
cat > conftest.$ac_ext <<EOF
#line 5231 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char shmat();

int main() {
shmat()
; return 0; }
EOF
if { (eval echo configure:5245: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_EXTRA_LIBS="$X_EXTRA_LIBS -lipc"
else
  echo "$ac_t""no" 1>&6
fi

    fi
  fi

  # Check for libraries that X11R6 Xt/Xaw programs need.
  ac_save_LDFLAGS="$LDFLAGS"
  test -n "$x_libraries" && LDFLAGS="$LDFLAGS -L$x_libraries"
  # SM needs ICE to (dynamically) link under SunOS 4.x (so we have to
  # check for ICE first), but we must link in the order -lSM -lICE or
  # we get undefined symbols.  So assume we have SM if we have ICE.
  # These have to be linked with before -lX11, unlike the other
  # libraries we check for below, so use a different variable.
  #  --interran@uluru.Stanford.EDU, kb@cs.umb.edu.
  echo $ac_n "checking for IceConnectionNumber in -lICE""... $ac_c" 1>&6
echo "configure:5278: checking for IceConnectionNumber in -lICE" >&5
ac_lib_var=`echo ICE'_'IceConnectionNumber | sed 'y%./+-%__p_%'`
if eval "test \"`echo '$''{'ac_cv_lib_$ac_lib_var'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  ac_save_LIBS="$LIBS"
LIBS="-lICE $X_EXTRA_LIBS $LIBS"
cat > conftest.$ac_ext <<EOF
#line 5286 "configure"
#include "confdefs.h"
/* Override any gcc2 internal prototype to avoid an error.  */
#ifdef __cplusplus
extern "C"
#endif
/* We use char because int might match the return type of a gcc2
    builtin and then its argument prototype would still apply.  */
char IceConnectionNumber();

int main() {
IceConnectionNumber()
; return 0; }
EOF
if { (eval echo configure:5300: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=yes"
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_lib_$ac_lib_var=no"
fi
rm -f conftest*
LIBS="$ac_save_LIBS"

fi
if eval "test \"`echo '$ac_cv_lib_'$ac_lib_var`\" = yes"; then
  echo "$ac_t""yes" 1>&6
  X_PRE_LIBS="$X_PRE_LIBS -lSM -lICE"
else
  echo "$ac_t""no" 1>&6
fi

  LDFLAGS="$ac_save_LDFLAGS"

fi

if test "$x_libraries" &&
   test "$x_libraries" != "/usr/lib"; then
  LIBX=$x_libraries
  X_LIBRARY="-L$LIBX"
else
  LIBX=""
  X_LIBRARY=""
fi
if test "$x_includes" &&
   test "$x_includes" != "/usr/include"; then
  INCX_H=$x_includes
else
  INCX_H=""
fi






##  --  search for the fortran library  ----------------------------------
FLIBS=""
case $host in 
  *-irix*)
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   ftn"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for ftn) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes ftn (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo ftn | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lftn""... $ac_c" 1>&6
echo "configure:5413: checking for -lftn" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lftn""... $ac_c" 1>&6
echo "configure:5419: checking for main in -lftn" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lftn $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libftn.a" -o -f "$_CHECK_PATH_/libftn.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   fortran"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for fortran) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes fortran (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo fortran | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lfortran""... $ac_c" 1>&6
echo "configure:5642: checking for -lfortran" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lfortran""... $ac_c" 1>&6
echo "configure:5648: checking for main in -lfortran" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lfortran $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libfortran.a" -o -f "$_CHECK_PATH_/libfortran.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    if test "$HAVE_LIBFTN" != "" && test "$HAVE_LIBFORTRAN" != ""; then
       FLIBS="-lftn -lfortran"
    fi
    ;;
  *aix*)
    # AIX Fortran Library Check
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   xlf90"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for xlf90) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes xlf90 (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo xlf90 | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lxlf90""... $ac_c" 1>&6
echo "configure:5878: checking for -lxlf90" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lxlf90""... $ac_c" 1>&6
echo "configure:5884: checking for main in -lxlf90" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lxlf90 $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libxlf90.a" -o -f "$_CHECK_PATH_/libxlf90.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
    FLIBS=-lxlf90
    ;;
  *linux*)
    # Linux Library Check
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   g2c"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for g2c) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes g2c (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo g2c | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lg2c""... $ac_c" 1>&6
echo "configure:6111: checking for -lg2c" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lg2c""... $ac_c" 1>&6
echo "configure:6117: checking for main in -lg2c" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lg2c $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libg2c.a" -o -f "$_CHECK_PATH_/libg2c.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
    if test "$HAVE_LIBG2C"; then
       FLIBS=-lg2c
    fi
    ;;
  *dec*)
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   for"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for for) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes for (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo for | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lfor""... $ac_c" 1>&6
echo "configure:6345: checking for -lfor" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lfor""... $ac_c" 1>&6
echo "configure:6351: checking for main in -lfor" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lfor $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libfor.a" -o -f "$_CHECK_PATH_/libfor.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
    if test "$HAVE_LIBFOR"; then
       FLIBS=-lfor
    fi
    ;;
  *)
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   F77"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for F77) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes F77 (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo F77 | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lF77""... $ac_c" 1>&6
echo "configure:6579: checking for -lF77" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lF77""... $ac_c" 1>&6
echo "configure:6585: checking for main in -lF77" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lF77 $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libF77.a" -o -f "$_CHECK_PATH_/libF77.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
    if test "$HAVE_LIBF77"; then
       FLIBS=-lF77
    fi
    ;;
esac

if test -z "$FLIBS"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: could not find the fortran library." 1>&2; exit 1; }
  
fi



##  --  check for the required thread library  ---------------------------

case $host in
  *-irix*)
    if test "$threads" = "unknown"; then
      threads=irix
    elif test "$threads" != "pthreads" -a "$threads" != "irix"; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: unknown thread type for host $host: $threads. exiting." 1>&2; exit 1; }
  
    fi
    ;;
  *)
    if test "$threads" = "unknown"; then
      threads=pthreads
    elif test "$threads" != "pthreads"; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: unknown thread type for host $host: $threads. exiting." 1>&2; exit 1; }
  
    fi
    ;;
esac

case $threads in
   irix)
      
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   fetchop"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for fetchop) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes fetchop (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo fetchop | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lfetchop""... $ac_c" 1>&6
echo "configure:6868: checking for -lfetchop" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lfetchop""... $ac_c" 1>&6
echo "configure:6874: checking for main in -lfetchop" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lfetchop $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libfetchop.a" -o -f "$_CHECK_PATH_/libfetchop.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
      if test "$HAVE_LIBFETCHOP"; then
         CFLAGS="$CFLAGS -DSTL_SGI_THREADS"
         THREAD_LIBS=-lfetchop
         THREAD_DEFINE=
      fi
      ;;
   pthreads)
      
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   pthread"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for pthread) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes pthread (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo pthread | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lpthread""... $ac_c" 1>&6
echo "configure:7104: checking for -lpthread" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lpthread""... $ac_c" 1>&6
echo "configure:7110: checking for main in -lpthread" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lpthread $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libpthread.a" -o -f "$_CHECK_PATH_/libpthread.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
      if test "$HAVE_LIBPTHREAD"; then
        THREAD_LIBS=-lpthread
        THREAD_DEFINE="#define SCI_PTHREAD"
      fi
      
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     pthread.h semaphore.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="pthread.h semaphore.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for pthread.h semaphore.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:7344: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:7461: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
      echo $ac_n "checking for semaphore library""... $ac_c" 1>&6
echo "configure:7573: checking for semaphore library" >&5
      old_LIBS=$LIBS
      SEMAPHORE_LIB=unknown
      for i in "" "$THREAD_LIBS" -lrt; do
        LIBS="$old_LIBS $i"
        cat > conftest.$ac_ext <<EOF
#line 7579 "configure"
#include "confdefs.h"

#include <semaphore.h>
      
int main() {

    sem_t sem;
    sem_init(&sem, 0, 0);
    sem_post(&sem);
      
; return 0; }
EOF
if { (eval echo configure:7592: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  
         SEMAPHORE_LIB=$i
         break
         
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
fi
rm -f conftest*
      done
      if test "$SEMPAPHORE_LIB" = unknown; then
        echo "$ac_t""not found" 1>&6
        { echo "configure: error: semaphore library(sem_post, sem_wait, etc) needed for pthreads" 1>&2; exit 1; }
      else
        if test -z "$SEMAPHORE_LIB"; then
          echo "$ac_t""none required" 1>&6
        elif test "$SEMAPHORE_LIB" = "$THREAD_LIBS"; then
          echo "$ac_t""already in thread library: $THREAD_LIBS" 1>&6
          SEMAPHORE_LIB=""
        else
          echo "$ac_t""$SEMAPHORE_LIB" 1>&6
        fi
      fi
      ;;
   *)
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: unknown thread type for host $host: $threads. exiting." 1>&2; exit 1; }
  
      ;;
esac      

THREAD_IMPL="Thread_$threads.cc"







##  --  search for OpenGL  -----------------------------------------------

FOUND_ALL_GL=no
if test $with_opengl != no; then
  opengl_lib=$with_opengl/lib
  opengl_include=$with_opengl/include
else
  opengl_lib=
  opengl_include=
fi


dirs="$opengl_lib /usr/lib /usr/X11R6/lib"

is_linux=`echo $host | sed 's/.*linux.*/linux/'`
GLU_OTHERS="-lGL"
if test "$is_linux" = "linux"; then
  GLU_OTHERS="-lGL -lpthread"
fi


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   GL"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for GL) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes GL (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo GL | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lGL""... $ac_c" 1>&6
echo "configure:7725: checking for -lGL" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lGL""... $ac_c" 1>&6
echo "configure:7731: checking for main in -lGL" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lGL $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libGL.a" -o -f "$_CHECK_PATH_/libGL.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   GLU"
       echo "   function:   main"
       echo "   other-libs: $GLU_OTHERS"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for GLU) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes GLU (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo GLU | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lGLU""... $ac_c" 1>&6
echo "configure:7954: checking for -lGLU" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lGLU""... $ac_c" 1>&6
echo "configure:7960: checking for main in -lGLU" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$GLU_OTHERS"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lGLU $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libGLU.a" -o -f "$_CHECK_PATH_/libGLU.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $opengl_include $LIBGL/../include"
       echo "   headers:     GL/gl.h GL/glu.h GL/glx.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$opengl_include $LIBGL/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="GL/gl.h GL/glu.h GL/glx.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for GL/gl.h GL/glu.h GL/glx.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:8191: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:8308: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


GL_INCLUDE=$INCGL_GL_H


##  --  search for dlopen  -----------------------------------------------


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   c"
       echo "   function:   dlopen"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for c) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes c (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo c | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "dlopen" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lc""... $ac_c" 1>&6
echo "configure:8491: checking for -lc" >&5
    else
       _SCI_DECL_="char dlopen();"
       _SCI_CALL_="dlopen();"

       echo $ac_n "checking for dlopen in -lc""... $ac_c" 1>&6
echo "configure:8497: checking for dlopen in -lc" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lc $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libc.a" -o -f "$_CHECK_PATH_/libc.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
if test "$HAVE_LIBC"; then
   HAVE_LIBDL="yes"
else
   
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      "
       echo "   lib name:   dl"
       echo "   function:   dlopen"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for dl) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes dl (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo dl | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "dlopen" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -ldl""... $ac_c" 1>&6
echo "configure:8723: checking for -ldl" >&5
    else
       _SCI_DECL_="char dlopen();"
       _SCI_CALL_="dlopen();"

       echo $ac_n "checking for dlopen in -ldl""... $ac_c" 1>&6
echo "configure:8729: checking for dlopen in -ldl" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -ldl $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libdl.a" -o -f "$_CHECK_PATH_/libdl.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
   if test "$HAVE_LIBDL"; then
       LIBDL_FLAG=-ldl
   fi
fi


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     dlfcn.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="dlfcn.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for dlfcn.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:8964: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:9081: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

if (test -z "$HAVE_LIBDL" &&
    test -z "$HAVE_LIBC") ||
    test -z "$HAVE_DLFCN_H"; then
  
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Could not find the required dynamic library components. exiting." 1>&2; exit 1; }
  
fi

PLATFORM_LDFLAGS=$LIBDL_FLAG





##  --  search for required headers  --------------------------------------

##  --  required standard headers

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     stdio.h stdlib.h stddef.h stdarg.h string.h limits.h \
   errno.h fcntl.h float.h values.h memory.h unistd.h netdb.h \
   ctype.h signal.h locale.h malloc.h dirent.h assert.h sys/select.h \
   sys/types.h sys/time.h sys/stat.h sys/socket.h sys/timeb.h \
   sys/mman.h sys/param.h sys/ioctl.h sys/resource.h sys/wait.h \
   sys/utsname.h rpc/types.h netinet/in.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="stdio.h stdlib.h stddef.h stdarg.h string.h limits.h \
   errno.h fcntl.h float.h values.h memory.h unistd.h netdb.h \
   ctype.h signal.h locale.h malloc.h dirent.h assert.h sys/select.h \
   sys/types.h sys/time.h sys/stat.h sys/socket.h sys/timeb.h \
   sys/mman.h sys/param.h sys/ioctl.h sys/resource.h sys/wait.h \
   sys/utsname.h rpc/types.h netinet/in.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for stdio.h stdlib.h stddef.h stdarg.h string.h limits.h \
   errno.h fcntl.h float.h values.h memory.h unistd.h netdb.h \
   ctype.h signal.h locale.h malloc.h dirent.h assert.h sys/select.h \
   sys/types.h sys/time.h sys/stat.h sys/socket.h sys/timeb.h \
   sys/mman.h sys/param.h sys/ioctl.h sys/resource.h sys/wait.h \
   sys/utsname.h rpc/types.h netinet/in.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:9304: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:9421: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     inttypes.h stdint.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="inttypes.h stdint.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for inttypes.h stdint.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:9605: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:9722: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

##  --  required SGI headers
if test "$host" = "irix"; then
  
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     ieeefp.h ulocks.h sys/uuid.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="ieeefp.h ulocks.h sys/uuid.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for ieeefp.h ulocks.h sys/uuid.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:9908: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:10025: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
fi

##  --  required STL headers 
##  --      (only look for STL after going into cplusplus mode)
##

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     algorithm vector map iostream string"
       echo "   other-paths: "
       echo "   c++ lib:     yes"
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="algorithm vector map iostream string"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_="yes"
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for algorithm vector map iostream string) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:10213: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:10330: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

echo $ac_n "checking for location of hash_map""... $ac_c" 1>&6
echo "configure:10443: checking for location of hash_map" >&5
DEF_HASHMAP=None
cat > conftest.$ac_ext <<EOF
#line 10446 "configure"
#include "confdefs.h"
#include <hash_map>
                std::hash_map<int, int> xx;
int main() {

; return 0; }
EOF
if { (eval echo configure:10454: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  DEF_HASHMAP=HAVE_STD_HASHMAP
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
fi
rm -f conftest*
if test "$DEF_HASHMAP" = "None"; then
  cat > conftest.$ac_ext <<EOF
#line 10464 "configure"
#include "confdefs.h"
#include <ext/hash_map>
                 std::hash_map<int, int> xx;
int main() {

; return 0; }
EOF
if { (eval echo configure:10472: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  DEF_HASHMAP=HAVE_EXT_HASHMAP
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
fi
rm -f conftest*
fi
if test "$DEF_HASHMAP" = "None"; then
  cat > conftest.$ac_ext <<EOF
#line 10483 "configure"
#include "confdefs.h"
#include <ext/hash_map>
                 __gnu_cxx::hash_map<int, int> xx;
int main() {

; return 0; }
EOF
if { (eval echo configure:10491: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  DEF_HASHMAP=HAVE_GNU_HASHMAP
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
fi
rm -f conftest*
fi
if test "$DEF_HASHMAP" = "None"; then
  DEF_HASHMAP=
  echo "$ac_t""not found" 1>&6
  echo "configure: warning: Cannot find hash_map, will use map instead" 1>&2
else
  echo "$ac_t""found: $DEF_HASHMAP" 1>&6
  DEF_HASHMAP="#define $DEF_HASHMAP"
fi


for ac_hdr in ext/algorithm
do
ac_safe=`echo "$ac_hdr" | sed 'y%./+-%__p_%'`
echo $ac_n "checking for $ac_hdr""... $ac_c" 1>&6
echo "configure:10514: checking for $ac_hdr" >&5
if eval "test \"`echo '$''{'ac_cv_header_$ac_safe'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  cat > conftest.$ac_ext <<EOF
#line 10519 "configure"
#include "confdefs.h"
#include <$ac_hdr>
EOF
ac_try="$ac_cpp conftest.$ac_ext >/dev/null 2>conftest.out"
{ (eval echo configure:10524: \"$ac_try\") 1>&5; (eval $ac_try) 2>&5; }
ac_err=`grep -v '^ *+' conftest.out | grep -v "^conftest.${ac_ext}\$"`
if test -z "$ac_err"; then
  rm -rf conftest*
  eval "ac_cv_header_$ac_safe=yes"
else
  echo "$ac_err" >&5
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  eval "ac_cv_header_$ac_safe=no"
fi
rm -f conftest*
fi
if eval "test \"`echo '$ac_cv_header_'$ac_safe`\" = yes"; then
  echo "$ac_t""yes" 1>&6
    ac_tr_hdr=HAVE_`echo $ac_hdr | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
  cat >> confdefs.h <<EOF
#define $ac_tr_hdr 1
EOF
 
else
  echo "$ac_t""no" 1>&6
fi
done


##  --  search for tcl stuff  ---------------------------------------------
echo 
echo "checking for required Tcl components..." 1>&6
echo "configure:10554: checking for required Tcl components..." >&5
echo

dirs="$tcl/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   tcl"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for tcl) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes tcl (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo tcl | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -ltcl""... $ac_c" 1>&6
echo "configure:10624: checking for -ltcl" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -ltcl""... $ac_c" 1>&6
echo "configure:10630: checking for main in -ltcl" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -ltcl $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libtcl.a" -o -f "$_CHECK_PATH_/libtcl.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
if test -f "$LIBTCL/tclConfig.sh"; then . $LIBTCL/tclConfig.sh; fi

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $TCL_SRC_DIR/generic"
       echo "   headers:     tcl.h tclPort.h tclMath.h tclInt.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$TCL_SRC_DIR/generic NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="tcl.h tclPort.h tclMath.h tclInt.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for tcl.h tclPort.h tclMath.h tclInt.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:10861: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:10978: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   tk"
       echo "   function:   main"
       echo "   other-libs: -ltcl"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for tk) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes tk (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo tk | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -ltk""... $ac_c" 1>&6
echo "configure:11155: checking for -ltk" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -ltk""... $ac_c" 1>&6
echo "configure:11161: checking for main in -ltk" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="-ltcl"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -ltk $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libtk.a" -o -f "$_CHECK_PATH_/libtk.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
if test -f "$LIBTK/tkConfig.sh"; then
   . $LIBTK/tkConfig.sh
else
   { echo "configure: error: $LIBTK/tkConfig.sh does not exist!" 1>&2; exit 1; }
fi

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $TK_SRC_DIR/generic"
       echo "   headers:     tk.h tk3d.h tkPort.h"
       echo "   other-paths: $INCTCL_H"
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$TK_SRC_DIR/generic NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="tk.h tk3d.h tkPort.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for tk.h tk3d.h tkPort.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:11396: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:11513: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   itcl"
       echo "   function:   main"
       echo "   other-libs: $TCL_LIBRARY -ltcl"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for itcl) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes itcl (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo itcl | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -litcl""... $ac_c" 1>&6
echo "configure:11690: checking for -litcl" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -litcl""... $ac_c" 1>&6
echo "configure:11696: checking for main in -litcl" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$TCL_LIBRARY -ltcl"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -litcl $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libitcl.a" -o -f "$_CHECK_PATH_/libitcl.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBITCL/../include"
       echo "   headers:     itcl.h"
       echo "   other-paths: $INCTCL_H"
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBITCL/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="itcl.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for itcl.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:11926: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:12043: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   itk"
       echo "   function:   main"
       echo "   other-libs: $ITCL_LIBRARY -litcl $TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for itk) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes itk (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo itk | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -litk""... $ac_c" 1>&6
echo "configure:12220: checking for -litk" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -litk""... $ac_c" 1>&6
echo "configure:12226: checking for main in -litk" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$ITCL_LIBRARY -litcl $TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -litk $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libitk.a" -o -f "$_CHECK_PATH_/libitk.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBITK/../include"
       echo "   headers:     itk.h"
       echo "   other-paths: $INCITCL_H $INCTK_H $INCTCL_H"
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBITK/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="itk.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for itk.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:12456: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCITCL_H $INCTK_H $INCTCL_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:12573: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCITCL_H $INCTK_H $INCTCL_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   BLT"
       echo "   function:   main"
       echo "   other-libs: $TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for BLT) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes BLT (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo BLT | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lBLT""... $ac_c" 1>&6
echo "configure:12750: checking for -lBLT" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lBLT""... $ac_c" 1>&6
echo "configure:12756: checking for main in -lBLT" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lBLT $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libBLT.a" -o -f "$_CHECK_PATH_/libBLT.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBBLT/../include"
       echo "   headers:     blt.h"
       echo "   other-paths: $INCTCL_H $INCTK_H"
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBBLT/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="blt.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for blt.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:12986: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H $INCTK_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:13103: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H $INCTK_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   plplotd"
       echo "   function:   main"
       echo "   other-libs: $TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for plplotd) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes plplotd (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo plplotd | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lplplotd""... $ac_c" 1>&6
echo "configure:13280: checking for -lplplotd" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lplplotd""... $ac_c" 1>&6
echo "configure:13286: checking for main in -lplplotd" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$TK_LIBRARY -ltk $TCL_LIBRARY -ltcl"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lplplotd $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libplplotd.a" -o -f "$_CHECK_PATH_/libplplotd.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
# Slight name change for convience
if test "$HAVE_LIBPLPLOTD"; then
   LIBPLPLOT="$LIBPLPLOTD"
fi


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBPLPLOT/../include /usr/include/plplot"
       echo "   headers:     plplot.h"
       echo "   other-paths: $INCTCL_H $INCTK_H"
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBPLPLOT/../include /usr/include/plplot NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="plplot.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for plplot.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:13521: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H $INCTK_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:13638: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCTCL_H $INCTK_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

if test "$HAVE_LIBPLPLOTD" && test "$HAVE_PLPLOT_H"; then
    DEF_PLPLOT="#define HAVE_PLPLOT 1"
    HAVE_PLPLOT="yes"
fi


CORRECT_TCL_VERSION=no
CORRECT_TK_VERSION=no
CORRECT_ITCL_VERSION=no


    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="8.3.2"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for Tcl version 8.3.2""... $ac_c" 1>&6
echo "configure:13770: checking for Tcl version 8.3.2" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TCL_VERSION$TCL_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  

    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="8.3.2"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for Tk version 8.3.2""... $ac_c" 1>&6
echo "configure:13827: checking for Tk version 8.3.2" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TK_VERSION$TK_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  

    ##  SCI_CHECK_VAR_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="$TK_VERSION$TK_PATCH_LEVEL"
    _CUR_1_=""
    _CUR_2_=""

    echo $ac_n "checking for equal Tcl and Tk version $TK_VERSION$TK_PATCH_LEVEL""... $ac_c" 1>&6
echo "configure:13884: checking for equal Tcl and Tk version $TK_VERSION$TK_PATCH_LEVEL" >&5

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "continue"; then
      _SCI_NOTCORRECT_='continue'
    fi

    if test "-ne"; then
      _SCI_COMP_="-ne"
    else
      _SCI_COMP_="-gt"
    fi

    eval "echo $TCL_VERSION$TCL_PATCH_LEVEL 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_=$_SCI_REPORT_

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_=$_SCI_VER_2_
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      echo "$ac_t""yes ($_SCI_REPORT_)" 1>&6
      eval $_SCI_CORRECT_
    else
      echo "$ac_t""no ($_SCI_REPORT_)" 1>&6
      eval $_SCI_NOTCORRECT_
    fi
  



























##  --  search for xerces-c++ stuff  --------------------------------------
echo
echo "checking for required Xerces-C++ components..." 1>&6
echo "configure:13961: checking for required Xerces-C++ components..." >&5
echo

case $host in
  *aix*)
      # Needed on blue pacific for stricmp
      XML_EXTRA_LIBS=-lcfgdce
      ;;
esac

FOUND_ALL_XERCESC=no
dirs="$xercesc/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   xerces-c"
       echo "   function:   main"
       echo "   other-libs: $XML_EXTRA_LIBS"
       echo "   c++ lib:    yes"
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_="yes"
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for xerces-c) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes xerces-c (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo xerces-c | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lxerces-c""... $ac_c" 1>&6
echo "configure:14039: checking for -lxerces-c" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lxerces-c""... $ac_c" 1>&6
echo "configure:14045: checking for main in -lxerces-c" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$XML_EXTRA_LIBS"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lxerces-c $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libxerces-c.a" -o -f "$_CHECK_PATH_/libxerces-c.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBXERCES_C/../include/xercesc"
       echo "   headers:     \
    dom/DOM_NamedNodeMap.hpp util/PlatformUtils.hpp \
    parsers/DOMParser.hpp dom/DOM_Node.hpp \
    util/XMLUni.hpp sax/SAXException.hpp sax/SAXParseException.hpp \
    sax/ErrorHandler.hpp"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBXERCES_C/../include/xercesc NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="\
    dom/DOM_NamedNodeMap.hpp util/PlatformUtils.hpp \
    parsers/DOMParser.hpp dom/DOM_Node.hpp \
    util/XMLUni.hpp sax/SAXException.hpp sax/SAXParseException.hpp \
    sax/ErrorHandler.hpp"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for \
    dom/DOM_NamedNodeMap.hpp util/PlatformUtils.hpp \
    parsers/DOMParser.hpp dom/DOM_Node.hpp \
    util/XMLUni.hpp sax/SAXException.hpp sax/SAXParseException.hpp \
    sax/ErrorHandler.hpp) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:14287: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:14404: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
    


# All xerces includes are equivalent, so...
INCXERCESC_H=$INCDOM_DOM_NODE_HPP
if test "$INCXERCESC_H" = ""; then
   
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: xercesc_h not found... something is strange..." 1>&2; exit 1; }
  
fi



##  --  search for mpi  --------------------------------------------------

if test "$uintah" = "yes"; then
  echo
  echo "checking for required MPI components..." 1>&6
echo "configure:14540: checking for required MPI components..." >&5
  echo
else
  echo
  echo "checking for optional components..." 1>&6
echo "configure:14545: checking for optional components..." >&5
  echo
fi

MPI=''

case $host in
#  *aix*)
      # On LLNL blue pacific, the "mp" compilers (scripts) automagically
      # include the paths to mpi stuff...  However, if you don't want 
      # them to automatically force you to run in poe (batch) mode, you
      # can comment this out and link in MPI directly yourself.
      # The resulting executable works in non-mpi mode which can be easier
      # to debug (and to get to run as you don't go through the poe system.)
      # It is possible that the executable will not work in MPI mode.
      #
      # AC_MSG_WARN(On blue pacific the mp compilers automatically specify mpi.  No check made.)
      #
      # The reason you have to specify xlC/KCC above, and change it to
      # mpxlC/mpKCC here is that configure uses the compiler to create test
      # programs to figure things out about the system.  If you use
      # the mpCC compiler, then the test programs will not run (as they
      # try to run in POE mode.)
      #
      # CC="mp$CC"
      # CXX="mp$CXX"
      # ;;
   *)
      dirs="$mpi/lib $thirdparty/lib $SCI_LAB_TP_LIBS"

      
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   mpi"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for mpi) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes mpi (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo mpi | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lmpi""... $ac_c" 1>&6
echo "configure:14640: checking for -lmpi" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lmpi""... $ac_c" 1>&6
echo "configure:14646: checking for main in -lmpi" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lmpi $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libmpi.a" -o -f "$_CHECK_PATH_/libmpi.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

      if test -z "$HAVE_LIBMPI"; then
         
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   mpich"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for mpich) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes mpich (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo mpich | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lmpich""... $ac_c" 1>&6
echo "configure:14871: checking for -lmpich" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lmpich""... $ac_c" 1>&6
echo "configure:14877: checking for main in -lmpich" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lmpich $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libmpich.a" -o -f "$_CHECK_PATH_/libmpich.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
         if test "$HAVE_LIBMPICH"; then
            MPI="-lmpich -lpmpich"
         fi
      else
         MPI=-lmpi
      fi

      ## Only one of LIBMPI and LIBMPICH will be non-blank:
      
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "$LIBMPI""$LIBMPICH"/../include"
       echo "   headers:     mpi.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=""$LIBMPI""$LIBMPICH"/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="mpi.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for mpi.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:15115: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:15232: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

      if (test "$HAVE_LIBMPI" || test "$HAVE_LIBMPICH") && test "$HAVE_MPI_H"; then
         FOUND_ALL_MPI=yes
         if test "$HAVE_LIBMPICH"; then
           DEF_MPICH="#define HAVE_MPICH 1"
           LIBMPI=$LIBMPICH
           MPI_LIBRARY=$MPICH_LIBRARY
           HAVE_MPI=$HAVE_MPICH
         else
           DEF_MPI="#define HAVE_MPI 1"
         fi
      fi
esac

if test "$FOUND_ALL_MPI" != "yes" && test "$uintah" = "yes"; then
   echo
   
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: one or more of the MPI components is missing." 1>&2; exit 1; }
  
fi








##  --  if building uintah, search for TAU makefile  ---------------------

if test "$uintah" = "yes"; then
  if test "$tau" ; then
    if test ! -f "$tau" ; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: '$tau' does not exist.  Bye!" 1>&2; exit 1; }
  
    fi

    echo "$ac_t""Using TAU makefile: $tau" 1>&6

    TAU_MAKEFILE=${tau}

    cat > conftest-tau.cc <<EOF

    #include <Profile/Profiler.h>

    int main(int argc, char **argv)
    {
      TAU_PROFILE("main", "int (int, char **)", TAU_DEFAULT);
      TAU_PROFILE_INIT(argc, argv);
      return 0;
    }
EOF

    cat > conftest-tau-makefile <<EOF
include $(TAU_MAKEFILE)
all:
	$(TAU_CXX) -o conftest-tau-a.out $(TAU_DEFS) $(TAU_INCLUDE) conftest-tau.cc $(TAU_SHLIBS) $(TAU_MPI_LIBS)
EOF

    ac_try="make TAU_MAKEFILE=${tau} -f conftest-tau-makefile > conftestout1) 2> conftesterr1"
    (eval $ac_try) 2>&5
    ac_status=$?
    if $ac_status; then
      rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: TAU libraries not working. Bye!" 1>&2; exit 1; }
  
    fi
    rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
  fi
fi



##  ----------------------------------------------------------------------
##  ----------  search for optional libraries and headers  ---------------
##  ----------------------------------------------------------------------

if test "$uintah" = "yes"; then
  echo
  echo "checking for optional components..." 1>&6
echo "configure:15446: checking for optional components..." >&5
  echo
fi

##  --  search for teem  -------------------------------------------------

dirs="$teem/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   air"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for air) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes air (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo air | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lair""... $ac_c" 1>&6
echo "configure:15519: checking for -lair" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lair""... $ac_c" 1>&6
echo "configure:15525: checking for main in -lair" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lair $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libair.a" -o -f "$_CHECK_PATH_/libair.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   biff"
       echo "   function:   main"
       echo "   other-libs: -lair"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for biff) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes biff (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo biff | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lbiff""... $ac_c" 1>&6
echo "configure:15748: checking for -lbiff" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lbiff""... $ac_c" 1>&6
echo "configure:15754: checking for main in -lbiff" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="-lair"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lbiff $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libbiff.a" -o -f "$_CHECK_PATH_/libbiff.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   nrrd"
       echo "   function:   main"
       echo "   other-libs: -lbiff -lair"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for nrrd) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes nrrd (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo nrrd | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lnrrd""... $ac_c" 1>&6
echo "configure:15977: checking for -lnrrd" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lnrrd""... $ac_c" 1>&6
echo "configure:15983: checking for main in -lnrrd" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="-lbiff -lair"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lnrrd $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libnrrd.a" -o -f "$_CHECK_PATH_/libnrrd.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   ell"
       echo "   function:   main"
       echo "   other-libs: -lair -lbiff -lnrrd"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for ell) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes ell (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo ell | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lell""... $ac_c" 1>&6
echo "configure:16206: checking for -lell" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lell""... $ac_c" 1>&6
echo "configure:16212: checking for main in -lell" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="-lair -lbiff -lnrrd"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lell $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libell.a" -o -f "$_CHECK_PATH_/libell.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBNRRD/../include"
       echo "   headers:     nrrd.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBNRRD/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="nrrd.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for nrrd.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:16442: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:16559: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

if test "$INCNRRD_H"; then
   LIBTEEM=$LIBNRRD
   INCTEEM_H=-I$LIBNRRD/../include
   HAVE_LIBTEEM=yes
   DEF_TEEM="#define HAVE_TEEM 1"
fi






##  --  search for mpeg  -------------------------------------------------

dirs="$mpeg/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   mpege"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for mpege) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes mpege (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo mpege | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lmpege""... $ac_c" 1>&6
echo "configure:16752: checking for -lmpege" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lmpege""... $ac_c" 1>&6
echo "configure:16758: checking for main in -lmpege" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lmpege $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libmpege.a" -o -f "$_CHECK_PATH_/libmpege.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test -z "$HAVE_LIBMPEGE"; then
  DEF_MPEG="#define HAVE_MPEG 1"
else
  DEF_MPEG="#define HAVE_MPEG 1"
fi






##  --  search for mdsplus  -------------------------------------------------

dirs="$mdsplus/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   MdsLib_client"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    no"
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_="no"
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for MdsLib_client) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes MdsLib_client (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo MdsLib_client | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lMdsLib_client""... $ac_c" 1>&6
echo "configure:16997: checking for -lMdsLib_client" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lMdsLib_client""... $ac_c" 1>&6
echo "configure:17003: checking for main in -lMdsLib_client" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lMdsLib_client $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libMdsLib_client.a" -o -f "$_CHECK_PATH_/libMdsLib_client.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
# Slight name change for convience
if test "$HAVE_LIBMDSLIB_CLIENT"; then
   LIBMDSPLUS="$LIBMDSLIB_CLIENT"
fi


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBMDSPLUS/../include"
       echo "   headers:     mdslib.h"
       echo "   other-paths: "
       echo "   c++ lib:     no"
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBMDSPLUS/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="mdslib.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_="no"
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for mdslib.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:17238: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:17355: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
# Slight name change for convience
if test "$HAVE_MDSLIB_H"; then
   INCMDSPLUS_H=$INCMDSLIB_H
fi

if test "$HAVE_LIBMDSLIB_CLIENT" && test "$HAVE_MDSLIB_H"; then
    DEF_MDSPLUS="#define HAVE_MDSPLUS 1"
fi

if test "$mdsplus" && test ! "$DEF_MDSPLUS"; then
  echo
  { echo "configure: error: One or more of the MDS PLUS components is missing." 1>&2; exit 1; }
  echo
fi





##  --  search for perfex  -----------------------------------------------
dirs="$perfex $thirdparty $SCI_LAB_TP_LIBS"

    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   perfex"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for perfex) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes perfex (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo perfex | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lperfex""... $ac_c" 1>&6
echo "configure:17552: checking for -lperfex" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lperfex""... $ac_c" 1>&6
echo "configure:17558: checking for main in -lperfex" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lperfex $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libperfex.a" -o -f "$_CHECK_PATH_/libperfex.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$LIBPERFEX"; then
  PERFEX_LIBRARY=-lperfex
  DEF_PERFEX="#define HAVE_PERFEX 1"
fi




##  --  search for fastm  --------------------------------------------------


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $thirdparty/lib"
       echo "   lib name:   fastm"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for fastm) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes fastm (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo fastm | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lfastm""... $ac_c" 1>&6
echo "configure:17792: checking for -lfastm" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lfastm""... $ac_c" 1>&6
echo "configure:17798: checking for main in -lfastm" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$thirdparty/lib NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lfastm $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libfastm.a" -o -f "$_CHECK_PATH_/libfastm.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$HAVE_FASTM"; then
  DEF_FASTM="#define HAVE_FASTM 1"
fi





##  --  search for ssl  --------------------------------------------------


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $thirdparty/lib"
       echo "   lib name:   ssl"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for ssl) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes ssl (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo ssl | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lssl""... $ac_c" 1>&6
echo "configure:18032: checking for -lssl" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lssl""... $ac_c" 1>&6
echo "configure:18038: checking for main in -lssl" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$thirdparty/lib NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lssl $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libssl.a" -o -f "$_CHECK_PATH_/libssl.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$HAVE_LIBSSL"; then
  DEF_SSL="#define HAVE_SSL 1"
fi





##  --  search for crypto  -----------------------------------------------


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $thirdparty/lib"
       echo "   lib name:   crypto"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for crypto) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes crypto (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo crypto | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lcrypto""... $ac_c" 1>&6
echo "configure:18272: checking for -lcrypto" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lcrypto""... $ac_c" 1>&6
echo "configure:18278: checking for main in -lcrypto" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$thirdparty/lib NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lcrypto $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libcrypto.a" -o -f "$_CHECK_PATH_/libcrypto.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$HAVE_LIBCRYPTO"; then
  DEF_CRYPTO="#define HAVE_CRYPTO 1"
fi





##  --  search for SGI'S traceback library  ------------------------------ 


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $thirdparty/lib"
       echo "   lib name:   exc"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for exc) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes exc (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo exc | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lexc""... $ac_c" 1>&6
echo "configure:18512: checking for -lexc" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lexc""... $ac_c" 1>&6
echo "configure:18518: checking for main in -lexc" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$thirdparty/lib NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lexc $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libexc.a" -o -f "$_CHECK_PATH_/libexc.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
if test "$HAVE_LIBEXC"; then
  
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $thirdparty/lib"
       echo "   headers:     libexc.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$thirdparty/lib NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="libexc.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for libexc.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:18749: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:18866: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
fi

if test "$HAVE_LIBEXC" && test "$HAVE_LIBEXC_H"; then
  TRACEBACK_LIB=-lexc
  DEF_EXC="#define HAVE_EXC 1"
fi






##  --  globus nexus  ----------------------------------------------------

GLOBUS_INCLUDE=""
GLOBUS_LIB=""
dirs="$with_globus/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   globus_dc"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for globus_dc) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes globus_dc (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo globus_dc | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lglobus_dc""... $ac_c" 1>&6
echo "configure:19060: checking for -lglobus_dc" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lglobus_dc""... $ac_c" 1>&6
echo "configure:19066: checking for main in -lglobus_dc" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lglobus_dc $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libglobus_dc.a" -o -f "$_CHECK_PATH_/libglobus_dc.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
#  SCI_CHECK_LIB($i/lib,globus_utp,main,,continue,
#    $SSL_LIBRARY -lssl $CRYPTO_LIBRARY -lcrypto,,yes)
#  SCI_CHECK_LIB($i/lib,globus_mp,main,,continue,
#    -lglobus_utp $SSL_LIBRARY -lssl $CRYPTO_LIBRARY -lcrypto,,yes)
#  SCI_CHECK_LIB($i/lib,globus_gss_assist,main,,continue,
#    -lglobus_mp -lglobus_utp $SSL_LIBRARY -lssl $CRYPTO_LIBRARY -lcrypto,,yes)
#  SCI_CHECK_LIB($i/lib,globus_gss,main,,continue,
#    -lglobus_gss_assist -lglobus_mp -lglobus_utp $SSL_LIBRARY -lssl \
#    $CRYPTO_LIBRARY -lcrypto,,yes)
#  SCI_CHECK_LIB($i/lib,globus_gaa,main,,continue,
#    -lglobus_gss -lglobus_gss_assist -lglobus_mp -lglobus_utp \
#    $SSL_LIBRARY -lssl $CRYPTO_LIBRARY -lcrypto,,yes)


    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBGLOBUS_DC/../include"
       echo "   headers:     globus_nexus.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBGLOBUS_DC/../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="globus_nexus.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for globus_nexus.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:19309: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:19426: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

if test "$HAVE_LIBGLOBUS_DC" -a "$INCGLOBUS_NEXUS_H"; then
    FOUND_ALL_GLOBUS=yes
    DEF_GLOBUS="#define HAVE_GLOBUS 1"
    GLOBUS_INCLUDE="-I$LIBGLOBUS_DC/../include"
    GLOBUS_LIB="$LIBGLOBUS_DC"
    is_linux=`echo $host | sed 's/.*linux.*/linux/'`
    if test "$is_linux" = "linux"; then
      GLOBUS_EXTRA_DIRS="-lglobus_gaa -lglobus_gss -lglobus_gss_assist -lglobus_mp -lglobus_utp $SSL_LIBRARY -lssl $CRYPTO_LIBRARY -lcrypto"
    fi
fi






##  --  search for uuid functions, either uuid_create or uuid_generate ----

# This is typical on SGI and ??
echo $ac_n "checking for uuid_create in sys/uuid.h""... $ac_c" 1>&6
echo "configure:19558: checking for uuid_create in sys/uuid.h" >&5
cat > conftest.$ac_ext <<EOF
#line 19560 "configure"
#include "confdefs.h"
#include <sys/types.h>
             extern "C" {
                #include <sys/uuid.h>
             }
int main() {
char* uuid_str;
	 uuid_t uuid;
	 uint_t status;
	 uuid_create(&uuid, &status);
; return 0; }
EOF
if { (eval echo configure:19573: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  have_uuid=yes
         cat >> confdefs.h <<\EOF
#define HAVE_SYS_UUID_H 1
EOF

else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  have_uuid=no
fi
rm -f conftest*
echo "$ac_t""$have_uuid" 1>&6

if test "$have_uuid" != "yes"; then
  # This is typical on linux and ??
  echo $ac_n "checking for uuid_generate in uuid/uuid.h""... $ac_c" 1>&6
echo "configure:19592: checking for uuid_generate in uuid/uuid.h" >&5
  cat > conftest.$ac_ext <<EOF
#line 19594 "configure"
#include "confdefs.h"

extern "C" { // The linux uuid.h doesn't have this, so we need exter C here
#include <uuid/uuid.h>
}
int main() {
uuid_t uuid;
	 char uuid_str[64];
	 uuid_generate(uuid);
	 uuid_unparse(uuid, uuid_str);
; return 0; }
EOF
if { (eval echo configure:19607: \"$ac_compile\") 1>&5; (eval $ac_compile) 2>&5; }; then
  rm -rf conftest*
  have_uuid=yes
         cat >> confdefs.h <<\EOF
#define HAVE_UUID_UUID_H 1
EOF

else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
  rm -rf conftest*
  have_uuid=no
fi
rm -f conftest*
  echo "$ac_t""$have_uuid" 1>&6
fi

if test "$have_uuid" = "yes"; then
  echo $ac_n "checking for uuid library""... $ac_c" 1>&6
echo "configure:19626: checking for uuid library" >&5
  old_LIBS=$LIBS
  UUID_LIB=unknown
  for i in "" -luuid; do
    LIBS="$old_LIBS $i"
    cat > conftest.$ac_ext <<EOF
#line 19632 "configure"
#include "confdefs.h"

#if HAVE_SYS_UUID_H
#include <sys/types.h>
extern "C" { // SGI uuid.h doesn't have this, so we need extern C here
#include <sys/uuid.h>
}
#define UUID_CREATE
#else
#if HAVE_UUID_UUID_H
extern "C" { // The linux uuid.h does not have this, so we need extern C here
#include <uuid/uuid.h>
}
#define UUID_GENERATE
#else
#error We need either sys/uuid.h or uuid/uuid.h
#endif
#endif
	
int main() {

  uuid_t uuid;
#if defined(UUID_CREATE)
  char* uuid_str;
  uint_t status;
  uuid_create(&uuid, &status);
  uuid_to_string(&uuid, &uuid_str, &status);
#else
#if defined( UUID_GENERATE)
  char uuid_str[64];
  uuid_generate( uuid );
  uuid_unparse(uuid, uuid_str);
#endif
#endif
	
; return 0; }
EOF
if { (eval echo configure:19670: \"$ac_link\") 1>&5; (eval $ac_link) 2>&5; } && test -s conftest${ac_exeext}; then
  rm -rf conftest*
  
  UUID_LIB=$i
  break
	
else
  echo "configure: failed program was:" >&5
  cat conftest.$ac_ext >&5
fi
rm -f conftest*
  done
  if test "$UUID_LIB" != unknown; then
    if test -z "$UUID_LIB"; then
      echo "$ac_t""none required" 1>&6
    else
      echo "$ac_t""$UUID_LIB" 1>&6
    fi
  else
    echo "$ac_t""not found" 1>&6
    have_uuid=no
  fi
fi



##  --  search for Qt  ----------------------------------------------------

FOUND_ALL_QT=no
QT_INCLUDE=""
QT_LIB=""
QT_MOC_BIN=""

dirs="$with_qt/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   qt-mt"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for qt-mt) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes qt-mt (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo qt-mt | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lqt-mt""... $ac_c" 1>&6
echo "configure:19770: checking for -lqt-mt" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lqt-mt""... $ac_c" 1>&6
echo "configure:19776: checking for main in -lqt-mt" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lqt-mt $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libqt-mt.a" -o -f "$_CHECK_PATH_/libqt-mt.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

echo "checking for moc in $LIBQT_MT/../bin" 1>&6
echo "configure:19936: checking for moc in $LIBQT_MT/../bin" >&5
# Extract the first word of "moc", so it can be a program name with args.
set dummy moc; ac_word=$2
echo $ac_n "checking for $ac_word""... $ac_c" 1>&6
echo "configure:19940: checking for $ac_word" >&5
if eval "test \"`echo '$''{'ac_cv_prog_QT_MOC_BIN'+set}'`\" = set"; then
  echo $ac_n "(cached) $ac_c" 1>&6
else
  if test -n "$QT_MOC_BIN"; then
  ac_cv_prog_QT_MOC_BIN="$QT_MOC_BIN" # Let the user override the test.
else
  IFS="${IFS= 	}"; ac_save_ifs="$IFS"; IFS=":"
  ac_dummy="$LIBQT_MT/../bin"
  for ac_dir in $ac_dummy; do
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$ac_word; then
      ac_cv_prog_QT_MOC_BIN="$ac_dir/moc"
      break
    fi
  done
  IFS="$ac_save_ifs"
  test -z "$ac_cv_prog_QT_MOC_BIN" && ac_cv_prog_QT_MOC_BIN="NOMOC"
fi
fi
QT_MOC_BIN="$ac_cv_prog_QT_MOC_BIN"
if test -n "$QT_MOC_BIN"; then
  echo "$ac_t""$QT_MOC_BIN" 1>&6
else
  echo "$ac_t""no" 1>&6
fi


if test "$HAVE_LIBQT_MT" && test $QT_MOC_BIN != "NOMOC"; then
   FOUND_ALL_QT=yes
   DEF_QT="#define HAVE_QT 1"
   HAVE_QT="yes"
   QT_INCLUDE="-I$LIBQT_MT/../include"
   QT_LIB="$LIBQT_MT"
fi






##  --  search for VDT  ----------------------------------------------------

FOUND_ALL_VDT=no
VDT_INCLUDE=""
VDT_LIB=""
VDT_ADDITIONAL_LIBS=""

if test $wantvdt = "yes"; then
  for i in $with_vdt $thirdparty $SCI_LAB_TP_DEFAULT; do
    if test ! -d "$i"; then
      continue
    fi
  
    #from here we should find src/vdt/bin
    if test ! -d "$i/src/vdt/bin"; then
      continue
    fi
  
    guess=`sh $i/src/vdt/bin/config.guess`
    ad=`sh $i/src/vdt/bin/config.sub $guess`
  
    #this is where the lib actually lives
    if test ! -d "$i/src/vdt/VDT/lib/$ad"; then
      continue
    fi
  
  	  
  # Testing the link also need by vdt to link is:
    VDT_LIB_PATH="-L$i/src/vdt/G3D/lib/$ad -L$i/src/vdt/Ckit/lib/$ad -L$i/src/vdt/LOBS/lib/$ad -L$i/src/vdt/PiRaT/lib/$ad -L$i/src/vdt/Meschach/$ad -L$i/src/vdt/lp_solve_2.2/$ad -L$i/src/vdt/Elixir/lib/$ad -L$i/src/vdt/VDT/lib/$ad $X_LIBRARY"
  
    VDT_NEEDED_LIBRARIES='-lesi -lelixir -llpk -lpirat -llobs3d -llobs2d -llobs1d -lg3d -lckit -lmeschach -lX11 -lXext -lXaw -lXt -lXmu -lm'
  
    
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $i/src/vdt/VDT/lib/$ad"
       echo "   lib name:   vdt"
       echo "   function:   VDT_triangulate"
       echo "   other-libs: $VDT_LIB_PATH $VDT_NEEDED_LIBRARIES $LEXLIB"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for vdt) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes vdt (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo vdt | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "VDT_triangulate" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lvdt""... $ac_c" 1>&6
echo "configure:20078: checking for -lvdt" >&5
    else
       _SCI_DECL_="char VDT_triangulate();"
       _SCI_CALL_="VDT_triangulate();"

       echo $ac_n "checking for VDT_triangulate in -lvdt""... $ac_c" 1>&6
echo "configure:20084: checking for VDT_triangulate in -lvdt" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$VDT_LIB_PATH $VDT_NEEDED_LIBRARIES $LEXLIB"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$i/src/vdt/VDT/lib/$ad NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lvdt $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libvdt.a" -o -f "$_CHECK_PATH_/libvdt.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    if test "$HAVE_LIBVDT"; then
  	FOUND_ALL_VDT=yes
  	DEF_VDT="#define HAVE_VDT 1"
  	HAVE_VDT="yes"
  	VDT_INCLUDE="-I$i/src/vdt/VDT/src"
  	VDT_LIB="$i/src/vdt/VDT/lib/$ad"
  	ELIXIR_LIB="$i/src/vdt/Elixir/lib/$ad"
  	LP_SOLVE_LIB="$i/src/vdt/lp_solve_2.2/$ad"
  	MESCHACH_LIB="$i/src/vdt/Meschach/$ad"
  	PIRAT_LIB="$i/src/vdt/PiRaT/lib/$ad"
  	LOBS_LIB="$i/src/vdt/LOBS/lib/$ad"
  	CKIT_LIB="$i/src/vdt/Ckit/lib/$ad"
  	G3D_LIB="$i/src/vdt/G3D/lib/$ad"
  	VDT_LINK="-lvdt $VDT_NEEDED_LIBRARIES $LEXLIB"
    fi
  done
fi
 














##  --  search for ImageMagick --------------------------------------

FOUND_ALL_MAGICK=no
MAGICK_INCLUDE=""
MAGICK_LIB=""
MAGICK_ADDITIONAL_LIBS=""

for i in $with_imagemagick $thirdparty $SCI_LAB_TP_DEFAULT; do
  if test ! -d "$i"; then
    continue
  fi

  #this is where the lib actually lives
  if test ! -d "$i/lib"; then
    continue
  fi

  #this is where the scripts for configuration live
  if test ! -d "$i/bin"; then
    continue
  fi

  # capture in the libs to link
  if test -e $i/bin/Magick-config; then
    IM_LDFLAGS=`$i/bin/Magick-config --ldflags`
    IM_LIBS=`$i/bin/Magick-config --libs`
  else
    continue
  fi

  
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $i/lib"
       echo "   lib name:   Magick"
       echo "   function:   WriteImage"
       echo "   other-libs: $IM_LDFLAGS $IM_LIBS"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for Magick) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes Magick (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo Magick | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "WriteImage" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lMagick""... $ac_c" 1>&6
echo "configure:20370: checking for -lMagick" >&5
    else
       _SCI_DECL_="char WriteImage();"
       _SCI_CALL_="WriteImage();"

       echo $ac_n "checking for WriteImage in -lMagick""... $ac_c" 1>&6
echo "configure:20376: checking for WriteImage in -lMagick" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$IM_LDFLAGS $IM_LIBS"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$i/lib NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lMagick $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libMagick.a" -o -f "$_CHECK_PATH_/libMagick.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

  if test "$HAVE_LIBMAGICK"; then
      FOUND_ALL_MAGICK=yes
      DEF_MAGICK="#define HAVE_MAGICK 1"
      HAVE_MAGICK="yes"
      MAGICK_INCLUDE="-I$i/include"
      LIBMAGICK="$i/lib"
      #parse out the -L parts and leave only the -l parts
      MAGICK_LINK=`echo $IM_LIBS | sed 's|-L[A-Za-z0-9/\.\-]* ||g'`
  fi
  break
done
 






##  --  See if we have everything needed for SCIRun2 ----------------------

if test "$enable_scirun2" = "yes"; then
  if test "$FOUND_ALL_GLOBUS" != "yes"; then
    if test "$with_globus" = "no"; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Must include --with-globus with --enable-scirun2" 1>&2; exit 1; }
  
    else
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Globus not found required for scirun2" 1>&2; exit 1; }
  
    fi
    exit 1
  fi
  if test "$have_uuid" != "yes"; then
    case $host in
      *linux*)
        
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: uuid_generate function and libuuid not found" 1>&2; exit 1; }
  
        ;;
      *)
        
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Cannot find uuid_generate or uuid_create" 1>&2; exit 1; }
  
        ;;
    esac
    exit 1
  fi
# Do not require Qt for SCIRun2 yet: 
#  if test "$FOUND_ALL_QT" != "yes"; then
#    if test "$with_qt" = "no"; then
#      SCI_MSG_ERROR(Must include --with-qt with --enable-scirun2)
#    else
#      SCI_MSG_ERROR(Qt not found required for scirun2)
#    fi
#    exit 1
#  fi
  SCIRUN2_DEFINE="#define SCIRUN2"
  BUILD_SCIRUN2="yes"
else
  SCIRUN2_DEFINE=""
  BUILD_SCIRUN2="no"
fi



##  --  search for gzopen (and related)  ----------------------------------

dirs="$with_zlib/lib $thirdparty/lib $SCI_LAB_TP_LIBS"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   z"
       echo "   function:   main"
       echo "   other-libs: "
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for z) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes z (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo z | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lz""... $ac_c" 1>&6
echo "configure:20698: checking for -lz" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lz""... $ac_c" 1>&6
echo "configure:20704: checking for main in -lz" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_=""

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lz $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libz.a" -o -f "$_CHECK_PATH_/libz.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBZ/../include $dirs"
       echo "   headers:     zlib.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBZ/../include $dirs NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="zlib.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for zlib.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:20934: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:21051: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

DEF_Z="#define HAVE_ZLIB 1"
LIBZ_FLAG="$Z_LIBRARY -lz"
LIBZ_INCLUDE=$INCZLIB_H





##  --  search for glut and glui -----------------------------------------

if test "$need_rtrt" = "yes"; then

   dirs="$with_glut/$BASE_LIB_DIR $thirdparty/lib $SCI_LAB_TP_LIBS"
   
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   glut"
       echo "   function:   main"
       echo "   other-libs: $GLU_LIBRARY -lGLU $GL_LIBRARY -lGL"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for glut) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes glut (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo glut | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lglut""... $ac_c" 1>&6
echo "configure:21241: checking for -lglut" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lglut""... $ac_c" 1>&6
echo "configure:21247: checking for main in -lglut" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$GLU_LIBRARY -lGLU $GL_LIBRARY -lGL"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lglut $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libglut.a" -o -f "$_CHECK_PATH_/libglut.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
   
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $with_glut/include $LIBGLUT/../include $thirdparty/include"
       echo "   headers:     GL/glut.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$with_glut/include $LIBGLUT/../include $thirdparty/include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="GL/glut.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for GL/glut.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:21477: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:21594: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

   dirs="$with_glui/$BASE_LIB_DIR $thirdparty/lib $SCI_LAB_TP_LIBS"
   
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   glui"
       echo "   function:   main"
       echo "   other-libs: $GLUT_LIBRARY -lglut $GLU_LIBRARY -lGLU $GL_LIBRARY -lGL"
       echo "   c++ lib:    "
       echo "   optional:   not-optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="not-optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for glui) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes glui (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo glui | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lglui""... $ac_c" 1>&6
echo "configure:21772: checking for -lglui" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lglui""... $ac_c" 1>&6
echo "configure:21778: checking for main in -lglui" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$GLUT_LIBRARY -lglut $GLU_LIBRARY -lGLU $GL_LIBRARY -lGL"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lglui $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libglui.a" -o -f "$_CHECK_PATH_/libglui.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
   
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $with_glui/include $LIBGLUI/../include $thirdparty/include"
       echo "   headers:     glui.h"
       echo "   other-paths: $INCGL_GLUT_H"
       echo "   c++ lib:     "
       echo "   optional:    not-optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$with_glui/include $LIBGLUI/../include $thirdparty/include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="glui.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="not-optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for glui.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:22008: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCGL_GLUT_H >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:22125: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS $INCGL_GLUT_H >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

   
   

   
   
fi

##  --  search for blas stuff  -------------------------------------------

dirs="$blas/lib $thirdparty/lib $SCI_LAB_TP_LIBS"

case $host in
  *aix*)
     
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   essl"
       echo "   function:   main"
       echo "   other-libs: $FLIBS"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for essl) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes essl (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo essl | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lessl""... $ac_c" 1>&6
echo "configure:22315: checking for -lessl" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lessl""... $ac_c" 1>&6
echo "configure:22321: checking for main in -lessl" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$FLIBS"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lessl $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libessl.a" -o -f "$_CHECK_PATH_/libessl.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
     if test "$HAVE_LIBESSL"; then
        BLAS_DEF="#define BLAS_ENABLED 1 /* using libessl */"
        LIBBLAS=$LIBESSL
        BLAS_LIB="-lessl"
     fi
     ;;
  *)
     
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   blas"
       echo "   function:   main"
       echo "   other-libs: $FLIBS"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for blas) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes blas (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo blas | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lblas""... $ac_c" 1>&6
echo "configure:22551: checking for -lblas" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lblas""... $ac_c" 1>&6
echo "configure:22557: checking for main in -lblas" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="$FLIBS"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lblas $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libblas.a" -o -f "$_CHECK_PATH_/libblas.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
     ;;
esac

if test "$HAVE_LIBBLAS"; then
  BLAS_DEF="#define BLAS_ENABLED 1"
  BLAS_LIB="-lblas"
fi


# -lblas or -lessl

# -L/path/to/blas/or/essl


##  --  search for lapack stuff  -----------------------------------------

BLAS_PATH=""
if test "$LIBBLAS"; then
  BLAS_PATH=`dirname $LIBBLAS`
fi

dirs="$lapack/lib $BLAS_PATH/lib $thirdparty/lib $SCI_LAB_TP_LIBS"

#  SCI_CHECK_LIB($i/lib,lapack,main,
#    LAPACK="-llapack"; break,,
#    $BLAS_LIBRARY -lblas $FLIBS,,yes)
#  SCI_CHECK_LIB($i/lib,complib.sgimath,main,
#    LIBLAPACK="$i/lib"; 
#    LAPACK="-lcomplib.sgimath"; break,,
#    $BLAS_LIBRARY -lblas $FLIBS,,yes)
#  SCI_CHECK_LIB($i/lib,complib.sgimath_mp,main,
#    LIBLAPACK="$i/lib"; 
#    LAPACK="-lcomplib.sgimath_mp"; break,continue,
#    $BLAS_LIBRARY -lblas $FLIBS,,yes)

if test "$LIBLAPACK"; then
  LAPACK_DEF="#define LAPACK_ENABLED 1"
  if test "$LIBLAPACK" != "/usr/lib" ||
     test "$LIBLAPACK" != "/lib" ||
     test "$LIBLAPACK" != "/usr/lib/" ||
     test "$LIBLAPACK" != "/lib/"; then
    LAPACK_LIBRARY=-L$LIBLAPACK
  fi
fi






##  --  search for hypre stuff  ------------------------------------------

if test "$uintah" = "yes"; then

  dirs="$with_hypre/lib $thirdparty/lib $SCI_LAB_TP_LIBS"

  
    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   HYPRE_LSI"
       echo "   function:   main"
       echo "   other-libs: \
	-lHYPRE_blas -lHYPRE_struct_ls -lHYPRE_struct_mv"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for HYPRE_LSI) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes HYPRE_LSI (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo HYPRE_LSI | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lHYPRE_LSI""... $ac_c" 1>&6
echo "configure:22837: checking for -lHYPRE_LSI" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lHYPRE_LSI""... $ac_c" 1>&6
echo "configure:22843: checking for main in -lHYPRE_LSI" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="\
	-lHYPRE_blas -lHYPRE_struct_ls -lHYPRE_struct_mv"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lHYPRE_LSI $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libHYPRE_LSI.a" -o -f "$_CHECK_PATH_/libHYPRE_LSI.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  
  
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBHYPRE_LSI/../include $dirs"
       echo "   headers:     HYPRE.h"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBHYPRE_LSI/../include $dirs NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="HYPRE.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for HYPRE.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:23074: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:23191: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  

  # Set up the generic vars
  HAVE_LIBHYPRE=$HAVE_LIBHYPRE_LSI
  LIBHYPRE=$LIBHYPRE_LSI
  LIBHYPRE_LIBRARY=$LIBHYPRE_LSI_LIBRARY
  
  
  
  
fi

##  --  search for petsc stuff  ------------------------------------------

# We only use the optimized petsc lib even if we are building a debug SCIRun
#if test "$debug" = "yes"; then
#  PETSC_SUB=libg
#else
  PETSC_SUB=libO
#fi

PETSC_VERSION_DIR=petsc-2.1.1

case $host in
  *-irix*)
    if test "$is_64bit" = "yes"; then
      PETSC_ARCH=IRIX64
    else
      PETSC_ARCH=IRIX32
    fi
    ;;
  *linux*)
    PETSC_ARCH=linux
    ;;
  *-dec*)
    if test "$petsc"; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: PETSC ARCH not set for Tru64.  Need to fix this." 1>&2; exit 1; }
  
    else
      PETSC_ARCH=dec
    fi
    ;;
  *-aix*)
    PETSC_ARCH=rs6000_sp
    ;;
  *)
    PETSC_ARCH=unknown
    ;;
esac

echo "checking for an MPI PETSc..." 1>&6
echo "configure:23360: checking for an MPI PETSc..." >&5
echo "$ac_t""using PETSC_ARCH: $PETSC_ARCH" 1>&6

if test "$PETSC_ARCH" = "unknown"; then
   { echo "configure: error: PETSC_ARCH environment var is not set.  Please set." 1>&2; exit 1; }
fi

FOUND_ALL_PETSC=no

dirs=""
initial_dirs="$thirdparty $SCI_LAB_TP_DEFAULT"

# Modify dirs to have correct path information:
for i in $initial_dirs; do
  dirs="$dirs $i/$PETSC_VERSION_DIR/lib/$PETSC_SUB/$PETSC_ARCH"
done

dirs="$petsc/lib/$PETSC_SUB/$PETSC_ARCH $dirs"


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   petsc"
       echo "   function:   main"
       echo "   other-libs: \
    -lpetsccontrib -lpetscdm -lpetscmat -lpetscsles -lpetscsnes \
    -lpetscts -lpetscvec $LAPACK_LIBRARY $LAPACK $BLAS_LIBRARY $BLAS_LIB \
    $X_LIBRARY -lX11 $MPI_LIBRARY $MPI $FLIBS -lm"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for petsc) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes petsc (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo petsc | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lpetsc""... $ac_c" 1>&6
echo "configure:23447: checking for -lpetsc" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lpetsc""... $ac_c" 1>&6
echo "configure:23453: checking for main in -lpetsc" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="\
    -lpetsccontrib -lpetscdm -lpetscmat -lpetscsles -lpetscsnes \
    -lpetscts -lpetscvec $LAPACK_LIBRARY $LAPACK $BLAS_LIBRARY $BLAS_LIB \
    $X_LIBRARY -lX11 $MPI_LIBRARY $MPI $FLIBS -lm"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lpetsc $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libpetsc.a" -o -f "$_CHECK_PATH_/libpetsc.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$HAVE_LIBPETSC" = "yes"; then
  # Only check for the .h files if we have found the libs.
  
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBPETSC/../../../include"
       echo "   headers:     petsc.h"
       echo "   other-paths: \
                    $INCMPI_H -I$LIBPETSC/../../../bmake/$PETSC_ARCH"
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBPETSC/../../../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="petsc.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for petsc.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:23690: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS \
                    $INCMPI_H -I$LIBPETSC/../../../bmake/$PETSC_ARCH >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:23808: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS \
                    $INCMPI_H -I$LIBPETSC/../../../bmake/$PETSC_ARCH >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
fi

if test "$HAVE_LIBPETSC" = "yes" && test "$HAVE_PETSC_H"; then
    FOUND_ALL_PETSC=yes
    DEF_PETSC="#define HAVE_PETSC 1"
    PETSC_DIR=$LIBPETSC/../../..
    PETSC_EXTRA_LIBS="-lpetsccontrib -lpetscdm -lpetscmat \
      -lpetscsles -lpetscsnes -lpetscts -lpetscvec $LAPACK_LIBRARY $LAPACK \
      $BLAS_LIBRARY $BLAS_LIB $X_LIBRARY -lX11 $MPI_LIBRARY $MPI \
	$FLIBS -lm"
fi 

if test "$FOUND_ALL_PETSC" != "yes"; then

  ## Make it a fatal error if user uses --with-petsc and we don't find it.
  if test "$petsc"; then
      
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: You wanted PETSc but I could not find it! " 1>&2; exit 1; }
  
  fi

  LIBPETSC=""
  INCPETSC_H=""
  HAVE_LIBPETSC=""
  HAVE_PETSC_H=""
fi










##  --  search for uni-petsc  --------------------------------------------

echo "checking for an mpiuni PETSc..." 1>&6
echo "configure:23966: checking for an mpiuni PETSc..." >&5

FOUND_ALL_UNIPETSC=no
initial_dirs="$unipetsc $thirdparty $SCI_LAB_TP_DEFAULT"
dirs=""
for i in $initial_dirs; do
  dirs="$dirs $i/lib/$PETSC_SUB/$PETSC_ARCH"
done

if test "$PETSC_ARCH" = "unknown"; then
   { echo "configure: error: PETSC_ARCH environment var is not set.  Please set." 1>&2; exit 1; }
fi


    #######################################################
    ##  Begin: SCI_CHECK_LIB macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK LIB:"
       echo "   paths:      $dirs"
       echo "   lib name:   petsc"
       echo "   function:   main"
       echo "   other-libs: \
    -lpetscsles -lpetscmat -lpetscvec \
    -lpetscdm -lpetsccontrib $LAPACK_LIBRARY -llapack \
    $BLAS_LIBRARY $BLAS_LIB $X_LIBRARY -lX11 \
    -L$LIBPETSC/../../../$PETSC_SUB/$PETSC_ARCH -lmpiuni $FLIBS -lm"
       echo "   c++ lib:    "
       echo "   optional:   optional"
    fi

    ##########################
    ## CXX and OPTIONAL parameters

    _SCI_USING_CXX_=""
    _SCI_LIB_OPTIONAL_="optional"

    if test "$_SCI_LIB_OPTIONAL_" != "not-optional" -a \
       "$_SCI_LIB_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK LIB macro (for petsc) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ##########################
    ## LIB parameter: The following 'sed' capitalizes petsc (the library name.)
    ##
    ## EXAMPLE: if lib name is 'pthread'
    ##     Temp Var Name     Real Var Name        Value
    ##     -------------     -------------        -----
    ##   _SCI_VAR_LIBNAME_ => PTHREAD             (none)
    ##   _SCI_VAR_NAME_    => LIBPTHREAD          /usr/lib   || ''
    ##   _SCI_VAR_HAVE_    => HAVE_LIBPTHREAD     yes        || ''
    ##   _SCI_VAR_LIBRARY_ => PTHREAD_LIBRARY     -L/usr/lib || ''

    _SCI_VAR_LIBNAME_=`echo petsc | sed 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
    _SCI_VAR_NAME_=LIB$_SCI_VAR_LIBNAME_
    _SCI_VAR_HAVE_="HAVE_$_SCI_VAR_NAME_"
    _SCI_VAR_LIBRARY_="$_SCI_VAR_LIBNAME_"_LIBRARY

    if test "$debugging" = "yes"; then
       echo "_SCI_VAR_NAME_ is $_SCI_VAR_NAME_"
       echo "_SCI_VAR_HAVE_ is $_SCI_VAR_HAVE_"
       echo "_SCI_VAR_LIBRARY_ is $_SCI_VAR_LIBRARY_"
    fi


    ##########################
    ## FUNCTION parameter
    if test "main" = "main"; then
       _SCI_DECL_=""
       _SCI_CALL_=""
       EXTERN_BEGIN=""
       EXTERN_END=""
       echo $ac_n "checking for -lpetsc""... $ac_c" 1>&6
echo "configure:24048: checking for -lpetsc" >&5
    else
       _SCI_DECL_="char main();"
       _SCI_CALL_="main();"

       echo $ac_n "checking for main in -lpetsc""... $ac_c" 1>&6
echo "configure:24054: checking for main in -lpetsc" >&5
       if test "$_SCI_USING_CXX_" != "yes"; then
          EXTERN_BEGIN="extern \"C\" {"
          EXTERN_END="}"
       fi
    fi

    ##########################
    ## OTHER-LIBRARIES parameter

    _SCI_OTHER_LIBS_="\
    -lpetscsles -lpetscmat -lpetscvec \
    -lpetscdm -lpetsccontrib $LAPACK_LIBRARY -llapack \
    $BLAS_LIBRARY $BLAS_LIB $X_LIBRARY -lX11 \
    -L$LIBPETSC/../../../$PETSC_SUB/$PETSC_ARCH -lmpiuni $FLIBS -lm"

    # NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself...
    _SCI_CHECK_PATHS_="$dirs NO_EXPLICIT_PATH"

    ## WARNING... in some cases it might be an error if we specify 
    ##            a path to a lib, but the compiler has a default.
    ##            For example, if we want libm.so and we specify
    ##            to look in /usr/lib, and then we use a compiler
    ##            that has its own version of libm (say in /usr/compiler/lib)
    ##            then things will break.  However, in some cases
    ##            this is not a problem: eg. /res/sci/lib/libtcl.so.
    ##            I'm not sure how we should resolve this.

    # Remove any old output file.
    rm -f conftest.out

    for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

       if test "$debugging" = "yes"; then
          echo "Checking in path: $_CHECK_PATH_"
       fi

       if test "$_CHECK_PATH_" = "/usr/lib" -o "$_CHECK_PATH_" = "/lib" -o \
          "$_CHECK_PATH_" = "/usr/lib/" -o "$_CHECK_PATH_" = "/lib/"; then
            if test "$debugging" = "yes"; then
               echo "configure: warning: Skipping generic lib: SCI CHECK LIB" 1>&2
            fi
            continue
       fi

       if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
          _CHECK_PATH_=""
          LIBRARY=
       else
          if test ! -d "$_CHECK_PATH_"; then 
             if test "$debugging" = "yes"; then
                echo "No such path!"
             fi
             continue
          fi
          LIBRARY=-L$_CHECK_PATH_
       fi

       if test "$_SCI_USING_CXX_" = "no"; then
         theCompiler=$CC
	 theExt=c
       else
         theCompiler=$CXX
	 theExt=cc
       fi

       cat > conftest.$theExt <<EOF

       #include "confdefs.h"
       $EXTERN_BEGIN
       $_SCI_DECL_
       $EXTERN_END
       int main() {
         $_SCI_CALL_
         return 0;
       }
EOF

       rm -f a.out
       ac_try="$theCompiler $CFLAGS conftest.$theExt $LIBRARY -lpetsc $_SCI_OTHER_LIBS_ >/dev/null >> conftest.out 2>> conftest.out"
       (eval $ac_try) 2>&5

       if test "$debugging" = "yes"; then
          echo ac_try is $ac_try
       fi

       if test -f a.out; then
          if test "$_CHECK_PATH_" = ""; then
             echo "$ac_t""yes" 1>&6
          else
             if test -f "$_CHECK_PATH_/libpetsc.a" -o -f "$_CHECK_PATH_/libpetsc.so"; then
                echo "$ac_t""$_CHECK_PATH_" 1>&6
             else
                # Even though the compilation was successful,
                # it was because the library was in the generic
                # compiler path, not because it was in the path we just
                # tested.  Thus, we really did not succeed.

                if test "$debugging" = "yes"; then
                   echo "false alarm on lib, will keep trying"
                fi
                eval $_SCI_VAR_NAME_=''
                eval $_SCI_VAR_HAVE_=''
                eval $_SCI_VAR_LIBRARY_=''
                continue
             fi
          fi
          eval $_SCI_VAR_NAME_=$_CHECK_PATH_
          eval $_SCI_VAR_HAVE_=yes
          if test "$_CHECK_PATH_" != ""; then
             eval $_SCI_VAR_LIBRARY_=-L$_CHECK_PATH_
          fi

          if test "$debugging" = "yes"; then
             echo "FOUND IT"
	     eval echo "$_SCI_VAR_NAME_    is $"$_SCI_VAR_NAME_""
	     eval echo "$_SCI_VAR_HAVE_    is $"$_SCI_VAR_HAVE_""
	     eval echo "$_SCI_VAR_LIBRARY_ is $"$_SCI_VAR_LIBRARY_""
	     echo
          fi

          break
       else
          if test "$debugging" = "yes"; then
             echo "Did NOT find it"
          fi
          eval $_SCI_VAR_NAME_=''
          eval $_SCI_VAR_HAVE_=''
          eval $_SCI_VAR_LIBRARY_=''
       fi
    done # loop over all libs.

    # For some reason putting the eval statement in the following "if test" 
    # statement doesn't work... so I do it here.
    eval result='$'$_SCI_VAR_HAVE_

    if test "$result" = ""; then
       if test "$debugging" = "yes"; then
          echo "Did not find it at all"
       fi
       # Didn't find the library (or function)...
       echo "$ac_t""no" 1>&6
       if test "$_SCI_LIB_OPTIONAL_" = "not-optional"; then
          echo "configure: warning: Required library $_SCI_VAR_LIBNAME_ not found." 1>&2
          echo "configure: warning: Command line for test was: $ac_try" 1>&2
          echo "configure: warning: Compile output is:" 1>&2
          cat conftest.out
          
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure: non-optional lib not found. Bye." 1>&2; exit 1; }
  
       fi
    fi

  

if test "$HAVE_LIBPETSC" = "yes"; then
  # Only check for the .h files if we have found the libs.
  
    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       $LIBPETSC/../../../include"
       echo "   headers:     petsc.h petscsles.h"
       echo "   other-paths: \
      -I$LIBPETSC/../../../bmake/$PETSC_ARCH \
      -I$LIBPETSC/../../../src/sys/src/mpiuni"
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_="$LIBPETSC/../../../include NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="petsc.h petscsles.h"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for petsc.h petscsles.h) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:24293: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS \
      -I$LIBPETSC/../../../bmake/$PETSC_ARCH \
      -I$LIBPETSC/../../../src/sys/src/mpiuni >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:24412: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS \
      -I$LIBPETSC/../../../bmake/$PETSC_ARCH \
      -I$LIBPETSC/../../../src/sys/src/mpiuni >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
fi

if test "$HAVE_LIBPETSC" && test "$HAVE_PETSC_H" && 
   test -x "$LIBPETSC/../../../bin/petscarch"; then 
    FOUND_ALL_PETSC=yes
    UNIPETSC_DIR=$LIBPETSC
    if test "$debug" = "yes"; then
      UNIPETSC_SUB=libg
    else
      UNIPETSC_SUB=libO
    fi
    UNIPETSC_EXTRA_LIBS="-lpetscsles -lpetscmat -lpetscvec \
      -lpetscdm -lpetsccontrib $LAPACK_LIBRARY -llapack \
      $BLAS_LIBRARY $BLAS_LIB $X_LIBRARY -lX11 -lmpiuni $FLIBS -lm"
    UNIPETSC_ARCH=`$LIBPETSC/../../../bin/petscarch`
    if test "$is_64bit" != "yes" -a "$UNIPETSC_ARCH" = "IRIX64"; then
      UNIPETSC_ARCH="IRIX"
    fi
    HAVE_LIBUNIPETSC=yes
    LIBUNIPETSC=$LIBPETSC/../../..
    INCUNIPETSC_H=$INCPETSC_H
    UNI_PETSC_DEF="#define UNI_PETSC 1"
    break
fi 

if test "$FOUND_ALL_PETSC" != "yes"; then
  LIBUNIPETSC=""
  INCUNIPETSC_H=""
  HAVE_LIBUNIPETSC=''
fi










##  --  search for optional headers  ------------------------------------

    #######################################################
    ##  Begin: SCI_CHECK_HEADERS macro...

    if test "$debugging" = "yes"; then
       echo "SCI CHECK HEADERS:"
       echo "   paths:       "
       echo "   headers:     sstream"
       echo "   other-paths: "
       echo "   c++ lib:     "
       echo "   optional:    optional"
    fi

    ########################
    # PATHS parameter:
    #
    #   NO_EXPLICIT_PATHS: this flag is used to check a "blank" path.
    # In other words, to see if the compiler can find it by itself
    # before we test explicit paths.

    _SCI_CHECK_PATHS_=" NO_EXPLICIT_PATH"

    ########################
    # HEADERS parameter:

    _HEADER_LIST_="sstream"

    ##  SCI_CHECK_HEADERS
    _SCI_USING_CXX_=""
    _SCI_HEADER_OPTIONAL_="optional"

    if test "$_SCI_USING_CXX_" = "no"; then
       theCompiler=$CC
       theExt=c
    else
       theCompiler=$CXX
       theExt=cc
    fi

    if test "$_SCI_HEADER_OPTIONAL_" != "not-optional" -a \
            "$_SCI_HEADER_OPTIONAL_" != "optional"; then
       
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: SCI CHECK HEADERS macro (for sstream) optional parameter must be set to 'optional' or 'not-optional'" 1>&2; exit 1; }
  
    fi

    ## Testing for all headers at the same time...  Should be a lot
    ## faster... if this fails, we will try one by one to figure out
    ## which one is broken.

    # Make num_headers into an "integer"
    num_headers=`echo $_HEADER_LIST_ | wc -w`

    first_header=
    for the_header in $_HEADER_LIST_; do
        if test "$first_header" = ""; then
           first_header=$the_header
        fi
    done

    SUCCESS="no"
    ## If more than one header...
    if test $num_headers -gt 1; then

       echo $ac_n "checking for all headers at the same time: $_HEADER_LIST_""... $ac_c" 1>&6
echo "configure:24638: checking for all headers at the same time: $_HEADER_LIST_" >&5
       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do


          if test "$debugging" = "yes"; then
             echo "Checking all .h files at once in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          include_list="#include \"confdefs.h\"\n"
          for _HEADER_ in $_HEADER_LIST_; do
             include_list="$include_list""#include <$_HEADER_>\n"
          done

          include_list="\n""$include_list\n""int main() { return 0; }\n"

	  echo $use_minus_e $include_list > conftest.$theExt

          rm -f conftest.o
          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             # Succeeded... need to run through all header files and
             # create/save appropriate flags.

             if test "$_CHECK_PATH_" = ""; then
                echo "$ac_t""yes" 1>&6
             else
                if test -f "$_CHECK_PATH_/$first_header"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             fi

             SUCCESS="yes"

             define_list=

             for _HEADER_ in $_HEADER_LIST_; do
                # Using set to capitalize the string and replace / with _
                _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
                eval $_SCI_HEADER_NAME_=''
                _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
                _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

                if test "$_CHECK_PATH_" != ""; then
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                fi
                eval $_SCI_HEADER_HAVE_=yes

		if test "$debugging" = "yes"; then
		   echo "Setting HAVE_$_SCI_HEADER_NAME_ to $_SCI_HEADER_HAVE_"
		   echo "Setting INC$_SCI_HEADER_NAME_ to $_SCI_INCLUDE_NAME_"
		fi

                # Save a list of defines in confdefs.h.  Something
	        # later removes a bunch of them... haven't been able
                # to figure out what yet.
                define_list="#define $_SCI_HEADER_HAVE_ 1\n$define_list"
             done

	     # Saving all the defines into one string and then echoing
             # that string to confdefs.h is much faster than sending
             # them one at a time as opening the file on some file systems
             # (ASCI computers?) takes forever.
             echo $use_minus_e $define_list >> confdefs.h

             # Found it so stop looking in other locations.
             break
          fi ## end if success
       done ## for _CHECK_PATH_
    fi ## end if more than 1 header

    # If we succeeded in testing all the .h files in one test above,
    # then skip the individual tests below.
    if test "$SUCCESS" = "yes"; then
       _HEADER_LIST_=""
    else
       if test $num_headers -gt 1; then
          echo "no.  (One or more missing, will check individually)"
       fi
    fi

    ## Begin: HEADER for loop
    for _HEADER_ in $_HEADER_LIST_; do

       echo $ac_n "checking for $_HEADER_""... $ac_c" 1>&6
echo "configure:24755: checking for $_HEADER_" >&5

       for _CHECK_PATH_ in $_SCI_CHECK_PATHS_; do

          if test "$debugging" = "yes"; then
             echo "Checking in: $_CHECK_PATH_"
          fi
          if test "$_CHECK_PATH_" = "/usr/include"; then
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Do not specify /usr/include in SCI CHECK HEADERS" 1>&2; exit 1; }
  
          fi

          INCLUDE_FLAGS=""
          if test "$_CHECK_PATH_" = "NO_EXPLICIT_PATH"; then
             _CHECK_PATH_=""
          else
             if test ! -d "$_CHECK_PATH_"; then 
                continue
             fi
             INCLUDE_FLAGS="-I$_CHECK_PATH_"
          fi

          # Using set to capitalize the string and replace / with _
          _SCI_HEADER_NAME_=`echo $_HEADER_ | sed -e 'y%abcdefghijklmnopqrstuvwxyz./-%ABCDEFGHIJKLMNOPQRSTUVWXYZ___%'`
          eval $_SCI_HEADER_NAME_=''
          _SCI_HEADER_HAVE_=HAVE_$_SCI_HEADER_NAME_
          _SCI_INCLUDE_NAME_=INC$_SCI_HEADER_NAME_

          ac_try="$theCompiler $CFLAGS -c conftest.$theExt $INCLUDE_FLAGS  >/dev/null 2>conftest.out"
          cat > conftest.$theExt <<EOF
          #include "confdefs.h"
          #include <$_HEADER_>
          int main() {
            return 0;
          }
EOF
          rm -f conftest.o
          (eval $ac_try) 2>&5

          if test -f conftest.o; then
             if test "$_CHECK_PATH_" != ""; then
                if test -f "$_CHECK_PATH_/$_HEADER_"; then
                   echo "$ac_t""$_CHECK_PATH_" 1>&6
                   eval $_SCI_INCLUDE_NAME_=-I$_CHECK_PATH_
                else
                   # Even though the compilation was successful,
                   # it was because the header was in the generic
                   # compiler path, not because it was in the path we just
                   # tested.  Thus, we really did not succeed.
                   if test "$debugging" = "yes"; then
                      echo "False alarm, will keep trying"
                   fi
                   continue
                fi
             else
	        echo "$ac_t""yes" 1>&6
             fi
             eval $_SCI_HEADER_HAVE_=yes

	     if test "$debugging" = "yes"; then
	        eval echo "Setting HAVE_$_SCI_HEADER_NAME_: $"$_SCI_HEADER_HAVE_""
		eval echo "Setting INC$_SCI_HEADER_NAME_: $"$_SCI_INCLUDE_NAME_""
	     fi

             # Save a list of defines in confdefs.h.  Something
	     # later removes a bunch of them... haven't been able
             # to figure out what yet.
	     cat >> confdefs.h <<EOF
#define $_SCI_HEADER_HAVE_ 1
EOF
             break
          fi
       done ## End: loop over paths to search

       # For some reason putting the eval statement directly in the
       # following "if test" statement doesn't work... so I do it here.
       eval result='$'$_SCI_HEADER_HAVE_

       if test "$result" = ""; then
          # Didn't find the .h file.
          echo "$ac_t""no" 1>&6

          if test "$_SCI_HEADER_OPTIONAL_" = "not-optional"; then
             echo "configure: warning: Required include file $_HEADER_ not found." 1>&2
             echo "configure: warning: Command line for test was: $ac_try" 1>&2
             echo "configure: warning: Compile output was:" 1>&2
             cat conftest.out
             
      ## SCI_MSG_ERROR
      if test -z "$debugging"; then
         echo
         echo "configure: warning: Adding '--enable-verbosity' to configure line" 1>&2
         echo "configure: warning: _may_ give more information about what is breaking" 1>&2
      fi
      echo
      { echo "configure: error: Exiting configure script. Bye." 1>&2; exit 1; }
  
          fi
       fi

    done ## End: loop over .h files

  
if test "$HAVE_SSTREAM"; then
   SSTREAM_COMPAT="no"
else
   # Use SCIRun sstream compatibility files...
   SSTREAM_COMPAT="yes"
fi



##  --  finish LD flags  ------------------------------------------------
case $host in
  *-irix*)
    LDFLAGS="$LDFLAGS -J\$(MAKE_PARALLELISM) $(TLINK)"
    ;;
  *linux*)
    ;;
  *aix*)
    ;;
  *dec*)
    ;;
  *)
    ;;
esac

##  ---------------------------------------------------------------------
##  --------------------  configure packages  ---------------------------
##  ---------------------------------------------------------------------

##  nothing here yet

##  ---------------------------------------------------------------------
##  --------------------  generate output files  ------------------------
##  ---------------------------------------------------------------------

abs_conftop_dir=`pwd`;

abs_srcdir=`(cd ${srcdir};pwd)`


##  make list of all the output files
output_files="configVars.mk \
              Makefile \
              on-the-fly-libs/Makefile \
              disjointPackageMakefile \
              sci_testdefs.h"

##   Only do the following if configuring with Uintah
##   Add a list of Uintah specific output files.
if test "$uintah" = "yes" ; then
   output_files="$output_files Packages/Uintah/tools/fspec.pl"
fi 

#  ignore --no-create and --no-recursion flags
no_create=no
no_recursion=no

trap '' 1 2 15
cat > confcache <<\EOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs.  It is not useful on other systems.
# If it contains results you don't want to keep, you may remove or edit it.
#
# By default, configure uses ./config.cache as the cache file,
# creating it if it does not exist already.  You can give configure
# the --cache-file=FILE option to use a different cache file; that is
# what configure does when it calls configure scripts in
# subdirectories, so they share the cache.
# Giving --cache-file=/dev/null disables caching, for debugging configure.
# config.status only pays attention to the cache file if you give it the
# --recheck option to rerun configure.
#
EOF
# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, don't put newlines in cache variables' values.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(set) 2>&1 |
  case `(ac_space=' '; set | grep ac_space) 2>&1` in
  *ac_space=\ *)
    # `set' does not quote correctly, so add quotes (double-quote substitution
    # turns \\\\ into \\, and sed turns \\ into \).
    sed -n \
      -e "s/'/'\\\\''/g" \
      -e "s/^\\([a-zA-Z0-9_]*_cv_[a-zA-Z0-9_]*\\)=\\(.*\\)/\\1=\${\\1='\\2'}/p"
    ;;
  *)
    # `set' quotes correctly as required by POSIX, so do not add quotes.
    sed -n -e 's/^\([a-zA-Z0-9_]*_cv_[a-zA-Z0-9_]*\)=\(.*\)/\1=${\1=\2}/p'
    ;;
  esac >> confcache
if cmp -s $cache_file confcache; then
  :
else
  if test -w $cache_file; then
    echo "updating cache $cache_file"
    cat confcache > $cache_file
  else
    echo "not updating unwritable cache $cache_file"
  fi
fi
rm -f confcache

trap 'rm -fr conftest* confdefs* core core.* *.core $ac_clean_files; exit 1' 1 2 15

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

# Any assignment to VPATH causes Sun make to only execute
# the first set of double-colon rules, so remove it if not needed.
# If there is a colon in the path, we need to keep it.
if test "x$srcdir" = x.; then
  ac_vpsub='/^[ 	]*VPATH[ 	]*=[^:]*$/d'
fi

trap 'rm -f $CONFIG_STATUS conftest*; exit 1' 1 2 15

DEFS=-DHAVE_CONFIG_H

# Without the "./", some shells look in PATH for config.status.
: ${CONFIG_STATUS=./config.status}

echo creating $CONFIG_STATUS
rm -f $CONFIG_STATUS
cat > $CONFIG_STATUS <<EOF
#! /bin/sh
# Generated automatically by configure.
# Run this file to recreate the current configuration.
# This directory was configured as follows,
# on host `(hostname || uname -n) 2>/dev/null | sed 1q`:
#
# $0 $ac_configure_args
#
# Compiler output produced by configure, useful for debugging
# configure, is in ./config.log if it exists.

ac_cs_usage="Usage: $CONFIG_STATUS [--recheck] [--version] [--help]"
for ac_option
do
  case "\$ac_option" in
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
    exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
  -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
    echo "$CONFIG_STATUS generated by autoconf version 2.13"
    exit 0 ;;
  -help | --help | --hel | --he | --h)
    echo "\$ac_cs_usage"; exit 0 ;;
  *) echo "\$ac_cs_usage"; exit 1 ;;
  esac
done

ac_given_srcdir=$srcdir

trap 'rm -fr `echo "$output_files sci_config.h" | sed "s/:[^ ]*//g"` conftest*; exit 1' 1 2 15
EOF
cat >> $CONFIG_STATUS <<EOF

# Protect against being on the right side of a sed subst in config.status.
sed 's/%@/@@/; s/@%/@@/; s/%g\$/@g/; /@g\$/s/[\\\\&%]/\\\\&/g;
 s/@@/%@/; s/@@/@%/; s/@g\$/%g/' > conftest.subs <<\\CEOF
$ac_vpsub
$extrasub
s%@SHELL@%$SHELL%g
s%@CFLAGS@%$CFLAGS%g
s%@CPPFLAGS@%$CPPFLAGS%g
s%@CXXFLAGS@%$CXXFLAGS%g
s%@FFLAGS@%$FFLAGS%g
s%@DEFS@%$DEFS%g
s%@LDFLAGS@%$LDFLAGS%g
s%@LIBS@%$LIBS%g
s%@exec_prefix@%$exec_prefix%g
s%@prefix@%$prefix%g
s%@program_transform_name@%$program_transform_name%g
s%@bindir@%$bindir%g
s%@sbindir@%$sbindir%g
s%@libexecdir@%$libexecdir%g
s%@datadir@%$datadir%g
s%@sysconfdir@%$sysconfdir%g
s%@sharedstatedir@%$sharedstatedir%g
s%@localstatedir@%$localstatedir%g
s%@libdir@%$libdir%g
s%@includedir@%$includedir%g
s%@oldincludedir@%$oldincludedir%g
s%@infodir@%$infodir%g
s%@mandir@%$mandir%g
s%@ECHO_N@%$ECHO_N%g
s%@ECHO_C@%$ECHO_C%g
s%@CC@%$CC%g
s%@CXX@%$CXX%g
s%@F77@%$F77%g
s%@host@%$host%g
s%@host_alias@%$host_alias%g
s%@host_cpu@%$host_cpu%g
s%@host_vendor@%$host_vendor%g
s%@host_os@%$host_os%g
s%@SO_OR_ARCHIVE_EXTENSION@%$SO_OR_ARCHIVE_EXTENSION%g
s%@ASSERTION_LEVEL@%$ASSERTION_LEVEL%g
s%@NOPRINTDIR@%$NOPRINTDIR%g
s%@MALLOC_DEFINE@%$MALLOC_DEFINE%g
s%@PACKAGE_DIRS@%$PACKAGE_DIRS%g
s%@LOAD_PACKAGE@%$LOAD_PACKAGE%g
s%@EXENAME@%$EXENAME%g
s%@LARGESOS@%$LARGESOS%g
s%@TIME_IMPL@%$TIME_IMPL%g
s%@AS@%$AS%g
s%@LD@%$LD%g
s%@CPP@%$CPP%g
s%@CXXCPP@%$CXXCPP%g
s%@CC_DEPEND_MODE@%$CC_DEPEND_MODE%g
s%@CC_DEPEND_REGEN@%$CC_DEPEND_REGEN%g
s%@CC_DEPEND_EXT@%$CC_DEPEND_EXT%g
s%@F77_DEPEND_MODE@%$F77_DEPEND_MODE%g
s%@F77_DEPEND_REGEN@%$F77_DEPEND_REGEN%g
s%@F77_DEPEND_EXT@%$F77_DEPEND_EXT%g
s%@MAKE@%$MAKE%g
s%@AWK@%$AWK%g
s%@YACC@%$YACC%g
s%@LEX@%$LEX%g
s%@LEXLIB@%$LEXLIB%g
s%@PERL@%$PERL%g
s%@ETAGS@%$ETAGS%g
s%@FORTRAN_UNDERSCORE@%$FORTRAN_UNDERSCORE%g
s%@G77@%$G77%g
s%@SOFLAGS@%$SOFLAGS%g
s%@ASFLAGS@%$ASFLAGS%g
s%@LDRUN_PREFIX@%$LDRUN_PREFIX%g
s%@extra_cflags@%$extra_cflags%g
s%@MAKE_PARALLELISM@%$MAKE_PARALLELISM%g
s%@NEED_SONAME@%$NEED_SONAME%g
s%@REPOSITORY_FLAGS@%$REPOSITORY_FLAGS%g
s%@TEMPLATE_TAG@%$TEMPLATE_TAG%g
s%@TEMPLATE_BOX@%$TEMPLATE_BOX%g
s%@NBITS@%$NBITS%g
s%@X_CFLAGS@%$X_CFLAGS%g
s%@X_PRE_LIBS@%$X_PRE_LIBS%g
s%@X_LIBS@%$X_LIBS%g
s%@X_EXTRA_LIBS@%$X_EXTRA_LIBS%g
s%@LIBX@%$LIBX%g
s%@INCX_H@%$INCX_H%g
s%@FLIBS@%$FLIBS%g
s%@THREAD_IMPL@%$THREAD_IMPL%g
s%@THREAD_LIBS@%$THREAD_LIBS%g
s%@THREAD_DEFINE@%$THREAD_DEFINE%g
s%@SEMAPHORE_LIB@%$SEMAPHORE_LIB%g
s%@LIBGL@%$LIBGL%g
s%@GL_INCLUDE@%$GL_INCLUDE%g
s%@PLATFORM_LDFLAGS@%$PLATFORM_LDFLAGS%g
s%@LIBDL@%$LIBDL%g
s%@LIBDL_FLAG@%$LIBDL_FLAG%g
s%@DEF_HASHMAP@%$DEF_HASHMAP%g
s%@TCL_SRC_DIR@%$TCL_SRC_DIR%g
s%@TCL_INIT_DIR@%$TCL_INIT_DIR%g
s%@LIBTCL@%$LIBTCL%g
s%@TCL_PREFIX@%$TCL_PREFIX%g
s%@TCL_VERSION@%$TCL_VERSION%g
s%@INCTCL_H@%$INCTCL_H%g
s%@TK_SRC_DIR@%$TK_SRC_DIR%g
s%@TK_VERSION@%$TK_VERSION%g
s%@TK_INIT_DIR@%$TK_INIT_DIR%g
s%@LIBTK@%$LIBTK%g
s%@INCTK_H@%$INCTK_H%g
s%@ITCL_SRC_DIR@%$ITCL_SRC_DIR%g
s%@ITCL_INIT_DIR@%$ITCL_INIT_DIR%g
s%@ITCL_WIDGETS@%$ITCL_WIDGETS%g
s%@LIBITCL@%$LIBITCL%g
s%@INCITCL_H@%$INCITCL_H%g
s%@ITK_SRC_DIR@%$ITK_SRC_DIR%g
s%@LIBITK@%$LIBITK%g
s%@INCITK_H@%$INCITK_H%g
s%@LIBBLT@%$LIBBLT%g
s%@INCBLT_H@%$INCBLT_H%g
s%@LIBPLPLOT@%$LIBPLPLOT%g
s%@INCPLPLOT_H@%$INCPLPLOT_H%g
s%@DEF_PLPLOT@%$DEF_PLPLOT%g
s%@HAVE_PLPLOT@%$HAVE_PLPLOT%g
s%@LIBXERCES_C@%$LIBXERCES_C%g
s%@INCXERCESC_H@%$INCXERCESC_H%g
s%@MPI@%$MPI%g
s%@HAVE_LIBMPI@%$HAVE_LIBMPI%g
s%@LIBMPI@%$LIBMPI%g
s%@INCMPI_H@%$INCMPI_H%g
s%@DEF_MPI@%$DEF_MPI%g
s%@DEF_MPICH@%$DEF_MPICH%g
s%@TAU_MAKEFILE@%$TAU_MAKEFILE%g
s%@HAVE_LIBTEEM@%$HAVE_LIBTEEM%g
s%@LIBTEEM@%$LIBTEEM%g
s%@INCTEEM_H@%$INCTEEM_H%g
s%@DEF_TEEM@%$DEF_TEEM%g
s%@DEF_MPEG@%$DEF_MPEG%g
s%@LIBMPEGE@%$LIBMPEGE%g
s%@HAVE_LIBMPEGE@%$HAVE_LIBMPEGE%g
s%@MPEGE_LIBRARY@%$MPEGE_LIBRARY%g
s%@DEF_MDSPLUS@%$DEF_MDSPLUS%g
s%@INCMDSPLUS_H@%$INCMDSPLUS_H%g
s%@LIBMDSPLUS@%$LIBMDSPLUS%g
s%@PERFEX_LIBRARY@%$PERFEX_LIBRARY%g
s%@DEF_PERFEX@%$DEF_PERFEX%g
s%@HAVE_LIBFASTM@%$HAVE_LIBFASTM%g
s%@LIBFASTM@%$LIBFASTM%g
s%@DEF_FASTM@%$DEF_FASTM%g
s%@HAVE_LIBSSL@%$HAVE_LIBSSL%g
s%@LIBSSL@%$LIBSSL%g
s%@DEF_SSL@%$DEF_SSL%g
s%@HAVE_LIBCRYPTO@%$HAVE_LIBCRYPTO%g
s%@LIBCRYPTO@%$LIBCRYPTO%g
s%@DEF_CRYPTO@%$DEF_CRYPTO%g
s%@TRACEBACK_LIB@%$TRACEBACK_LIB%g
s%@HAVE_LIBEXC@%$HAVE_LIBEXC%g
s%@LIBEXC@%$LIBEXC%g
s%@DEF_EXC@%$DEF_EXC%g
s%@GLOBUS_EXTRA_DIRS@%$GLOBUS_EXTRA_DIRS%g
s%@GLOBUS_INCLUDE@%$GLOBUS_INCLUDE%g
s%@GLOBUS_LIB@%$GLOBUS_LIB%g
s%@DEF_GLOBUS@%$DEF_GLOBUS%g
s%@UUID_LIB@%$UUID_LIB%g
s%@QT_MOC_BIN@%$QT_MOC_BIN%g
s%@HAVE_QT@%$HAVE_QT%g
s%@DEF_QT@%$DEF_QT%g
s%@QT_INCLUDE@%$QT_INCLUDE%g
s%@QT_LIB@%$QT_LIB%g
s%@HAVE_VDT@%$HAVE_VDT%g
s%@DEF_VDT@%$DEF_VDT%g
s%@VDT_INCLUDE@%$VDT_INCLUDE%g
s%@ELIXIR_LIB@%$ELIXIR_LIB%g
s%@LP_SOLVE_LIB@%$LP_SOLVE_LIB%g
s%@MESCHACH_LIB@%$MESCHACH_LIB%g
s%@PIRAT_LIB@%$PIRAT_LIB%g
s%@LOBS_LIB@%$LOBS_LIB%g
s%@CKIT_LIB@%$CKIT_LIB%g
s%@G3D_LIB@%$G3D_LIB%g
s%@VDT_LIB@%$VDT_LIB%g
s%@VDT_LINK@%$VDT_LINK%g
s%@HAVE_MAGICK@%$HAVE_MAGICK%g
s%@DEF_MAGICK@%$DEF_MAGICK%g
s%@MAGICK_INCLUDE@%$MAGICK_INCLUDE%g
s%@LIBMAGICK@%$LIBMAGICK%g
s%@MAGICK_LINK@%$MAGICK_LINK%g
s%@SCIRUN2_DEFINE@%$SCIRUN2_DEFINE%g
s%@BUILD_SCIRUN2@%$BUILD_SCIRUN2%g
s%@LIBZ_INCLUDE@%$LIBZ_INCLUDE%g
s%@LIBZ_FLAG@%$LIBZ_FLAG%g
s%@DEF_Z@%$DEF_Z%g
s%@INCGL_GLUT_H@%$INCGL_GLUT_H%g
s%@INCGLUI_H@%$INCGLUI_H%g
s%@GLUT_LIBRARY@%$GLUT_LIBRARY%g
s%@GLUI_LIBRARY@%$GLUI_LIBRARY%g
s%@BLAS_DEF@%$BLAS_DEF%g
s%@BLAS_LIB@%$BLAS_LIB%g
s%@BLAS_LIBRARY@%$BLAS_LIBRARY%g
s%@LAPACK@%$LAPACK%g
s%@LAPACK_DEF@%$LAPACK_DEF%g
s%@HAVE_LAPACK@%$HAVE_LAPACK%g
s%@LIBLAPACK@%$LIBLAPACK%g
s%@HAVE_LIBHYPRE@%$HAVE_LIBHYPRE%g
s%@LIBHYPRE@%$LIBHYPRE%g
s%@LIBHYPRE_LIBRARY@%$LIBHYPRE_LIBRARY%g
s%@INCHYPRE_H@%$INCHYPRE_H%g
s%@HAVE_LIBPETSC@%$HAVE_LIBPETSC%g
s%@PETSC_EXTRA_LIBS@%$PETSC_EXTRA_LIBS%g
s%@PETSC_DIR@%$PETSC_DIR%g
s%@PETSC_SUB@%$PETSC_SUB%g
s%@PETSC_ARCH@%$PETSC_ARCH%g
s%@LIBPETSC@%$LIBPETSC%g
s%@INCPETSC_H@%$INCPETSC_H%g
s%@DEF_PETSC@%$DEF_PETSC%g
s%@UNI_PETSC_DEF@%$UNI_PETSC_DEF%g
s%@HAVE_LIBUNIPETSC@%$HAVE_LIBUNIPETSC%g
s%@UNIPETSC_EXTRA_LIBS@%$UNIPETSC_EXTRA_LIBS%g
s%@UNIPETSC_DIR@%$UNIPETSC_DIR%g
s%@UNIPETSC_SUB@%$UNIPETSC_SUB%g
s%@UNIPETSC_ARCH@%$UNIPETSC_ARCH%g
s%@LIBUNIPETSC@%$LIBUNIPETSC%g
s%@INCUNIPETSC_H@%$INCUNIPETSC_H%g
s%@SSTREAM_COMPAT@%$SSTREAM_COMPAT%g
s%@abs_conftop_dir@%$abs_conftop_dir%g
s%@abs_srcdir@%$abs_srcdir%g

CEOF
EOF

cat >> $CONFIG_STATUS <<\EOF

# Split the substitutions into bite-sized pieces for seds with
# small command number limits, like on Digital OSF/1 and HP-UX.
ac_max_sed_cmds=90 # Maximum number of lines to put in a sed script.
ac_file=1 # Number of current file.
ac_beg=1 # First line for current file.
ac_end=$ac_max_sed_cmds # Line after last line for current file.
ac_more_lines=:
ac_sed_cmds=""
while $ac_more_lines; do
  if test $ac_beg -gt 1; then
    sed "1,${ac_beg}d; ${ac_end}q" conftest.subs > conftest.s$ac_file
  else
    sed "${ac_end}q" conftest.subs > conftest.s$ac_file
  fi
  if test ! -s conftest.s$ac_file; then
    ac_more_lines=false
    rm -f conftest.s$ac_file
  else
    if test -z "$ac_sed_cmds"; then
      ac_sed_cmds="sed -f conftest.s$ac_file"
    else
      ac_sed_cmds="$ac_sed_cmds | sed -f conftest.s$ac_file"
    fi
    ac_file=`expr $ac_file + 1`
    ac_beg=$ac_end
    ac_end=`expr $ac_end + $ac_max_sed_cmds`
  fi
done
if test -z "$ac_sed_cmds"; then
  ac_sed_cmds=cat
fi
EOF

cat >> $CONFIG_STATUS <<EOF

CONFIG_FILES=\${CONFIG_FILES-"$output_files"}
EOF
cat >> $CONFIG_STATUS <<\EOF
for ac_file in .. $CONFIG_FILES; do if test "x$ac_file" != x..; then
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case "$ac_file" in
  *:*) ac_file_in=`echo "$ac_file"|sed 's%[^:]*:%%'`
       ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
  *) ac_file_in="${ac_file}.in" ;;
  esac

  # Adjust a relative srcdir, top_srcdir, and INSTALL for subdirectories.

  # Remove last slash and all that follows it.  Not all systems have dirname.
  ac_dir=`echo $ac_file|sed 's%/[^/][^/]*$%%'`
  if test "$ac_dir" != "$ac_file" && test "$ac_dir" != .; then
    # The file is in a subdirectory.
    test ! -d "$ac_dir" && mkdir "$ac_dir"
    ac_dir_suffix="/`echo $ac_dir|sed 's%^\./%%'`"
    # A "../" for each directory in $ac_dir_suffix.
    ac_dots=`echo $ac_dir_suffix|sed 's%/[^/]*%../%g'`
  else
    ac_dir_suffix= ac_dots=
  fi

  case "$ac_given_srcdir" in
  .)  srcdir=.
      if test -z "$ac_dots"; then top_srcdir=.
      else top_srcdir=`echo $ac_dots|sed 's%/$%%'`; fi ;;
  /*) srcdir="$ac_given_srcdir$ac_dir_suffix"; top_srcdir="$ac_given_srcdir" ;;
  *) # Relative path.
    srcdir="$ac_dots$ac_given_srcdir$ac_dir_suffix"
    top_srcdir="$ac_dots$ac_given_srcdir" ;;
  esac


  echo creating "$ac_file"
  rm -f "$ac_file"
  configure_input="Generated automatically from `echo $ac_file_in|sed 's%.*/%%'` by configure."
  case "$ac_file" in
  *Makefile*) ac_comsub="1i\\
# $configure_input" ;;
  *) ac_comsub= ;;
  esac

  ac_file_inputs=`echo $ac_file_in|sed -e "s%^%$ac_given_srcdir/%" -e "s%:% $ac_given_srcdir/%g"`
  sed -e "$ac_comsub
s%@configure_input@%$configure_input%g
s%@srcdir@%$srcdir%g
s%@top_srcdir@%$top_srcdir%g
" $ac_file_inputs | (eval "$ac_sed_cmds") > $ac_file
fi; done
rm -f conftest.s*

# These sed commands are passed to sed as "A NAME B NAME C VALUE D", where
# NAME is the cpp macro being defined and VALUE is the value it is being given.
#
# ac_d sets the value in "#define NAME VALUE" lines.
ac_dA='s%^\([ 	]*\)#\([ 	]*define[ 	][ 	]*\)'
ac_dB='\([ 	][ 	]*\)[^ 	]*%\1#\2'
ac_dC='\3'
ac_dD='%g'
# ac_u turns "#undef NAME" with trailing blanks into "#define NAME VALUE".
ac_uA='s%^\([ 	]*\)#\([ 	]*\)undef\([ 	][ 	]*\)'
ac_uB='\([ 	]\)%\1#\2define\3'
ac_uC=' '
ac_uD='\4%g'
# ac_e turns "#undef NAME" without trailing blanks into "#define NAME VALUE".
ac_eA='s%^\([ 	]*\)#\([ 	]*\)undef\([ 	][ 	]*\)'
ac_eB='$%\1#\2define\3'
ac_eC=' '
ac_eD='%g'

if test "${CONFIG_HEADERS+set}" != set; then
EOF
cat >> $CONFIG_STATUS <<EOF
  CONFIG_HEADERS="sci_config.h"
EOF
cat >> $CONFIG_STATUS <<\EOF
fi
for ac_file in .. $CONFIG_HEADERS; do if test "x$ac_file" != x..; then
  # Support "outfile[:infile[:infile...]]", defaulting infile="outfile.in".
  case "$ac_file" in
  *:*) ac_file_in=`echo "$ac_file"|sed 's%[^:]*:%%'`
       ac_file=`echo "$ac_file"|sed 's%:.*%%'` ;;
  *) ac_file_in="${ac_file}.in" ;;
  esac

  echo creating $ac_file

  rm -f conftest.frag conftest.in conftest.out
  ac_file_inputs=`echo $ac_file_in|sed -e "s%^%$ac_given_srcdir/%" -e "s%:% $ac_given_srcdir/%g"`
  cat $ac_file_inputs > conftest.in

EOF

# Transform confdefs.h into a sed script conftest.vals that substitutes
# the proper values into config.h.in to produce config.h.  And first:
# Protect against being on the right side of a sed subst in config.status.
# Protect against being in an unquoted here document in config.status.
rm -f conftest.vals
cat > conftest.hdr <<\EOF
s/[\\&%]/\\&/g
s%[\\$`]%\\&%g
s%#define \([A-Za-z_][A-Za-z0-9_]*\) *\(.*\)%${ac_dA}\1${ac_dB}\1${ac_dC}\2${ac_dD}%gp
s%ac_d%ac_u%gp
s%ac_u%ac_e%gp
EOF
sed -n -f conftest.hdr confdefs.h > conftest.vals
rm -f conftest.hdr

# This sed command replaces #undef with comments.  This is necessary, for
# example, in the case of _POSIX_SOURCE, which is predefined and required
# on some systems where configure will not decide to define it.
cat >> conftest.vals <<\EOF
s%^[ 	]*#[ 	]*undef[ 	][ 	]*[a-zA-Z_][a-zA-Z_0-9]*%/* & */%
EOF

# Break up conftest.vals because some shells have a limit on
# the size of here documents, and old seds have small limits too.

rm -f conftest.tail
while :
do
  ac_lines=`grep -c . conftest.vals`
  # grep -c gives empty output for an empty file on some AIX systems.
  if test -z "$ac_lines" || test "$ac_lines" -eq 0; then break; fi
  # Write a limited-size here document to conftest.frag.
  echo '  cat > conftest.frag <<CEOF' >> $CONFIG_STATUS
  sed ${ac_max_here_lines}q conftest.vals >> $CONFIG_STATUS
  echo 'CEOF
  sed -f conftest.frag conftest.in > conftest.out
  rm -f conftest.in
  mv conftest.out conftest.in
' >> $CONFIG_STATUS
  sed 1,${ac_max_here_lines}d conftest.vals > conftest.tail
  rm -f conftest.vals
  mv conftest.tail conftest.vals
done
rm -f conftest.vals

cat >> $CONFIG_STATUS <<\EOF
  rm -f conftest.frag conftest.h
  echo "/* $ac_file.  Generated automatically by configure.  */" > conftest.h
  cat conftest.in >> conftest.h
  rm -f conftest.in
  if cmp -s $ac_file conftest.h 2>/dev/null; then
    echo "$ac_file is unchanged"
    rm -f conftest.h
  else
    # Remove last slash and all that follows it.  Not all systems have dirname.
      ac_dir=`echo $ac_file|sed 's%/[^/][^/]*$%%'`
      if test "$ac_dir" != "$ac_file" && test "$ac_dir" != .; then
      # The file is in a subdirectory.
      test ! -d "$ac_dir" && mkdir "$ac_dir"
    fi
    rm -f $ac_file
    mv conftest.h $ac_file
  fi
fi; done

EOF
cat >> $CONFIG_STATUS <<EOF

EOF
cat >> $CONFIG_STATUS <<\EOF
echo timestamp > stamp-h 
exit 0
EOF
chmod +x $CONFIG_STATUS
rm -fr confdefs* $ac_clean_files
test "$no_create" = yes || ${CONFIG_SHELL-/bin/sh} $CONFIG_STATUS || exit 1


##  check whether sci_defs.h has changed (due to a re-configure)
if cmp -s sci_defs.h sci_testdefs.h 2>/dev/null; then
  echo "$ac_t""sci_defs.h is unchanged" 1>&6
  rm -f sci_testdefs.h
else
  mv sci_testdefs.h sci_defs.h
  echo "configure: warning: sci_defs.h has changed." 1>&2
fi
