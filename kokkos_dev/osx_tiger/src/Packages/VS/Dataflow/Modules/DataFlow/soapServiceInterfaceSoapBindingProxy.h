/* soapServiceInterfaceSoapBindingProxy.h
   Generated by gSOAP 2.6.2 from OQAFMA/OQAFMAClient.h
   Copyright (C) 2001-2004 Genivia, Inc. All Rights Reserved.
   This software is released under the gSOAP public license and GPL.
   See README.txt for further details.
*/

#ifndef soapServiceInterfaceSoapBinding_H
#define soapServiceInterfaceSoapBinding_H
#include "soapH.h"
SOAP_BEGIN_NAMESPACE(soap)
class ServiceInterfaceSoapBinding
{   public:
	struct soap *soap;
	const char *endpoint;
	ServiceInterfaceSoapBinding() { soap = soap_new(); endpoint = "http://fme.biostr.washington.edu:8082/OQAFMA_Service/services/ServiceInterface"; };
	virtual ~ServiceInterfaceSoapBinding() { if (soap) { soap_destroy(soap); soap_end(soap); soap_done(soap); SOAP_FREE((void*)soap); } };
	virtual int ns1__processStruQL(std::string _query, struct ns1__processStruQLResponse &param_1) { return soap ? soap_call_ns1__processStruQL(soap, endpoint, NULL, _query, param_1) : SOAP_EOM; };
	virtual int ns1__getClosure(std::string _root, std::string _relationship, struct ns1__getClosureResponse &param_2) { return soap ? soap_call_ns1__getClosure(soap, endpoint, NULL, _root, _relationship, param_2) : SOAP_EOM; };
};
SOAP_END_NAMESPACE(soap)
#endif
