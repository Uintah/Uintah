<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->



<component name="ManageFieldMesh" category="FieldsGeometry">
  <overview>
    <authors>
      <author>Michael Callahan</author>
    </authors>
    <summary>Extract and change the positions of the nodes in a mesh.</summary>
    <description>
      <p>
      This module performs two simultanious operations.  First the
      locations of all the nodes in the "Input Field" are extracted
      into a matrix and sent to the "Output Matrix" port as an Nx3
      matrix, where N is the number of nodes in the field.  The
      positions are sent in xyz order.  This first operation works
      on any field type because it does not make changes to the field.
      </p>
      
      <p>
      The second operation is optional.  If an "Input Matrix" is
      available then a new field is constructed containing a copy of
      the "Input Field" except that the node locations are replaced by
      the position data in the "Input Matrix".  The "Input Matrix" is
      expected to be Nx3, where N is the number of nodes in the field
      and the three columns represent xyz positions.  This operation
      requires the "Input Field" to be an editable mesh type.  The
      <modref package="SCIRun" name="Unstructure"/> module can be used to make uneditable meshes
      editable.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
	<name>Input Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
	<name>Input Matrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
	<name>Output Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
	<name>Output Matrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
<nets>
<net id="ManageFieldMesh-extract">
<title>ManageFieldMesh-extract Regression Test</title>

<p>Use the ManageFieldMesh module to extract the XYZ positions of the
mesh nodes from the input mesh into an Nx3 matrix.  Then we glue those
positions back onto the input mesh as Vector data (but not as a
position change) using the <modref package="SCIRun" name="ManageFieldData"/> module.  The vector field
is then displayed as a cube with all of the vectors pointing away from
the center.</p>

<p>This network can be found at src/nets/Modules/FieldsGeometry/ManageFieldMesh-extract.net.</p>

</net>
<net id="ManageFieldMesh-insert">
<title>ManageFieldMesh-insert Regression Test</title>

<p>Here we use ManageFieldMesh to extract the XYZ positions of the nodes
from an input mesh.  Then those positions are transformed with the
<modref package="SCIRun" name="LinAlgUnary"/> module.  The transformed positions are put back into the
original mesh and the before/after of the two meshes is displayed.</p>

<p>This network can be found at src/nets/Modules/FieldsGeometry/ManageFieldMesh-insert.net.</p>

</net>
</nets>
</component>
