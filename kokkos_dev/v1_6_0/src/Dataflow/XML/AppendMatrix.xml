<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../doc/Utilities/XML/component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="AppendMatrix" category="Math">
  <overview>
    <authors>
      <author>David Weinstein</author>
    </authors>
    <summary>Composite a matrix from components.</summary>
    <description>
      <p>This module builds up a composited matrix from an optional
      base matrix and submatrices that get appended to the end (or
      prepended to the beginning).  Using this module, in conjunction
      with an upstream MatrixSelectVector module, users can build up
      time-dependent solution matrices.</p>
      <p>The UI has options to allow the user to select:</p>
      <p>- whether the matrices are concatenated (or replaced);</p>
      <p>- whether ColumnMatrices are added as rows or columns;</p>
      <p>- whether the submatrix should be concatenated to the
      beginning or the end of the base-matrix;</p>
      <p>- and a button to clear the current concatenated
      contents.</p>
      <p>Note: this module always produces a DenseMatrix as output.</p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Optional BaseMatrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>SubMatrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>CompositeMatrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
</component>
