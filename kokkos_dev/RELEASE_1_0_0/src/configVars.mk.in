#
#  The contents of this file are subject to the University of Utah Public
#  License (the "License"); you may not use this file except in compliance
#  with the License.
#  
#  Software distributed under the License is distributed on an "AS IS"
#  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
#  License for the specific language governing rights and limitations under
#  the License.
#  
#  The Original Source Code is SCIRun, released March 12, 2001.
#  
#  The Original Source Code was developed by the University of Utah.
#  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
#  University of Utah. All Rights Reserved.
#

# configVars.mk.in holds all of the variables needed by the make 
# system to create makefiles. Various Makefiles can include this central
# copy of the vars. This file has all of the variables and rules common to 
# all generated makefiles.

# Blow away a bunch of makes internal rules to improve the performance
# of make
.SUFFIXES:
% :: RCS/%,v
% :: RCS/%
% :: %,v
% :: s.%
% :: SCCS/s.%
%.out :: %
%.c :: %
%.tex :: %

# If a sidl-generated file uses templates, it's possible that the MIPSPro
# CC will decide to recompile the .cc file at link time to get the template
# instantiation. If make has already removed the _sidl.cc file since it's an
# intermediate file, the compilation will fail. This prevents make from 
# deleting these files.
.PRECIOUS: %_sidl.h %_sidl.cc

# Directory variables
SRCTOP  := @top_srcdir@
SRCDIR  := @srcdir@
OBJTOP  := .
OBJTOP_ABS    := $(shell cd $(OBJTOP) ; pwd)
SRCTOP_ABS    := $(shell cd $(SRCTOP) ; pwd)

ifeq ($(OBJTOP),.)
LIBDIR := lib/
else
LIBDIR := $(OBJTOP_ABS)/lib/
endif
LIBDIR_ABS    := $(shell mkdir -p $(LIBDIR); cd $(LIBDIR) ; pwd)

VPATH := $(SRCTOP)

# Optional pieces

PACKAGE_DIRS := @PACKAGE_DIRS@
PACKAGE_PATH := @PACKAGE_PATH@
BUILD_PARALLEL := @BUILD_PARALLEL@
# Dd: don't need to do it explicitly this way... I think.
#ifeq ($(BUILD_PARALLEL),yes)
#COMPONENT_DIRS := Core/CCA/tools/sidl Core/CCA/Component
#endif

# These cannot be :=
THREAD_IMPL = $(SRCDIR)/@THREAD_IMPL@
TIME_IMPL = $(SRCDIR)/@TIME_IMPL@
LOCK_IMPL = $(SRCDIR)/@LOCK_IMPL@

# Subdirectories
SUBDIRS := Core Dataflow StandAlone $(COMPONENT_DIRS) main \
	testprograms $(PACKAGE_DIRS)

# Libraries and other flags

TCL_LIB_DIR    := @TCL_LIB_DIR@
TCL_LIB_FLAG   := @TCL_LIB_FLAG@
TCL_INIT_DIR   := @TCL_INIT_DIR@

TK_VERSION     := @TK_VERSION@
TK_LIB_DIR     := @TK_LIB_DIR@
TK_LIB_FLAG    := @TK_LIB_FLAG@
TK_LIB_SPEC    := @TK_LIB_SPEC@

ITCLSH         := @ITCLSH@
ITCL_LIB_DIR   := @ITCL_LIB_DIR@
ITCL_BIN_DIR   := @ITCL_BIN_DIR@
ITCL_LIB_SPEC  := @ITCL_LIB_SPEC@
ITCL_INIT_DIR  := @ITCL_INIT_DIR@
ITCL_WIDGETS   := @ITCL_WIDGETS@

ITK_LIB_SPEC   := @ITK_LIB_SPEC@
ITK_LIB_DIR    := @ITK_LIB_DIR@

BLT_LIB_DIR    := @BLT_LIB_DIR@
BLT_LIB_FLAG   := @BLT_LIB_FLAG@
BLT_TLINK      := -L$(BLT_LIB_DIR)

TCL_SRC_DIR    := @TCL_SRC_DIR@
TK_SRC_DIR     := @TK_SRC_DIR@
ITCL_SRC_DIR   := @ITCL_SRC_DIR@
ITK_SRC_DIR    := @ITK_SRC_DIR@

NEKTAR_LIB_DIR     := @NEKTAR_LIB_DIR@
NEKTAR_LIB_FLAG    := @NEKTAR_LIB_FLAG@
NEKTAR_INCLUDE_DIR := -I@NEKTAR_INCLUDE_DIR@

TEEM_INCLUDE      := @TEEM_INCLUDE@
TEEM_LIB_DIR      := @TEEM_LIB_DIR@

MPEG_INCLUDE      := @MPEG_INCLUDE@
MPEG_LIBRARY      := @MPEG_LIBRARY@
MPEG_DEF_FLAG	  := @MPEG_DEF_FLAG@

LIBIMAGE_INCLUDE  := @LIBIMAGE_INCLUDE@
LIBIMAGE_LIBRARY  := @LIBIMAGE_LIBRARY@
LIBIMAGE_DEF_FLAG := @LIBIMAGE_DEF_FLAG@

LDRUN_PREFIX       := @LDRUN_PREFIX@

MPI_LIB_DIR := @MPI_LIB_DIR@
MPI_LIB_FLAG := @MPI_LIB_FLAG@
ifneq ($(MPI_LIB_DIR),)
  MPI_LIBRARY := $(LDRUN_PREFIX)$(MPI_LIB_DIR) -L$(MPI_LIB_DIR) $(MPI_LIB_FLAG)
else
  MPI_LIBRARY := $(MPI_LIB_FLAG)
endif
ifneq (@MPI_INCLUDE_DIR@,)
MPI_INCLUDE := -I@MPI_INCLUDE_DIR@
endif
MPI_TLINK := -L$(MPI_LIB_DIR)

X_LIBS := @X_LIBS@
X_PRE_LIBS := @X_PRE_LIBS@
X_EXTRA_LIBS := @X_EXTRA_LIBS@
THREAD_LIBS := @THREAD_LIBS@
PLATFORM_LDFLAGS := @PLATFORM_LDFLAGS@

GL_LIBS := $(X_LIBS) $(X_PRE_LIBS) -lGLU -lGL -lXext -lX11 $(X_EXTRA_LIBS)
X11_LIBS := $(X_LIBS) $(X_PRE_LIBS) -lXext -lX11 $(X_EXTRA_LIBS)

PROGRAM_PSE   := @EXENAME@

TRACEBACK_LIB := @TRACEBACK_LIB@
IMAGE_LIBS := @IMAGE_LIBS@

LEX := @LEX@
YACC := @YACC@ -d -v

MAKE_PARALLELISM := @MAKE_PARALLELISM@
NBITS := @NBITS@

LARGESOS := @LARGESOS@

ifeq ($(LARGESOS),yes)
MALLOCLIB := Core
else
MALLOCLIB := Core/Malloc
endif

# Convenience variables - compounded from above definitions
BLT_LIBRARY := $(LDRUN_PREFIX)$(BLT_LIB_DIR) -L$(BLT_LIB_DIR) $(BLT_LIB_FLAG)
TCL_LIBRARY := $(LDRUN_PREFIX)$(TCL_LIB_DIR) -L$(TCL_LIB_DIR) $(TCL_LIB_FLAG)
TK_LIBRARY := $(LDRUN_PREFIX)$(TK_LIB_DIR) $(TK_LIB_SPEC)
ITCL_LIBRARY := $(LDRUN_PREFIX)$(ITCL_LIB_DIR) $(ITCL_LIB_SPEC) 
ITK_LIBRARY := $(LDRUN_PREFIX)$(ITK_LIB_DIR) $(ITK_LIB_SPEC) 
TEEM_LIBRARY := $(LDRUN_PREFIX)$(TEEM_LIB_DIR) -L$(TEEM_LIB_DIR) 
NEKTAR_LIBRARY := $(LDRUN_PREFIX)$(NEKTAR_LIB_DIR) -L$(NEKTAR_LIB_DIR) $(NEKTAR_LIB_FLAG)

DL_LIBRARY := @DL_LIBRARY@

GZ_LIBRARY := @GZ_LIBRARY@ 

XML_LIB_DIR := @XML_LIB_DIR@
XML_LIB_FLAG := @XML_LIB_FLAG@
XML_LIBRARY := $(LDRUN_PREFIX)$(XML_LIB_DIR) -L$(XML_LIB_DIR) $(XML_LIB_FLAG)
XML_INCLUDE := -I@XML_INCLUDE_DIR@
XML_TLINK := -L$(XML_LIB_DIR)

ifeq ($(BUILD_PARALLEL),yes)
GLOBUS_LIB_DIR := @GLOBUS_LIB@
GLOBUS_LIBS := $(LDRUN_PREFIX)$(GLOBUS_LIB_DIR) -L$(GLOBUS_LIB_DIR) -lglobus_nexus -lglobus_io -lglobus_dc -lglobus_common
GLOBUS_COMMON := $(LDRUN_PREFIX)$(GLOBUS_LIB_DIR) -L$(GLOBUS_LIB_DIR) -lglobus_common
GLOBUS_TLINK := -L$(GLOBUS_LIB_DIR)
endif

TLINK := $(BLT_TLINK) $(GLOBUS_TLINK) $(XML_TLINK)

PETSC_DIR := @PETSC_DIR@
PETSC_ARCH := @PETSC_ARCH@
ifneq ($(PETSC_DIR),)
PETSC_INCLUDES := -I$(PETSC_DIR)/include -I$(PETSC_DIR)/bmake/$(PETSC_ARCH)
PETSC_SUB := @PETSC_SUB@
PETSC_LIBDIR := $(PETSC_DIR)/lib/$(PETSC_SUB)/$(PETSC_ARCH)
PETSC_LIBS := $(LDRUN_PREFIX)$(PETSC_LIBDIR) -L$(PETSC_LIBDIR)
endif

INCLUDES += -I$(SRCTOP)/include -I$(SRCTOP) -I$(OBJTOP) -I$(SRCTOP)/Packages -I@TCL_INCLUDE_DIR@ -I@TK_INCLUDE_DIR@ -I@ITCL_INCLUDE_DIR@ -I@BLT_INCLUDE_DIR@ @GLOBUS_INCLUDE@ $(XML_INCLUDE) -I@GL_INCLUDE_DIR@ $(PETSC_INCLUDES)

SSTREAM_COMPAT := @SSTREAM_COMPAT@
ifeq ($(SSTREAM_COMPAT),yes)
INCLUDES := $(INCLUDES) -I$(SRCTOP)/include/compat
endif
INCLUDES := $(sort $(INCLUDES))

# variables and suffix rules for module transformation
#------------------------------------------------------------------------------

CC              := @CC@
CXX             := @CXX@
AS              := @AS@
LD              := @LD@
CFLAGS          := @CFLAGS@ $(CFLAGS) -DMPI_NO_CPPBIND -DMPIPP_H
SOFLAGS         := @SOFLAGS@ -L$(LIBDIR) $(CFLAGS)
LDFLAGS         := @LDFLAGS@ -L$(LIBDIR) $(CFLAGS)
ASFLAGS         := @ASFLAGS@  $(ASFLAGS)
CC_DEPEND_REGEN = @CC_DEPEND_REGEN@
NEED_SONAME	:= @NEED_SONAME@
F77		:= @F77@
FFLAGS		:= @FFLAGS@ $(FFLAGS)
F77_DEPEND_REGEN = @F77_DEPEND_REGEN@
ifeq ($(NEED_SONAME),yes)
SONAMEFLAG = -Wl,-soname,$(notdir $@)
else
SONAMEFLAG = 
endif

.SUFFIXES: .cc .c .o .d .s .F

.cc.o: $<
	$(CXX) $(CFLAGS) $(INCLUDES) $(CC_DEPEND_REGEN) -c $< -o $@
ifeq ($(CC_DEPEND_REGEN),-MD)
	echo -n "$(dir $@)" > $(basename $@).d
	cat $(basename $(notdir $@)).d >> $(basename $@).d
	rm $(basename $(notdir $@)).d 
endif

.F.o: $<
	$(F77) $(FFLAGS) $(FINCLUDES) $(F77_DEPEND_REGEN) -c $< -o $@
ifeq ($(F77_DEPEND_REGEN),-MD)
	mv $(basename $(notdir $@)).d $(basename $@).d
endif

.c.o: $<
	$(CC) $(CFLAGS) $(INCLUDES) $(CC_DEPEND_REGEN) -c $< -o $@
ifeq ($(CC_DEPEND_REGEN),-MD)
	mv $(basename $(notdir $@)).d $(basename $@).d
endif

.s.o: $<
	$(AS) $(ASFLAGS) -o $@ $< -o $@


