<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="SolveMatrix" category="Math">
  <overview>
    <authors>
      <author>Steven G. Parker</author>
    </authors>
    <summary>The SolveMatrix module is used to solve the linear system
    Ax=b, where A is a given Matrix, b is a given right-hand-side
    vector, and the user wants to find the solution vector x.</summary>
    <description>
      <p>We support several different iteratve solution techniques
      within SCIRun, including Jacobi, Conjugate Gradient, and
      Biconjugate Gradient.
      </p>
      <p>As the module iteratively approaches the solution, a
      graphical user interface depicts the norm of the residual.  This
      feedback allows the user to visually confirm whether a solution
      is converging, and if so how quickly.  It also provides a
      convenient interface for specifying a convergrence threshold, as
      the user can interactively raise of lower the maximum acceptable
      error tolerance in real-time.  As the solver is converging, the
      module can send out the current guess at the solution and
      continue to iterate; this intermediate result is passed
      downstream to dependent modules, and can be useful for
      visualizing how a system is physically converging.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Matrix</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>RHS</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>Solution</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <img>../Modules/Math/doc/SolveMatrixUI.jpg</img>
  </gui>
  <testing>
  </testing>
</component>
