<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="AttractNormals" category="FieldsData">
  <overview>
    <authors>
      <author>Michael Callahan</author>
    </authors>
    <summary>Make a new vector field that points to the input point.</summary>
    <description>
      <p>
        This creates a new vector field containing the same geometry
        and data location as the input field.  It works in two modes.
        If the input PointCloudField contains only one point, all of the
        vectors in the output field will be attracted to that input
        point.  If the input PointCloudField contains two or more points,
        the first two points will be used as a line and all the
        vectors in the output field will be attracted to that line.
        If the input field contains scalar values, the vectors in the
        output field will be scaled by those values.  Otherwise they
        will all be normalized.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
	<name>Input Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
	<name>Input Point</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
	<name>Output Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
</component>
