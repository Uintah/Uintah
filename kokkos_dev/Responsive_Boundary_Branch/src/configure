#! /bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated by GNU Autoconf 2.68 for Uintah 1.31.
#
# Report bugs to <csafe-homebrew@cs.utah.edu>.
#
#
# Copyright (C) 1992, 1993, 1994, 1995, 1996, 1998, 1999, 2000, 2001,
# 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010 Free Software
# Foundation, Inc.
#
#
# This configure script is free software; the Free Software Foundation
# gives unlimited permission to copy, distribute and modify it.
#
# ##
# ##  For more information, please see: http://software.sci.utah.edu
# ##
# ##  The MIT License
# ##
# ##  Copyright (c) 2004 Scientific Computing and Imaging Institute,
# ##  University of Utah.
# ##
# ##  License for the specific language governing rights and limitations under
# ##  Permission is hereby granted, free of charge, to any person obtaining a
# ##  copy of this software and associated documentation files (the "Software"),
# ##  to deal in the Software without restriction, including without limitation
# ##  the rights to use, copy, modify, merge, publish, distribute, sublicense,
# ##  and/or sell copies of the Software, and to permit persons to whom the
# ##  Software is furnished to do so, subject to the following conditions:
# ##
# ##  The above copyright notice and this permission notice shall be included
# ##  in all copies or substantial portions of the Software.
# ##
# ##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
# ##  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# ##  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# ##  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# ##  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# ##  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# ##  DEALINGS IN THE SOFTWARE.
# ##
#
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH

if test "x$CONFIG_SHELL" = x; then
  as_bourne_compatible="if test -n \"\${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on \${1+\"\$@\"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '\${1+\"\$@\"}'='\"\$@\"'
  setopt NO_GLOB_SUBST
else
  case \`(set -o) 2>/dev/null\` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi
"
  as_required="as_fn_return () { (exit \$1); }
as_fn_success () { as_fn_return 0; }
as_fn_failure () { as_fn_return 1; }
as_fn_ret_success () { return 0; }
as_fn_ret_failure () { return 1; }

exitcode=0
as_fn_success || { exitcode=1; echo as_fn_success failed.; }
as_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }
as_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }
as_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }
if ( set x; as_fn_ret_success y && test x = \"\$1\" ); then :

else
  exitcode=1; echo positional parameters were not saved.
fi
test x\$exitcode = x0 || exit 1"
  as_suggested="  as_lineno_1=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_1a=\$LINENO
  as_lineno_2=";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested" as_lineno_2a=\$LINENO
  eval 'test \"x\$as_lineno_1'\$as_run'\" != \"x\$as_lineno_2'\$as_run'\" &&
  test \"x\`expr \$as_lineno_1'\$as_run' + 1\`\" = \"x\$as_lineno_2'\$as_run'\"' || exit 1
test \$(( 1 + 1 )) = 2 || exit 1"
  if (eval "$as_required") 2>/dev/null; then :
  as_have_required=yes
else
  as_have_required=no
fi
  if test x$as_have_required = xyes && (eval "$as_suggested") 2>/dev/null; then :

else
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
as_found=false
for as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
  as_found=:
  case $as_dir in #(
	 /*)
	   for as_base in sh bash ksh sh5; do
	     # Try only shells that exist, to save several forks.
	     as_shell=$as_dir/$as_base
	     if { test -f "$as_shell" || test -f "$as_shell.exe"; } &&
		    { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$as_shell"; } 2>/dev/null; then :
  CONFIG_SHELL=$as_shell as_have_required=yes
		   if { $as_echo "$as_bourne_compatible""$as_suggested" | as_run=a "$as_shell"; } 2>/dev/null; then :
  break 2
fi
fi
	   done;;
       esac
  as_found=false
done
$as_found || { if { test -f "$SHELL" || test -f "$SHELL.exe"; } &&
	      { $as_echo "$as_bourne_compatible""$as_required" | as_run=a "$SHELL"; } 2>/dev/null; then :
  CONFIG_SHELL=$SHELL as_have_required=yes
fi; }
IFS=$as_save_IFS


      if test "x$CONFIG_SHELL" != x; then :
  # We cannot yet assume a decent shell, so we have to provide a
	# neutralization value for shells without unset; and this also
	# works around shells that cannot unset nonexistent variables.
	# Preserve -v and -x to the replacement shell.
	BASH_ENV=/dev/null
	ENV=/dev/null
	(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV
	export CONFIG_SHELL
	case $- in # ((((
	  *v*x* | *x*v* ) as_opts=-vx ;;
	  *v* ) as_opts=-v ;;
	  *x* ) as_opts=-x ;;
	  * ) as_opts= ;;
	esac
	exec "$CONFIG_SHELL" $as_opts "$as_myself" ${1+"$@"}
fi

    if test x$as_have_required = xno; then :
  $as_echo "$0: This script requires a shell more modern than all"
  $as_echo "$0: the shells that I found on your system."
  if test x${ZSH_VERSION+set} = xset ; then
    $as_echo "$0: In particular, zsh $ZSH_VERSION has bugs and should"
    $as_echo "$0: be upgraded to zsh 4.3.4 or later."
  else
    $as_echo "$0: Please tell bug-autoconf@gnu.org and
$0: csafe-homebrew@cs.utah.edu about your system, including
$0: any error possibly output before this message. Then
$0: install a modern shell, or manually run the script
$0: under such a shell if you do have one."
  fi
  exit 1
fi
fi
fi
SHELL=${CONFIG_SHELL-/bin/sh}
export SHELL
# Unset more variables known to interfere with behavior of common tools.
CLICOLOR_FORCE= GREP_OPTIONS=
unset CLICOLOR_FORCE GREP_OPTIONS

## --------------------- ##
## M4sh Shell Functions. ##
## --------------------- ##
# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset

# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error

if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits


  as_lineno_1=$LINENO as_lineno_1a=$LINENO
  as_lineno_2=$LINENO as_lineno_2a=$LINENO
  eval 'test "x$as_lineno_1'$as_run'" != "x$as_lineno_2'$as_run'" &&
  test "x`expr $as_lineno_1'$as_run' + 1`" = "x$as_lineno_2'$as_run'"' || {
  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)
  sed -n '
    p
    /[$]LINENO/=
  ' <$as_myself |
    sed '
      s/[$]LINENO.*/&-/
      t lineno
      b
      :lineno
      N
      :loop
      s/[$]LINENO\([^'$as_cr_alnum'_].*\n\)\(.*\)/\2\1\2/
      t loop
      s/-\n.*//
    ' >$as_me.lineno &&
  chmod +x "$as_me.lineno" ||
    { $as_echo "$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell" >&2; as_fn_exit 1; }

  # Don't try to exec as it changes $[0], causing all sort of problems
  # (the dirname of $[0] is not the place where we might find the
  # original and so on.  Autoconf is especially sensitive to this).
  . "./$as_me.lineno"
  # Exit status is that of the last command.
  exit
}

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null

if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


test -n "$DJDIR" || exec 7<&0 </dev/null
exec 6>&1

# Name of the host.
# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,
# so uname gets run too.
ac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`

#
# Initializations.
#
ac_default_prefix=/usr/local
ac_clean_files=
ac_config_libobj_dir=.
LIBOBJS=
cross_compiling=no
subdirs=
MFLAGS=
MAKEFLAGS=

# Identity of this package.
PACKAGE_NAME='Uintah'
PACKAGE_TARNAME='uintah'
PACKAGE_VERSION='1.31'
PACKAGE_STRING='Uintah 1.31'
PACKAGE_BUGREPORT='csafe-homebrew@cs.utah.edu'
PACKAGE_URL=''

ac_unique_file="configVars.mk.in"
# Factoring default headers for most tests.
ac_includes_default="\
#include <stdio.h>
#ifdef HAVE_SYS_TYPES_H
# include <sys/types.h>
#endif
#ifdef HAVE_SYS_STAT_H
# include <sys/stat.h>
#endif
#ifdef STDC_HEADERS
# include <stdlib.h>
# include <stddef.h>
#else
# ifdef HAVE_STDLIB_H
#  include <stdlib.h>
# endif
#endif
#ifdef HAVE_STRING_H
# if !defined STDC_HEADERS && defined HAVE_MEMORY_H
#  include <memory.h>
# endif
# include <string.h>
#endif
#ifdef HAVE_STRINGS_H
# include <strings.h>
#endif
#ifdef HAVE_INTTYPES_H
# include <inttypes.h>
#endif
#ifdef HAVE_STDINT_H
# include <stdint.h>
#endif
#ifdef HAVE_UNISTD_H
# include <unistd.h>
#endif"

ac_subst_vars='LTLIBOBJS
LIBOBJS
scirun_src_dir
scirun_obj_dir
WOFF_STRING
HYPRE_LIB_DIR_FLAG
HYPRE_LIB_FLAG
INC_HYPRE_H
DEF_HYPRE
HAVE_HYPRE
BUILD_WASATCH
TABPROPS_LIB_DIR_FLAG
TABPROPS_LIB_FLAG
INC_TABPROPS_H
DEF_TABPROPS
HAVE_TABPROPS
EXPRLIB_LIB_DIR_FLAG
EXPRLIB_LIB_FLAG
INC_EXPRLIB_H
DEF_EXPRLIB
HAVE_EXPRLIB
SPATIALOPS_LIB_DIR_FLAG
SPATIALOPS_LIB_FLAG
INC_SPATIALOPS_H
DEF_SPATIALOPS
HAVE_SPATIALOPS
BOOST_LIB_DIR_FLAG
BOOST_LIB_FLAG
INC_BOOST_H
DEF_BOOST
HAVE_BOOST
HDF5_LIB_DIR_FLAG
HDF5_LIB_FLAG
INC_HDF5_H
DEF_HDF5
TEEM_LIB_DIR_FLAG
TEEM_LIB_FLAG
INC_TEEM_H
DEF_TEEM
HAVE_TEEM
INC_FREETYPE_H
DEF_FREETYPE
FREETYPE_LIB_DIR_FLAG
FREETYPE_LIB_FLAG
PAPI_LIB_FLAG
PAPI_LIB_DIR_FLAG
INC_PAPI_H
DEF_PAPI
HAVE_PAPI
TAU_MAKEFILE
XALAN_PATH
INC_PETSC_UNI_H
DEF_PETSC_UNI
PETSC_UNI_LIB_DIR_FLAG
PETSC_UNI_LIB_FLAG
HAVE_PETSC_UNI
INC_PETSC_H
DEF_PETSC
PETSC_LIB_DIR_FLAG
PETSC_LIB_FLAG
HAVE_PETSC
MPI_UNI_LIB_DIR_FLAG
MPI_UNI_LIB_FLAG
INC_MPI_UNI_H
DEF_MPI_UNI
MPI_LIB_DIR_FLAG
MPI_LIB_FLAG
INC_MPI_H
DEF_MPI
HAVE_MPI
LAPACKMP_LIB_DIR_FLAG
LAPACKMP_LIB_FLAG
HAVE_LAPACKMP
LAPACK_LIB_DIR_FLAG
LAPACK_LIB_FLAG
DEF_LAPACK
HAVE_LAPACK
DEF_CBLAS
DEF_BLAS
BLAS_LIB_DIR_FLAG
BLAS_LIB_FLAG
INC_BLAS_H
HAVE_CBLAS
HAVE_BLAS
CBLAS_H
ELECTRIC_FENCE_LIB_DIR_FLAG
ELECTRIC_FENCE_LIB_FLAG
HAVE_ELECTRIC_FENCE
F_LIB_DIR_FLAG
F_LIB_FLAG
INC_UNP_H
UNP_LIB_DIR_FLAG
UNP_LIB_FLAG
INC_SCISOCK_H
SCISOCK_LIB_DIR_FLAG
SCISOCK_LIB_FLAG
DEF_MPEG
MPEGE_LIB_DIR_FLAG
MPEGE_LIB_FLAG
EXCEPTIONS_CRASH_DEF
HAVE_PNG
DEF_PNG
INC_PNG_H
PNG_LIB_DIR_FLAG
PNG_LIB_FLAG
TIFF_LIB_DIR_FLAG
TIFF_LIB_FLAG
JPEG_LIB_DIR_FLAG
JPEG_LIB_FLAG
DEF_Z
INC_Z_H
Z_LIB_DIR_FLAG
Z_LIB_FLAG
DEF_EXC
EXC_LIB_DIR_FLAG
EXC_LIB_FLAG
SSTREAM_COMPAT
INC_XML2_H
XML2_LIB_DIR_FLAG
XML2_LIB_FLAG
DEF_HASHMAP
DEF_IEEEFP
DEF_STAT64
DL_LIB_DIR_FLAG
DL_LIB_FLAG
VISIT_INSTALL_DIR
UINTAH_UDA_TO_VIS_LIB
BUILD_VISIT
SEMAPHORE_LIB_FLAG
DEF_THREAD
SOCKET_LIB_FLAG
THREAD_LIB_FLAG
THREAD_IMPL
RT_LIB_FLAG
M_LIB_DIR_FLAG
M_LIB_FLAG
TEMPLATE_BOX
TEMPLATE_TAG
REPOSITORY_FLAGS
NEED_SONAME
MAKE_PARALLELISM
extra_cflags
LDRUN_PREFIX
ASFLAGS
G77
DEF_FORTRAN_UNDERSCORE
FORTRAN_UNDERSCORE
PERL
ETAGS
AWK
GMAKE
MAKE
F77_DEPEND_EXT
F77_DEPEND_REGEN
F77_DEPEND_MODE
CC_DEPEND_EXT
CC_DEPEND_REGEN
CC_DEPEND_MODE
WIN_OTFFLAGS
WIN_DLLFLAGS
NBITS
NEED_OSX_SYSTEMSTUBS
DEF_OSX_SNOW_LEOPARD
LD
AS
PATH_TO_MSYS_BIN
PATH_TO_PSDK
PATH_TO_VC
ZOLTAN_LIB_DIR_FLAG
ZOLTAN_LIB_FLAG
INC_ZOLTAN_H
DEF_ZOLTAN
MALLOC_TRACE_LIB_MPI_FLAG
MALLOC_TRACE_LIB_DIR_FLAG
MALLOC_TRACE_LIB_FLAG
INC_MALLOC_TRACE_H
DEF_MALLOC_TRACE
SO_OR_ARCHIVE_EXTENSION
IS_STATIC_BUILD
SOFLAGS
MAKE_ARCHIVES
STATIC_BUILD_DEF
ac_ct_F77
NO_FORTRAN
DEF_WASATCH
DEF_MODELS_RADIATION
DEF_NO_FORTRAN
DEF_MPM
DEF_ICE
DEF_ARCHES
BUILD_MODELS_RADIATION
BUILD_MPM
BUILD_ICE
BUILD_ARCHES
OGL_ERR_MACRO
DEBUG
THROW_LEVEL
ASSERTION_LEVEL
DEF_MALLOC_LINENUMBERS
DEF_MALLOC
SCI_MALLOC_ON
TIME_IMPL
LARGESOS
EXENAME
NOPRINTDIR
ac_ct_CXX
LONG_LONG_SWAP
EGREP
GREP
OBJEXT
EXEEXT
ac_ct_CC
IS_AIX
IS_WIN
DEF_OSX
IS_OSX
DEF_MEMORY_INIT_NUMBER
DEF_MEMORY_INIT
host_os
host_vendor
host_cpu
host
build_os
build_vendor
build_cpu
build
CXXCPP
CPP
FFLAGS
F77
CXXFLAGS
CPPFLAGS
CXX
LDFLAGS
CFLAGS
CC
target_alias
host_alias
build_alias
LIBS
ECHO_T
ECHO_N
ECHO_C
DEFS
mandir
localedir
libdir
psdir
pdfdir
dvidir
htmldir
infodir
docdir
oldincludedir
includedir
localstatedir
sharedstatedir
sysconfdir
datadir
datarootdir
libexecdir
sbindir
bindir
program_transform_name
prefix
exec_prefix
PACKAGE_URL
PACKAGE_BUGREPORT
PACKAGE_STRING
PACKAGE_VERSION
PACKAGE_TARNAME
PACKAGE_NAME
PATH_SEPARATOR
SHELL'
ac_subst_files=''
ac_user_opts='
enable_option_checking
with_atlas
with_mkl
with_acml
with_blas
with_electric_fence
with_lapack
with_teem
with_fortran
with_ofed
with_mx
with_mpi
with_mpi_lib
with_mpi_include
with_mpi_extra_libs
with_mpiuni
with_hypre
with_petsc
with_boost
with_spatialops
with_exprlib
with_tabprops
with_zoltan
with_unipetsc
with_tau
with_papi
with_unp
with_zlib
with_jpeg
with_tiff
with_xalan
with_libxml2
with_hdf5
with_freetype
with_ftgl
with_visit
enable_wasatch_3p
enable_static
enable_verbosity
enable_threads
enable_debug
enable_optimize
enable_64bit
enable_32bit
enable_output_avg_walltime
enable_exename
enable_largesos
enable_sci_malloc
enable_memory_init
with_MallocTrace
enable_assertion_level
enable_scinew_line_numbers
enable_throw_level
enable_rath
'
      ac_precious_vars='build_alias
host_alias
target_alias
CC
CFLAGS
LDFLAGS
CXX
CPPFLAGS
CXXFLAGS
F77
FFLAGS
CPP
CXXCPP
LIBS
CCC'


# Initialize some variables set by options.
ac_init_help=
ac_init_version=false
ac_unrecognized_opts=
ac_unrecognized_sep=
# The variables have the same names as the options, with
# dashes changed to underlines.
cache_file=/dev/null
exec_prefix=NONE
no_create=
no_recursion=
prefix=NONE
program_prefix=NONE
program_suffix=NONE
program_transform_name=s,x,x,
silent=
site=
srcdir=
verbose=
x_includes=NONE
x_libraries=NONE

# Installation directory options.
# These are left unexpanded so users can "make install exec_prefix=/foo"
# and all the variables that are supposed to be based on exec_prefix
# by default will actually change.
# Use braces instead of parens because sh, perl, etc. also accept them.
# (The list follows the same order as the GNU Coding Standards.)
bindir='${exec_prefix}/bin'
sbindir='${exec_prefix}/sbin'
libexecdir='${exec_prefix}/libexec'
datarootdir='${prefix}/share'
datadir='${datarootdir}'
sysconfdir='${prefix}/etc'
sharedstatedir='${prefix}/com'
localstatedir='${prefix}/var'
includedir='${prefix}/include'
oldincludedir='/usr/include'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
infodir='${datarootdir}/info'
htmldir='${docdir}'
dvidir='${docdir}'
pdfdir='${docdir}'
psdir='${docdir}'
libdir='${exec_prefix}/lib'
localedir='${datarootdir}/locale'
mandir='${datarootdir}/man'

ac_prev=
ac_dashdash=
for ac_option
do
  # If the previous option needs an argument, assign it.
  if test -n "$ac_prev"; then
    eval $ac_prev=\$ac_option
    ac_prev=
    continue
  fi

  case $ac_option in
  *=?*) ac_optarg=`expr "X$ac_option" : '[^=]*=\(.*\)'` ;;
  *=)   ac_optarg= ;;
  *)    ac_optarg=yes ;;
  esac

  # Accept the important Cygnus configure options, so we can diagnose typos.

  case $ac_dashdash$ac_option in
  --)
    ac_dashdash=yes ;;

  -bindir | --bindir | --bindi | --bind | --bin | --bi)
    ac_prev=bindir ;;
  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)
    bindir=$ac_optarg ;;

  -build | --build | --buil | --bui | --bu)
    ac_prev=build_alias ;;
  -build=* | --build=* | --buil=* | --bui=* | --bu=*)
    build_alias=$ac_optarg ;;

  -cache-file | --cache-file | --cache-fil | --cache-fi \
  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)
    ac_prev=cache_file ;;
  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \
  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)
    cache_file=$ac_optarg ;;

  --config-cache | -C)
    cache_file=config.cache ;;

  -datadir | --datadir | --datadi | --datad)
    ac_prev=datadir ;;
  -datadir=* | --datadir=* | --datadi=* | --datad=*)
    datadir=$ac_optarg ;;

  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \
  | --dataroo | --dataro | --datar)
    ac_prev=datarootdir ;;
  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \
  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)
    datarootdir=$ac_optarg ;;

  -disable-* | --disable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*disable-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=no ;;

  -docdir | --docdir | --docdi | --doc | --do)
    ac_prev=docdir ;;
  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)
    docdir=$ac_optarg ;;

  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)
    ac_prev=dvidir ;;
  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)
    dvidir=$ac_optarg ;;

  -enable-* | --enable-*)
    ac_useropt=`expr "x$ac_option" : 'x-*enable-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid feature name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"enable_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval enable_$ac_useropt=\$ac_optarg ;;

  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \
  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \
  | --exec | --exe | --ex)
    ac_prev=exec_prefix ;;
  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \
  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \
  | --exec=* | --exe=* | --ex=*)
    exec_prefix=$ac_optarg ;;

  -gas | --gas | --ga | --g)
    # Obsolete; use --with-gas.
    with_gas=yes ;;

  -help | --help | --hel | --he | -h)
    ac_init_help=long ;;
  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)
    ac_init_help=recursive ;;
  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)
    ac_init_help=short ;;

  -host | --host | --hos | --ho)
    ac_prev=host_alias ;;
  -host=* | --host=* | --hos=* | --ho=*)
    host_alias=$ac_optarg ;;

  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)
    ac_prev=htmldir ;;
  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \
  | --ht=*)
    htmldir=$ac_optarg ;;

  -includedir | --includedir | --includedi | --included | --include \
  | --includ | --inclu | --incl | --inc)
    ac_prev=includedir ;;
  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \
  | --includ=* | --inclu=* | --incl=* | --inc=*)
    includedir=$ac_optarg ;;

  -infodir | --infodir | --infodi | --infod | --info | --inf)
    ac_prev=infodir ;;
  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)
    infodir=$ac_optarg ;;

  -libdir | --libdir | --libdi | --libd)
    ac_prev=libdir ;;
  -libdir=* | --libdir=* | --libdi=* | --libd=*)
    libdir=$ac_optarg ;;

  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \
  | --libexe | --libex | --libe)
    ac_prev=libexecdir ;;
  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \
  | --libexe=* | --libex=* | --libe=*)
    libexecdir=$ac_optarg ;;

  -localedir | --localedir | --localedi | --localed | --locale)
    ac_prev=localedir ;;
  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)
    localedir=$ac_optarg ;;

  -localstatedir | --localstatedir | --localstatedi | --localstated \
  | --localstate | --localstat | --localsta | --localst | --locals)
    ac_prev=localstatedir ;;
  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \
  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)
    localstatedir=$ac_optarg ;;

  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)
    ac_prev=mandir ;;
  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)
    mandir=$ac_optarg ;;

  -nfp | --nfp | --nf)
    # Obsolete; use --without-fp.
    with_fp=no ;;

  -no-create | --no-create | --no-creat | --no-crea | --no-cre \
  | --no-cr | --no-c | -n)
    no_create=yes ;;

  -no-recursion | --no-recursion | --no-recursio | --no-recursi \
  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)
    no_recursion=yes ;;

  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \
  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \
  | --oldin | --oldi | --old | --ol | --o)
    ac_prev=oldincludedir ;;
  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \
  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \
  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)
    oldincludedir=$ac_optarg ;;

  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
    ac_prev=prefix ;;
  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
    prefix=$ac_optarg ;;

  -program-prefix | --program-prefix | --program-prefi | --program-pref \
  | --program-pre | --program-pr | --program-p)
    ac_prev=program_prefix ;;
  -program-prefix=* | --program-prefix=* | --program-prefi=* \
  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)
    program_prefix=$ac_optarg ;;

  -program-suffix | --program-suffix | --program-suffi | --program-suff \
  | --program-suf | --program-su | --program-s)
    ac_prev=program_suffix ;;
  -program-suffix=* | --program-suffix=* | --program-suffi=* \
  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)
    program_suffix=$ac_optarg ;;

  -program-transform-name | --program-transform-name \
  | --program-transform-nam | --program-transform-na \
  | --program-transform-n | --program-transform- \
  | --program-transform | --program-transfor \
  | --program-transfo | --program-transf \
  | --program-trans | --program-tran \
  | --progr-tra | --program-tr | --program-t)
    ac_prev=program_transform_name ;;
  -program-transform-name=* | --program-transform-name=* \
  | --program-transform-nam=* | --program-transform-na=* \
  | --program-transform-n=* | --program-transform-=* \
  | --program-transform=* | --program-transfor=* \
  | --program-transfo=* | --program-transf=* \
  | --program-trans=* | --program-tran=* \
  | --progr-tra=* | --program-tr=* | --program-t=*)
    program_transform_name=$ac_optarg ;;

  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)
    ac_prev=pdfdir ;;
  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)
    pdfdir=$ac_optarg ;;

  -psdir | --psdir | --psdi | --psd | --ps)
    ac_prev=psdir ;;
  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)
    psdir=$ac_optarg ;;

  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil)
    silent=yes ;;

  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)
    ac_prev=sbindir ;;
  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \
  | --sbi=* | --sb=*)
    sbindir=$ac_optarg ;;

  -sharedstatedir | --sharedstatedir | --sharedstatedi \
  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \
  | --sharedst | --shareds | --shared | --share | --shar \
  | --sha | --sh)
    ac_prev=sharedstatedir ;;
  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \
  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \
  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \
  | --sha=* | --sh=*)
    sharedstatedir=$ac_optarg ;;

  -site | --site | --sit)
    ac_prev=site ;;
  -site=* | --site=* | --sit=*)
    site=$ac_optarg ;;

  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)
    ac_prev=srcdir ;;
  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)
    srcdir=$ac_optarg ;;

  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \
  | --syscon | --sysco | --sysc | --sys | --sy)
    ac_prev=sysconfdir ;;
  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \
  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)
    sysconfdir=$ac_optarg ;;

  -target | --target | --targe | --targ | --tar | --ta | --t)
    ac_prev=target_alias ;;
  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)
    target_alias=$ac_optarg ;;

  -v | -verbose | --verbose | --verbos | --verbo | --verb)
    verbose=yes ;;

  -version | --version | --versio | --versi | --vers | -V)
    ac_init_version=: ;;

  -with-* | --with-*)
    ac_useropt=`expr "x$ac_option" : 'x-*with-\([^=]*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=\$ac_optarg ;;

  -without-* | --without-*)
    ac_useropt=`expr "x$ac_option" : 'x-*without-\(.*\)'`
    # Reject names that are not valid shell variable names.
    expr "x$ac_useropt" : ".*[^-+._$as_cr_alnum]" >/dev/null &&
      as_fn_error $? "invalid package name: $ac_useropt"
    ac_useropt_orig=$ac_useropt
    ac_useropt=`$as_echo "$ac_useropt" | sed 's/[-+.]/_/g'`
    case $ac_user_opts in
      *"
"with_$ac_useropt"
"*) ;;
      *) ac_unrecognized_opts="$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig"
	 ac_unrecognized_sep=', ';;
    esac
    eval with_$ac_useropt=no ;;

  --x)
    # Obsolete; use --with-x.
    with_x=yes ;;

  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \
  | --x-incl | --x-inc | --x-in | --x-i)
    ac_prev=x_includes ;;
  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \
  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)
    x_includes=$ac_optarg ;;

  -x-libraries | --x-libraries | --x-librarie | --x-librari \
  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)
    ac_prev=x_libraries ;;
  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \
  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)
    x_libraries=$ac_optarg ;;

  -*) as_fn_error $? "unrecognized option: \`$ac_option'
Try \`$0 --help' for more information"
    ;;

  *=*)
    ac_envvar=`expr "x$ac_option" : 'x\([^=]*\)='`
    # Reject names that are not valid shell variable names.
    case $ac_envvar in #(
      '' | [0-9]* | *[!_$as_cr_alnum]* )
      as_fn_error $? "invalid variable name: \`$ac_envvar'" ;;
    esac
    eval $ac_envvar=\$ac_optarg
    export $ac_envvar ;;

  *)
    # FIXME: should be removed in autoconf 3.0.
    $as_echo "$as_me: WARNING: you should use --build, --host, --target" >&2
    expr "x$ac_option" : ".*[^-._$as_cr_alnum]" >/dev/null &&
      $as_echo "$as_me: WARNING: invalid host type: $ac_option" >&2
    : "${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}"
    ;;

  esac
done

if test -n "$ac_prev"; then
  ac_option=--`echo $ac_prev | sed 's/_/-/g'`
  as_fn_error $? "missing argument to $ac_option"
fi

if test -n "$ac_unrecognized_opts"; then
  case $enable_option_checking in
    no) ;;
    fatal) as_fn_error $? "unrecognized options: $ac_unrecognized_opts" ;;
    *)     $as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2 ;;
  esac
fi

# Check all directory arguments for consistency.
for ac_var in	exec_prefix prefix bindir sbindir libexecdir datarootdir \
		datadir sysconfdir sharedstatedir localstatedir includedir \
		oldincludedir docdir infodir htmldir dvidir pdfdir psdir \
		libdir localedir mandir
do
  eval ac_val=\$$ac_var
  # Remove trailing slashes.
  case $ac_val in
    */ )
      ac_val=`expr "X$ac_val" : 'X\(.*[^/]\)' \| "X$ac_val" : 'X\(.*\)'`
      eval $ac_var=\$ac_val;;
  esac
  # Be sure to have absolute directory names.
  case $ac_val in
    [\\/$]* | ?:[\\/]* )  continue;;
    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;
  esac
  as_fn_error $? "expected an absolute directory name for --$ac_var: $ac_val"
done

# There might be people who depend on the old broken behavior: `$host'
# used to hold the argument of --host etc.
# FIXME: To remove some day.
build=$build_alias
host=$host_alias
target=$target_alias

# FIXME: To remove some day.
if test "x$host_alias" != x; then
  if test "x$build_alias" = x; then
    cross_compiling=maybe
    $as_echo "$as_me: WARNING: if you wanted to set the --build type, don't use --host.
    If a cross compiler is detected then cross compile mode will be used" >&2
  elif test "x$build_alias" != "x$host_alias"; then
    cross_compiling=yes
  fi
fi

ac_tool_prefix=
test -n "$host_alias" && ac_tool_prefix=$host_alias-

test "$silent" = yes && exec 6>/dev/null


ac_pwd=`pwd` && test -n "$ac_pwd" &&
ac_ls_di=`ls -di .` &&
ac_pwd_ls_di=`cd "$ac_pwd" && ls -di .` ||
  as_fn_error $? "working directory cannot be determined"
test "X$ac_ls_di" = "X$ac_pwd_ls_di" ||
  as_fn_error $? "pwd does not report name of working directory"


# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  ac_srcdir_defaulted=yes
  # Try the directory containing this script, then the parent directory.
  ac_confdir=`$as_dirname -- "$as_myself" ||
$as_expr X"$as_myself" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_myself" : 'X\(//\)[^/]' \| \
	 X"$as_myself" : 'X\(//\)$' \| \
	 X"$as_myself" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_myself" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  srcdir=$ac_confdir
  if test ! -r "$srcdir/$ac_unique_file"; then
    srcdir=..
  fi
else
  ac_srcdir_defaulted=no
fi
if test ! -r "$srcdir/$ac_unique_file"; then
  test "$ac_srcdir_defaulted" = yes && srcdir="$ac_confdir or .."
  as_fn_error $? "cannot find sources ($ac_unique_file) in $srcdir"
fi
ac_msg="sources are in $srcdir, but \`cd $srcdir' does not work"
ac_abs_confdir=`(
	cd "$srcdir" && test -r "./$ac_unique_file" || as_fn_error $? "$ac_msg"
	pwd)`
# When building in place, set srcdir=.
if test "$ac_abs_confdir" = "$ac_pwd"; then
  srcdir=.
fi
# Remove unnecessary trailing slashes from srcdir.
# Double slashes in file names in object file debugging info
# mess up M-x gdb in Emacs.
case $srcdir in
*/) srcdir=`expr "X$srcdir" : 'X\(.*[^/]\)' \| "X$srcdir" : 'X\(.*\)'`;;
esac
for ac_var in $ac_precious_vars; do
  eval ac_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_env_${ac_var}_value=\$${ac_var}
  eval ac_cv_env_${ac_var}_set=\${${ac_var}+set}
  eval ac_cv_env_${ac_var}_value=\$${ac_var}
done

#
# Report the --help message.
#
if test "$ac_init_help" = "long"; then
  # Omit some internal or obsolete options to make the list less imposing.
  # This message is too long to be a string in the A/UX 3.1 sh.
  cat <<_ACEOF
\`configure' configures Uintah 1.31 to adapt to many kinds of systems.

Usage: $0 [OPTION]... [VAR=VALUE]...

To assign environment variables (e.g., CC, CFLAGS...), specify them as
VAR=VALUE.  See below for descriptions of some of the useful variables.

Defaults for the options are specified in brackets.

Configuration:
  -h, --help              display this help and exit
      --help=short        display options specific to this package
      --help=recursive    display the short help of all the included packages
  -V, --version           display version information and exit
  -q, --quiet, --silent   do not print \`checking ...' messages
      --cache-file=FILE   cache test results in FILE [disabled]
  -C, --config-cache      alias for \`--cache-file=config.cache'
  -n, --no-create         do not create output files
      --srcdir=DIR        find the sources in DIR [configure dir or \`..']

Installation directories:
  --prefix=PREFIX         install architecture-independent files in PREFIX
                          [$ac_default_prefix]
  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX
                          [PREFIX]

By default, \`make install' will install all the files in
\`$ac_default_prefix/bin', \`$ac_default_prefix/lib' etc.  You can specify
an installation prefix other than \`$ac_default_prefix' using \`--prefix',
for instance \`--prefix=\$HOME'.

For better control, use the options below.

Fine tuning of the installation directories:
  --bindir=DIR            user executables [EPREFIX/bin]
  --sbindir=DIR           system admin executables [EPREFIX/sbin]
  --libexecdir=DIR        program executables [EPREFIX/libexec]
  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]
  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]
  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]
  --libdir=DIR            object code libraries [EPREFIX/lib]
  --includedir=DIR        C header files [PREFIX/include]
  --oldincludedir=DIR     C header files for non-gcc [/usr/include]
  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]
  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]
  --infodir=DIR           info documentation [DATAROOTDIR/info]
  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]
  --mandir=DIR            man documentation [DATAROOTDIR/man]
  --docdir=DIR            documentation root [DATAROOTDIR/doc/uintah]
  --htmldir=DIR           html documentation [DOCDIR]
  --dvidir=DIR            dvi documentation [DOCDIR]
  --pdfdir=DIR            pdf documentation [DOCDIR]
  --psdir=DIR             ps documentation [DOCDIR]
_ACEOF

  cat <<\_ACEOF

System types:
  --build=BUILD     configure for building on BUILD [guessed]
  --host=HOST       cross-compile to build programs to run on HOST [BUILD]
_ACEOF
fi

if test -n "$ac_init_help"; then
  case $ac_init_help in
     short | recursive ) echo "Configuration of Uintah 1.31:";;
   esac
  cat <<\_ACEOF

Optional Features:
  --disable-option-checking  ignore unrecognized --enable/--with options
  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)
  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]
--enable-wasatch_3p     Download and build the Wasatch Thirdparty libraries
                          - TabProps oExprLibs SpatialOps.
--enable-static         Build a statically linked version of Uintah. Set to
                          'full' to force full static link.
--enable-verbosity      Turn on verbose configure output
--enable-threads        Specify a thread implementation (pthreads or irix)
--enable-debug          Turn on debugging (default is -g) or specify your
                          own. example: --enable-debug='-O0 -g'
--enable-optimize       Turn on optimize (default is -O2) or specify your
                          own. example: --enable-optimize='-O3'
--enable-64bit          Compile in 64 bit mode
--enable-32bit          Compile in 32 bit mode
--enable-output-avg-walltime
                          Output ellapsed wall-times
--enable-exename=<name> Use name for executable name instead of the default:
                          scirun
--enable-largesos       Build one .so per directory
--enable-sci-malloc     Use SCI memory allocation/deallocation checks. Note:
                          you cannot use sci-malloc-trace at the same time.
--enable-memory-initialization=8_bit_number
                          Force all new'd and malloc'd memory to be initialied
                          to the value given - defaults to 127.
--enable-assertion-level=N
                          Use assertion level N (0-3) (Where 0 turns off
                          assertions, and 3 turns on all assertions.)
--enable-scinew-line-numbers
                          Have SCI malloc store the file and line that calls
                          'scinew'
--enable-throw-level=N  Use throw level N (0-3)
--enable-rpath          Use the default runtime library search path

Optional Packages:
  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]
  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)
--with-atlas=DIR        Use the atlas (for lapack/blas) installation in DIR
--with-mkl=DIR          Use the mkl (for lapack/blas) installation in DIR
--with-acml=DIR         Use the acml (for lapack/blas) installation in DIR
--with-blas=DIR         Use the blas installation in DIR
--with-electric-fence=DIR
                          Use Electric Fence (Memory Tracking) library in DIR
--with-lapack=DIR       Use the lapack installation in DIR
--with-teem=DIR         Use the teem installation in DIR/lib
--with-fortran=DIR      Use the fortran (eg: g2c) installation in DIR/lib
--with-ofed=DIR         Specify that OFED - Infiniband - is needed for the
                          mpi installation
--with-mx=DIR           Specify that mx - Myrinet - is needed for the mpi
                          installation
--with-mpi=DIR          Use the mpi installation in DIR
--with-mpi-lib=DIR      Use the mpi libraries installed in DIR
--with-mpi-include=DIR  Use the mpi include files installed in DIR
--with-mpi-extra-libs=/path/to/lib1.so
                          Use this additional library(or libraries - comma
                          separated) for mpi linking
--with-mpiuni=DIR       Use the mpiuni installation in DIR
--with-hypre=DIR        Use the hypre installation in DIR
--with-petsc=DIR        Use the petsc installation in DIR
--with-boost=DIR        Use the Boost library in DIR
--with-spatialops=DIR   Use the SpatialOps library in DIR
--with-exprlib=DIR      Use the ExprLib library in DIR
--with-tabprops=DIR     Use the TabProps library in DIR
--with-zoltan=DIR       Use the Zoltan installation in DIR
--with-unipetsc=DIR     Use the unipetsc installation in DIR
--with-tau=<tau-makefile>
                          Specify a Tau Makefile
--with-papi=DIR         Use the papi installation in DIR
--with-unp=DIR          Use the unp installation in DIR
--with-zlib=DIR         Use the zlib installation in DIR
--with-jpeg=DIR         Use the jpeg installation in DIR
--with-tiff=DIR         Use the tiff installation in DIR
--with-xalan=DIR        Use the xalan installation in DIR
--with-libxml2=DIR      Use the libxml2 installation in DIR. Set 'DIR' to
                          'built-in' if explicit linking of xml2 is NOT
                          required.
--with-hdf5=DIR         Use the hdf5 installation in DIR
--with-freetype=DIR     Use the Freetype2 installation in DIR
--with-ftgl=DIR         Use the Freetype GL installation in DIR
--with-visit=DIR        Turn on VisIt visualization tool support. Point to
                          VisIt installation.
--with-MallocTrace=DIR  Use MallocTrace library. Note: you cannot use
                          sci-malloc at the same time.

Some influential environment variables:
  CC          C compiler command
  CFLAGS      C compiler flags
  LDFLAGS     linker flags
  CXX         C++ compiler command
  CPPFLAGS    C/C++ preprocessor flags
  CXXFLAGS    C++ compiler flags
  F77         Fortran 77 compiler command
  FFLAGS      Fortran 77 compiler flags
  CPP         C preprocessor
  CXXCPP      C++ preprocessor
  LIBS        libraries to pass to the linker, e.g. -l<library>

Use these variables to override the choices made by `configure' or to help
it to find libraries and programs with nonstandard names/locations.

Report bugs to <csafe-homebrew@cs.utah.edu>.
_ACEOF
ac_status=$?
fi

if test "$ac_init_help" = "recursive"; then
  # If there are subdirs, report their specific --help.
  for ac_dir in : $ac_subdirs_all; do test "x$ac_dir" = x: && continue
    test -d "$ac_dir" ||
      { cd "$srcdir" && ac_pwd=`pwd` && srcdir=. && test -d "$ac_dir"; } ||
      continue
    ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix

    cd "$ac_dir" || { ac_status=$?; continue; }
    # Check for guested configure.
    if test -f "$ac_srcdir/configure.gnu"; then
      echo &&
      $SHELL "$ac_srcdir/configure.gnu" --help=recursive
    elif test -f "$ac_srcdir/configure"; then
      echo &&
      $SHELL "$ac_srcdir/configure" --help=recursive
    else
      $as_echo "$as_me: WARNING: no configuration information is in $ac_dir" >&2
    fi || ac_status=$?
    cd "$ac_pwd" || { ac_status=$?; break; }
  done
fi

test -n "$ac_init_help" && exit $ac_status
if $ac_init_version; then
  cat <<\_ACEOF
Uintah configure 1.31
generated by GNU Autoconf 2.68

Copyright (C) 2010 Free Software Foundation, Inc.
This configure script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it.

##
##  For more information, please see: http://software.sci.utah.edu
##
##  The MIT License
##
##  Copyright (c) 2004 Scientific Computing and Imaging Institute,
##  University of Utah.
##
##  License for the specific language governing rights and limitations under
##  Permission is hereby granted, free of charge, to any person obtaining a
##  copy of this software and associated documentation files (the "Software"),
##  to deal in the Software without restriction, including without limitation
##  the rights to use, copy, modify, merge, publish, distribute, sublicense,
##  and/or sell copies of the Software, and to permit persons to whom the
##  Software is furnished to do so, subject to the following conditions:
##
##  The above copyright notice and this permission notice shall be included
##  in all copies or substantial portions of the Software.
##
##  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
##  OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
##  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
##  THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
##  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
##  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
##  DEALINGS IN THE SOFTWARE.
##

_ACEOF
  exit
fi

## ------------------------ ##
## Autoconf initialization. ##
## ------------------------ ##

# ac_fn_c_try_compile LINENO
# --------------------------
# Try to compile conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_compile

# ac_fn_c_try_run LINENO
# ----------------------
# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes
# that executables *can* be run.
ac_fn_c_try_run ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then :
  ac_retval=0
else
  $as_echo "$as_me: program exited with status $ac_status" >&5
       $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

       ac_retval=$ac_status
fi
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_run

# ac_fn_c_compute_int LINENO EXPR VAR INCLUDES
# --------------------------------------------
# Tries to find the compile-time value of EXPR in a program that includes
# INCLUDES, setting VAR accordingly. Returns whether the value could be
# computed
ac_fn_c_compute_int ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if test "$cross_compiling" = yes; then
    # Depending upon the size, compute the lo and hi bounds.
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
static int test_array [1 - 2 * !(($2) >= 0)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_lo=0 ac_mid=0
  while :; do
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
static int test_array [1 - 2 * !(($2) <= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_hi=$ac_mid; break
else
  as_fn_arith $ac_mid + 1 && ac_lo=$as_val
			if test $ac_lo -le $ac_mid; then
			  ac_lo= ac_hi=
			  break
			fi
			as_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  done
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
static int test_array [1 - 2 * !(($2) < 0)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_hi=-1 ac_mid=-1
  while :; do
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
static int test_array [1 - 2 * !(($2) >= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_lo=$ac_mid; break
else
  as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val
			if test $ac_mid -le $ac_hi; then
			  ac_lo= ac_hi=
			  break
			fi
			as_fn_arith 2 '*' $ac_mid && ac_mid=$as_val
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
  done
else
  ac_lo= ac_hi=
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
# Binary search between lo and hi bounds.
while test "x$ac_lo" != "x$ac_hi"; do
  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
int
main ()
{
static int test_array [1 - 2 * !(($2) <= $ac_mid)];
test_array [0] = 0

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_hi=$ac_mid
else
  as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
done
case $ac_lo in #((
?*) eval "$3=\$ac_lo"; ac_retval=0 ;;
'') ac_retval=1 ;;
esac
  else
    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
static long int longval () { return $2; }
static unsigned long int ulongval () { return $2; }
#include <stdio.h>
#include <stdlib.h>
int
main ()
{

  FILE *f = fopen ("conftest.val", "w");
  if (! f)
    return 1;
  if (($2) < 0)
    {
      long int i = longval ();
      if (i != ($2))
	return 1;
      fprintf (f, "%ld", i);
    }
  else
    {
      unsigned long int i = ulongval ();
      if (i != ($2))
	return 1;
      fprintf (f, "%lu", i);
    }
  /* Do not output a trailing newline, as this causes \r\n confusion
     on some platforms.  */
  return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :
  echo >>conftest.val; read $3 <conftest.val; ac_retval=0
else
  ac_retval=1
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
rm -f conftest.val

  fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_compute_int

# ac_fn_c_try_cpp LINENO
# ----------------------
# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_cpp ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_cpp conftest.$ac_ext"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } > conftest.i && {
	 test -z "$ac_c_preproc_warn_flag$ac_c_werror_flag" ||
	 test ! -s conftest.err
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

    ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_cpp

# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES
# -------------------------------------------------------
# Tests whether HEADER exists and can be compiled using the include files in
# INCLUDES, setting the cache variable VAR accordingly.
ac_fn_c_check_header_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if eval \${$3+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
#include <$2>
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  eval "$3=yes"
else
  eval "$3=no"
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} # ac_fn_c_check_header_compile

# ac_fn_cxx_try_compile LINENO
# ----------------------------
# Try to compile conftest.$ac_ext, and return whether this succeeded.
ac_fn_cxx_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_cxx_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_cxx_try_compile

# ac_fn_f77_try_compile LINENO
# ----------------------------
# Try to compile conftest.$ac_ext, and return whether this succeeded.
ac_fn_f77_try_compile ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext
  if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_f77_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest.$ac_objext; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_f77_try_compile

# ac_fn_cxx_try_cpp LINENO
# ------------------------
# Try to preprocess conftest.$ac_ext, and return whether this succeeded.
ac_fn_cxx_try_cpp ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if { { ac_try="$ac_cpp conftest.$ac_ext"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_cpp conftest.$ac_ext") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } > conftest.i && {
	 test -z "$ac_cxx_preproc_warn_flag$ac_cxx_werror_flag" ||
	 test ! -s conftest.err
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

    ac_retval=1
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_cxx_try_cpp

# ac_fn_cxx_check_header_mongrel LINENO HEADER VAR INCLUDES
# ---------------------------------------------------------
# Tests whether HEADER exists, giving a warning if it cannot be compiled using
# the include files in INCLUDES and setting the cache variable VAR
# accordingly.
ac_fn_cxx_check_header_mongrel ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  if eval \${$3+:} false; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if eval \${$3+:} false; then :
  $as_echo_n "(cached) " >&6
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
else
  # Is the header compilable?
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 usability" >&5
$as_echo_n "checking $2 usability... " >&6; }
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$4
#include <$2>
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  ac_header_compiler=yes
else
  ac_header_compiler=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler" >&5
$as_echo "$ac_header_compiler" >&6; }

# Is the header present?
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking $2 presence" >&5
$as_echo_n "checking $2 presence... " >&6; }
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <$2>
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :
  ac_header_preproc=yes
else
  ac_header_preproc=no
fi
rm -f conftest.err conftest.i conftest.$ac_ext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc" >&5
$as_echo "$ac_header_preproc" >&6; }

# So?  What about this header?
case $ac_header_compiler:$ac_header_preproc:$ac_cxx_preproc_warn_flag in #((
  yes:no: )
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&5
$as_echo "$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
    ;;
  no:yes:* )
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled" >&5
$as_echo "$as_me: WARNING: $2: present but cannot be compiled" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?" >&5
$as_echo "$as_me: WARNING: $2:     check for missing prerequisite headers?" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation" >&5
$as_echo "$as_me: WARNING: $2: see the Autoconf documentation" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&5
$as_echo "$as_me: WARNING: $2:     section \"Present But Cannot Be Compiled\"" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result" >&5
$as_echo "$as_me: WARNING: $2: proceeding with the compiler's result" >&2;}
( $as_echo "## ----------------------------------------- ##
## Report this to csafe-homebrew@cs.utah.edu ##
## ----------------------------------------- ##"
     ) | sed "s/^/$as_me: WARNING:     /" >&2
    ;;
esac
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $2" >&5
$as_echo_n "checking for $2... " >&6; }
if eval \${$3+:} false; then :
  $as_echo_n "(cached) " >&6
else
  eval "$3=\$ac_header_compiler"
fi
eval ac_res=\$$3
	       { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_res" >&5
$as_echo "$ac_res" >&6; }
fi
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno

} # ac_fn_cxx_check_header_mongrel

# ac_fn_c_try_link LINENO
# -----------------------
# Try to link conftest.$ac_ext, and return whether this succeeded.
ac_fn_c_try_link ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest$ac_exeext
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_c_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest$ac_exeext && {
	 test "$cross_compiling" = yes ||
	 $as_test_x conftest$ac_exeext
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
  # interfere with the next link command; also delete a directory that is
  # left behind by Apple's compiler.  We do this before executing the actions.
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_c_try_link

# ac_fn_cxx_try_link LINENO
# -------------------------
# Try to link conftest.$ac_ext, and return whether this succeeded.
ac_fn_cxx_try_link ()
{
  as_lineno=${as_lineno-"$1"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
  rm -f conftest.$ac_objext conftest$ac_exeext
  if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    grep -v '^ *+' conftest.err >conftest.er1
    cat conftest.er1 >&5
    mv -f conftest.er1 conftest.err
  fi
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; } && {
	 test -z "$ac_cxx_werror_flag" ||
	 test ! -s conftest.err
       } && test -s conftest$ac_exeext && {
	 test "$cross_compiling" = yes ||
	 $as_test_x conftest$ac_exeext
       }; then :
  ac_retval=0
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

	ac_retval=1
fi
  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information
  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would
  # interfere with the next link command; also delete a directory that is
  # left behind by Apple's compiler.  We do this before executing the actions.
  rm -rf conftest.dSYM conftest_ipa8_conftest.oo
  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno
  as_fn_set_status $ac_retval

} # ac_fn_cxx_try_link
cat >config.log <<_ACEOF
This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by Uintah $as_me 1.31, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  $ $0 $@

_ACEOF
exec 5>>config.log
{
cat <<_ASUNAME
## --------- ##
## Platform. ##
## --------- ##

hostname = `(hostname || uname -n) 2>/dev/null | sed 1q`
uname -m = `(uname -m) 2>/dev/null || echo unknown`
uname -r = `(uname -r) 2>/dev/null || echo unknown`
uname -s = `(uname -s) 2>/dev/null || echo unknown`
uname -v = `(uname -v) 2>/dev/null || echo unknown`

/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`
/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`

/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`
/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`
/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`
/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`
/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`
/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`
/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`

_ASUNAME

as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    $as_echo "PATH: $as_dir"
  done
IFS=$as_save_IFS

} >&5

cat >&5 <<_ACEOF


## ----------- ##
## Core tests. ##
## ----------- ##

_ACEOF


# Keep a trace of the command line.
# Strip out --no-create and --no-recursion so they do not pile up.
# Strip out --silent because we don't want to record it for future runs.
# Also quote any args containing shell meta-characters.
# Make two passes to allow for proper duplicate-argument suppression.
ac_configure_args=
ac_configure_args0=
ac_configure_args1=
ac_must_keep_next=false
for ac_pass in 1 2
do
  for ac_arg
  do
    case $ac_arg in
    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;
    -q | -quiet | --quiet | --quie | --qui | --qu | --q \
    | -silent | --silent | --silen | --sile | --sil)
      continue ;;
    *\'*)
      ac_arg=`$as_echo "$ac_arg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    case $ac_pass in
    1) as_fn_append ac_configure_args0 " '$ac_arg'" ;;
    2)
      as_fn_append ac_configure_args1 " '$ac_arg'"
      if test $ac_must_keep_next = true; then
	ac_must_keep_next=false # Got value, back to normal.
      else
	case $ac_arg in
	  *=* | --config-cache | -C | -disable-* | --disable-* \
	  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \
	  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \
	  | -with-* | --with-* | -without-* | --without-* | --x)
	    case "$ac_configure_args0 " in
	      "$ac_configure_args1"*" '$ac_arg' "* ) continue ;;
	    esac
	    ;;
	  -* ) ac_must_keep_next=true ;;
	esac
      fi
      as_fn_append ac_configure_args " '$ac_arg'"
      ;;
    esac
  done
done
{ ac_configure_args0=; unset ac_configure_args0;}
{ ac_configure_args1=; unset ac_configure_args1;}

# When interrupted or exit'd, cleanup temporary files, and complete
# config.log.  We remove comments because anyway the quotes in there
# would cause problems or look ugly.
# WARNING: Use '\'' to represent an apostrophe within the trap.
# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.
trap 'exit_status=$?
  # Save into config.log some information that might help in debugging.
  {
    echo

    $as_echo "## ---------------- ##
## Cache variables. ##
## ---------------- ##"
    echo
    # The following way of writing the cache mishandles newlines in values,
(
  for ac_var in `(set) 2>&1 | sed -n '\''s/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'\''`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done
  (set) 2>&1 |
    case $as_nl`(ac_space='\'' '\''; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      sed -n \
	"s/'\''/'\''\\\\'\'''\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\''\\2'\''/p"
      ;; #(
    *)
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
)
    echo

    $as_echo "## ----------------- ##
## Output variables. ##
## ----------------- ##"
    echo
    for ac_var in $ac_subst_vars
    do
      eval ac_val=\$$ac_var
      case $ac_val in
      *\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
      esac
      $as_echo "$ac_var='\''$ac_val'\''"
    done | sort
    echo

    if test -n "$ac_subst_files"; then
      $as_echo "## ------------------- ##
## File substitutions. ##
## ------------------- ##"
      echo
      for ac_var in $ac_subst_files
      do
	eval ac_val=\$$ac_var
	case $ac_val in
	*\'\''*) ac_val=`$as_echo "$ac_val" | sed "s/'\''/'\''\\\\\\\\'\'''\''/g"`;;
	esac
	$as_echo "$ac_var='\''$ac_val'\''"
      done | sort
      echo
    fi

    if test -s confdefs.h; then
      $as_echo "## ----------- ##
## confdefs.h. ##
## ----------- ##"
      echo
      cat confdefs.h
      echo
    fi
    test "$ac_signal" != 0 &&
      $as_echo "$as_me: caught signal $ac_signal"
    $as_echo "$as_me: exit $exit_status"
  } >&5
  rm -f core *.core core.conftest.* &&
    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&
    exit $exit_status
' 0
for ac_signal in 1 2 13 15; do
  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal
done
ac_signal=0

# confdefs.h avoids OS command line length limits that DEFS can exceed.
rm -f -r conftest* confdefs.h

$as_echo "/* confdefs.h */" > confdefs.h

# Predefined preprocessor variables.

cat >>confdefs.h <<_ACEOF
#define PACKAGE_NAME "$PACKAGE_NAME"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_TARNAME "$PACKAGE_TARNAME"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_VERSION "$PACKAGE_VERSION"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_STRING "$PACKAGE_STRING"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_BUGREPORT "$PACKAGE_BUGREPORT"
_ACEOF

cat >>confdefs.h <<_ACEOF
#define PACKAGE_URL "$PACKAGE_URL"
_ACEOF


# Let the site file select an alternate cache file if it wants to.
# Prefer an explicitly selected file to automatically selected ones.
ac_site_file1=NONE
ac_site_file2=NONE
if test -n "$CONFIG_SITE"; then
  # We do not want a PATH search for config.site.
  case $CONFIG_SITE in #((
    -*)  ac_site_file1=./$CONFIG_SITE;;
    */*) ac_site_file1=$CONFIG_SITE;;
    *)   ac_site_file1=./$CONFIG_SITE;;
  esac
elif test "x$prefix" != xNONE; then
  ac_site_file1=$prefix/share/config.site
  ac_site_file2=$prefix/etc/config.site
else
  ac_site_file1=$ac_default_prefix/share/config.site
  ac_site_file2=$ac_default_prefix/etc/config.site
fi
for ac_site_file in "$ac_site_file1" "$ac_site_file2"
do
  test "x$ac_site_file" = xNONE && continue
  if test /dev/null != "$ac_site_file" && test -r "$ac_site_file"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file" >&5
$as_echo "$as_me: loading site script $ac_site_file" >&6;}
    sed 's/^/| /' "$ac_site_file" >&5
    . "$ac_site_file" \
      || { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "failed to load site script $ac_site_file
See \`config.log' for more details" "$LINENO" 5; }
  fi
done

if test -r "$cache_file"; then
  # Some versions of bash will fail to source /dev/null (special files
  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.
  if test /dev/null != "$cache_file" && test -f "$cache_file"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: loading cache $cache_file" >&5
$as_echo "$as_me: loading cache $cache_file" >&6;}
    case $cache_file in
      [\\/]* | ?:[\\/]* ) . "$cache_file";;
      *)                      . "./$cache_file";;
    esac
  fi
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: creating cache $cache_file" >&5
$as_echo "$as_me: creating cache $cache_file" >&6;}
  >$cache_file
fi

# Check that the precious variables saved in the cache have kept the same
# value.
ac_cache_corrupted=false
for ac_var in $ac_precious_vars; do
  eval ac_old_set=\$ac_cv_env_${ac_var}_set
  eval ac_new_set=\$ac_env_${ac_var}_set
  eval ac_old_val=\$ac_cv_env_${ac_var}_value
  eval ac_new_val=\$ac_env_${ac_var}_value
  case $ac_old_set,$ac_new_set in
    set,)
      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&5
$as_echo "$as_me: error: \`$ac_var' was set to \`$ac_old_val' in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,set)
      { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' was not set in the previous run" >&5
$as_echo "$as_me: error: \`$ac_var' was not set in the previous run" >&2;}
      ac_cache_corrupted=: ;;
    ,);;
    *)
      if test "x$ac_old_val" != "x$ac_new_val"; then
	# differences in whitespace do not lead to failure.
	ac_old_val_w=`echo x $ac_old_val`
	ac_new_val_w=`echo x $ac_new_val`
	if test "$ac_old_val_w" != "$ac_new_val_w"; then
	  { $as_echo "$as_me:${as_lineno-$LINENO}: error: \`$ac_var' has changed since the previous run:" >&5
$as_echo "$as_me: error: \`$ac_var' has changed since the previous run:" >&2;}
	  ac_cache_corrupted=:
	else
	  { $as_echo "$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&5
$as_echo "$as_me: warning: ignoring whitespace changes in \`$ac_var' since the previous run:" >&2;}
	  eval $ac_var=\$ac_old_val
	fi
	{ $as_echo "$as_me:${as_lineno-$LINENO}:   former value:  \`$ac_old_val'" >&5
$as_echo "$as_me:   former value:  \`$ac_old_val'" >&2;}
	{ $as_echo "$as_me:${as_lineno-$LINENO}:   current value: \`$ac_new_val'" >&5
$as_echo "$as_me:   current value: \`$ac_new_val'" >&2;}
      fi;;
  esac
  # Pass precious variables to config.status.
  if test "$ac_new_set" = set; then
    case $ac_new_val in
    *\'*) ac_arg=$ac_var=`$as_echo "$ac_new_val" | sed "s/'/'\\\\\\\\''/g"` ;;
    *) ac_arg=$ac_var=$ac_new_val ;;
    esac
    case " $ac_configure_args " in
      *" '$ac_arg' "*) ;; # Avoid dups.  Use of quotes ensures accuracy.
      *) as_fn_append ac_configure_args " '$ac_arg'" ;;
    esac
  fi
done
if $ac_cache_corrupted; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
  { $as_echo "$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build" >&5
$as_echo "$as_me: error: changes in the environment can compromise the build" >&2;}
  as_fn_error $? "run \`make distclean' and/or \`rm $cache_file' and start over" "$LINENO" 5
fi
## -------------------- ##
## Main body of script. ##
## -------------------- ##

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu



##  require autoconf version 2.68
##     The reason to require the latest autoconf is to try and get everyone who
##     updates configure to use the same version.  By doing so, the SVN diffs
##     don't look completely different from minor changes.  (This happens
##     if people switch back and forth between different versions of autoconf.)
##
##     type "autoconf --version" to find out what version you have.
##




##
## Any error/warning/note/remark messages that need to be turned off
## globally should be appended to this variable.  This should only be
## done if the message is pervasive and has been determined to be
## benign.  WOFF_NUMBERS should be a 'space' delimited list of numbers.
## Eg: '123 124 155'
##
WOFF_NUMBERS=

##
## Used to store warnings that should be redisplayed to the user at the
## end of configure in hopes that the user actually sees them.
##
## Use 'add_important_warning()' to add a warning.
##
declare -a IMPORTANT_WARNINGS
NUM_IMPORTANT_WARNINGS=0
add_important_warning()
{
   # Note: need '[[' below to get autoconf to create a single '[' in the actual configure file.
   IMPORTANT_WARNINGS[$NUM_IMPORTANT_WARNINGS]=$1
   ((NUM_IMPORTANT_WARNINGS++))
}

## Clean up files that could be left around if configure was
## interrupted (by control-c, ^c) because I do not know how to add
## cleanup to the builtin AC function that uses the 'trap' command.
rm -rf ii_files sedscript



##  set the location of config.guess, config.sub, and install.sh
ac_aux_dir=
for ac_dir in build_scripts "$srcdir"/build_scripts; do
  if test -f "$ac_dir/install-sh"; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install-sh -c"
    break
  elif test -f "$ac_dir/install.sh"; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/install.sh -c"
    break
  elif test -f "$ac_dir/shtool"; then
    ac_aux_dir=$ac_dir
    ac_install_sh="$ac_aux_dir/shtool install -c"
    break
  fi
done
if test -z "$ac_aux_dir"; then
  as_fn_error $? "cannot find install-sh, install.sh, or shtool in build_scripts \"$srcdir\"/build_scripts" "$LINENO" 5
fi

# These three variables are undocumented and unsupported,
# and are intended to be withdrawn in a future Autoconf release.
# They can cause serious problems if a builder's source tree is in a directory
# whose full name contains unusual characters.
ac_config_guess="$SHELL $ac_aux_dir/config.guess"  # Please don't use this var.
ac_config_sub="$SHELL $ac_aux_dir/config.sub"  # Please don't use this var.
ac_configure="$SHELL $ac_aux_dir/configure"  # Please don't use this var.



## If user tried to configure in the src directory, this will block it.
if test -f Makefile.in; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: DO NOT CONFIGURE IN THE SRC DIRECTORY:" >&5
$as_echo "$as_me: WARNING: DO NOT CONFIGURE IN THE SRC DIRECTORY:" >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ___ Try creating a dir such as: ../archBITSdebug" >&5
$as_echo "$as_me: WARNING: ___ Try creating a dir such as: ../archBITSdebug" >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ___ eg: ../sgi32opt or ../linux32debug" >&5
$as_echo "$as_me: WARNING: ___ eg: ../sgi32opt or ../linux32debug" >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ___ cd to that dir and then type: ../src/configure" >&5
$as_echo "$as_me: WARNING: ___ cd to that dir and then type: ../src/configure" >&2;}
   rm -f config.log config.cache confdefs.h conftest.out
   as_fn_error $? "Tried to configure in src directory." "$LINENO" 5
fi

# make sure these variables are considered precious.


  sci_arg_var_list="$sci_arg_var_list CC"



  sci_arg_var_list="$sci_arg_var_list CFLAGS"



  sci_arg_var_list="$sci_arg_var_list LDFLAGS"



  sci_arg_var_list="$sci_arg_var_list CXX"



  sci_arg_var_list="$sci_arg_var_list CPPFLAGS"



  sci_arg_var_list="$sci_arg_var_list CXXFLAGS"



  sci_arg_var_list="$sci_arg_var_list F77"



  sci_arg_var_list="$sci_arg_var_list FFLAGS"



  sci_arg_var_list="$sci_arg_var_list CPP"



  sci_arg_var_list="$sci_arg_var_list CXXCPP"


# Make sure we can run config.sub.
$SHELL "$ac_aux_dir/config.sub" sun4 >/dev/null 2>&1 ||
  as_fn_error $? "cannot run $SHELL $ac_aux_dir/config.sub" "$LINENO" 5

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking build system type" >&5
$as_echo_n "checking build system type... " >&6; }
if ${ac_cv_build+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_build_alias=$build_alias
test "x$ac_build_alias" = x &&
  ac_build_alias=`$SHELL "$ac_aux_dir/config.guess"`
test "x$ac_build_alias" = x &&
  as_fn_error $? "cannot guess build type; you must specify one" "$LINENO" 5
ac_cv_build=`$SHELL "$ac_aux_dir/config.sub" $ac_build_alias` ||
  as_fn_error $? "$SHELL $ac_aux_dir/config.sub $ac_build_alias failed" "$LINENO" 5

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_build" >&5
$as_echo "$ac_cv_build" >&6; }
case $ac_cv_build in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical build" "$LINENO" 5;;
esac
build=$ac_cv_build
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_build
shift
build_cpu=$1
build_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
build_os=$*
IFS=$ac_save_IFS
case $build_os in *\ *) build_os=`echo "$build_os" | sed 's/ /-/g'`;; esac


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking host system type" >&5
$as_echo_n "checking host system type... " >&6; }
if ${ac_cv_host+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test "x$host_alias" = x; then
  ac_cv_host=$ac_cv_build
else
  ac_cv_host=`$SHELL "$ac_aux_dir/config.sub" $host_alias` ||
    as_fn_error $? "$SHELL $ac_aux_dir/config.sub $host_alias failed" "$LINENO" 5
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_host" >&5
$as_echo "$ac_cv_host" >&6; }
case $ac_cv_host in
*-*-*) ;;
*) as_fn_error $? "invalid value of canonical host" "$LINENO" 5;;
esac
host=$ac_cv_host
ac_save_IFS=$IFS; IFS='-'
set x $ac_cv_host
shift
host_cpu=$1
host_vendor=$2
shift; shift
# Remember, the first character of IFS is used to create $*,
# except with old shells:
host_os=$*
IFS=$ac_save_IFS
case $host_os in *\ *) host_os=`echo "$host_os" | sed 's/ /-/g'`;; esac



## find the machine's pwd, and don't use the sh built-in pwd.
## sh pwd can print the wd with symbolic links depending on
## how you got to that directory, and thus has the potential
## to print different pwd's for the same wd, and change files
## like sci_defs.h

sci_pwd=""
for my_pwd in pwd /bin/pwd /usr/bin/pwd; do

  if ! test -x $my_pwd; then
      # This pwd isn't an executable (or doesn't exist)... skip it.
      continue
  fi

  mkdir -p pwd_test
  ln -s pwd_test pwd_temp

  cd pwd_test
  pwd_1=`$my_pwd`

  cd ../pwd_temp
  pwd_2=`$my_pwd`

  cd ..
  rm -fr pwd_test pwd_temp
  if test "$pwd_1" = "$pwd_2"; then
    sci_pwd=$my_pwd
    alias pwd="$my_pwd"
    break
  fi
done
if test -z "$sci_pwd"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"Using unstable version of pwd\"" >&5
$as_echo "$as_me: WARNING: \"Using unstable version of pwd\"" >&2;}
   sci_pwd=pwd
fi


##  initialize the recognized argument lists
sci_arg_with_list="--no-create --no-recursion"
sci_arg_enable_list=""

##  --------------------------------------------------------------------
##  ------------------  optional variable intialization  ---------------
##  --------------------------------------------------------------------

# Setting variables to 'no' isn't required, but is useful in displaying
# some error condition information to the user.
HAVE_HDF5="no"
HAVE_BOOST="no"
HAVE_TABPROPS="no"
HAVE_SPATIALOPS="no"
HAVE_EXPRLIB="no"

##  --------------------------------------------------------------------
##  ------------------  check for all arguments     --------------------
##  --------------------------------------------------------------------

##
##  Use the SCI_ARG_WITH and SCI_ARG_ENABLE macros to check for arguments
##




# Check whether --with-atlas was given.
if test "${with_atlas+set}" = set; then :
  withval=$with_atlas; with_atlas="$withval"
   sci_required_atlas=yes
else
  with_atlas=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-atlas --without-atlas"
  if test -n "$atlas" -a ! -e "$atlas"; then
    as_fn_error $? "The file or directory parameter ($atlas) specified for --with-atlas does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mkl was given.
if test "${with_mkl+set}" = set; then :
  withval=$with_mkl; with_mkl="$withval"
   sci_required_mkl=yes
else
  with_mkl=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mkl --without-mkl"
  if test -n "$mkl" -a ! -e "$mkl"; then
    as_fn_error $? "The file or directory parameter ($mkl) specified for --with-mkl does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-acml was given.
if test "${with_acml+set}" = set; then :
  withval=$with_acml; with_acml="$withval"
   sci_required_acml=yes
else
  with_acml=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-acml --without-acml"
  if test -n "$acml" -a ! -e "$acml"; then
    as_fn_error $? "The file or directory parameter ($acml) specified for --with-acml does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-blas was given.
if test "${with_blas+set}" = set; then :
  withval=$with_blas; with_blas="$withval"
   sci_required_blas=yes
else
  with_blas=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-blas --without-blas"
  if test -n "$blas" -a ! -e "$blas"; then
    as_fn_error $? "The file or directory parameter ($blas) specified for --with-blas does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-electric_fence was given.
if test "${with_electric_fence+set}" = set; then :
  withval=$with_electric_fence; with_electric_fence="$withval"
   sci_required_electric_fence=yes
else
  with_electric_fence=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-electric_fence --without-electric_fence"
  if test -n "$electric_fence" -a ! -e "$electric_fence"; then
    as_fn_error $? "The file or directory parameter ($electric_fence) specified for --with-electric_fence does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-lapack was given.
if test "${with_lapack+set}" = set; then :
  withval=$with_lapack; with_lapack="$withval"
   sci_required_lapack=yes
else
  with_lapack=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-lapack --without-lapack"
  if test -n "$lapack" -a ! -e "$lapack"; then
    as_fn_error $? "The file or directory parameter ($lapack) specified for --with-lapack does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-teem was given.
if test "${with_teem+set}" = set; then :
  withval=$with_teem; with_teem="$withval"
   sci_required_teem=yes
else
  with_teem=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-teem --without-teem"
  if test -n "$teem" -a ! -e "$teem"; then
    as_fn_error $? "The file or directory parameter ($teem) specified for --with-teem does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-fortran was given.
if test "${with_fortran+set}" = set; then :
  withval=$with_fortran; with_fortran="$withval"
   sci_required_fortran=yes
else
  with_fortran=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-fortran --without-fortran"
  if test -n "$fortran" -a ! -e "$fortran"; then
    as_fn_error $? "The file or directory parameter ($fortran) specified for --with-fortran does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-ofed was given.
if test "${with_ofed+set}" = set; then :
  withval=$with_ofed; with_ofed="$withval"
   sci_required_ofed=no
else
  with_ofed=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-ofed --without-ofed"
  if test -n "$ofed" -a ! -e "$ofed"; then
    as_fn_error $? "The file or directory parameter ($ofed) specified for --with-ofed does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mx was given.
if test "${with_mx+set}" = set; then :
  withval=$with_mx; with_mx="$withval"
   sci_required_mx=no
else
  with_mx=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mx --without-mx"
  if test -n "$mx" -a ! -e "$mx"; then
    as_fn_error $? "The file or directory parameter ($mx) specified for --with-mx does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mpi was given.
if test "${with_mpi+set}" = set; then :
  withval=$with_mpi; with_mpi="$withval"
   sci_required_mpi=yes
else
  with_mpi=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mpi --without-mpi"
  if test -n "$mpi" -a ! -e "$mpi"; then
    as_fn_error $? "The file or directory parameter ($mpi) specified for --with-mpi does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mpi_lib was given.
if test "${with_mpi_lib+set}" = set; then :
  withval=$with_mpi_lib; with_mpi_lib="$withval"
   sci_required_mpi=yes
else
  with_mpi_lib=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mpi_lib --without-mpi_lib"
  if test -n "$mpi_lib" -a ! -e "$mpi_lib"; then
    as_fn_error $? "The file or directory parameter ($mpi_lib) specified for --with-mpi_lib does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mpi_include was given.
if test "${with_mpi_include+set}" = set; then :
  withval=$with_mpi_include; with_mpi_include="$withval"
   sci_required_mpi=yes
else
  with_mpi_include=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mpi_include --without-mpi_include"
  if test -n "$mpi_include" -a ! -e "$mpi_include"; then
    as_fn_error $? "The file or directory parameter ($mpi_include) specified for --with-mpi_include does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mpi_extra_libs was given.
if test "${with_mpi_extra_libs+set}" = set; then :
  withval=$with_mpi_extra_libs; with_mpi_extra_libs="$withval"
else
  with_mpi_extra_libs=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mpi_extra_libs --without-mpi_extra_libs"
  if test -n "$mpi_extra_libs" -a ! -e "$mpi_extra_libs"; then
    as_fn_error $? "The file or directory parameter ($mpi_extra_libs) specified for --with-mpi_extra_libs does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-mpiuni was given.
if test "${with_mpiuni+set}" = set; then :
  withval=$with_mpiuni; with_mpiuni="$withval"
   sci_required_mpiuni=yes
else
  with_mpiuni=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-mpiuni --without-mpiuni"
  if test -n "$mpiuni" -a ! -e "$mpiuni"; then
    as_fn_error $? "The file or directory parameter ($mpiuni) specified for --with-mpiuni does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-hypre was given.
if test "${with_hypre+set}" = set; then :
  withval=$with_hypre; with_hypre="$withval"
   sci_required_hypre=yes
else
  with_hypre=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-hypre --without-hypre"
  if test -n "$hypre" -a ! -e "$hypre"; then
    as_fn_error $? "The file or directory parameter ($hypre) specified for --with-hypre does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-petsc was given.
if test "${with_petsc+set}" = set; then :
  withval=$with_petsc; with_petsc="$withval"
   sci_required_petsc=yes
else
  with_petsc=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-petsc --without-petsc"
  if test -n "$petsc" -a ! -e "$petsc"; then
    as_fn_error $? "The file or directory parameter ($petsc) specified for --with-petsc does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-boost was given.
if test "${with_boost+set}" = set; then :
  withval=$with_boost; with_boost="$withval"
   sci_required_boost=yes
else
  with_boost=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-boost --without-boost"
  if test -n "$boost" -a ! -e "$boost"; then
    as_fn_error $? "The file or directory parameter ($boost) specified for --with-boost does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-spatialops was given.
if test "${with_spatialops+set}" = set; then :
  withval=$with_spatialops; with_spatialops="$withval"
   sci_required_spatialops=yes
else
  with_spatialops=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-spatialops --without-spatialops"
  if test -n "$spatialops" -a ! -e "$spatialops"; then
    as_fn_error $? "The file or directory parameter ($spatialops) specified for --with-spatialops does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-exprlib was given.
if test "${with_exprlib+set}" = set; then :
  withval=$with_exprlib; with_exprlib="$withval"
   sci_required_exprlib=yes
else
  with_exprlib=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-exprlib --without-exprlib"
  if test -n "$exprlib" -a ! -e "$exprlib"; then
    as_fn_error $? "The file or directory parameter ($exprlib) specified for --with-exprlib does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-tabprops was given.
if test "${with_tabprops+set}" = set; then :
  withval=$with_tabprops; with_tabprops="$withval"
   sci_required_tabprops=yes
else
  with_tabprops=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-tabprops --without-tabprops"
  if test -n "$tabprops" -a ! -e "$tabprops"; then
    as_fn_error $? "The file or directory parameter ($tabprops) specified for --with-tabprops does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-zoltan was given.
if test "${with_zoltan+set}" = set; then :
  withval=$with_zoltan; with_zoltan="$withval"
   sci_required_zoltan=yes
else
  with_zoltan=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-zoltan --without-zoltan"
  if test -n "$zoltan" -a ! -e "$zoltan"; then
    as_fn_error $? "The file or directory parameter ($zoltan) specified for --with-zoltan does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-unipetsc was given.
if test "${with_unipetsc+set}" = set; then :
  withval=$with_unipetsc; with_unipetsc="$withval"
   sci_required_unipetsc=yes
else
  with_unipetsc=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-unipetsc --without-unipetsc"
  if test -n "$unipetsc" -a ! -e "$unipetsc"; then
    as_fn_error $? "The file or directory parameter ($unipetsc) specified for --with-unipetsc does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-tau was given.
if test "${with_tau+set}" = set; then :
  withval=$with_tau; with_tau="$withval"
   sci_required_tau=yes
else
  with_tau=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-tau --without-tau"
  if test -n "$tau" -a ! -e "$tau"; then
    as_fn_error $? "The file or directory parameter ($tau) specified for --with-tau does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-papi was given.
if test "${with_papi+set}" = set; then :
  withval=$with_papi; with_papi="$withval"
   sci_required_papi=yes
else
  with_papi=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-papi --without-papi"
  if test -n "$papi" -a ! -e "$papi"; then
    as_fn_error $? "The file or directory parameter ($papi) specified for --with-papi does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-unp was given.
if test "${with_unp+set}" = set; then :
  withval=$with_unp; with_unp="$withval"
   sci_required_unp=yes
else
  with_unp=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-unp --without-unp"
  if test -n "$unp" -a ! -e "$unp"; then
    as_fn_error $? "The file or directory parameter ($unp) specified for --with-unp does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-zlib was given.
if test "${with_zlib+set}" = set; then :
  withval=$with_zlib; with_zlib="$withval"
   sci_required_zlib=yes
else
  with_zlib=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-zlib --without-zlib"
  if test -n "$zlib" -a ! -e "$zlib"; then
    as_fn_error $? "The file or directory parameter ($zlib) specified for --with-zlib does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-jpeg was given.
if test "${with_jpeg+set}" = set; then :
  withval=$with_jpeg; with_jpeg="$withval"
   sci_required_jpeg=yes
else
  with_jpeg=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-jpeg --without-jpeg"
  if test -n "$jpeg" -a ! -e "$jpeg"; then
    as_fn_error $? "The file or directory parameter ($jpeg) specified for --with-jpeg does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-tiff was given.
if test "${with_tiff+set}" = set; then :
  withval=$with_tiff; with_tiff="$withval"
   sci_required_tiff=yes
else
  with_tiff=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-tiff --without-tiff"
  if test -n "$tiff" -a ! -e "$tiff"; then
    as_fn_error $? "The file or directory parameter ($tiff) specified for --with-tiff does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-xalan was given.
if test "${with_xalan+set}" = set; then :
  withval=$with_xalan; with_xalan="$withval"
   sci_required_xalan=yes
else
  with_xalan=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-xalan --without-xalan"
  if test -n "$xalan" -a ! -e "$xalan"; then
    as_fn_error $? "The file or directory parameter ($xalan) specified for --with-xalan does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-libxml2 was given.
if test "${with_libxml2+set}" = set; then :
  withval=$with_libxml2; with_libxml2="$withval"
   sci_required_libxml2=yes
else
  with_libxml2=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-libxml2 --without-libxml2"
  if test -n "$libxml2" -a ! -e "$libxml2"; then
    as_fn_error $? "The file or directory parameter ($libxml2) specified for --with-libxml2 does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi





# Check whether --with-hdf5 was given.
if test "${with_hdf5+set}" = set; then :
  withval=$with_hdf5; with_hdf5="$withval"		      # with_hdf5 is the directory var
   sci_required_hdf5=yes
else
  # flag to check for the libs
  with_hdf5=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-hdf5 --without-hdf5"
  if test -n "$hdf5" -a ! -e "$hdf5"; then
    as_fn_error $? "The file or directory parameter ($hdf5) specified for --with-hdf5 does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi

		      # undefinded otherwise



# Check whether --with-freetype was given.
if test "${with_freetype+set}" = set; then :
  withval=$with_freetype; with_freetype="$withval"
   sci_required_freetype=yes
else
  with_freetype=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-freetype --without-freetype"
  if test -n "$freetype" -a ! -e "$freetype"; then
    as_fn_error $? "The file or directory parameter ($freetype) specified for --with-freetype does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-ftgl was given.
if test "${with_ftgl+set}" = set; then :
  withval=$with_ftgl; with_ftgl="$withval"
   sci_required_ftgl=yes
   sci_required_freetype=yes
else
  with_ftgl=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-ftgl --without-ftgl"
  if test -n "$ftgl" -a ! -e "$ftgl"; then
    as_fn_error $? "The file or directory parameter ($ftgl) specified for --with-ftgl does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




# Check whether --with-visit was given.
if test "${with_visit+set}" = set; then :
  withval=$with_visit; with_visit="$withval"
else
  with_visit=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-visit --without-visit"
  if test -n "$visit" -a ! -e "$visit"; then
    as_fn_error $? "The file or directory parameter ($visit) specified for --with-visit does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi




  # Check whether --enable-wasatch_3p was given.
if test "${enable_wasatch_3p+set}" = set; then :
  enableval=$enable_wasatch_3p; wasatch_3p="yes"
else
  wasatch_3p=="no"
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-wasatch_3p --disable-wasatch_3p"



  # Check whether --enable-static was given.
if test "${enable_static+set}" = set; then :
  enableval=$enable_static; static="$enableval"
else
  static="no"
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-static --disable-static"


  # Check whether --enable-verbosity was given.
if test "${enable_verbosity+set}" = set; then :
  enableval=$enable_verbosity; verbosity="yes"
else
  verbosity="no"
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-verbosity --disable-verbosity"


  # Check whether --enable-threads was given.
if test "${enable_threads+set}" = set; then :
  enableval=$enable_threads; threads="$enableval"
else
  threads=${threads='unknown'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-threads --disable-threads"


  # Check whether --enable-debug was given.
if test "${enable_debug+set}" = set; then :
  enableval=$enable_debug; debug="$enableval"
else
  debug="no"
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-debug --disable-debug"


  # Check whether --enable-optimize was given.
if test "${enable_optimize+set}" = set; then :
  enableval=$enable_optimize; optimize="$enableval"
else
  optimize=${optimize='no'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-optimize --disable-optimize"


  # Check whether --enable-64bit was given.
if test "${enable_64bit+set}" = set; then :
  enableval=$enable_64bit; enable_64bit="$enableval"
else
  enable_64bit='no'
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-64bit --disable-64bit"


  # Check whether --enable-32bit was given.
if test "${enable_32bit+set}" = set; then :
  enableval=$enable_32bit; enable_32bit="$enableval"
else
  enable_32bit='no'
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-32bit --disable-32bit"


  # Check whether --enable-output-avg-walltime was given.
if test "${enable_output_avg_walltime+set}" = set; then :
  enableval=$enable_output_avg_walltime; output_avg_walltime="$enableval"
else
  output_avg_walltime=${output_avg_walltime='no'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-output-avg-walltime --disable-output-avg-walltime"



  # Check whether --enable-exename was given.
if test "${enable_exename+set}" = set; then :
  enableval=$enable_exename; exename="$enableval"
else
  exename=${exename='default'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-exename --disable-exename"


  # Check whether --enable-largesos was given.
if test "${enable_largesos+set}" = set; then :
  enableval=$enable_largesos; largesos="$enableval"
else
  largesos=${largesos='no'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-largesos --disable-largesos"


  # Check whether --enable-sci-malloc was given.
if test "${enable_sci_malloc+set}" = set; then :
  enableval=$enable_sci_malloc; enable_sci_malloc="$enableval"
else
  enable_sci_malloc=${enable_sci_malloc='no'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-sci-malloc --disable-sci-malloc"


  # Check whether --enable-memory-init was given.
if test "${enable_memory_init+set}" = set; then :
  enableval=$enable_memory_init; enable_memory_initialization="$enableval"
else
  enable_memory_initialization=${enable_memory_initialization='no'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-memory-init --disable-memory-init"



# Check whether --with-MallocTrace was given.
if test "${with_MallocTrace+set}" = set; then :
  withval=$with_MallocTrace; with_malloc_trace="$withval"
else
  with_malloc_trace=""
fi

  sci_arg_with_list="$sci_arg_with_list --with-MallocTrace --without-MallocTrace"
  if test -n "$MallocTrace" -a ! -e "$MallocTrace"; then
    as_fn_error $? "The file or directory parameter ($MallocTrace) specified for --with-MallocTrace does not exist!  Please verify that the path and file are correct." "$LINENO" 5
  fi



  # Check whether --enable-assertion-level was given.
if test "${enable_assertion_level+set}" = set; then :
  enableval=$enable_assertion_level; enable_assertion_level="$enableval"
else
  enable_assertion_level=""
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-assertion-level --disable-assertion-level"


  # Check whether --enable-scinew-line-numbers was given.
if test "${enable_scinew_line_numbers+set}" = set; then :
  enableval=$enable_scinew_line_numbers; enable_scinew_line_numbers="yes"
else
  enable_scinew_line_numbers="no"
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-scinew-line-numbers --disable-scinew-line-numbers"


  # Check whether --enable-throw-level was given.
if test "${enable_throw_level+set}" = set; then :
  enableval=$enable_throw_level; enable_throw_level="$enableval"
else
  enable_throw_level=${enable_throw_level=0}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-throw-level --disable-throw-level"



  # Check whether --enable-rath was given.
if test "${enable_rath+set}" = set; then :
  enableval=$enable_rath; enable_rpath="$enableval"
else
  enable_rpath=${enable_rpath='yes'}
fi

  sci_arg_enable_list="$sci_arg_enable_list --enable-rath --disable-rath"


if test "$enable_sci_malloc" = "yes" -a "$with_malloc_trace" ; then
   as_fn_error $? "\"You cannot use both --with-MallocTrace and --enable-sci-malloc!\" " "$LINENO" 5
fi

if test "$enable_memory_initialization" != "no"; then
   DEF_MEMORY_INIT="#define INITIALIZE_MEMORY"
   if test "$enable_memory_initialization" = "yes"; then
      memory_init=127
   else
      val=$enable_memory_initialization
      if test $val -lt 128 -a $val -gt 0; then
         memory_init=$val
      else
         as_fn_error $? "\"--enable-memory-initialization's value must be from 0 to 127.\" " "$LINENO" 5
      fi
   fi
   DEF_MEMORY_INIT_NUMBER="#define MEMORY_INIT_NUMBER $memory_init"
fi



sci_defs_files="$sci_defs_files Core/Malloc/testmem_init.h"

if test "$enable_rpath" = "no"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"You have removed the rpath flag from some libraries.\"" >&5
$as_echo "$as_me: WARNING: \"You have removed the rpath flag from some libraries.\"" >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"This may have unpredictable affects.\"" >&5
$as_echo "$as_me: WARNING: \"This may have unpredictable affects.\"" >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"Do not do this unless you really know what you are doing.\"" >&5
$as_echo "$as_me: WARNING: \"Do not do this unless you really know what you are doing.\"" >&2;}
fi


##  --------------------------------------------------------------------
##  Save off the arguments to configure...
##  --------------------------------------------------------------------

args=`echo "$*" | sed 's% %_%g'`
myargs=`echo $args | sed 's%\^% %g'`
# Setting IFS breaks standard autoconf tests.
# It thinks we are cross compiling. Don't set it.
#IFS=' '

## Cut off the /configure from the configure command (eg: ../src/configure)
path_to_src=`echo $0 | sed 's/\/configure//'`

if test "$sci_required_petsc" = "yes" -a "$with_petsc" != "built-in"; then
   sci_required_blas=yes
   sci_required_lapack=yes
fi

sci_defs_files="$sci_defs_files include/sci_defs/environment_testdefs.h"

DIRNAME_IS=`type dirname | sed 's%^.* %%'`
BASENAME_IS=`type dirname | sed 's%^.* %%'`

# link this way.
LDRUN_PREFIX="-Wl,-rpath -Wl,"

## We use both of these in a number of spots, so I think this is fair:
## (Eventually we could write our own if necessary...)
if test -z "$DIRNAME_IS" -o -z "$BASENAME_IS"; then
  as_fn_error $? "dirname or basename not found.  Configure script won't work!" "$LINENO" 5
fi

## -- Can't use uni-petsc and Uintah (as Uintah needs full mpi petsc).

if test "$with_unipetsc"; then
   as_fn_error $? "However Uintah requires MPI petsc - not Uni-PETSc." "$LINENO" 5
fi

##  --------------------------------------------------------------------
##  -----  determine host type, processor count and OS version  --------
##  --------------------------------------------------------------------

echo
IS_OSX="no"
IS_WIN="no"
IS_VC="no"
IS_AIX="no"
unset NUM_CPUS

MAKE_ARCHIVES="no"

case $host in
  *linux*)

    ##  SCI_CHECK_OS_VERSION

    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.2.17"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for OS version 2.2.17" >&5
$as_echo_n "checking for OS version 2.2.17... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "configure: error: wrong Linux version. exiting.;exit"; then
      _SCI_NOTCORRECT_='configure: error: wrong Linux version. exiting.;exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "uname -r 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\.]*%%g'`"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test $_CUR_2_ $_SCI_COMP_ $_CUR_1_; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi

    NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
    ;;
  *-dec*)
    NUM_CPUS=4
    ;;
  *-darwin*)
    NUM_CPUS=2
    IS_OSX="yes"
    DEF_OSX="#define IS_OSX 1"
    ;;
  *-aix*)
    NUM_CPUS=4
    IS_AIX="yes"
    ;;
  *-mingw*)
    NUM_CPUS=2
    IS_WIN="yes"
    ;;
  *-pc*)
    echo
    as_fn_error $? "Currently Windows only configures from mingw.  See install instructions" "$LINENO" 5
    ;;
  *)
    echo
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: !!!!!! This system is untested - You are on your own !!!!!!" >&5
$as_echo "$as_me: WARNING: !!!!!! This system is untested - You are on your own !!!!!!" >&2;}
    echo
    NUM_CPUS="1"
    ;;
esac





sci_defs_files="$sci_defs_files include/sci_defs/osx_testdefs.h"

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking physical processor count" >&5
$as_echo_n "checking physical processor count... " >&6; }
if test -z "$NUM_CPUS"; then
  NUM_CPUS="1"
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $NUM_CPUS" >&5
$as_echo "$NUM_CPUS" >&6; }

##  ----------  determine if this is a 32 or 64 bit machine
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


# Apparently AC_PROG_CC will set CFLAGS to "-O2 -g" if you don't specify
# its value first, so... (And AC_CHECK_SIZEOF apparently calls AC_PROG_CC...)
CFLAGS=$CFLAGS

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  # Extract the first word of "${ac_tool_prefix}gcc", so it can be a program name with args.
set dummy ${ac_tool_prefix}gcc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="${ac_tool_prefix}gcc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$ac_cv_prog_CC"; then
  ac_ct_CC=$CC
  # Extract the first word of "gcc", so it can be a program name with args.
set dummy gcc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ac_ct_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CC="gcc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
$as_echo "$ac_ct_CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
else
  CC="$ac_cv_prog_CC"
fi

if test -z "$CC"; then
          if test -n "$ac_tool_prefix"; then
    # Extract the first word of "${ac_tool_prefix}cc", so it can be a program name with args.
set dummy ${ac_tool_prefix}cc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="${ac_tool_prefix}cc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  fi
fi
if test -z "$CC"; then
  # Extract the first word of "cc", so it can be a program name with args.
set dummy cc; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
  ac_prog_rejected=no
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    if test "$as_dir/$ac_word$ac_exec_ext" = "/usr/ucb/cc"; then
       ac_prog_rejected=yes
       continue
     fi
    ac_cv_prog_CC="cc"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

if test $ac_prog_rejected = yes; then
  # We found a bogon in the path, so make sure we never use it.
  set dummy $ac_cv_prog_CC
  shift
  if test $# != 0; then
    # We chose a different compiler from the bogus one.
    # However, it has the same basename, so the bogon will be chosen
    # first if we set CC to just the basename; use the full file name.
    shift
    ac_cv_prog_CC="$as_dir/$ac_word${1+' '}$@"
  fi
fi
fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi
if test -z "$CC"; then
  if test -n "$ac_tool_prefix"; then
  for ac_prog in cl.exe
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cl.exe
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ac_ct_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
$as_echo "$ac_ct_CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi

fi


test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "no acceptable C compiler found in \$PATH
See \`config.log' for more details" "$LINENO" 5; }

# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files a.out a.out.dSYM a.exe b.out"
# Try to create an executable without -o first, disregard a.out.
# It will help us diagnose broken compilers, and finding out an intuition
# of exeext.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether the C compiler works" >&5
$as_echo_n "checking whether the C compiler works... " >&6; }
ac_link_default=`$as_echo "$ac_link" | sed 's/ -o *conftest[^ ]*//'`

# The possible output files:
ac_files="a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*"

ac_rmfiles=
for ac_file in $ac_files
do
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    * ) ac_rmfiles="$ac_rmfiles $ac_file";;
  esac
done
rm -f $ac_rmfiles

if { { ac_try="$ac_link_default"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link_default") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.
# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'
# in a Makefile.  We should not override ac_cv_exeext if it was cached,
# so that the user can short-circuit this test for compilers unknown to
# Autoconf.
for ac_file in $ac_files ''
do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )
	;;
    [ab].out )
	# We found the default executable, but exeext='' is most
	# certainly right.
	break;;
    *.* )
	if test "${ac_cv_exeext+set}" = set && test "$ac_cv_exeext" != no;
	then :; else
	   ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	fi
	# We set ac_cv_exeext here because the later test for it is not
	# safe: cross compilers may not add the suffix if given an `-o'
	# argument, so we may need to know it at that point already.
	# Even if this section looks crufty: it has the advantage of
	# actually working.
	break;;
    * )
	break;;
  esac
done
test "$ac_cv_exeext" = no && ac_cv_exeext=

else
  ac_file=''
fi
if test -z "$ac_file"; then :
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
$as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error 77 "C compiler cannot create executables
See \`config.log' for more details" "$LINENO" 5; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name" >&5
$as_echo_n "checking for C compiler default output file name... " >&6; }
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_file" >&5
$as_echo "$ac_file" >&6; }
ac_exeext=$ac_cv_exeext

rm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out
ac_clean_files=$ac_clean_files_save
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of executables" >&5
$as_echo_n "checking for suffix of executables... " >&6; }
if { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  # If both `conftest.exe' and `conftest' are `present' (well, observable)
# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will
# work properly (i.e., refer to `conftest.exe'), while it won't with
# `rm'.
for ac_file in conftest.exe conftest conftest.*; do
  test -f "$ac_file" || continue
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;
    *.* ) ac_cv_exeext=`expr "$ac_file" : '[^.]*\(\..*\)'`
	  break;;
    * ) break;;
  esac
done
else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of executables: cannot compile and link
See \`config.log' for more details" "$LINENO" 5; }
fi
rm -f conftest conftest$ac_cv_exeext
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext" >&5
$as_echo "$ac_cv_exeext" >&6; }

rm -f conftest.$ac_ext
EXEEXT=$ac_cv_exeext
ac_exeext=$EXEEXT
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdio.h>
int
main ()
{
FILE *f = fopen ("conftest.out", "w");
 return ferror (f) || fclose (f) != 0;

  ;
  return 0;
}
_ACEOF
ac_clean_files="$ac_clean_files conftest.out"
# Check that the compiler produces executables we can run.  If not, either
# the compiler is broken, or we cross compile.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling" >&5
$as_echo_n "checking whether we are cross compiling... " >&6; }
if test "$cross_compiling" != yes; then
  { { ac_try="$ac_link"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_link") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
  if { ac_try='./conftest$ac_cv_exeext'
  { { case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_try") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; }; then
    cross_compiling=no
  else
    if test "$cross_compiling" = maybe; then
	cross_compiling=yes
    else
	{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot run C compiled programs.
If you meant to cross compile, use \`--host'.
See \`config.log' for more details" "$LINENO" 5; }
    fi
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $cross_compiling" >&5
$as_echo "$cross_compiling" >&6; }

rm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out
ac_clean_files=$ac_clean_files_save
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for suffix of object files" >&5
$as_echo_n "checking for suffix of object files... " >&6; }
if ${ac_cv_objext+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
rm -f conftest.o conftest.obj
if { { ac_try="$ac_compile"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compile") 2>&5
  ac_status=$?
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }; then :
  for ac_file in conftest.o conftest.obj conftest.*; do
  test -f "$ac_file" || continue;
  case $ac_file in
    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;
    *) ac_cv_objext=`expr "$ac_file" : '.*\.\(.*\)'`
       break;;
  esac
done
else
  $as_echo "$as_me: failed program was:" >&5
sed 's/^/| /' conftest.$ac_ext >&5

{ { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "cannot compute suffix of object files: cannot compile
See \`config.log' for more details" "$LINENO" 5; }
fi
rm -f conftest.$ac_cv_objext conftest.$ac_ext
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext" >&5
$as_echo "$ac_cv_objext" >&6; }
OBJEXT=$ac_cv_objext
ac_objext=$OBJEXT
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
if ${ac_cv_c_compiler_gnu+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_compiler_gnu=yes
else
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
$as_echo "$ac_cv_c_compiler_gnu" >&6; }
if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+set}
ac_save_CFLAGS=$CFLAGS
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
$as_echo_n "checking whether $CC accepts -g... " >&6; }
if ${ac_cv_prog_cc_g+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
else
  CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :

else
  ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
$as_echo "$ac_cv_prog_cc_g" >&6; }
if test "$ac_test_CFLAGS" = set; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
if ${ac_cv_prog_cc_c89+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) 'x'
int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC

fi
# AC_CACHE_VAL
case "x$ac_cv_prog_cc_c89" in
  x)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;;
  xno)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;;
  *)
    CC="$CC $ac_cv_prog_cc_c89"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
esac
if test "x$ac_cv_prog_cc_c89" != xno; then :

fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
$as_echo_n "checking how to run the C preprocessor... " >&6; }
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if ${ac_cv_prog_CPP+:} false; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
$as_echo "$CPP" >&6; }
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details" "$LINENO" 5; }
fi

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e" >&5
$as_echo_n "checking for grep that handles long lines and -e... " >&6; }
if ${ac_cv_path_GREP+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -z "$GREP"; then
  ac_path_GREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in grep ggrep; do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_GREP="$as_dir/$ac_prog$ac_exec_ext"
      { test -f "$ac_path_GREP" && $as_test_x "$ac_path_GREP"; } || continue
# Check for GNU ac_path_GREP and select it if it is found.
  # Check for GNU $ac_path_GREP
case `"$ac_path_GREP" --version 2>&1` in
*GNU*)
  ac_cv_path_GREP="$ac_path_GREP" ac_path_GREP_found=:;;
*)
  ac_count=0
  $as_echo_n 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    $as_echo 'GREP' >> "conftest.nl"
    "$ac_path_GREP" -e 'GREP$' -e '-(cannot match)-' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_GREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_GREP="$ac_path_GREP"
      ac_path_GREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_GREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_GREP"; then
    as_fn_error $? "no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_GREP=$GREP
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP" >&5
$as_echo "$ac_cv_path_GREP" >&6; }
 GREP="$ac_cv_path_GREP"


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for egrep" >&5
$as_echo_n "checking for egrep... " >&6; }
if ${ac_cv_path_EGREP+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1
   then ac_cv_path_EGREP="$GREP -E"
   else
     if test -z "$EGREP"; then
  ac_path_EGREP_found=false
  # Loop through the user's path and test for each of PROGNAME-LIST
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_prog in egrep; do
    for ac_exec_ext in '' $ac_executable_extensions; do
      ac_path_EGREP="$as_dir/$ac_prog$ac_exec_ext"
      { test -f "$ac_path_EGREP" && $as_test_x "$ac_path_EGREP"; } || continue
# Check for GNU ac_path_EGREP and select it if it is found.
  # Check for GNU $ac_path_EGREP
case `"$ac_path_EGREP" --version 2>&1` in
*GNU*)
  ac_cv_path_EGREP="$ac_path_EGREP" ac_path_EGREP_found=:;;
*)
  ac_count=0
  $as_echo_n 0123456789 >"conftest.in"
  while :
  do
    cat "conftest.in" "conftest.in" >"conftest.tmp"
    mv "conftest.tmp" "conftest.in"
    cp "conftest.in" "conftest.nl"
    $as_echo 'EGREP' >> "conftest.nl"
    "$ac_path_EGREP" 'EGREP$' < "conftest.nl" >"conftest.out" 2>/dev/null || break
    diff "conftest.out" "conftest.nl" >/dev/null 2>&1 || break
    as_fn_arith $ac_count + 1 && ac_count=$as_val
    if test $ac_count -gt ${ac_path_EGREP_max-0}; then
      # Best one so far, save it but keep looking for a better one
      ac_cv_path_EGREP="$ac_path_EGREP"
      ac_path_EGREP_max=$ac_count
    fi
    # 10*(2^10) chars as input seems more than enough
    test $ac_count -gt 10 && break
  done
  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;
esac

      $ac_path_EGREP_found && break 3
    done
  done
  done
IFS=$as_save_IFS
  if test -z "$ac_cv_path_EGREP"; then
    as_fn_error $? "no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin" "$LINENO" 5
  fi
else
  ac_cv_path_EGREP=$EGREP
fi

   fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP" >&5
$as_echo "$ac_cv_path_EGREP" >&6; }
 EGREP="$ac_cv_path_EGREP"


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for ANSI C header files" >&5
$as_echo_n "checking for ANSI C header files... " >&6; }
if ${ac_cv_header_stdc+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <float.h>

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_header_stdc=yes
else
  ac_cv_header_stdc=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext

if test $ac_cv_header_stdc = yes; then
  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <string.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "memchr" >/dev/null 2>&1; then :

else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdlib.h>

_ACEOF
if (eval "$ac_cpp conftest.$ac_ext") 2>&5 |
  $EGREP "free" >/dev/null 2>&1; then :

else
  ac_cv_header_stdc=no
fi
rm -f conftest*

fi

if test $ac_cv_header_stdc = yes; then
  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.
  if test "$cross_compiling" = yes; then :
  :
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ctype.h>
#include <stdlib.h>
#if ((' ' & 0x0FF) == 0x020)
# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')
# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))
#else
# define ISLOWER(c) \
		   (('a' <= (c) && (c) <= 'i') \
		     || ('j' <= (c) && (c) <= 'r') \
		     || ('s' <= (c) && (c) <= 'z'))
# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))
#endif

#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))
int
main ()
{
  int i;
  for (i = 0; i < 256; i++)
    if (XOR (islower (i), ISLOWER (i))
	|| toupper (i) != TOUPPER (i))
      return 2;
  return 0;
}
_ACEOF
if ac_fn_c_try_run "$LINENO"; then :

else
  ac_cv_header_stdc=no
fi
rm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \
  conftest.$ac_objext conftest.beam conftest.$ac_ext
fi

fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc" >&5
$as_echo "$ac_cv_header_stdc" >&6; }
if test $ac_cv_header_stdc = yes; then

$as_echo "#define STDC_HEADERS 1" >>confdefs.h

fi

# On IRIX 5.3, sys/types and inttypes.h are conflicting.
for ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \
		  inttypes.h stdint.h unistd.h
do :
  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
ac_fn_c_check_header_compile "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default
"
if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done


# The cast to long int works around a bug in the HP C Compiler
# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
# This bug is HP SR number 8606223364.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of void*" >&5
$as_echo_n "checking size of void*... " >&6; }
if ${ac_cv_sizeof_voidp+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (void*))" "ac_cv_sizeof_voidp"        "$ac_includes_default"; then :

else
  if test "$ac_cv_type_voidp" = yes; then
     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error 77 "cannot compute sizeof (void*)
See \`config.log' for more details" "$LINENO" 5; }
   else
     ac_cv_sizeof_voidp=0
   fi
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_voidp" >&5
$as_echo "$ac_cv_sizeof_voidp" >&6; }



cat >>confdefs.h <<_ACEOF
#define SIZEOF_VOIDP $ac_cv_sizeof_voidp
_ACEOF



case $ac_cv_sizeof_voidp in
 8)
  NBITS=64
  ;;
 4)
  NBITS=32
  ;;
 *)

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "This machine has some strange sizeof(void*): $ac_cv_sizeof_voidp.
  Usually this means that your LD_LIBRARY_PATH is set incorrectly for the
  compiler you are using.  To verify that this is the problem you will need
  to copy the C++  program from the end of the config.log file and run the
  compile command which is just before it in config.log.  Run the executable
  and see what error message you get. You can also just fix your
  LD_LIBRARY_PATH if you know what is wrong with it.
  Exiting due to size of void* problem! Read above warnings!" "$LINENO" 5

  ;;
esac

# The cast to long int works around a bug in the HP C Compiler
# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects
# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.
# This bug is HP SR number 8606223364.
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking size of long long" >&5
$as_echo_n "checking size of long long... " >&6; }
if ${ac_cv_sizeof_long_long+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if ac_fn_c_compute_int "$LINENO" "(long int) (sizeof (long long))" "ac_cv_sizeof_long_long"        "$ac_includes_default"; then :

else
  if test "$ac_cv_type_long_long" = yes; then
     { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error 77 "cannot compute sizeof (long long)
See \`config.log' for more details" "$LINENO" 5; }
   else
     ac_cv_sizeof_long_long=0
   fi
fi

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_long_long" >&5
$as_echo "$ac_cv_sizeof_long_long" >&6; }



cat >>confdefs.h <<_ACEOF
#define SIZEOF_LONG_LONG $ac_cv_sizeof_long_long
_ACEOF


case $ac_cv_sizeof_long_long in
 8)
  LONG_LONG_SWAP=SWAP_8
  ;;
 4)
  LONG_LONG_SWAP=SWAP_4
  ;;
 *)

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "This machine has some strange sizeof(long long): $ac_cv_sizeof_long_long.
  Usually this means that your LD_LIBRARY_PATH is set incorrectly for the
  compiler you are using.  To verify that this is the problem you will need
  to copy the C++  program from the end of the config.log file and run the
  compile command which is just before it in config.log.  Run the executable
  and see what error message you get. You can also just fix your
  LD_LIBRARY_PATH if you know what is wrong with it.
  Exiting due to size of long long problem! Read above warnings!" "$LINENO" 5

  ;;
esac


sci_defs_files="$sci_defs_files Core/Util/testEndian.h"

## --------------

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


if test "$CC" = ""; then
  # Apparently AC_PROG_CC will set CFLAGS to "-O2 -g" if you don't specify
  # its value first, so...
  CFLAGS=$CFLAGS

  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
if test -n "$ac_tool_prefix"; then
  for ac_prog in cc gcc
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CC"; then
  ac_cv_prog_CC="$CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CC="$ac_tool_prefix$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CC=$ac_cv_prog_CC
if test -n "$CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CC" >&5
$as_echo "$CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    test -n "$CC" && break
  done
fi
if test -z "$CC"; then
  ac_ct_CC=$CC
  for ac_prog in cc gcc
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ac_ct_CC+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CC"; then
  ac_cv_prog_ac_ct_CC="$ac_ct_CC" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CC="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CC=$ac_cv_prog_ac_ct_CC
if test -n "$ac_ct_CC"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC" >&5
$as_echo "$ac_ct_CC" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$ac_ct_CC" && break
done

  if test "x$ac_ct_CC" = x; then
    CC=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CC=$ac_ct_CC
  fi
fi


test -z "$CC" && { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "no acceptable C compiler found in \$PATH
See \`config.log' for more details" "$LINENO" 5; }

# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for C compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler" >&5
$as_echo_n "checking whether we are using the GNU C compiler... " >&6; }
if ${ac_cv_c_compiler_gnu+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_compiler_gnu=yes
else
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_c_compiler_gnu=$ac_compiler_gnu

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu" >&5
$as_echo "$ac_cv_c_compiler_gnu" >&6; }
if test $ac_compiler_gnu = yes; then
  GCC=yes
else
  GCC=
fi
ac_test_CFLAGS=${CFLAGS+set}
ac_save_CFLAGS=$CFLAGS
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g" >&5
$as_echo_n "checking whether $CC accepts -g... " >&6; }
if ${ac_cv_prog_cc_g+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_save_c_werror_flag=$ac_c_werror_flag
   ac_c_werror_flag=yes
   ac_cv_prog_cc_g=no
   CFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
else
  CFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :

else
  ac_c_werror_flag=$ac_save_c_werror_flag
	 CFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   ac_c_werror_flag=$ac_save_c_werror_flag
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g" >&5
$as_echo "$ac_cv_prog_cc_g" >&6; }
if test "$ac_test_CFLAGS" = set; then
  CFLAGS=$ac_save_CFLAGS
elif test $ac_cv_prog_cc_g = yes; then
  if test "$GCC" = yes; then
    CFLAGS="-g -O2"
  else
    CFLAGS="-g"
  fi
else
  if test "$GCC" = yes; then
    CFLAGS="-O2"
  else
    CFLAGS=
  fi
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89" >&5
$as_echo_n "checking for $CC option to accept ISO C89... " >&6; }
if ${ac_cv_prog_cc_c89+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_cv_prog_cc_c89=no
ac_save_CC=$CC
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <stdarg.h>
#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */
struct buf { int x; };
FILE * (*rcsopen) (struct buf *, struct stat *, int);
static char *e (p, i)
     char **p;
     int i;
{
  return p[i];
}
static char *f (char * (*g) (char **, int), char **p, ...)
{
  char *s;
  va_list v;
  va_start (v,p);
  s = g (p, va_arg (v,int));
  va_end (v);
  return s;
}

/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has
   function prototypes and stuff, but not '\xHH' hex character constants.
   These don't provoke an error unfortunately, instead are silently treated
   as 'x'.  The following induces an error, until -std is added to get
   proper ANSI mode.  Curiously '\x00'!='x' always comes out true, for an
   array size at least.  It's necessary to write '\x00'==0 to get something
   that's true only with -std.  */
int osf4_cc_array ['\x00' == 0 ? 1 : -1];

/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters
   inside strings and character constants.  */
#define FOO(x) 'x'
int xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];

int test (int i, double x);
struct s1 {int (*f) (int a);};
struct s2 {int (*f) (double a);};
int pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);
int argc;
char **argv;
int
main ()
{
return f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];
  ;
  return 0;
}
_ACEOF
for ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \
	-Ae "-Aa -D_HPUX_SOURCE" "-Xc -D__EXTENSIONS__"
do
  CC="$ac_save_CC $ac_arg"
  if ac_fn_c_try_compile "$LINENO"; then :
  ac_cv_prog_cc_c89=$ac_arg
fi
rm -f core conftest.err conftest.$ac_objext
  test "x$ac_cv_prog_cc_c89" != "xno" && break
done
rm -f conftest.$ac_ext
CC=$ac_save_CC

fi
# AC_CACHE_VAL
case "x$ac_cv_prog_cc_c89" in
  x)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: none needed" >&5
$as_echo "none needed" >&6; } ;;
  xno)
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: unsupported" >&5
$as_echo "unsupported" >&6; } ;;
  *)
    CC="$CC $ac_cv_prog_cc_c89"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89" >&5
$as_echo "$ac_cv_prog_cc_c89" >&6; } ;;
esac
if test "x$ac_cv_prog_cc_c89" != xno; then :

fi

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


  case "$host" in
     *)
        # Check to see if cc is actually gcc
        is_gcc=`$CC --version | grep -i gcc`
        if test "$is_gcc"; then
           if test -f "`which gcc`"; then
              msg="Note, found 'cc' which is actually 'gcc', so"
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $msg" >&5
$as_echo "$as_me: WARNING: $msg" >&2;}
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: we will use 'gcc' for clarity." >&5
$as_echo "$as_me: WARNING: we will use 'gcc' for clarity." >&2;}
              CC=gcc
           fi
        fi

        ;;
  esac
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: C compiler not specified with 'CC' environment variable.\
              Using default... $CC" >&5
$as_echo "$as_me: WARNING: C compiler not specified with 'CC' environment variable.\
              Using default... $CC" >&2;}
fi



if test "$CXX" = ""; then

  case "$host" in
     *-darwin*)
	CXX=c++
	;;
     *)
	# Apparently AC_PROG_CXX will set CXXFLAGS to "-O2 -g" if you don't specify
        # its value first, so...
        CXXFLAGS=$CXXFLAGS
        ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
if test -z "$CXX"; then
  if test -n "$CCC"; then
    CXX=$CCC
  else
    if test -n "$ac_tool_prefix"; then
  for ac_prog in CC g++ c++
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_CXX+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$CXX"; then
  ac_cv_prog_CXX="$CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_CXX="$ac_tool_prefix$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
CXX=$ac_cv_prog_CXX
if test -n "$CXX"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXX" >&5
$as_echo "$CXX" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    test -n "$CXX" && break
  done
fi
if test -z "$CXX"; then
  ac_ct_CXX=$CXX
  for ac_prog in CC g++ c++
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ac_ct_CXX+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_CXX"; then
  ac_cv_prog_ac_ct_CXX="$ac_ct_CXX" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_CXX="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_CXX=$ac_cv_prog_ac_ct_CXX
if test -n "$ac_ct_CXX"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_CXX" >&5
$as_echo "$ac_ct_CXX" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$ac_ct_CXX" && break
done

  if test "x$ac_ct_CXX" = x; then
    CXX="g++"
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    CXX=$ac_ct_CXX
  fi
fi

  fi
fi
# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for C++ compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C++ compiler" >&5
$as_echo_n "checking whether we are using the GNU C++ compiler... " >&6; }
if ${ac_cv_cxx_compiler_gnu+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{
#ifndef __GNUC__
       choke me
#endif

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  ac_compiler_gnu=yes
else
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_cxx_compiler_gnu=$ac_compiler_gnu

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_cxx_compiler_gnu" >&5
$as_echo "$ac_cv_cxx_compiler_gnu" >&6; }
if test $ac_compiler_gnu = yes; then
  GXX=yes
else
  GXX=
fi
ac_test_CXXFLAGS=${CXXFLAGS+set}
ac_save_CXXFLAGS=$CXXFLAGS
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $CXX accepts -g" >&5
$as_echo_n "checking whether $CXX accepts -g... " >&6; }
if ${ac_cv_prog_cxx_g+:} false; then :
  $as_echo_n "(cached) " >&6
else
  ac_save_cxx_werror_flag=$ac_cxx_werror_flag
   ac_cxx_werror_flag=yes
   ac_cv_prog_cxx_g=no
   CXXFLAGS="-g"
   cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  ac_cv_prog_cxx_g=yes
else
  CXXFLAGS=""
      cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :

else
  ac_cxx_werror_flag=$ac_save_cxx_werror_flag
	 CXXFLAGS="-g"
	 cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  ac_cv_prog_cxx_g=yes
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
   ac_cxx_werror_flag=$ac_save_cxx_werror_flag
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cxx_g" >&5
$as_echo "$ac_cv_prog_cxx_g" >&6; }
if test "$ac_test_CXXFLAGS" = set; then
  CXXFLAGS=$ac_save_CXXFLAGS
elif test $ac_cv_prog_cxx_g = yes; then
  if test "$GXX" = yes; then
    CXXFLAGS="-g -O2"
  else
    CXXFLAGS="-g"
  fi
else
  if test "$GXX" = yes; then
    CXXFLAGS="-O2"
  else
    CXXFLAGS=
  fi
fi
ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: C++ compiler not specified with 'CXX' environment variable.\
	         Using default... $CXX" >&5
$as_echo "$as_me: WARNING: C++ compiler not specified with 'CXX' environment variable.\
	         Using default... $CXX" >&2;}
        ;;
  esac
fi


# Most fortran compilers need an "_" for C function names.
# Some have strange underscore needs.  This flag is used in the
# tools/fspec.pl.in file to generate the correct
# cname of the fortran function.
FORTRAN_UNDERSCORE=end
DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_END"

CC_REALLY_IS=`type $CC | sed 's%^.* %%'`
# Going to look for "as", "ld", etc in this dir:
COMPILER_DIR=`dirname $CC_REALLY_IS`

## MAKE_PARALLELISM is used to tell the compiler how many cpus to use
## when linking.  1 is usually a good number to use per link,
## espcially for smaller number of cpu machines.  I think 4 is
## sufficient for even nirvana.
if test $NUM_CPUS -le 2 ; then
  MAKE_PARALLELISM=1
else
  if test $NUM_CPUS -le 8 ; then
    MAKE_PARALLELISM=2
  else
    MAKE_PARALLELISM=8
  fi
fi

# If the user did not specify the number of bits for build, then default
# to machine default number of bits.
if test "$enable_32bit" = "no" -a "$enable_64bit" = "no"; then
   if test "$NBITS" = 64; then
      enable_64bit="yes"
   else
      enable_32bit="yes"
   fi
fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking target build word length" >&5
$as_echo_n "checking target build word length... " >&6; }
if test "$enable_64bit" = "yes"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: 64 bits" >&5
$as_echo "64 bits" >&6; }
  if test "$enable_32bit" = "yes"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Both 64 and 32 bit compiles specified." "$LINENO" 5

  fi
else
  enable_32bit="yes"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: 32 bits" >&5
$as_echo "32 bits" >&6; }
fi

##  --------------------------------------------------------------------
##  ----------------------  set variable defaults  ---------------------
##  --------------------------------------------------------------------

##
##  DO NOT "hardcode" ANY libraries (i.e. no -l or -L or -I allowed).
##

if test "$IS_WIN" = "yes"; then
  TIME_IMPL=Time_win32.cc
else
  TIME_IMPL=Time_unix.cc
fi
TEMPLATE_TAG=
TEMPLATE_BOX="<>"
case $host in
     *-darwin*)
	SO_OR_ARCHIVE_EXTENSION=dylib
        if test "$enable_sci_malloc" = "yes"; then
           as_fn_error $? "sci_malloc does not work under mac osx. Though you can try to use: --enable-sci-malloc=force" "$LINENO" 5
           enable_sci_malloc="no"
        elif test "$enable_sci_malloc" = "force"; then
           enable_sci_malloc="yes"
        fi
	;;

     *-aix*)
        # On AIX, doesn't automatically generate .so's.  Make .a's and then
        # later we will make .so's from them.
	SO_OR_ARCHIVE_EXTENSION=a
	;;
     *-pc-mingw*)
        SO_OR_ARCHIVE_EXTENSION=dll
        ;;
     *)
	SO_OR_ARCHIVE_EXTENSION=so
        ;;
esac

THROW_LEVEL="$enable_throw_level"
extra_cflags=""

if test "$output_avg_walltime" != "no"; then
  extra_cflags="-DOUTPUT_AVG_ELAPSED_WALLTIME ${extra_cflags}"
fi

if test "$exename" = "default"; then
  EXENAME=scirun
else
  EXENAME=$exename
fi

LARGESOS=$largesos

if test "$enable_sci_malloc" = "yes"; then
  SCI_MALLOC_ON="yes"
  DEF_MALLOC=""
else
  SCI_MALLOC_ON="no"
  DEF_MALLOC="#define DISABLE_SCI_MALLOC 1"
fi

if test "$with_malloc_trace" ; then
  if test "$IS_OSX" = "yes"; then
      as_fn_error $? "Malloc trace is not supported on Mac OSX..." "$LINENO" 5
  fi
fi

if test "$enable_scinew_line_numbers" = "yes"; then
  DEF_MALLOC_LINENUMBERS="#define USE_TAG_LINENUM 1"
else
  DEF_MALLOC_LINENUMBERS=""
fi









sci_defs_files="$sci_defs_files include/sci_defs/malloc_testdefs.h"



sci_defs_files="$sci_defs_files include/sci_defs/error_testdefs.h"

#########################################################################

##  ----------------------------------------------------------------------
##  ----------------  set host specific build tools  ---------------------
##  ----------------------------------------------------------------------

DEBUG=yes

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether debug was enabled" >&5
$as_echo_n "checking whether debug was enabled... " >&6; }
OGL_ERR_MACRO=""
if test "$debug" = "no"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
  DEBUG=no
elif test "$debug" = "yes"; then
  OGL_ERR_MACRO="#define OGL_DBG 1"
  extra_cflags="-g ${extra_cflags}"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes (-g) " >&5
$as_echo "yes (-g) " >&6; }
else
  OGL_ERR_MACRO="#define OGL_DBG 1"
  extra_cflags="$debug ${extra_cflags}"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($debug) " >&5
$as_echo "yes ($debug) " >&6; }
fi




{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether optimize was enabled" >&5
$as_echo_n "checking whether optimize was enabled... " >&6; }
if test "$optimize" = "no"; then
  if test "$debug" = "no"; then
    # neither debug nor optimize specified, DEFAULT TO: optimized
    extra_cflags="-O2 -DNDEBUG ${extra_cflags}"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no (default to -O2) " >&5
$as_echo "no (default to -O2) " >&6; }
  else
    # Debug mode specified
    extra_cflags="${no_optimize_flag} ${extra_cflags}"
    # extra_fflags WILL ONLY BE USED WITH g77
    extra_fflags="-ffortran-bounds-check"
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no (${no_optimize_flag}) " >&5
$as_echo "no (${no_optimize_flag}) " >&6; }
  fi
elif test "$optimize" = "yes"; then
  extra_cflags="-O2 -DNDEBUG ${extra_cflags}"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes (-O2) " >&5
$as_echo "yes (-O2) " >&6; }
else
  extra_cflags="$optimize -DNDEBUG ${extra_cflags}"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($optimize) " >&5
$as_echo "yes ($optimize) " >&6; }
fi

# Check to see if assertions are off but optimize is on... and warn user if so...
if test "$optimize" != "no"; then

  ASSERTION_LEVEL="$enable_assertion_level"
  if test "$ASSERTION_LEVEL" = ""; then
    add_important_warning "FYI: Configure turned off assertions due to --enable-optimize."
    ASSERTION_LEVEL=0
  else
    if test "$ASSERTION_LEVEL" != "0"; then
      add_important_warning "You explicitly turned on assertions (Level $ASSERTION_LEVEL) but you also specified --enable-optimize.  You can turn assertions off with --enable-assertion-level=0.  Assertions can significantly decrease performance."
    fi
  fi
else
  # Configuring debug build...
  ASSERTION_LEVEL="$enable_assertion_level"
  if test "$ASSERTION_LEVEL" = ""; then
    # Debug builds default to level 3 assertions.
    ASSERTION_LEVEL=3
  fi
fi

if test $ASSERTION_LEVEL != "0" -a $ASSERTION_LEVEL != "1" -a $ASSERTION_LEVEL != "2" -a $ASSERTION_LEVEL != "3"; then
  as_fn_error $? "--enable-assertion-level was set to '$ASSERTION_LEVEL', but must be 0, 1, 2, or 3." "$LINENO" 5
fi

if test ! -e "`type $CC | sed 's%^.* /%/%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Could not find the specified C compiler ($CC)" "$LINENO" 5

fi
if test ! -e "`type $CXX | sed 's%^.* /%/%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Could not find the specified C++ compiler (CC)" "$LINENO" 5

fi

if test "$IS_WIN" = "yes"; then
  # don't require fortran on windows yet
  # (Uintah disables fortran compilation on windows for the moment...)
  with_fortran="no"
fi

# enable/disable certain Uintah components
BUILD_ARCHES=yes
BUILD_ICE=yes
BUILD_MPM=yes
BUILD_MODELS_RADIATION=yes
BUILD_WASATCH=no
DEF_ARCHES=""
DEF_ICE=""
DEF_MPM=""
DEF_MODELS_RADIATION=""
DEF_WASATCH=""

if test "$USE_ARCHES" = no; then BUILD_ARCHES=no; DEF_ARCHES="#define NO_ARCHES"; fi
if test "$USE_ICE" = no; then BUILD_ICE=no; DEF_ICE="#define NO_ICE"; fi
if test "$USE_MPM" = no; then BUILD_MPM=no; DEF_MPM="#define NO_MPM"; fi
if test "$USE_MODELS_RADIATION" = no; then BUILD_MODELS_RADIATION=no; DEF_MODELS_RADIATION="#define NO_MODELS_RADIATION"; fi
if test "$with_fortran" = no; then
            BUILD_ARCHES=no;
            DEF_ARCHES="#define NO_ARCHES";
            DEF_NO_FORTRAN="#define NO_FORTRAN";
            NO_FORTRAN="yes";
fi

# NO_FORTRAN is used in configVars.mk[.in] and DEF_NO_FORTRAN is used in uintah_testdefs.h.in













if test "$BUILD_ARCHES" = no -a "$BUILD_MODELS_RADIATION" = no; then
  sci_required_fortran=no
else
  if test "$with_fortran" != no; then
    sci_required_fortran=yes
    if test "$F77" = ""; then
      ac_ext=f
ac_compile='$F77 -c $FFLAGS conftest.$ac_ext >&5'
ac_link='$F77 -o conftest$ac_exeext $FFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_f77_compiler_gnu
if test -n "$ac_tool_prefix"; then
  for ac_prog in g77 xlf f77 frt pgf77 cf77 fort77 fl32 af77 xlf90 f90 pgf90 pghpf epcf90 gfortran g95 xlf95 f95 fort ifort ifc efc pgfortran pgf95 lf95 ftn
  do
    # Extract the first word of "$ac_tool_prefix$ac_prog", so it can be a program name with args.
set dummy $ac_tool_prefix$ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_F77+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$F77"; then
  ac_cv_prog_F77="$F77" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_F77="$ac_tool_prefix$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
F77=$ac_cv_prog_F77
if test -n "$F77"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $F77" >&5
$as_echo "$F77" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    test -n "$F77" && break
  done
fi
if test -z "$F77"; then
  ac_ct_F77=$F77
  for ac_prog in g77 xlf f77 frt pgf77 cf77 fort77 fl32 af77 xlf90 f90 pgf90 pghpf epcf90 gfortran g95 xlf95 f95 fort ifort ifc efc pgfortran pgf95 lf95 ftn
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ac_ct_F77+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ac_ct_F77"; then
  ac_cv_prog_ac_ct_F77="$ac_ct_F77" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ac_ct_F77="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ac_ct_F77=$ac_cv_prog_ac_ct_F77
if test -n "$ac_ct_F77"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_ct_F77" >&5
$as_echo "$ac_ct_F77" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$ac_ct_F77" && break
done

  if test "x$ac_ct_F77" = x; then
    F77=""
  else
    case $cross_compiling:$ac_tool_warned in
yes:)
{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet" >&5
$as_echo "$as_me: WARNING: using cross tools not prefixed with host triplet" >&2;}
ac_tool_warned=yes ;;
esac
    F77=$ac_ct_F77
  fi
fi


# Provide some information about the compiler.
$as_echo "$as_me:${as_lineno-$LINENO}: checking for Fortran 77 compiler version" >&5
set X $ac_compile
ac_compiler=$2
for ac_option in --version -v -V -qversion; do
  { { ac_try="$ac_compiler $ac_option >&5"
case "(($ac_try" in
  *\"* | *\`* | *\\*) ac_try_echo=\$ac_try;;
  *) ac_try_echo=$ac_try;;
esac
eval ac_try_echo="\"\$as_me:${as_lineno-$LINENO}: $ac_try_echo\""
$as_echo "$ac_try_echo"; } >&5
  (eval "$ac_compiler $ac_option >&5") 2>conftest.err
  ac_status=$?
  if test -s conftest.err; then
    sed '10a\
... rest of stderr output deleted ...
         10q' conftest.err >conftest.er1
    cat conftest.er1 >&5
  fi
  rm -f conftest.er1 conftest.err
  $as_echo "$as_me:${as_lineno-$LINENO}: \$? = $ac_status" >&5
  test $ac_status = 0; }
done
rm -f a.out

# If we don't use `.F' as extension, the preprocessor is not run on the
# input file.  (Note that this only needs to work for GNU compilers.)
ac_save_ext=$ac_ext
ac_ext=F
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU Fortran 77 compiler" >&5
$as_echo_n "checking whether we are using the GNU Fortran 77 compiler... " >&6; }
if ${ac_cv_f77_compiler_gnu+:} false; then :
  $as_echo_n "(cached) " >&6
else
  cat > conftest.$ac_ext <<_ACEOF
      program main
#ifndef __GNUC__
       choke me
#endif

      end
_ACEOF
if ac_fn_f77_try_compile "$LINENO"; then :
  ac_compiler_gnu=yes
else
  ac_compiler_gnu=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
ac_cv_f77_compiler_gnu=$ac_compiler_gnu

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_f77_compiler_gnu" >&5
$as_echo "$ac_cv_f77_compiler_gnu" >&6; }
ac_ext=$ac_save_ext
ac_test_FFLAGS=${FFLAGS+set}
ac_save_FFLAGS=$FFLAGS
FFLAGS=
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking whether $F77 accepts -g" >&5
$as_echo_n "checking whether $F77 accepts -g... " >&6; }
if ${ac_cv_prog_f77_g+:} false; then :
  $as_echo_n "(cached) " >&6
else
  FFLAGS=-g
cat > conftest.$ac_ext <<_ACEOF
      program main

      end
_ACEOF
if ac_fn_f77_try_compile "$LINENO"; then :
  ac_cv_prog_f77_g=yes
else
  ac_cv_prog_f77_g=no
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext

fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_f77_g" >&5
$as_echo "$ac_cv_prog_f77_g" >&6; }
if test "$ac_test_FFLAGS" = set; then
  FFLAGS=$ac_save_FFLAGS
elif test $ac_cv_prog_f77_g = yes; then
  if test "x$ac_cv_f77_compiler_gnu" = xyes; then
    FFLAGS="-g -O2"
  else
    FFLAGS="-g"
  fi
else
  if test "x$ac_cv_f77_compiler_gnu" = xyes; then
    FFLAGS="-O2"
  else
    FFLAGS=
  fi
fi

if test $ac_compiler_gnu = yes; then
  G77=yes
else
  G77=
fi
ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

      if test "$F77" = ""; then
        as_fn_error $? "Could not find a fortran compiler!  Please set the F77 environment variable to point to a fortran compiler." "$LINENO" 5
      fi
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Fortran compiler not specified with 'F77' environment variable. Using default... $F77" >&5
$as_echo "$as_me: WARNING: Fortran compiler not specified with 'F77' environment variable. Using default... $F77" >&2;}
    else
      if test ! -e "`type $F77 | sed 's%^.* /%/%'`"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Could not find the specified Fortran compiler: '$F77' " "$LINENO" 5

      fi
    fi
  fi
fi

##  --  Handle static build stuff... ------------------------

IS_STATIC_BUILD="no"

# If --enable-static, or if lib extension already set to 'a' (eg: AIX):
if test "$static" != "no" -o "$SO_OR_ARCHIVE_EXTENSION" = "a"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Building a statically linked version of Uintah! " >&5
$as_echo "$as_me: WARNING: Building a statically linked version of Uintah! " >&2;}
  IS_STATIC_BUILD="yes"
  SO_OR_ARCHIVE_EXTENSION=a
  if test "$static" == "full"; then

    # If we don't use the 'full' option, then some shared libs may be
    # linked in.  While we probably should make 'full' the default, this
    # ends up breaking a number of (our test) machines that don't have (all the) static
    # libraries installed.  As 'static' is really used only on specific/large
    # supercomputers (Crays mostly), and we only/mostly use it on
    # small machines to check for circular dependancies, it is ok to not use
    # '-static' in most cases.

    LDFLAGS="${LDFLAGS} -static"
  fi
  MAKE_ARCHIVES="yes"
  STATIC_BUILD_DEF="#define STATIC_BUILD 1"
else
  SOFLAGS="-shared ${SOFLAGS}"
fi







##  --  search for MallocTrace ------------------------

if test "$with_malloc_trace"; then
  if test "$with_malloc_trace" = "yes"; then
    as_fn_error $? "--with-malloc_trace=DIR requires a Directory be provided. " "$LINENO" 5
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for MallocTrace files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for MallocTrace files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_malloc_trace; then
      as_fn_error $? "'$with_malloc_trace' directory does not exist. " "$LINENO" 5
    fi
    if test "$IS_STATIC_BUILD" = "yes"; then
       if test ! -f $with_malloc_trace/lib/libMallocTrace.a; then
       	  as_fn_error $? "'$with_malloc_trace/lib/libMallocTrace.a' does not exist. " "$LINENO" 5
       fi
    else
	if test ! -f $with_malloc_trace/lib/shared/libMallocTrace.so; then
      	   as_fn_error $? "'$with_malloc_trace/lib/shared/libMallocTrace.so' does not exist. " "$LINENO" 5
    	fi
    fi
    if test ! -f $with_malloc_trace/include/MallocTrace.h; then
      as_fn_error $? "'$with_malloc_trace/include/MallocTrace.h' does not exist. " "$LINENO" 5
    fi
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
    DEF_MALLOC_TRACE="#define MALLOC_TRACE 1"
    INC_MALLOC_TRACE_H="-I$with_malloc_trace/include"
    if test "$IS_STATIC_BUILD" = "yes"; then
       MALLOC_TRACE_LIB_DIR_FLAG="$LDRUN_PREFIX$with_malloc_trace/lib -L$with_malloc_trace/lib"
    else
       MALLOC_TRACE_LIB_DIR_FLAG="$LDRUN_PREFIX$with_malloc_trace/lib/shared -L$with_malloc_trace/lib/shared"
    fi
    MALLOC_TRACE_LIB_FLAG="-lMallocTrace"
    MALLOC_TRACE_LIB_MPI_FLAG="-lMallocTraceMPI"
  fi
fi






##  --  Check for 64 vs 80 bit floating point number storage in register precision error ------------------------

# In other words, the processor may use 80 bit floating point number registers, and as long as the
# data is kept on the processor (in registers) then you get extra precission... however, as soon as
# the number is stored to memory, it is truncated back to fewer (64?) bits.  At this point, it is possible
# for the original floating pointloatingpoint number to not compare with itself (ie, if the register data
# happens to stay around, and the 'old' value is loaded back from memory and then compared to the register).
# This can cause some very strange and hard to track down errors in the code.  To turn this off, gnu
# provides the -ffloat-store compiler argument.

# WARNING: The following test case was created by Justin Luitjens.  It seems to work, and I can't
# come up with a better version, but I am not convinced that it will catch the problem in all cases...

cat > conftest-fpr.cc <<EOF

#include <iostream>

int main()
{
  double a=1;
  double b=.01;

  int c=a/b;
  return c != 100; // Shell return codes are backward in that 0 == success, thus the '!='.
}
EOF

$CXX $CXXFLAGS conftest-fpr.cc -o conftest-fpr
./conftest-fpr
if test $? != 0; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ----------------------------------------------------------------------------------------- " >&5
$as_echo "$as_me: WARNING: ----------------------------------------------------------------------------------------- " >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Floating point - usually 64 vs 80 bit - register precission problem detected. " >&5
$as_echo "$as_me: WARNING: Floating point - usually 64 vs 80 bit - register precission problem detected. " >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Disabling use of floating point registers with '-ffloat-store' compiler flag. " >&5
$as_echo "$as_me: WARNING: Disabling use of floating point registers with '-ffloat-store' compiler flag. " >&2;}
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ----------------------------------------------------------------------------------------- " >&5
$as_echo "$as_me: WARNING: ----------------------------------------------------------------------------------------- " >&2;}
   add_important_warning "Automatically added -ffloat-store compiler option to C/CXXFLAGS."
   CFLAGS="$CFLAGS -ffloat-store"
   CXXFLAGS="$CXXFLAGS -ffloat-store"
   # Verify that the compiler accepts the -ffloat-store flag:
   $CXX $CXXFLAGS conftest-fpr.cc -o conftest-fpr 2>&5
   if test $? != 0; then
      rm -f conftest-fpr conftest-fpr.cc
      as_fn_error $? "Tried to add the -ffloat-store flag but the compiler ($CXX) failed to accept it...\nSee 'WARNING' message above. " "$LINENO" 5
   fi
fi

rm -f conftest-fpr conftest-fpr.cc

##  --  search for Zoltan ------------------------

if test "$with_zoltan"; then
  if test "$with_zoltan" = "yes"; then
    as_fn_error $? "--with-zoltan=DIR requires a DIRectory be provided. " "$LINENO" 5
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Zoltan files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for Zoltan files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_zoltan; then
      as_fn_error $? "'$with_zoltan' directory does not exist. " "$LINENO" 5
    fi
    if test ! -f $with_zoltan/lib/libzoltan.a; then
      as_fn_error $? "'$with_zoltan/lib/libzoltan.a' does not exist. " "$LINENO" 5
    fi
    if test ! -f $with_zoltan/include/zoltan_cpp.h; then
      as_fn_error $? "'$with_zoltan/include/zoltan_cpp.h' does not exist. " "$LINENO" 5
    fi
  fi
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  DEF_ZOLTAN="#define HAVE_ZOLTAN 1"
  INC_ZOLTAN_H="-I$with_zoltan/include"
  ZOLTAN_LIB_DIR_FLAG="-L$with_zoltan/lib"
  ZOLTAN_LIB_FLAG="-lzoltan"

fi





## -----------------------------------------------

sci_defs_files="$sci_defs_files include/sci_defs/uintah_testdefs.h"

# This flag is for the windows compiler - so it can generate correct
# SHARE flags.
WIN_DLLFLAGS=""
WIN_OTFFLAGS=""

case $host in
  *-dec*)
    ac_objext=o

    CPP="$CC"
    CXXCPP="$CXX -c"
    ##  this WOFF is required for configure
    CPPFLAGS=""
    FFLAGS="$extra_cflags $FFLAGS"
    CFLAGS="$extra_cflags -D__USE_STD_IOSTREAM $CFLAGS"
    CXXFLAGS="-model ansi $extra_cflags -D__USE_STD_IOSTREAM $CXXFLAGS"
    if test "$threads" != "none"; then
      CFLAGS="$CFLAGS -pthread"
      CXXFLAGS="$CXXFLAGS -pthread"
    fi
    SOFLAGS="-warning_unresolved -update_registry \$(LIBDIR)/so_locations"
    LDFLAGS=""
    LDRUN_PREFIX="-rpath "
    REPOSITORY_FLAGS="-ptr"
    ;;

  *-aix*)

    ac_objext=o
    # Xlf does not need/want an "_" on the names of fortran
    # functions.  This var is used in fspec.pl.in in order not to
    # add the _ to the cname of the function.
    FORTRAN_UNDERSCORE=none
    DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_NONE"

    # The IBM compilers don't use LDRUN_PREFIX.  By making it "-L"
    # the lib path will be repeated twice, but since the makefile
    # is set up assuming you need LDRUN_PREFIX, this is the easiest fix.
    LDRUN_PREFIX="-L"

    # xlc doesn't seem to like the <>...
    # KCC doesn't seem to like the <>...
    # g++ doesn't seem to like <> on the IBM either.
    TEMPLATE_BOX=

    case $CXX in
      *g++*)
         # bigtoc helps keep gcc from breaking...
         LDFLAGS="-Wl,-bbigtoc $LDFLAGS"
         ;;
      *)
#      for these compilers: *xlC*) or *KCC*)

         # Tell the compiler that the executable can use a
         # maximum of 1280MB (5*256MB) of memory per processor
         # rather than the default of 256MB.
         LDFLAGS="-bmaxdata:0x50000000 $LDFLAGS"

         if test "$enable_64bit" = "yes"; then
            BIT64FLAG=-q64
            NBITS=64
         fi
         CFLAGS="-qrtti=all $BIT64FLAG $CFLAGS"

         # Allows for better optimization and removes INFORMATION message.
         # I think this is necessary for both KCC and xlC...
         if test "$optimize" = "yes"; then
            CFLAGS="-qMAXMEM=4096 $CFLAGS"
         fi
         ;;
    esac

    CFLAGS="$CFLAGS $extra_cflags"

    case $F77 in
      *xlf*)
         FFLAGS="-WF,-D_AIX $extra_cflags $FFLAGS"
         ;;
      *)
         FFLAGS="$extra_cflags $FFLAGS"
         ;;
    esac

    CXXFLAGS="$CFLAGS"

    CPP="$CC -c"
    CXXCPP="$CXX -c"

    ;;
  *-darwin*)
    ac_objext=o
    LDRUN_PREFIX="-L"

#####
# GCC_TEST
#####
    OS_VERSION=`uname -r | cut -f1 -d.`
    if test "$OS_VERSION" = "10" -o "$OS_VERSION" = "11"; then
        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Running under Snow Leopard " >&5
$as_echo "$as_me: WARNING: Running under Snow Leopard " >&2;}
        DEF_OSX_SNOW_LEOPARD="#define OSX_SNOW_LEOPARD"
        IS_OSX_SNOW_LEOPARD="yes"
    fi

    NO_LONG_DOUBLE="-Wno-long-double"
    if test "$IS_OSX_SNOW_LEOPARD" = "yes"; then
      NO_LONG_DOUBLE=
    fi


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="4.0.0"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $CC\` version 4.0.0" >&5
$as_echo_n "checking for \`basename $CC\` version 4.0.0... " >&6; }

    if test "GCC_VERSION=4.0"; then
      _SCI_CORRECT_='GCC_VERSION=4.0'
    fi

    if test ""; then
      _SCI_NOTCORRECT_=''
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi


    if test "$GCC_VERSION" = "4.0"; then
       CFLAGS="$CFLAGS $extra_cflags -fno-common -dynamic $NO_LONG_DOUBLE"
    else
       CFLAGS="$CFLAGS $extra_cflags -fno-common -dynamic $NO_LONG_DOUBLE -fcoalesce-templates"
    fi
    CXXFLAGS="$CXXFLAGS $CFLAGS"

    SOFLAGS="-dynamiclib"

    case $F77 in
      *g77*)
         # extra_fflags has array checking if in debug mode.
         FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

         # put '_' at end and two '_'s if there is a '_' in name.
         # This flag is used by the genfspec.pl script in Uintah (generated
         # from fspec.pl.in).
         FORTRAN_UNDERSCORE=linux
         DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_LINUX"
         ;;
      *gfortran*)
         FFLAGS="$FFLAGS -fbounds-check $extra_cflags"
         FORTRAN_UNDERSCORE=end
         DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_END"
         ;;
      *)
         FFLAGS="$FFLAGS $extra_cflags"
         ;;
    esac
    ;;

  *-pc-mingw*)
    case $CXX in
      *cl*)
          ac_objext=obj
          CXXFLAGS="-EHsc -GR"

          if test "$debug" = yes; then
            #  no debug information for dynamic compilation yet - the threaded compilations will overwrite the db file
            CFLAGS="-nologo -Od -D_USE_MATH_DEFINES -D_CRT_SECURE_NO_DEPRECATE -Gm -Zi -MD -W1 -Wp64"
            WIN_DLLFLAGS=' -DBUILD_$(subst /,_,$(patsubst %/,%,$(dir $@))) -Fo"$(dir $@)" -Fd"$(dir $@)vc70.pdb"'
            WIN_OTFFLAGS=' -Fd"$(basename $@).pdb"'
          else
            CFLAGS="-nologo -O2 -D_USE_MATH_DEFINES -D_CRT_SECURE_NO_DEPRECATE -O2 -MD -W1"
            WIN_DLLFLAGS=' -DBUILD_$(subst /,_,$(patsubst %/,%,$(dir $@))) -Fo"$(dir $@)"'
          fi
          CXXFLAGS="$CXXFLAGS $CFLAGS"
          WOFF=" -w0"
          SOFLAGS="-link -dll"
          NEED_SONAME=no
          LDRUN_PREFIX="-LIBPATH:"
          IS_VC="yes"
          if !test -f "$PATH_TO_VC"/bin/cl.exe; then
            PATH_TO_VC=""
            echo "invalid PATH_TO_VC"
          fi
          if !test -f "$PATH_TO_PSDK"/Include/windows.h; then
            PATH_TO_PSDK=""
            echo "invalid PATH_TO_PSDK"
          fi
          if !test -f "$PATH_TO_MSYS_BIN"/make.exe; then
            PATH_TO_MSYS_BIN=""
            echo "invalid PATH_TO_MSYS_BIN"
          fi

          if test -z "$PATH_TO_VC" -o -z "$PATH_TO_PSDK" -o -z "$PATH_TO_MSYS_BIN"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error C:/msys/1.0/bin "One of more of the required VCDIRS variables are not set. Execute
  export PATH_TO_VC=<path-to-vc>
  export PATH_TO_PSDK=<path-to-PlatformSDK>
  export PATH_TO_MSYS_BIN=<msys-bin-dir>
    Use drive letter and forward slashes (/) instead of backslashes (\)
    i.e." "$LINENO" 5

          fi



          ;;
      *g++*)
          ac_objext=o
          CFLAGS=" -Wall"
          CXXFLAGS=" -Wall"
          WIN_DLLFLAGS=' -DBUILD_$(subst /,_,$(patsubst %/,%,$(dir $@)))'

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $CC\` version 2.95.3" >&5
$as_echo_n "checking for \`basename $CC\` version 2.95.3... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $CXX\` version 2.95.3" >&5
$as_echo_n "checking for \`basename $CXX\` version 2.95.3... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi

          WOFF=" -w"
          SOFLAGS="-shared ${SOFLAGS}"
          NEED_SONAME=yes
          ;;
      esac
    ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
$as_echo_n "checking how to run the C preprocessor... " >&6; }
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if ${ac_cv_prog_CPP+:} false; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
$as_echo "$CPP" >&6; }
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details" "$LINENO" 5; }
fi

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C++ preprocessor" >&5
$as_echo_n "checking how to run the C++ preprocessor... " >&6; }
if test -z "$CXXCPP"; then
  if ${ac_cv_prog_CXXCPP+:} false; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CXXCPP needs to be expanded
    for CXXCPP in "$CXX -E" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CXXCPP=$CXXCPP

fi
  CXXCPP=$ac_cv_prog_CXXCPP
else
  ac_cv_prog_CXXCPP=$CXXCPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXXCPP" >&5
$as_echo "$CXXCPP" >&6; }
ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details" "$LINENO" 5; }
fi

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_AS+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$AS"; then
  ac_cv_prog_AS="$AS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_AS="as"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AS=$ac_cv_prog_AS
if test -n "$AS"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
$as_echo "$AS" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_LD+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$LD"; then
  ac_cv_prog_LD="$LD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_LD="ld"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
LD=$ac_cv_prog_LD
if test -n "$LD"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
$as_echo "$LD" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"
    CXXFLAGS="$CXXFLAGS $extra_cflags"

    if test "$sci_required_fortran" = "yes"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="0.5.25"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $F77\` version 0.5.25" >&5
$as_echo_n "checking for \`basename $F77\` version 0.5.25... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $F77 version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $F77 version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi

      case $F77 in
        *g77*)
          # extra_fflags has array checking if in debug mode.
          FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

          # put '_' at end and two '_'s if there is a '_' in name.
          # This flag is used by the genfspec.pl script in Uintah (generated
          # from fspec.pl.in).
          FORTRAN_UNDERSCORE=linux
          DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_LINUX"
          ;;
        *gfortran*)
          FFLAGS="$FFLAGS -fbounds-check $extra_cflags"
          FORTRAN_UNDERSCORE=linux
          DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_LINUX"
          ;;
        *)
          FFLAGS="$FFLAGS $extra_cflags"
          ;;
      esac
    fi

    ;;
  *)
    # linux
    ac_objext=o

    if test "$CC" = "icc"; then
      CFLAGS=" -w1"
      CXXFLAGS=" -w1"
    elif test "$CC" = "pgcc"; then
      # pgcc doesn't support -Wall (at least not on ranger.tacc.utexas.edu under pgcc v7.1-2)
      CFLAGS=
      CXXFLAGS=
    else
      CFLAGS=" -Wall"
      CXXFLAGS=" -Wall"
    fi

    # fPIC option for ppc architecture
    if test `uname -m` = "ppc"; then
       CFLAGS="-fPIC $CFLAGS"
       FFLAGS="-fPIC $FFLAGS"
       CXXFLAGS="-fPIC $CXXFLAGS"
    fi

    if test "$enable_64bit" = "yes"; then
       CFLAGS="-fPIC $CFLAGS"
       FFLAGS="-fPIC $FFLAGS"
       CXXFLAGS="-fPIC $CXXFLAGS"
    fi

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking if special 32/64 bits flags required" >&5
$as_echo_n "checking if special 32/64 bits flags required... " >&6; }
    if test "$enable_32bit" = "yes" -a $NBITS = 64; then
       NBITS=32
       CFLAGS="-m32 $CFLAGS"
       CXXFLAGS="-m32 $CXXFLAGS"
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: -m32" >&5
$as_echo "-m32" >&6; }
    else
      if test "$enable_64bit" = "yes" -a $NBITS = 32; then
        NBITS=64
        # Do not set this flag when using intel compilers
        if test "$CC" != "icc"; then
           CFLAGS="-m64 $CFLAGS"
           CXXFLAGS="-m64 $CXXFLAGS"
        fi
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: -m64" >&5
$as_echo "-m64" >&6; }
      else
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
      fi
    fi

    if test "$CC" != "pgcc"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $CC\` version 2.95.3" >&5
$as_echo_n "checking for \`basename $CC\` version 2.95.3... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CC version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CC version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CC --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi


      if test "$sci_required_fortran" = "yes"; then

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="0.5.25"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $F77\` version 0.5.25" >&5
$as_echo_n "checking for \`basename $F77\` version 0.5.25... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $F77 version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $F77 version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$F77 --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi

      fi

    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="2.95.3"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $CXX\` version 2.95.3" >&5
$as_echo_n "checking for \`basename $CXX\` version 2.95.3... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong $CXX version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong $CXX version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$CXX --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi

    fi
    ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor" >&5
$as_echo_n "checking how to run the C preprocessor... " >&6; }
# On Suns, sometimes $CPP names a directory.
if test -n "$CPP" && test -d "$CPP"; then
  CPP=
fi
if test -z "$CPP"; then
  if ${ac_cv_prog_CPP+:} false; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CPP needs to be expanded
    for CPP in "$CC -E" "$CC -E -traditional-cpp" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CPP=$CPP

fi
  CPP=$ac_cv_prog_CPP
else
  ac_cv_prog_CPP=$CPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CPP" >&5
$as_echo "$CPP" >&6; }
ac_preproc_ok=false
for ac_c_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_c_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "C preprocessor \"$CPP\" fails sanity check
See \`config.log' for more details" "$LINENO" 5; }
fi

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking how to run the C++ preprocessor" >&5
$as_echo_n "checking how to run the C++ preprocessor... " >&6; }
if test -z "$CXXCPP"; then
  if ${ac_cv_prog_CXXCPP+:} false; then :
  $as_echo_n "(cached) " >&6
else
      # Double quotes because CXXCPP needs to be expanded
    for CXXCPP in "$CXX -E" "/lib/cpp"
    do
      ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :
  break
fi

    done
    ac_cv_prog_CXXCPP=$CXXCPP

fi
  CXXCPP=$ac_cv_prog_CXXCPP
else
  ac_cv_prog_CXXCPP=$CXXCPP
fi
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $CXXCPP" >&5
$as_echo "$CXXCPP" >&6; }
ac_preproc_ok=false
for ac_cxx_preproc_warn_flag in '' yes
do
  # Use a header file that comes with gcc, so configuring glibc
  # with a fresh cross-compiler works.
  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since
  # <limits.h> exists even on freestanding compilers.
  # On the NeXT, cc -E runs the code through the compiler's parser,
  # not just through cpp. "Syntax error" is here to catch this case.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#ifdef __STDC__
# include <limits.h>
#else
# include <assert.h>
#endif
		     Syntax error
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :

else
  # Broken: fails on valid input.
continue
fi
rm -f conftest.err conftest.i conftest.$ac_ext

  # OK, works on sane cases.  Now check whether nonexistent headers
  # can be detected and how.
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ac_nonexistent.h>
_ACEOF
if ac_fn_cxx_try_cpp "$LINENO"; then :
  # Broken: success on invalid input.
continue
else
  # Passes both tests.
ac_preproc_ok=:
break
fi
rm -f conftest.err conftest.i conftest.$ac_ext

done
# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.
rm -f conftest.i conftest.err conftest.$ac_ext
if $ac_preproc_ok; then :

else
  { { $as_echo "$as_me:${as_lineno-$LINENO}: error: in \`$ac_pwd':" >&5
$as_echo "$as_me: error: in \`$ac_pwd':" >&2;}
as_fn_error $? "C++ preprocessor \"$CXXCPP\" fails sanity check
See \`config.log' for more details" "$LINENO" 5; }
fi

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

    # Extract the first word of "as", so it can be a program name with args.
set dummy as; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_AS+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$AS"; then
  ac_cv_prog_AS="$AS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_AS="as"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AS=$ac_cv_prog_AS
if test -n "$AS"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AS" >&5
$as_echo "$AS" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    # Extract the first word of "ld", so it can be a program name with args.
set dummy ld; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_LD+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$LD"; then
  ac_cv_prog_LD="$LD" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_LD="ld"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
LD=$ac_cv_prog_LD
if test -n "$LD"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $LD" >&5
$as_echo "$LD" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


    WOFF=" -w"
    CPPFLAGS="$CPPFLAGS $WOFF"
    CFLAGS="$CFLAGS $extra_cflags"

    case `hostname` in
      alc* | mcr*)
        # LLNL's ALC (or MCR) computer is doing something strange with its g77
        # fortran underscore policy to make it compatible with other compilers.
	# We don't need this, so this flag just turns their 'hack' off.
	{ $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Turning off ALC/MCR's fortran underscore compatibility hack." >&5
$as_echo "$as_me: WARNING: Turning off ALC/MCR's fortran underscore compatibility hack." >&2;}
        FFLAGS="$FFLAGS -funderscoring"
        ;;
    esac

    case $F77 in
      *g77*)
         # extra_fflags has array checking if in debug mode.
         FFLAGS="$FFLAGS $extra_cflags $extra_fflags"

         # put '_' at end and two '_'s if there is a '_' in name.
         # This flag is used by the genfspec.pl script in Uintah (generated
         # from fspec.pl.in).
	 FORTRAN_UNDERSCORE=linux
         DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_LINUX"
         ;;
      *gfortran*)
         FFLAGS="$FFLAGS -fbounds-check $extra_cflags"
         FORTRAN_UNDERSCORE=end
         DEF_FORTRAN_UNDERSCORE="#define FORTRAN_UNDERSCORE_END"
         ;;
      *)
         FFLAGS="$FFLAGS $extra_cflags"
         ;;
    esac

    CXXFLAGS="$CXXFLAGS $extra_cflags"
    NEED_SONAME=yes
    ;;
esac

OBJEXT=$ac_objext





# now that we know which NBITS the user wants, we can save this info

sci_defs_files="$sci_defs_files include/sci_defs/bits_testdefs.h"

###




rm -f configure-test.*
rm -rf configure-test-dir
mkdir configure-test-dir
echo "#include <stdio.h>" > configure-test-dir/configure-test.cc

# Try to automatically determine these three things
# One of twopass, move or normal
CC_DEPEND_MODE=unknown
# Compiler-specific flag
CC_DEPEND_REGEN=unknown
# Filename extension
CC_DEPEND_EXT=unknown

# Try -MDupdate
for flag in -MDupdate; do
  if test $CC_DEPEND_MODE = unknown; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking 1 - if depend mode flag '$flag' works for '$CXX'" >&5
$as_echo_n "checking 1 - if depend mode flag '$flag' works for '$CXX'... " >&6; }
    rm -f configure-test.o configure-test-dir/configure-test.o

echo "here: $ac_try"
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.d -o configure-test-dir/configure-test.o configure-test-dir/configure-test.cc"
    (eval $ac_try)
echo "done"
echo "-----------------------------------------------"
    if test -f configure-test-dir/configure-test.d ; then
      CC_DEPEND_MODE=normal
      CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
      CC_DEPEND_EXT=depend.mk
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no " >&5
$as_echo "no " >&6; }
      echo ""
#      echo "ac_try: $ac_try"   # <= Turn on to debug DEPEND flag issues...
#      echo ""
#      echo "Test results: "
#      echo ""
#      cat conftest.out
#      echo ""
    fi
  fi
done

# Because xlC ignores anything after the -M (ie: -Mgarbage or -Mupdate
# is the same as -M) and creates a .u file anyway, to make the
# following test work, we need to get rid of the .u file and carry on:
rm -f configure-test-dir/configure-test.u

# Try -MD or -M
if test $CC_DEPEND_MODE = unknown; then
  for flag in -MD -M; do
    for ext in d u o.d; do
      { $as_echo "$as_me:${as_lineno-$LINENO}: checking 2 - if depend mode flag '$flag' works " >&5
$as_echo_n "checking 2 - if depend mode flag '$flag' works ... " >&6; }
      rm -f configure-test.o configure-test-dir/configure-test.o
      ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc -o configure-test-dir/configure-test.o >/dev/null 2>conftest.out"
      (eval $ac_try) 2>&5
      if test -f configure-test-dir/configure-test.$ext ; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=normal
          break 2
        elif grep "^configure-test.o" configure-test-dir/configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify
          break 2
        fi
      fi
      if test -f configure-test.$ext; then
	CC_DEPEND_REGEN=$flag
	CC_DEPEND_EXT=$ext
        if grep "^configure-test-dir/configure-test.o" configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=move
        elif grep "^configure-test.o" configure-test.$ext > /dev/null; then
          CC_DEPEND_MODE=modify_and_move
        fi
        break 2
      fi
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no " >&5
$as_echo "no " >&6; }
    done
  done
fi

# Last resort, try one that spits out to stdout
if test $CC_DEPEND_MODE = unknown; then
  for flag in -M; do
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking 3 - if depend mode flag '$flag' works " >&5
$as_echo_n "checking 3 - if depend mode flag '$flag' works ... " >&6; }
    rm -f configure-test.o configure-test-dir/configure-test.o
    ac_try="$CXX $CFLAGS -c $flag configure-test-dir/configure-test.cc >configure-test-dir/configure-test.d 2>conftest.out"
    (eval $ac_try) 2>&5
    if test -s configure-test-dir/configure-test.d ; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: stdout " >&5
$as_echo "stdout " >&6; }
      CC_DEPEND_MODE=stdout
      CC_DEPEND_REGEN=$flag
      CC_DEPEND_EXT=d
      break
    fi
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: no " >&5
$as_echo "no " >&6; }
  done
fi

if test $IS_WIN = "yes"; then
  # for the moment, don't gen deps on win32
  CC_DEPEND_MODE=normal
  CC_DEPEND_REGEN=""
  CC_DEPEND_EXT=""
fi

if test $CC_DEPEND_MODE = unknown; then
  as_fn_error $? "Cannot determine dependency generation flag. You might have specified bad '--enable-optimize=' flags on your configure line" "$LINENO" 5
fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes.  Mode: $CC_DEPEND_MODE.  Ext: $CC_DEPEND_EXT" >&5
$as_echo "yes.  Mode: $CC_DEPEND_MODE.  Ext: $CC_DEPEND_EXT" >&6; }
rm -f configure-test.*
rm -rf configure-test-dir

if test `basename "$F77"` = "pgf77"; then
  F77_DEPEND_REGEN=-Mcpp=mm
  F77_DEPEND_MODE=stdout
  F77_DEPEND_EXT=d
else
  F77_DEPEND_REGEN=$CC_DEPEND_REGEN
  F77_DEPEND_MODE=$CC_DEPEND_MODE
  F77_DEPEND_EXT=$CC_DEPEND_EXT
fi








# Other programs
if test "$IS_WIN" = "yes"; then
  # Extract the first word of "make", so it can be a program name with args.
set dummy make; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_MAKE+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$MAKE"; then
  ac_cv_prog_MAKE="$MAKE" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_MAKE="make"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_prog_MAKE" && ac_cv_prog_MAKE="NOT_FOUND"
fi
fi
MAKE=$ac_cv_prog_MAKE
if test -n "$MAKE"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAKE" >&5
$as_echo "$MAKE" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


else
  # Extract the first word of "gmake", so it can be a program name with args.
set dummy gmake; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_path_GMAKE+:} false; then :
  $as_echo_n "(cached) " >&6
else
  case $GMAKE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_GMAKE="$GMAKE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_GMAKE="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_GMAKE" && ac_cv_path_GMAKE="NOT_FOUND"
  ;;
esac
fi
GMAKE=$ac_cv_path_GMAKE
if test -n "$GMAKE"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $GMAKE" >&5
$as_echo "$GMAKE" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  if test "$GMAKE" = "NOT_FOUND"; then
    # Extract the first word of "make", so it can be a program name with args.
set dummy make; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_path_MAKE+:} false; then :
  $as_echo_n "(cached) " >&6
else
  case $MAKE in
  [\\/]* | ?:[\\/]*)
  ac_cv_path_MAKE="$MAKE" # Let the user override the test with a path.
  ;;
  *)
  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_path_MAKE="$as_dir/$ac_word$ac_exec_ext"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_path_MAKE" && ac_cv_path_MAKE="NOT_FOUND"
  ;;
esac
fi
MAKE=$ac_cv_path_MAKE
if test -n "$MAKE"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $MAKE" >&5
$as_echo "$MAKE" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  else
    MAKE=$GMAKE
  fi
fi
if test "$MAKE" = "NOT_FOUND"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "GNU make not found." "$LINENO" 5

fi


sci_defs_files="$sci_defs_files include/sci_defs/compile_testdefs.h"


    ##  SCI_CHECK_VERSION
    _SCI_CORRECT_='echo $echo_n "$echo_c"'
    _SCI_NOTCORRECT_='echo $echo_n "$echo_c"'
    _SCI_VER_1_="0"
    _SCI_VER_2_="3.78.1"
    _CUR_1_=""
    _CUR_2_=""

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for \`basename $MAKE\` version 3.78.1" >&5
$as_echo_n "checking for \`basename $MAKE\` version 3.78.1... " >&6; }

    if test ""; then
      _SCI_CORRECT_=''
    fi

    if test "echo configure: error: wrong GNU make version.; exit"; then
      _SCI_NOTCORRECT_='echo configure: error: wrong GNU make version.; exit'
    fi

    if test ""; then
      _SCI_COMP_=""
    else
      _SCI_COMP_="-gt"
    fi

    eval "$MAKE --version 2> conftest.out >> conftest.out"
    _SCI_REPORT_="`cat conftest.out | head -n 1 | sed 's%[^0-9\. ]*%%g;s%^ *%%' | cut -f1 -d' ' `"
    _SCI_VER_1_="$_SCI_REPORT_"

    _SCI_BIGGER_=yes
    _SCI_LAST_=""
    while test "$_SCI_VER_2_"; do
      if test "$_SCI_LAST_" = "$_SCI_VER_2_"; then
        break
      fi
      _SCI_LAST_="$_SCI_VER_2_"
      _CUR_1_=`echo $_SCI_VER_1_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_1_=`echo $_SCI_VER_1_ | sed 's%[0-9]*[a-z]*\.%%'`
      _CUR_2_=`echo $_SCI_VER_2_ | sed 's%\.[0-9]*[a-z]*%%g'`
      _SCI_VER_2_=`echo $_SCI_VER_2_ | sed 's%[0-9]*[a-z]*\.%%'`
      if test "$_CUR_2_" $_SCI_COMP_ "$_CUR_1_"; then
        _SCI_BIGGER_=no
        break
      elif test $_CUR_1_ -gt $_CUR_2_; then
        break
      fi
    done

    if test "$_SCI_BIGGER_" = "yes"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes ($_SCI_REPORT_)" >&5
$as_echo "yes ($_SCI_REPORT_)" >&6; }
      eval $_SCI_CORRECT_
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: result: no ($_SCI_REPORT_)" >&5
$as_echo "no ($_SCI_REPORT_)" >&6; }
      eval $_SCI_NOTCORRECT_
    fi


for ac_prog in gawk mawk nawk awk
do
  # Extract the first word of "$ac_prog", so it can be a program name with args.
set dummy $ac_prog; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_AWK+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$AWK"; then
  ac_cv_prog_AWK="$AWK" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_AWK="$ac_prog"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
AWK=$ac_cv_prog_AWK
if test -n "$AWK"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $AWK" >&5
$as_echo "$AWK" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


  test -n "$AWK" && break
done


## ignore some software tests on windows (for now at least)
if test "$IS_WIN" = "yes"; then
  echo "skipping bison, lex, etags, perl tests"
else

# Extract the first word of "etags", so it can be a program name with args.
set dummy etags; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_ETAGS+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$ETAGS"; then
  ac_cv_prog_ETAGS="$ETAGS" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_ETAGS="etags"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
ETAGS=$ac_cv_prog_ETAGS
if test -n "$ETAGS"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $ETAGS" >&5
$as_echo "$ETAGS" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi



if test "$sci_required_perl" = "yes" ; then
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_PERL+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_PERL="perl"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

  test -z "$ac_cv_prog_PERL" && ac_cv_prog_PERL="echo configure: error: perl was not found in your PATH.;exit"
fi
fi
PERL=$ac_cv_prog_PERL
if test -n "$PERL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PERL" >&5
$as_echo "$PERL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


else
  # Extract the first word of "perl", so it can be a program name with args.
set dummy perl; ac_word=$2
{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $ac_word" >&5
$as_echo_n "checking for $ac_word... " >&6; }
if ${ac_cv_prog_PERL+:} false; then :
  $as_echo_n "(cached) " >&6
else
  if test -n "$PERL"; then
  ac_cv_prog_PERL="$PERL" # Let the user override the test.
else
as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    for ac_exec_ext in '' $ac_executable_extensions; do
  if { test -f "$as_dir/$ac_word$ac_exec_ext" && $as_test_x "$as_dir/$ac_word$ac_exec_ext"; }; then
    ac_cv_prog_PERL="perl"
    $as_echo "$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext" >&5
    break 2
  fi
done
  done
IFS=$as_save_IFS

fi
fi
PERL=$ac_cv_prog_PERL
if test -n "$PERL"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $PERL" >&5
$as_echo "$PERL" >&6; }
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: no" >&5
$as_echo "no" >&6; }
fi


fi

if test "$PERL" = "perl"; then
  PERL=`type perl | sed 's%^.* %%'`
fi

fi # end if IS_WIN = yes

##  Create the tools dir for later use.
if test "$sci_required_tools" = "yes" ; then
  if test ! -d "tools"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: Creating tools directory" >&5
$as_echo "Creating tools directory" >&6; }
    mkdir -p "tools"
  fi
  if test "$ac_cv_f77_compiler_gnu" = "yes" ; then
     G77=1
  else
     G77=0
  fi
fi

if test "$with_fortran" != no; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking fortran underscore policy" >&5
$as_echo_n "checking fortran underscore policy... " >&6; }
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: $FORTRAN_UNDERSCORE" >&5
$as_echo "$FORTRAN_UNDERSCORE" >&6; }
fi






















sci_defs_files="$sci_defs_files include/sci_defs/template_testdefs.h"

##  set the default language after the build tools are found
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu



#########################################################################
##  Set the no_optimize_flag
##

case $host in
  *linux*)
    no_optimize_flag=-O0
    ;;
  *-aix*)

    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: AIX is not completely supported!" >&5
$as_echo "$as_me: WARNING: AIX is not completely supported!" >&2;}
    no_optimize_flag=-O0
    case $CXX in
      *xlC*)
         # xlC does not know the -O0 flag.
         no_optimize_flag=""
	 ;;
      *KCC*)
         ;;
      *g++*)
	 ;;
      *)
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Do not know this compiler." >&5
$as_echo "$as_me: WARNING: Do not know this compiler." >&2;}
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Defaulting to -O0 for the no optimize flag." >&5
$as_echo "$as_me: WARNING: Defaulting to -O0 for the no optimize flag." >&2;}
         ;;
    esac
    ;;
  *)
    ;;
esac


##  ----------------------------------------------------------------------

ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

# Each of the HAVE_??? statements for these header files is found
# in include/sci_defs/config_testedefs.h


for ac_header in limits.h sys/select.h unistd.h sys/time.h ext/algorithm stdint.h inttypes.h
do :
  as_ac_Header=`$as_echo "ac_cv_header_$ac_header" | $as_tr_sh`
ac_fn_cxx_check_header_mongrel "$LINENO" "$ac_header" "$as_ac_Header" "$ac_includes_default"
if eval test \"x\$"$as_ac_Header"\" = x"yes"; then :
  cat >>confdefs.h <<_ACEOF
#define `$as_echo "HAVE_$ac_header" | $as_tr_cpp` 1
_ACEOF

fi

done


ac_config_headers="$ac_config_headers include/sci_defs/config_testdefs.h"

sci_defs_files="$sci_defs_files include/sci_defs/config_testdefs.h"

##  ----------------------------------------------------------------------
##  ----------  required checks for required libraries and headers  ------
##  ----------------------------------------------------------------------

##  --  search for the math library  -------------------------------------
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


if test "$IS_VC" = "yes"; then
  M_LIB=""
else
  M_LIB=m
fi

##
## SCI_TRY_LINK (M):  math libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : M
## arg 2 : math libraries and headers
## arg 3 : math.h
## arg 4 :
## arg 5 : $M_LIB
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      M_LIB_DIR        => lib path
##      M_LIB_DIR_FLAG   => all the -L's
##      M_LIB_FLAG       => all the -l's
##      HAVE_M           => yes or no
##      INC_M_H          => all the -I's
##      HAVE_M_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for math libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for math libraries and headers (required)" >&5
$as_echo_n "checking for math libraries and headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for math libraries and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "$M_LIB"; then

   found_framework=no
   for lib in $M_LIB; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of M check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of M check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of M check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of M check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for M only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for M only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" math.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  double d = fabs(69.05);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval M_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval M_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval M_LIB_FLAG="'$final_libs'"
eval HAVE_M="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_M_H="'$final_incs'"
eval HAVE_M_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval M_LIB_DIR=''
eval M_LIB_DIR_FLAG=''
eval M_LIB_FLAG=''
eval HAVE_M="no"
eval INC_M_H=''
eval HAVE_M_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required M failed.
    To see the failed compile information, look in config.log,
    search for M. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" math.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested M include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" $M_LIB; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested M library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (M):  math libraries and headers
##






##  --  check for the 'rt' library  ---------------------------


##
## SCI_TRY_LINK (RT):  rt library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : RT
## arg 2 : rt library
## arg 3 :
## arg 4 :
## arg 5 : rt
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      RT_LIB_DIR        => lib path
##      RT_LIB_DIR_FLAG   => all the -L's
##      RT_LIB_FLAG       => all the -l's
##      HAVE_RT           => yes or no
##      INC_RT_H          => all the -I's
##      HAVE_RT_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for rt library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for rt library (optional)" >&5
$as_echo_n "checking for rt library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for rt library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "rt"; then

   found_framework=no
   for lib in rt; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of RT check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of RT check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of RT check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of RT check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for RT only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for RT only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval RT_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval RT_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval RT_LIB_FLAG="'$final_libs'"
eval HAVE_RT="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_RT_H="'$final_incs'"
eval HAVE_RT_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval RT_LIB_DIR=''
eval RT_LIB_DIR_FLAG=''
eval RT_LIB_FLAG=''
eval HAVE_RT="no"
eval INC_RT_H=''
eval HAVE_RT_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required RT failed.
    To see the failed compile information, look in config.log,
    search for RT. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested RT include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" rt; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested RT library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (RT):  rt library
##




MPI_EXTRA_LIB_FLAG="$MPI_EXTRA_LIB_FLAG $RT_LIB_FLAG"

##  --  check for the required thread library  ---------------------------

SOCKET_LIBRARY=""

case $host in
  *-pc-mingw*)
    threads=win32
    if test $IS_VC = "yes"; then
      SOCKET_LIB_FLAG="ws2_32.lib"
    else
      SOCKET_LIB_FLAG="-lws2_32"
    fi
    ;;
  *)
    if test "$threads" = "unknown"; then
      threads=pthreads
    elif test "$threads" != "pthreads" -a "$threads" != "none"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "unknown thread type for host $host: $threads. exiting." "$LINENO" 5

    fi
    ;;
esac

case $threads in
   pthreads)

##
## SCI_TRY_LINK (PTHREAD):  pthread library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PTHREAD
## arg 2 : pthread library and headers
## arg 3 : pthread.h semaphore.h
## arg 4 :
## arg 5 : pthread
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PTHREAD_LIB_DIR        => lib path
##      PTHREAD_LIB_DIR_FLAG   => all the -L's
##      PTHREAD_LIB_FLAG       => all the -l's
##      HAVE_PTHREAD           => yes or no
##      INC_PTHREAD_H          => all the -I's
##      HAVE_PTHREAD_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for pthread library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for pthread library and headers (required)" >&5
$as_echo_n "checking for pthread library and headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for pthread library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "pthread"; then

   found_framework=no
   for lib in pthread; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PTHREAD check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PTHREAD check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PTHREAD check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PTHREAD check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PTHREAD only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PTHREAD only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" pthread.h semaphore.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PTHREAD_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PTHREAD_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PTHREAD_LIB_FLAG="'$final_libs'"
eval HAVE_PTHREAD="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PTHREAD_H="'$final_incs'"
eval HAVE_PTHREAD_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PTHREAD_LIB_DIR=''
eval PTHREAD_LIB_DIR_FLAG=''
eval PTHREAD_LIB_FLAG=''
eval HAVE_PTHREAD="no"
eval INC_PTHREAD_H=''
eval HAVE_PTHREAD_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PTHREAD failed.
    To see the failed compile information, look in config.log,
    search for PTHREAD. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" pthread.h semaphore.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested PTHREAD include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" pthread; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested PTHREAD library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PTHREAD):  pthread library and headers
##



      if test "$HAVE_PTHREAD" = "yes"; then
        THREAD_LIB_FLAG="$PTHREAD_LIB_FLAG"
        DEF_THREAD="#define SCI_PTHREAD 1"
      fi

      { $as_echo "$as_me:${as_lineno-$LINENO}: checking for semaphore library" >&5
$as_echo_n "checking for semaphore library... " >&6; }
      old_LIBS="$LIBS"
      SEMAPHORE_LIB_FLAG=unknown
      for i in "" "$THREAD_LIB_FLAG" $RT_LIB_FLAG; do
        LIBS="$old_LIBS $i"
        cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */

#include <semaphore.h>

int
main ()
{

    sem_t sem;
    sem_init(&sem, 0, 0);
    sem_post(&sem);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :

         SEMAPHORE_LIB_FLAG=$i
         break

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext
      done
      if test "$SEMPAPHORE_LIB_FLAG" = unknown; then
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
        as_fn_error $? "semaphore library(sem_post, sem_wait, etc) needed for pthreads" "$LINENO" 5
      else
        if test "$SEMAPHORE_LIB_FLAG" = "$THREAD_LIB_FLAG"; then
          { $as_echo "$as_me:${as_lineno-$LINENO}: result: already in thread library: $THREAD_LIB_FLAG" >&5
$as_echo "already in thread library: $THREAD_LIB_FLAG" >&6; }
          SEMAPHORE_LIB_FLAG=""
        elif test "$SEMAPHORE_LIB_FLAG"; then
          { $as_echo "$as_me:${as_lineno-$LINENO}: result: $SEMAPHORE_LIB_FLAG" >&5
$as_echo "$SEMAPHORE_LIB_FLAG" >&6; }
        else
          { $as_echo "$as_me:${as_lineno-$LINENO}: result: none required" >&5
$as_echo "none required" >&6; }
        fi
      fi
      LIBS="$old_LIBS"
      ;;
   none)
      DEF_THREAD="#define SCI_NOTHREAD 1"
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: threads disabled - software may work incorrectly" >&5
$as_echo "$as_me: WARNING: threads disabled - software may work incorrectly" >&2;}
      ;;
   win32)
     # for time functions in windows
     DEF_THREAD=
     if test $IS_VC = "yes"; then
       THREAD_LIB_FLAG=winmm.lib
     else
       THREAD_LIB_FLAG=-lwinmm
     fi
     ;;
   *)

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "unknown thread type for host $host: $threads. exiting." "$LINENO" 5

      ;;
esac

THREAD_IMPL="Thread_$threads.cc"





sci_defs_files="$sci_defs_files include/sci_defs/thread_testdefs.h"





##  --  Enable VisIt -----------------------------

if test "$with_visit"; then

   { $as_echo "$as_me:${as_lineno-$LINENO}: checking for VisIt" >&5
$as_echo_n "checking for VisIt... " >&6; }

   which cmake > /dev/null 2>&1
   if test $? != 0; then
      as_fn_error $? "VisIt requires CMake. Please make sure 'cmake' is in your path!" "$LINENO" 5
   fi

   if test "$with_visit" = "yes"; then
      as_fn_error $? "You must provide a DIRECTORY when using --with-visit=DIR. " "$LINENO" 5
   fi
   if ! test -f "$with_visit/bin/xml2cmake"; then
      as_fn_error $? "Could not find xml2cmake in $with_visit/bin/... " "$LINENO" 5
   fi

   if test -f "./VisIt/udaReaderMTMD/Makefile.visit"; then
      old_visit_dir=`grep TOPDIR ./VisIt/udaReaderMTMD/Makefile.visit`
      if test "$old_visit_dir" != "TOPDIR=$with_visit/src"; then
      	 { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: VisIt target directory has changed - removing old VisIt build directory..." >&5
$as_echo "$as_me: WARNING: VisIt target directory has changed - removing old VisIt build directory..." >&2;}
	 rm -rf ./VisIt
      fi
   fi

   CMAKE_LOCATION=`which cmake`

   # Verify that cmake is new enough:
   #
   # Need this ugly hack to handle different types of version strings returned by cmake's different versions... sigh.
   # The first 'sed' removes all alphabetical characters (leaves numbers, spaces, and periods).  The second 'sed'
   # removes leading and trailing space.  The final 'sed' replaces (potential) spaces with a perions (.).
   # Eg: The version string from cmake 2.4.8 is 'cmake version 2.4-patch 8'.
   # Note: autoconf removes one set of [], thus the below sed commands have one extra set of [] around each portion.
   CMAKE_VERSION_STRING=`cmake --version | sed 's/[^0-9. ]//g' | sed 's/^[[:space:]]*\(.*\)[[:space:]]*$/\1/' | sed 's/ /./g'`

   CMAKE_VERSION_MAJOR=`echo "$CMAKE_VERSION_STRING" | awk -F. '{print $1}'`
   CMAKE_VERSION_MINOR=`echo "$CMAKE_VERSION_STRING" | awk -F. '{print $2}'`

   if   test "$CMAKE_VERSION_MAJOR" -ge 3; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Have not tried using cmake v3.x... It might work..." >&5
$as_echo "$as_me: WARNING: Have not tried using cmake v3.x... It might work..." >&2;}
   elif test "$CMAKE_VERSION_MAJOR" -lt 2; then
      as_fn_error $? "CMake must be version 2.8 or better.  $CMAKE_LOCATION is version $CMAKE_VERSION_STRING." "$LINENO" 5
   elif test "$CMAKE_VERSION_MINOR" -lt 8; then
      as_fn_error $? "CMake must be version 2.8 or better.  $CMAKE_LOCATION is version $CMAKE_VERSION_STRING." "$LINENO" 5
   fi

   sci_defs_files="$sci_defs_files VisIt/udaReaderMTMD/avtudaReaderMTMDFileFormat.C"

   BUILD_VISIT=yes
   UINTAH_UDA_TO_VIS_LIB=`pwd`/lib/libStandAlone_tools_uda2vis.$SO_OR_ARCHIVE_EXTENSION
   VISIT_INSTALL_DIR=$with_visit
   { $as_echo "$as_me:${as_lineno-$LINENO}: result: found" >&5
$as_echo "found" >&6; }
fi





##  --  search for OFED (Infiniband Drivers) -----------------------------

if test "$with_ofed"; then

   if test "$with_ofed" = "yes"; then
      as_fn_error $? "You must specify a directory with the '--with-ofed=DIR' option! " "$LINENO" 5
   else
      dir="$with_ofed"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$dir/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$dir/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$dir/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$dir/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$dir/lib
    fi
  fi
  eval dir='"$_new_lib_path"'



##
## SCI_TRY_LINK (OFED):  Infiniband stuff (for MPI)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : OFED
## arg 2 : Infiniband stuff (for MPI)
## arg 3 :
## arg 4 :
## arg 5 : ibverbs ibumad rdmacm pthread
## arg 6 : $dir
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      OFED_LIB_DIR        => lib path
##      OFED_LIB_DIR_FLAG   => all the -L's
##      OFED_LIB_FLAG       => all the -l's
##      HAVE_OFED           => yes or no
##      INC_OFED_H          => all the -I's
##      HAVE_OFED_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for Infiniband stuff (for MPI).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Infiniband stuff (for MPI) (required)" >&5
$as_echo_n "checking for Infiniband stuff (for MPI) (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for Infiniband stuff (for MPI) must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "ibverbs ibumad rdmacm pthread"; then

   found_framework=no
   for lib in ibverbs ibumad rdmacm pthread; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of OFED check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of OFED check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$dir"; then

   for path in $dir; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of OFED check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of OFED check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for OFED only one library path may be specified for arg 6 (you had: $dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for OFED only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval OFED_LIB_DIR='"$dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval OFED_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval OFED_LIB_FLAG="'$final_libs'"
eval HAVE_OFED="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_OFED_H="'$final_incs'"
eval HAVE_OFED_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval OFED_LIB_DIR=''
eval OFED_LIB_DIR_FLAG=''
eval OFED_LIB_FLAG=''
eval HAVE_OFED="no"
eval INC_OFED_H=''
eval HAVE_OFED_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required OFED failed.
    To see the failed compile information, look in config.log,
    search for OFED. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested OFED include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ibverbs ibumad rdmacm pthread; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $dir/lib$i.so && test ! -e $dir/lib$i.a && test ! -e $dir/$i.lib; then
     as_fn_error $? "Specifically requested OFED library file '$dir/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (OFED):  Infiniband stuff (for MPI)
##


      MPI_EXTRA_LIB_FLAG="$MPI_EXTRA_LIB_FLAG $OFED_LIB_FLAG"
      MPI_EXTRA_LIB_DIR="$MPI_EXTRA_LIB_DIR $OFED_LIB_DIR"
   fi
fi

##  --  search for MX (myrinet drivers) -----------------------------

if test "$with_mx"; then

   if test "$with_mx" = "yes"; then
      as_fn_error $? "You must specify a directory with the '--with-mx=DIR' option! " "$LINENO" 5
   else
      dir="$with_mx"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$dir/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$dir/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$dir/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$dir/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$dir/lib
    fi
  fi
  eval dir='"$_new_lib_path"'



##
## SCI_TRY_LINK (MX):  Myrinet stuff (for MPI)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MX
## arg 2 : Myrinet stuff (for MPI)
## arg 3 :
## arg 4 :
## arg 5 : myriexpress
## arg 6 : $dir
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MX_LIB_DIR        => lib path
##      MX_LIB_DIR_FLAG   => all the -L's
##      MX_LIB_FLAG       => all the -l's
##      HAVE_MX           => yes or no
##      INC_MX_H          => all the -I's
##      HAVE_MX_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for Myrinet stuff (for MPI).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Myrinet stuff (for MPI) (required)" >&5
$as_echo_n "checking for Myrinet stuff (for MPI) (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for Myrinet stuff (for MPI) must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "myriexpress"; then

   found_framework=no
   for lib in myriexpress; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MX check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MX check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$dir"; then

   for path in $dir; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MX check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MX check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MX only one library path may be specified for arg 6 (you had: $dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MX only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MX_LIB_DIR='"$dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MX_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MX_LIB_FLAG="'$final_libs'"
eval HAVE_MX="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MX_H="'$final_incs'"
eval HAVE_MX_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MX_LIB_DIR=''
eval MX_LIB_DIR_FLAG=''
eval MX_LIB_FLAG=''
eval HAVE_MX="no"
eval INC_MX_H=''
eval HAVE_MX_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MX failed.
    To see the failed compile information, look in config.log,
    search for MX. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested MX include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" myriexpress; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $dir/lib$i.so && test ! -e $dir/lib$i.a && test ! -e $dir/$i.lib; then
     as_fn_error $? "Specifically requested MX library file '$dir/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MX):  Myrinet stuff (for MPI)
##


      MPI_EXTRA_LIB_FLAG="$MPI_EXTRA_LIB_FLAG $MX_LIB_FLAG"
      MPI_EXTRA_LIB_DIR="$MPI_EXTRA_LIB_DIR $MX_LIB_DIR"
   fi
fi


##  --  search for dlopen  -----------------------------------------------

##
## SCI_TRY_LINK (DL):  dlopen in libc
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libc
## arg 3 : dlfcn.h
## arg 4 :
## arg 5 : c
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      DL_LIB_DIR        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libc.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in libc (optional)" >&5
$as_echo_n "checking for dlopen in libc (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for dlopen in libc must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "c"; then

   found_framework=no
   for lib in c; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval DL_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval DL_LIB_DIR=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested DL include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested DL library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libc
##



if test "$HAVE_DL" = "yes"; then
   HAVE_LIB_DL="yes"
else
  case $host in
  *-darwin*)

##
## SCI_TRY_LINK (DL):  dlopen in libdl
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libdl
## arg 3 : dlfcn.h
## arg 4 : $sci_thirdparty_include
## arg 5 : dl
## arg 6 : $sci_thirdparty_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      DL_LIB_DIR        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in libdl (required)" >&5
$as_echo_n "checking for dlopen in libdl (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $sci_thirdparty_include (the -I paths) is blank, do nothing, else do the for statement.

for inc in $sci_thirdparty_include; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for DL include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($sci_thirdparty_include) of DL check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($sci_thirdparty_include) of DL check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "dl"; then

   found_framework=no
   for lib in dl; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$sci_thirdparty_lib"; then

   for path in $sci_thirdparty_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $sci_thirdparty_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $sci_thirdparty_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: $sci_thirdparty_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $sci_thirdparty_include
  __sci_pass=false
  __sci_first_time=true
  for value in "" $sci_thirdparty_include; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$sci_thirdparty_include" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: $sci_thirdparty_include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

      dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval DL_LIB_DIR='"$sci_thirdparty_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval DL_LIB_DIR=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for $sci_thirdparty_include/$i
    if test ! -e $sci_thirdparty_include/$i; then
     as_fn_error $? "Specifically requested DL include file '$sci_thirdparty_include/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" dl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $sci_thirdparty_lib/lib$i.so && test ! -e $sci_thirdparty_lib/lib$i.a && test ! -e $sci_thirdparty_lib/$i.lib; then
     as_fn_error $? "Specifically requested DL library file '$sci_thirdparty_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libdl
##


    ;;
  *-pc-mingw*)
    echo "Using Windows dynamic loader"
    DL_LIB_FLAG=""
    DL_LIB_DIR_FLAG=""
    ;;
  *)

##
## SCI_TRY_LINK (DL):  dlopen in libdl
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : DL
## arg 2 : dlopen in libdl
## arg 3 : dlfcn.h
## arg 4 :
## arg 5 : dl
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      DL_LIB_DIR        => lib path
##      DL_LIB_DIR_FLAG   => all the -L's
##      DL_LIB_FLAG       => all the -l's
##      HAVE_DL           => yes or no
##      INC_DL_H          => all the -I's
##      HAVE_DL_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for dlopen in libdl.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for dlopen in libdl (required)" >&5
$as_echo_n "checking for dlopen in libdl (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for dlopen in libdl must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "dl"; then

   found_framework=no
   for lib in dl; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of DL check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of DL check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for DL only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" dlfcn.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

      dlopen("bogus", 0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval DL_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval DL_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval DL_LIB_FLAG="'$final_libs'"
eval HAVE_DL="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_DL_H="'$final_incs'"
eval HAVE_DL_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval DL_LIB_DIR=''
eval DL_LIB_DIR_FLAG=''
eval DL_LIB_FLAG=''
eval HAVE_DL="no"
eval INC_DL_H=''
eval HAVE_DL_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required DL failed.
    To see the failed compile information, look in config.log,
    search for DL. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" dlfcn.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested DL include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" dl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested DL library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (DL):  dlopen in libdl
##


    ;;
  esac
fi




##  --  search for required headers  --------------------------------------

##  --  optional stat64 headers
# stat64 is a CC lib so it has to be checked as a CC file not C.
ext="$ac_ext"
ac_ext="cc"


##
## SCI_TRY_LINK (STAT64):  sys/stat.h
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STAT64
## arg 2 : sys/stat.h
## arg 3 : sys/stat.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      STAT64_LIB_DIR        => lib path
##      STAT64_LIB_DIR_FLAG   => all the -L's
##      STAT64_LIB_FLAG       => all the -l's
##      HAVE_STAT64           => yes or no
##      INC_STAT64_H          => all the -I's
##      HAVE_STAT64_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for sys/stat.h.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sys/stat.h (optional)" >&5
$as_echo_n "checking for sys/stat.h (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for sys/stat.h must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of STAT64 check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STAT64 check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of STAT64 check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STAT64 check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STAT64 only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STAT64 only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" sys/stat.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  struct stat64 buf;

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval STAT64_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STAT64_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STAT64_LIB_FLAG="'$final_libs'"
eval HAVE_STAT64="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STAT64_H="'$final_incs'"
eval HAVE_STAT64_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval STAT64_LIB_DIR=''
eval STAT64_LIB_DIR_FLAG=''
eval STAT64_LIB_FLAG=''
eval HAVE_STAT64="no"
eval INC_STAT64_H=''
eval HAVE_STAT64_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required STAT64 failed.
    To see the failed compile information, look in config.log,
    search for STAT64. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" sys/stat.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested STAT64 include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested STAT64 library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STAT64):  sys/stat.h
##



# Restore the previous settings.
ac_ext="$ext"

if test "$HAVE_STAT64" = "yes"; then
  DEF_STAT64="#define HAVE_STAT64 1"
fi


sci_defs_files="$sci_defs_files include/sci_defs/stat64_testdefs.h"

##  --  required standard headers

##
## SCI_TRY_LINK (STD_HDRS):  standard headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers
## arg 3 : stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h ctype.h signal.h locale.h assert.h sys/types.h sys/stat.h sys/timeb.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      STD_HDRS_LIB_DIR        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for standard headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for standard headers (required)" >&5
$as_echo_n "checking for standard headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for standard headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h ctype.h signal.h locale.h assert.h sys/types.h sys/stat.h sys/timeb.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval STD_HDRS_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval STD_HDRS_LIB_DIR=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" stdio.h stdlib.h stddef.h stdarg.h string.h limits.h errno.h fcntl.h float.h memory.h ctype.h signal.h locale.h assert.h sys/types.h sys/stat.h sys/timeb.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested STD_HDRS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested STD_HDRS library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers
##



# don't test for malloc.h or values.h on darwin
# don't test a bunch of then on win32
case $host in
  *-darwin*)

##
## SCI_TRY_LINK (STD_HDRS):  standard headers-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers-2
## arg 3 : unistd.h dirent.h sys/time.h sys/param.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      STD_HDRS_LIB_DIR        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for standard headers-2 (required)" >&5
$as_echo_n "checking for standard headers-2 (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" unistd.h dirent.h sys/time.h sys/param.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval STD_HDRS_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval STD_HDRS_LIB_DIR=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" unistd.h dirent.h sys/time.h sys/param.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested STD_HDRS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested STD_HDRS library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers-2
##


    ;;
  *-pc-mingw*)
    ;;

  *)
    # default system headers that cannot be tested on all systems

##
## SCI_TRY_LINK (STD_HDRS):  standard headers-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STD_HDRS
## arg 2 : standard headers-2
## arg 3 : unistd.h dirent.h sys/time.h sys/param.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      STD_HDRS_LIB_DIR        => lib path
##      STD_HDRS_LIB_DIR_FLAG   => all the -L's
##      STD_HDRS_LIB_FLAG       => all the -l's
##      HAVE_STD_HDRS           => yes or no
##      INC_STD_HDRS_H          => all the -I's
##      HAVE_STD_HDRS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for standard headers-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for standard headers-2 (required)" >&5
$as_echo_n "checking for standard headers-2 (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for standard headers-2 must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STD_HDRS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STD_HDRS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STD_HDRS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" unistd.h dirent.h sys/time.h sys/param.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval STD_HDRS_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STD_HDRS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STD_HDRS_LIB_FLAG="'$final_libs'"
eval HAVE_STD_HDRS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STD_HDRS_H="'$final_incs'"
eval HAVE_STD_HDRS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval STD_HDRS_LIB_DIR=''
eval STD_HDRS_LIB_DIR_FLAG=''
eval STD_HDRS_LIB_FLAG=''
eval HAVE_STD_HDRS="no"
eval INC_STD_HDRS_H=''
eval HAVE_STD_HDRS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required STD_HDRS failed.
    To see the failed compile information, look in config.log,
    search for STD_HDRS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" unistd.h dirent.h sys/time.h sys/param.h values.h malloc.h netdb.h sys/select.h sys/socket.h sys/mman.h sys/ioctl.h sys/resource.h sys/wait.h sys/utsname.h rpc/types.h netinet/in.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested STD_HDRS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested STD_HDRS library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STD_HDRS):  standard headers-2
##


    ;;
esac


sci_defs_files="$sci_defs_files include/sci_defs/ieeefp_testdefs.h"

##  --  required STL headers
##  --      (only look for STL after going into cplusplus mode)
##
ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu



##
## SCI_TRY_LINK (STL_HEADERS):  standard template library headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : STL_HEADERS
## arg 2 : standard template library headers
## arg 3 : algorithm vector map iostream string
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      STL_HEADERS_LIB_DIR        => lib path
##      STL_HEADERS_LIB_DIR_FLAG   => all the -L's
##      STL_HEADERS_LIB_FLAG       => all the -l's
##      HAVE_STL_HEADERS           => yes or no
##      INC_STL_HEADERS_H          => all the -I's
##      HAVE_STL_HEADERS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for standard template library headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for standard template library headers (required)" >&5
$as_echo_n "checking for standard template library headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for standard template library headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of STL_HEADERS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of STL_HEADERS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of STL_HEADERS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of STL_HEADERS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STL_HEADERS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for STL_HEADERS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" algorithm vector map iostream string; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  std::vector<int> vec;
  std::cout << "blah" << std::endl;

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval STL_HEADERS_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval STL_HEADERS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval STL_HEADERS_LIB_FLAG="'$final_libs'"
eval HAVE_STL_HEADERS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_STL_HEADERS_H="'$final_incs'"
eval HAVE_STL_HEADERS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval STL_HEADERS_LIB_DIR=''
eval STL_HEADERS_LIB_DIR_FLAG=''
eval STL_HEADERS_LIB_FLAG=''
eval HAVE_STL_HEADERS="no"
eval INC_STL_HEADERS_H=''
eval HAVE_STL_HEADERS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required STL_HEADERS failed.
    To see the failed compile information, look in config.log,
    search for STL_HEADERS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" algorithm vector map iostream string; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested STL_HEADERS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested STL_HEADERS library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (STL_HEADERS):  standard template library headers
##



{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for location of hash_map" >&5
$as_echo_n "checking for location of hash_map... " >&6; }
DEF_HASHMAP=None
cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <hash_map>
                std::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  DEF_HASHMAP=HAVE_STD_HASHMAP
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
if test "$DEF_HASHMAP" = "None"; then
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ext/hash_map>
                 std::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  DEF_HASHMAP=HAVE_EXT_HASHMAP
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
# win32 has hash_map in stdext namespace (7 deprecates it in std, 8 requires stdext)
if test "$DEF_HASHMAP" = "None"; then
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <hash_map>
                 stdext::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  DEF_HASHMAP=HAVE_STDEXT_HASHMAP
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
# gcc-4.3 has depricated <ext/hash_map> so check for <backward/hash_map> first
if test "$DEF_HASHMAP" = "None" && test "$IS_OSX" != "yes"; then
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <tr1/unordered_map>
                 std::tr1::unordered_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  DEF_HASHMAP=HAVE_TR1_HASHMAP
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
if test "$DEF_HASHMAP" = "None"; then
  cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <ext/hash_map>
                 __gnu_cxx::hash_map<int, int> xx;
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_compile "$LINENO"; then :
  DEF_HASHMAP=HAVE_GNU_HASHMAP
fi
rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
fi
if test "$DEF_HASHMAP" = "None"; then
  DEF_HASHMAP=
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Cannot find hash_map, will use map instead" >&5
$as_echo "$as_me: WARNING: Cannot find hash_map, will use map instead" >&2;}
else
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: found: $DEF_HASHMAP" >&5
$as_echo "found: $DEF_HASHMAP" >&6; }
  DEF_HASHMAP="#define $DEF_HASHMAP 1"
fi

sci_defs_files="$sci_defs_files include/sci_defs/hashmap_testdefs.h"
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


##  --  search for libxml2 --
_sci_optional=required
_sci_lib=


if test "$with_libxml2"; then
   # If --with-libxml2 has a parameter, then use it
   _sci_lib="$with_libxml2"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

   _sci_optional=specific
fi

if test "$with_libxml2" == "built-in"; then
  XML2_LIB_FLAG="-lxml2"
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: \"Using built in libxml2... no explicit linking will be done.\" " >&5
$as_echo "\"Using built in libxml2... no explicit linking will be done.\" " >&6; }
else

  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for $_sci_optional libxml2" >&5
$as_echo_n "checking for $_sci_optional libxml2... " >&6; }
  if test ! -e $_sci_lib/../bin/xml2-config; then
     { $as_echo "$as_me:${as_lineno-$LINENO}: result: Not found under $_sci_lib" >&5
$as_echo "Not found under $_sci_lib" >&6; }
     { $as_echo "$as_me:${as_lineno-$LINENO}: checking for xml2-config in your path" >&5
$as_echo_n "checking for xml2-config in your path... " >&6; }
     XML2_DIR=`xml2-config --prefix`
     if test -e "$XML2_DIR/lib"; then
        _sci_lib=$XML2_DIR/lib
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: xml2-config found..." >&5
$as_echo "xml2-config found..." >&6; }
     else
        { $as_echo "$as_me:${as_lineno-$LINENO}: result: xml2-config program not found..." >&5
$as_echo "xml2-config program not found..." >&6; }
     fi
  fi

  found_xml2_config="no"

  if test -e $_sci_lib/../bin/xml2-config; then
      found_xml2_config="yes"
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Using $_sci_lib/../bin/xml2-config to set libxml2 variables." >&5
$as_echo "$as_me: WARNING: Using $_sci_lib/../bin/xml2-config to set libxml2 variables." >&2;}

      xml2_static=`xml2-config | grep static`

      if test "$IS_STATIC_BUILD" = "yes" -a "$IS_OSX" != "yes"; then
        if test -n "$xml2_static"; then
           STATIC_FLAG=--static
        else
           STATIC_FLAG=''
        fi
      fi


      XML2_LIB_DIR_FLAG=`$_sci_lib/../bin/xml2-config --libs $STATIC_FLAG`
      XML2_LDFLAGS=""
      XML2_LIB_PATH=""
      for i in $XML2_LIB_DIR_FLAG;do
        is_lib_path=`echo $i | sed -n -e "s/-L//p"`
        if test -z "$is_lib_path";then
          XML2_LDFLAGS="$XML2_LDFLAGS $i"
        else
          if ! test $i = "-L/usr/lib";then
            XML2_LIB_PATH="$XML2_LIB_PATH $i"
          fi
        fi
      done
      includes=`$_sci_lib/../bin/xml2-config --cflags`
  fi

##
## SCI_TRY_LINK (XML2):  xml2 library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : XML2
## arg 2 : xml2 library and headers
## arg 3 : libxml/tree.h libxml/parser.h
## arg 4 : $includes
## arg 5 : $XML2_LDFLAGS
## arg 6 : $XML2_LIB_PATH
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      XML2_LIB_DIR        => lib path
##      XML2_LIB_DIR_FLAG   => all the -L's
##      XML2_LIB_FLAG       => all the -l's
##      HAVE_XML2           => yes or no
##      INC_XML2_H          => all the -I's
##      HAVE_XML2_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for xml2 library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for xml2 library and headers (required)" >&5
$as_echo_n "checking for xml2 library and headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for xml2 library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $includes (the -I paths) is blank, do nothing, else do the for statement.

for inc in $includes; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for XML2 include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($includes) of XML2 check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($includes) of XML2 check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "$XML2_LDFLAGS"; then

   found_framework=no
   for lib in $XML2_LDFLAGS; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of XML2 check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of XML2 check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$XML2_LIB_PATH"; then

   for path in $XML2_LIB_PATH; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of XML2 check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of XML2 check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $XML2_LIB_PATH (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $XML2_LIB_PATH; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for XML2 only one library path may be specified for arg 6 (you had: $XML2_LIB_PATH).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $includes
  __sci_pass=false
  __sci_first_time=true
  for value in "" $includes; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$includes" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for XML2 only one include path may be specified for arg 4 (you had: $includes).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" libxml/tree.h libxml/parser.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  #if defined(LIBXML_TREE_ENABLED) && defined(LIBXML_OUTPUT_ENABLED)
  xmlDocPtr doc = NULL;       /* document pointer */
  xmlNodePtr root_node = NULL, node = NULL, node1 = NULL;/* node pointers */
  xmlDtdPtr dtd = NULL;       /* DTD pointer */
  char buff[256];
  int i, j;

  LIBXML_TEST_VERSION;

  /*
    * Creates a new document, a node and set it as a root node
    */
  doc = xmlNewDoc(BAD_CAST "1.0");
  root_node = xmlNewNode(NULL, BAD_CAST "root");
  xmlDocSetRootElement(doc, root_node);
  #else
  //create compile error so configure fails
  WrongVersionOrNotInstalled *x = 0;
  #endif

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval XML2_LIB_DIR='"$XML2_LIB_PATH"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval XML2_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval XML2_LIB_FLAG="'$final_libs'"
eval HAVE_XML2="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_XML2_H="'$final_incs'"
eval HAVE_XML2_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval XML2_LIB_DIR=''
eval XML2_LIB_DIR_FLAG=''
eval XML2_LIB_FLAG=''
eval HAVE_XML2="no"
eval INC_XML2_H=''
eval HAVE_XML2_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required XML2 failed.
    To see the failed compile information, look in config.log,
    search for XML2. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" libxml/tree.h libxml/parser.h; do
    #echo looking for $includes/$i
    if test ! -e $includes/$i; then
     as_fn_error $? "Specifically requested XML2 include file '$includes/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" $XML2_LDFLAGS; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $XML2_LIB_PATH/lib$i.so && test ! -e $XML2_LIB_PATH/lib$i.a && test ! -e $XML2_LIB_PATH/$i.lib; then
     as_fn_error $? "Specifically requested XML2 library file '$XML2_LIB_PATH/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (XML2):  xml2 library and headers
##



  DEF_XML2="#define HAVE_XML2 1"
  break

  if test ! "$DEF_XML2"; then
    echo
    as_fn_error $? "One or more of the xml2 components is missing." "$LINENO" 5
  fi
fi





##  ----------------------------------------------------------------------
##  ----------  required checks for optional libraries and headers  ------
##  ----------------------------------------------------------------------

##  --  search for optional headers  ------------------------------------
ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


##
## SCI_TRY_LINK (SSTREAM):  sstream header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : SSTREAM
## arg 2 : sstream header
## arg 3 : sstream
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      SSTREAM_LIB_DIR        => lib path
##      SSTREAM_LIB_DIR_FLAG   => all the -L's
##      SSTREAM_LIB_FLAG       => all the -l's
##      HAVE_SSTREAM           => yes or no
##      INC_SSTREAM_H          => all the -I's
##      HAVE_SSTREAM_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for sstream header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for sstream header (optional)" >&5
$as_echo_n "checking for sstream header (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for sstream header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of SSTREAM check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of SSTREAM check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of SSTREAM check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of SSTREAM check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for SSTREAM only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for SSTREAM only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" sstream; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval SSTREAM_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval SSTREAM_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval SSTREAM_LIB_FLAG="'$final_libs'"
eval HAVE_SSTREAM="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_SSTREAM_H="'$final_incs'"
eval HAVE_SSTREAM_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval SSTREAM_LIB_DIR=''
eval SSTREAM_LIB_DIR_FLAG=''
eval SSTREAM_LIB_FLAG=''
eval HAVE_SSTREAM="no"
eval INC_SSTREAM_H=''
eval HAVE_SSTREAM_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required SSTREAM failed.
    To see the failed compile information, look in config.log,
    search for SSTREAM. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" sstream; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested SSTREAM include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested SSTREAM library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (SSTREAM):  sstream header
##



if test "$HAVE_SSTREAM" = "yes"; then
   SSTREAM_COMPAT="no"
else
   # Use SCIRun sstream compatibility files...
   SSTREAM_COMPAT="yes"
fi


ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu

##  --  search for SGI'S or Win32's traceback library  ------------------------------

_sci_optional=optional
if test "$with_exc"; then
  _sci_lib="$with_exc"
  _sci_inc="$with_exc/../include"
  _sci_optional=specific
else
  _sci_lib=
  _sci_inc=
fi

if test "$IS_WIN" = "yes"; then
  # it's 'imagehlp' but call it EXC anyway so we don't have to change
  # other config parameters

##
## SCI_TRY_LINK (EXC):  WIN32 traceback library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : EXC
## arg 2 : WIN32 traceback library and headers
## arg 3 : windows.h imagehlp.h
## arg 4 : $_sci_inc
## arg 5 : imagehlp psapi
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      EXC_LIB_DIR        => lib path
##      EXC_LIB_DIR_FLAG   => all the -L's
##      EXC_LIB_FLAG       => all the -l's
##      HAVE_EXC           => yes or no
##      INC_EXC_H          => all the -I's
##      HAVE_EXC_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for WIN32 traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for WIN32 traceback library and headers (required)" >&5
$as_echo_n "checking for WIN32 traceback library and headers (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for WIN32 traceback library and headers must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for EXC include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "imagehlp psapi"; then

   found_framework=no
   for lib in imagehlp psapi; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" windows.h imagehlp.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval EXC_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval EXC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval EXC_LIB_FLAG="'$final_libs'"
eval HAVE_EXC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_EXC_H="'$final_incs'"
eval HAVE_EXC_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval EXC_LIB_DIR=''
eval EXC_LIB_DIR_FLAG=''
eval EXC_LIB_FLAG=''
eval HAVE_EXC="no"
eval INC_EXC_H=''
eval HAVE_EXC_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" windows.h imagehlp.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested EXC include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" imagehlp psapi; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested EXC library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (EXC):  WIN32 traceback library and headers
##


else

##
## SCI_TRY_LINK (EXC):  traceback library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : EXC
## arg 2 : traceback library and headers
## arg 3 : libexc.h
## arg 4 : $_sci_inc
## arg 5 : exc
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      EXC_LIB_DIR        => lib path
##      EXC_LIB_DIR_FLAG   => all the -L's
##      EXC_LIB_FLAG       => all the -l's
##      HAVE_EXC           => yes or no
##      INC_EXC_H          => all the -I's
##      HAVE_EXC_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for traceback library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for traceback library and headers ($_sci_optional)" >&5
$as_echo_n "checking for traceback library and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for traceback library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for EXC include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of EXC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "exc"; then

   found_framework=no
   for lib in exc; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of EXC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of EXC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for EXC only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for EXC only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" libexc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval EXC_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval EXC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval EXC_LIB_FLAG="'$final_libs'"
eval HAVE_EXC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_EXC_H="'$final_incs'"
eval HAVE_EXC_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval EXC_LIB_DIR=''
eval EXC_LIB_DIR_FLAG=''
eval EXC_LIB_FLAG=''
eval HAVE_EXC="no"
eval INC_EXC_H=''
eval HAVE_EXC_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required EXC failed.
    To see the failed compile information, look in config.log,
    search for EXC. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" libexc.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested EXC include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" exc; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested EXC library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (EXC):  traceback library and headers
##


fi

if test "$HAVE_EXC" = "yes" -a "$IS_WIN" != "yes"; then
  DEF_EXC="#define HAVE_EXC 1"
fi

if test "$with_exc" && test ! "$DEF_EXC"; then
  echo
  as_fn_error $? "One or more of the EXC components is missing." "$LINENO" 5
  echo
fi




sci_defs_files="$sci_defs_files include/sci_defs/exe_testdefs.h"

##  --  search for gzopen (and related)  ----------------------------------

## Since variables create by this section are used to check for PNG
## and TEEM stuff this section needs to preceed them.

_sci_optional=required
_sci_lib=
_sci_inc=

if test "$with_zlib"; then
  if test "$with_zlib" = "yes"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Zlib is already required - you do not need to specify --with-zlib." >&5
$as_echo "$as_me: WARNING: Zlib is already required - you do not need to specify --with-zlib." >&2;}
  else
    _sci_lib="$with_zlib/lib"
    _sci_inc="$with_zlib/include"
    _sci_optional=specific
  fi
fi


##
## SCI_TRY_LINK (Z):  zlib library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : Z
## arg 2 : zlib library and header
## arg 3 : zlib.h
## arg 4 : $_sci_inc
## arg 5 : z
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      Z_LIB_DIR        => lib path
##      Z_LIB_DIR_FLAG   => all the -L's
##      Z_LIB_FLAG       => all the -l's
##      HAVE_Z           => yes or no
##      INC_Z_H          => all the -I's
##      HAVE_Z_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for zlib library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for zlib library and header ($_sci_optional)" >&5
$as_echo_n "checking for zlib library and header ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for zlib library and header must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for Z include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of Z check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of Z check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "z"; then

   found_framework=no
   for lib in z; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of Z check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of Z check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of Z check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of Z check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for Z only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for Z only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" zlib.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval Z_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval Z_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval Z_LIB_FLAG="'$final_libs'"
eval HAVE_Z="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_Z_H="'$final_incs'"
eval HAVE_Z_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval Z_LIB_DIR=''
eval Z_LIB_DIR_FLAG=''
eval Z_LIB_FLAG=''
eval HAVE_Z="no"
eval INC_Z_H=''
eval HAVE_Z_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required Z failed.
    To see the failed compile information, look in config.log,
    search for Z. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" zlib.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested Z include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" z; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested Z library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (Z):  zlib library and header
##



if test "$HAVE_Z" = "yes"; then
   DEF_Z="#define HAVE_ZLIB 1"
fi

if test "$with_zlib" && test ! "$DEF_Z"; then
  echo
  as_fn_error $? "One or more of the GZOPEN components is missing." "$LINENO" 5
  echo
fi





sci_defs_files="$sci_defs_files include/sci_defs/z_testdefs.h"

##  --  search for jpeg and tiff -----------------------------------------

_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_jpeg"; then
   if test "$with_jpeg" = "yes"; then
      _sci_optional=required
   else
      _sci_lib="$with_jpeg/lib"
      _sci_inc="$with_jpeg/include"
      _sci_optional=specific
   fi
fi


##
## SCI_TRY_LINK (JPEG):  jpeg library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : JPEG
## arg 2 : jpeg library
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : jpeg
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      JPEG_LIB_DIR        => lib path
##      JPEG_LIB_DIR_FLAG   => all the -L's
##      JPEG_LIB_FLAG       => all the -l's
##      HAVE_JPEG           => yes or no
##      INC_JPEG_H          => all the -I's
##      HAVE_JPEG_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for jpeg library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for jpeg library ($_sci_optional)" >&5
$as_echo_n "checking for jpeg library ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for jpeg library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for JPEG include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of JPEG check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of JPEG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "jpeg"; then

   found_framework=no
   for lib in jpeg; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of JPEG check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of JPEG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of JPEG check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of JPEG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for JPEG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for JPEG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval JPEG_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval JPEG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval JPEG_LIB_FLAG="'$final_libs'"
eval HAVE_JPEG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_JPEG_H="'$final_incs'"
eval HAVE_JPEG_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval JPEG_LIB_DIR=''
eval JPEG_LIB_DIR_FLAG=''
eval JPEG_LIB_FLAG=''
eval HAVE_JPEG="no"
eval INC_JPEG_H=''
eval HAVE_JPEG_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required JPEG failed.
    To see the failed compile information, look in config.log,
    search for JPEG. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested JPEG include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" jpeg; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested JPEG library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (JPEG):  jpeg library
##






_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_tiff"; then
   if test "$with_tiff" = "yes"; then
      _sci_optional=required
   else
      _sci_lib="$with_tiff/lib"
      _sci_inc="$with_tiff/include"
      _sci_optional=specific
   fi
fi


##
## SCI_TRY_LINK (TIFF):  tiff library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TIFF
## arg 2 : tiff library
## arg 3 : tiff.h
## arg 4 : $_sci_inc
## arg 5 : tiff
## arg 6 : $_sci_lib
## arg 7 : $M_LIB_DIR_FLAG $M_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      TIFF_LIB_DIR        => lib path
##      TIFF_LIB_DIR_FLAG   => all the -L's
##      TIFF_LIB_FLAG       => all the -l's
##      HAVE_TIFF           => yes or no
##      INC_TIFF_H          => all the -I's
##      HAVE_TIFF_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for tiff library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for tiff library ($_sci_optional)" >&5
$as_echo_n "checking for tiff library ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for tiff library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for TIFF include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TIFF check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TIFF check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "tiff"; then

   found_framework=no
   for lib in tiff; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of TIFF check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TIFF check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of TIFF check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TIFF check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for TIFF only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for TIFF only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $M_LIB_DIR_FLAG $M_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" tiff.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval TIFF_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TIFF_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TIFF_LIB_FLAG="'$final_libs'"
eval HAVE_TIFF="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TIFF_H="'$final_incs'"
eval HAVE_TIFF_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval TIFF_LIB_DIR=''
eval TIFF_LIB_DIR_FLAG=''
eval TIFF_LIB_FLAG=''
eval HAVE_TIFF="no"
eval INC_TIFF_H=''
eval HAVE_TIFF_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required TIFF failed.
    To see the failed compile information, look in config.log,
    search for TIFF. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" tiff.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested TIFF include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" tiff; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested TIFF library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TIFF):  tiff library
##






##  --  search for png --------------------------------------

# Default values:
_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_png" = "yes"; then
  # If --with-png is specified without a parameter, then it makes it required
  _sci_optional=required
else
  if test "$with_png"; then
    # If --with-png has a parameter, then use it
    #   The BASE_LIB_PATH below will add /lib or /lib{64,32} to the sci_lib
    _sci_lib="$with_png"
    _sci_inc="$with_png/include"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=specific
  fi
fi


##
## SCI_TRY_LINK (PNG):  png library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PNG
## arg 2 : png library and headers
## arg 3 : png.h
## arg 4 : $_sci_inc
## arg 5 : png
## arg 6 : $_sci_lib
## arg 7 : $Z_LIB_DIR_FLAG $Z_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PNG_LIB_DIR        => lib path
##      PNG_LIB_DIR_FLAG   => all the -L's
##      PNG_LIB_FLAG       => all the -l's
##      HAVE_PNG           => yes or no
##      INC_PNG_H          => all the -I's
##      HAVE_PNG_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for png library and headers (optional)" >&5
$as_echo_n "checking for png library and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for png library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for PNG include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of PNG check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of PNG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "png"; then

   found_framework=no
   for lib in png; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $Z_LIB_DIR_FLAG $Z_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" png.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PNG_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PNG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PNG_LIB_FLAG="'$final_libs'"
eval HAVE_PNG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PNG_H="'$final_incs'"
eval HAVE_PNG_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PNG_LIB_DIR=''
eval PNG_LIB_DIR_FLAG=''
eval PNG_LIB_FLAG=''
eval HAVE_PNG="no"
eval INC_PNG_H=''
eval HAVE_PNG_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" png.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested PNG include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" png; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested PNG library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PNG):  png library and headers
##



# Now check for the correct version.
if test "$HAVE_PNG" = "yes"; then

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for PNG version 1.0.2 or better." >&5
$as_echo_n "checking for PNG version 1.0.2 or better.... " >&6; }
    cat > conftest-png.c <<EOF

         #include <png.h>
         #include <stdio.h>

         int main() {

           if (PNG_LIBPNG_VER < 10002) {
	       printf("1\n");
	   } else {
	       printf("0\n");
           }
          return 0;
         }
EOF
    #echo "$CC $INC_PNG_H conftest-png.c -o conftest-png"
    $CC $INC_PNG_H conftest-png.c -o conftest-png
    #ls -l conftest-png
    png_error=`./conftest-png`
    rm -f conftest-png conftest-png.c

    if test "$png_error" != "0"; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: PNG library too old.  Need at least 1.0.2.  Turning off PNG." >&5
$as_echo "PNG library too old.  Need at least 1.0.2.  Turning off PNG." >&6; }
       DEF_PNG=""
       HAVE_PNG="no"
       PNG_LIB_FLAG=""
       PNG_LIB_DIR_FLAG=""
       INC_PNG_H=""
       DEF_PNG=""
    else
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes." >&5
$as_echo "yes." >&6; }
       DEF_PNG="#define HAVE_PNG 1"
    fi

    break
fi

if test "$HAVE_PNG" = "no"; then
  # Try looking in a sci specific location (but only if it exists)
  if test -d /usr/sci/local; then

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=/usr/sci/local/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=/usr/sci/local/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=/usr/sci/local/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=/usr/sci/local/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=/usr/sci/local/lib
    fi
  fi
  eval png_lib_dir='"$_new_lib_path"'


##
## SCI_TRY_LINK (PNG):  png library and headers (SCI)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PNG
## arg 2 : png library and headers (SCI)
## arg 3 : png.h
## arg 4 : /usr/sci/local/include
## arg 5 : png
## arg 6 : $png_lib_dir
## arg 7 : $Z_LIB_DIR_FLAG $Z_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PNG_LIB_DIR        => lib path
##      PNG_LIB_DIR_FLAG   => all the -L's
##      PNG_LIB_FLAG       => all the -l's
##      HAVE_PNG           => yes or no
##      INC_PNG_H          => all the -I's
##      HAVE_PNG_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for png library and headers (SCI).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for png library and headers (SCI) (optional)" >&5
$as_echo_n "checking for png library and headers (SCI) (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for png library and headers (SCI) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If /usr/sci/local/include (the -I paths) is blank, do nothing, else do the for statement.

for inc in /usr/sci/local/include; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for PNG include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 (/usr/sci/local/include) of PNG check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 (/usr/sci/local/include) of PNG check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "png"; then

   found_framework=no
   for lib in png; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PNG check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$png_lib_dir"; then

   for path in $png_lib_dir; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PNG check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $png_lib_dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $png_lib_dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PNG only one library path may be specified for arg 6 (you had: $png_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in /usr/sci/local/include
  __sci_pass=false
  __sci_first_time=true
  for value in "" /usr/sci/local/include; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "/usr/sci/local/include" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PNG only one include path may be specified for arg 4 (you had: /usr/sci/local/include).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $Z_LIB_DIR_FLAG $Z_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" png.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PNG_LIB_DIR='"$png_lib_dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PNG_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PNG_LIB_FLAG="'$final_libs'"
eval HAVE_PNG="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PNG_H="'$final_incs'"
eval HAVE_PNG_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PNG_LIB_DIR=''
eval PNG_LIB_DIR_FLAG=''
eval PNG_LIB_FLAG=''
eval HAVE_PNG="no"
eval INC_PNG_H=''
eval HAVE_PNG_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PNG failed.
    To see the failed compile information, look in config.log,
    search for PNG. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" png.h; do
    #echo looking for /usr/sci/local/include/$i
    if test ! -e /usr/sci/local/include/$i; then
     as_fn_error $? "Specifically requested PNG include file '/usr/sci/local/include/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" png; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $png_lib_dir/lib$i.so && test ! -e $png_lib_dir/lib$i.a && test ! -e $png_lib_dir/$i.lib; then
     as_fn_error $? "Specifically requested PNG library file '$png_lib_dir/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PNG):  png library and headers (SCI)
##


  fi
else
  if test "$_sci_optional" = "specific"; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: checking that PNG is in the requested location '$with_png/lib'" >&5
$as_echo_n "checking that PNG is in the requested location '$with_png/lib'... " >&6; }
       # verify that it was found in the location requested.
       if test ! -e $with_png/lib/libpng.so &&
          test ! -e $with_png/lib/libpng.a &&
          test ! -e $with_png/lib/libpng.dylib; then
            echo
            as_fn_error $? "Found libpng but not in requested directory: $with_png/lib" "$LINENO" 5
       fi
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes." >&5
$as_echo "yes." >&6; }
    fi
fi

if test "$with_png" && test ! "$DEF_PNG"; then
  echo
  as_fn_error $? "One or more of the png components is missing." "$LINENO" 5
  echo
fi







##  --  check if exceptions work properly --------------------------------

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for working exceptions." >&5
$as_echo_n "checking for working exceptions.... " >&6; }
cat > conftest-exc.cc <<EOF

    #include <stdio.h>

    int main() {
      try {
        throw "hello world";
      }
      catch( const char* e ) {
        printf("error is %s\n", e);
      }
    }
EOF
    $CXX -o conftest-exc conftest-exc.cc
    ./conftest-exc > /dev/null 2>&1

    if test "$?" != "0"; then
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
       enable_exceptions_crash=1
       EXCEPTIONS_CRASH_DEF="#define EXCEPTIONS_CRASH 1"
    else
       { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
       enable_exceptions_crash=0
       EXCEPTIONS_CRASH_DEF=""
    fi

    rm -f conftest-exc.cc conftest-exc


##  --  search for mpeg  -------------------------------------------------

_sci_optional=optional
if test "$with_mpeg"; then
  _sci_lib="$with_mpeg/lib"
  _sci_optional=specific
fi


##
## SCI_TRY_LINK (MPEGE):  MPEG library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPEGE
## arg 2 : MPEG library
## arg 3 :
## arg 4 :
## arg 5 : mpege
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPEGE_LIB_DIR        => lib path
##      MPEGE_LIB_DIR_FLAG   => all the -L's
##      MPEGE_LIB_FLAG       => all the -l's
##      HAVE_MPEGE           => yes or no
##      INC_MPEGE_H          => all the -I's
##      HAVE_MPEGE_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for MPEG library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for MPEG library ($_sci_optional)" >&5
$as_echo_n "checking for MPEG library ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for MPEG library must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "mpege"; then

   found_framework=no
   for lib in mpege; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPEGE check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPEGE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPEGE check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPEGE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPEGE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPEGE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPEGE_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPEGE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPEGE_LIB_FLAG="'$final_libs'"
eval HAVE_MPEGE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPEGE_H="'$final_incs'"
eval HAVE_MPEGE_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPEGE_LIB_DIR=''
eval MPEGE_LIB_DIR_FLAG=''
eval MPEGE_LIB_FLAG=''
eval HAVE_MPEGE="no"
eval INC_MPEGE_H=''
eval HAVE_MPEGE_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPEGE failed.
    To see the failed compile information, look in config.log,
    search for MPEGE. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested MPEGE include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpege; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested MPEGE library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPEGE):  MPEG library
##



if test "$HAVE_MPEGE" = "yes"; then
  DEF_MPEG="#define HAVE_MPEG 1"
fi

if test "$with_mpeg" && test ! "$DEF_MPEG"; then
  echo
  as_fn_error $? "One or more of the MPEG components is missing." "$LINENO" 5
  echo
fi





sci_defs_files="$sci_defs_files include/sci_defs/image_testdefs.h"

##  --  search for scisock --------------------------------------






sci_defs_files="$sci_defs_files include/sci_defs/scisock_testdefs.h"

##  --  search for unp --------------------------------------

if test "$with_unp" = "yes"; then
  as_fn_error $? "Please provide the location of the UNP package: --with-unp=<dir>" "$LINENO" 5
fi

if test "$with_unp"; then
  _sci_lib="$with_unp/lib"
  _sci_inc="$with_unp/include"
fi


##
## SCI_TRY_LINK (UNP):  unp socket library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : UNP
## arg 2 : unp socket library and headers
## arg 3 : extern_C unpv12e/unp.h unpv12e/unpthread.h
## arg 4 : $_sci_inc
## arg 5 : unp scisock
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      UNP_LIB_DIR        => lib path
##      UNP_LIB_DIR_FLAG   => all the -L's
##      UNP_LIB_FLAG       => all the -l's
##      HAVE_UNP           => yes or no
##      INC_UNP_H          => all the -I's
##      HAVE_UNP_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for unp socket library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for unp socket library and headers (optional)" >&5
$as_echo_n "checking for unp socket library and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for unp socket library and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for UNP include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of UNP check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of UNP check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "unp scisock"; then

   found_framework=no
   for lib in unp scisock; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of UNP check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of UNP check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of UNP check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of UNP check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for UNP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for UNP only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" extern_C unpv12e/unp.h unpv12e/unpthread.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  Connect(0, NULL, 0);

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval UNP_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval UNP_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval UNP_LIB_FLAG="'$final_libs'"
eval HAVE_UNP="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_UNP_H="'$final_incs'"
eval HAVE_UNP_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval UNP_LIB_DIR=''
eval UNP_LIB_DIR_FLAG=''
eval UNP_LIB_FLAG=''
eval HAVE_UNP="no"
eval INC_UNP_H=''
eval HAVE_UNP_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required UNP failed.
    To see the failed compile information, look in config.log,
    search for UNP. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" extern_C unpv12e/unp.h unpv12e/unpthread.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested UNP include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" unp scisock; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested UNP library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (UNP):  unp socket library and headers
##







##  --  search for the fortran library  ----------------------------------
# Always check for fortran, since we now always try to enable blas

F_LIB_FLAG=""
F_LIB_DIR_FLAG=""

_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$sci_required_fortran" = "yes"; then
  _sci_optional=required
fi

if test "$with_fortran" = "yes"; then
  _sci_optional=required
elif test "$with_fortran" -a "$with_fortran" != "no"; then
  _sci_lib="$with_fortran/lib"
  _sci_inc="$with_fortran/include"
  _sci_optional=specific
fi

if test "$with_fortran" != "no"; then
  case $host in
    *aix*)
      # AIX Fortran Library Check

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : xlf90
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "xlf90"; then

   found_framework=no
   for lib in xlf90; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" xlf90; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


      ;;
    *linux*)
      # Linux Library Check
      case $F77 in
        *pgf77*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : pgftnrtl
## arg 6 : $_sci_lib
## arg 7 : $RT_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "pgftnrtl"; then

   found_framework=no
   for lib in pgftnrtl; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $RT_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" pgftnrtl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


          ;;
        *gfortran*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : gfortran
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "gfortran"; then

   found_framework=no
   for lib in gfortran; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" gfortran; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


          ;;
        *ifort*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : ifcore
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "ifcore"; then

   found_framework=no
   for lib in ifcore; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ifcore; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


          ;;
        *ftn*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 :
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


          ;;
        *)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in g2c; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


          ;;
       esac
      ;;
    *dec*)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : for Ufor
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "for Ufor"; then

   found_framework=no
   for lib in for Ufor; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" for Ufor; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


      ;;
    *-darwin*)
      # OSX Library Check
      if test "$F77" = "xlf"; then

##
## SCI_TRY_LINK (F):  Mac fortran library - xlf90
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : Mac fortran library - xlf90
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : xlf90
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for Mac fortran library - xlf90.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Mac fortran library - xlf90 ($_sci_optional)" >&5
$as_echo_n "checking for Mac fortran library - xlf90 ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for Mac fortran library - xlf90 must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for F include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "xlf90"; then

   found_framework=no
   for lib in xlf90; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested F include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" xlf90; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  Mac fortran library - xlf90
##


      else

##
## SCI_TRY_LINK (F):  Mac fortran library - gfortran
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : Mac fortran library - gfortran
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : gfortran
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for Mac fortran library - gfortran.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for Mac fortran library - gfortran (optional)" >&5
$as_echo_n "checking for Mac fortran library - gfortran (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for Mac fortran library - gfortran must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for F include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "gfortran"; then

   found_framework=no
   for lib in gfortran; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested F include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" gfortran; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  Mac fortran library - gfortran
##


        if test "$HAVE_F" = "no"; then

##
## SCI_TRY_LINK (F):  mac fortran library - g2c
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : mac fortran library - g2c
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mac fortran library - g2c.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mac fortran library - g2c ($_sci_optional)" >&5
$as_echo_n "checking for mac fortran library - g2c ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mac fortran library - g2c must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for F include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of F check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in g2c; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested F include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  mac fortran library - g2c
##


        fi
      fi
      ;;
    *-pc-mingw*)
      # Mingw g77 and libg2c

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : g2c
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "g2c"; then

   found_framework=no
   for lib in g2c; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" g2c; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


      ;;
    *)

##
## SCI_TRY_LINK (F):  fortran libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : F
## arg 2 : fortran libraries
## arg 3 :
## arg 4 :
## arg 5 : F77
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      F_LIB_DIR        => lib path
##      F_LIB_DIR_FLAG   => all the -L's
##      F_LIB_FLAG       => all the -l's
##      HAVE_F           => yes or no
##      INC_F_H          => all the -I's
##      HAVE_F_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for fortran libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for fortran libraries ($_sci_optional)" >&5
$as_echo_n "checking for fortran libraries ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for fortran libraries must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "F77"; then

   found_framework=no
   for lib in F77; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of F check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of F check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for F only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval F_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval F_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval F_LIB_FLAG="'$final_libs'"
eval HAVE_F="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_F_H="'$final_incs'"
eval HAVE_F_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval F_LIB_DIR=''
eval F_LIB_DIR_FLAG=''
eval F_LIB_FLAG=''
eval HAVE_F="no"
eval INC_F_H=''
eval HAVE_F_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required F failed.
    To see the failed compile information, look in config.log,
    search for F. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested F include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" F77; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested F library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (F):  fortran libraries
##


      ;;
  esac
fi




MPI_EXTRA_LIB_FLAG="$MPI_EXTRA_LIB_FLAG $F_LIB_FLAG"
MPI_EXTRA_LIB_DIR="$MPI_EXTRA_LIB_DIR $F_LIB_DIR_FLAG"

ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


# Clean up all the fortran flags that don't have individual without-fortran guards on them...
if test "$with_fortran" = no; then
  FFLAGS="fortran_disabled";
  extra_fflags="fortran_disabled";
  FORTRAN_UNDERSCORE="// FORTRAN_UNDERSCORE => fortran_disabled";
  DEF_FORTRAN_UNDERSCORE="// DEF_FORTRAN_UNDERSCORE => fortran_disabled";
fi

##  --  Electric Fence  -------------------------------------

if test "$with_electric_fence"; then

  if test "$with_electric_fence" = "yes"; then

##
## SCI_TRY_LINK (ELECTRIC_FENCE):  electric fence library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : ELECTRIC_FENCE
## arg 2 : electric fence library
## arg 3 :
## arg 4 :
## arg 5 : efence
## arg 6 :
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      ELECTRIC_FENCE_LIB_DIR        => lib path
##      ELECTRIC_FENCE_LIB_DIR_FLAG   => all the -L's
##      ELECTRIC_FENCE_LIB_FLAG       => all the -l's
##      HAVE_ELECTRIC_FENCE           => yes or no
##      INC_ELECTRIC_FENCE_H          => all the -I's
##      HAVE_ELECTRIC_FENCE_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for electric fence library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for electric fence library (required)" >&5
$as_echo_n "checking for electric fence library (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for electric fence library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "efence"; then

   found_framework=no
   for lib in efence; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of ELECTRIC_FENCE check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of ELECTRIC_FENCE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of ELECTRIC_FENCE check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of ELECTRIC_FENCE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for ELECTRIC_FENCE only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for ELECTRIC_FENCE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval ELECTRIC_FENCE_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval ELECTRIC_FENCE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval ELECTRIC_FENCE_LIB_FLAG="'$final_libs'"
eval HAVE_ELECTRIC_FENCE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_ELECTRIC_FENCE_H="'$final_incs'"
eval HAVE_ELECTRIC_FENCE_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval ELECTRIC_FENCE_LIB_DIR=''
eval ELECTRIC_FENCE_LIB_DIR_FLAG=''
eval ELECTRIC_FENCE_LIB_FLAG=''
eval HAVE_ELECTRIC_FENCE="no"
eval INC_ELECTRIC_FENCE_H=''
eval HAVE_ELECTRIC_FENCE_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required ELECTRIC_FENCE failed.
    To see the failed compile information, look in config.log,
    search for ELECTRIC_FENCE. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested ELECTRIC_FENCE include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" efence; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested ELECTRIC_FENCE library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (ELECTRIC_FENCE):  electric fence library
##


  else

##
## SCI_TRY_LINK (ELECTRIC_FENCE):  electric fence library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : ELECTRIC_FENCE
## arg 2 : electric fence library
## arg 3 :
## arg 4 :
## arg 5 : efence
## arg 6 : $with_electric_fence
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : specific
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      ELECTRIC_FENCE_LIB_DIR        => lib path
##      ELECTRIC_FENCE_LIB_DIR_FLAG   => all the -L's
##      ELECTRIC_FENCE_LIB_FLAG       => all the -l's
##      HAVE_ELECTRIC_FENCE           => yes or no
##      INC_ELECTRIC_FENCE_H          => all the -I's
##      HAVE_ELECTRIC_FENCE_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for electric fence library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for electric fence library (specific)" >&5
$as_echo_n "checking for electric fence library (specific)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "specific" != "optional" -a "specific" != "required" -a "specific" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for electric fence library must be: optional or required or specific.  (You had specific.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "efence"; then

   found_framework=no
   for lib in efence; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of ELECTRIC_FENCE check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of ELECTRIC_FENCE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$with_electric_fence"; then

   for path in $with_electric_fence; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of ELECTRIC_FENCE check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of ELECTRIC_FENCE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "specific" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $with_electric_fence (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $with_electric_fence; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for ELECTRIC_FENCE only one library path may be specified for arg 6 (you had: $with_electric_fence).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for ELECTRIC_FENCE only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval ELECTRIC_FENCE_LIB_DIR='"$with_electric_fence"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval ELECTRIC_FENCE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval ELECTRIC_FENCE_LIB_FLAG="'$final_libs'"
eval HAVE_ELECTRIC_FENCE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_ELECTRIC_FENCE_H="'$final_incs'"
eval HAVE_ELECTRIC_FENCE_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval ELECTRIC_FENCE_LIB_DIR=''
eval ELECTRIC_FENCE_LIB_DIR_FLAG=''
eval ELECTRIC_FENCE_LIB_FLAG=''
eval HAVE_ELECTRIC_FENCE="no"
eval INC_ELECTRIC_FENCE_H=''
eval HAVE_ELECTRIC_FENCE_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "specific" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required ELECTRIC_FENCE failed.
    To see the failed compile information, look in config.log,
    search for ELECTRIC_FENCE. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "specific" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested ELECTRIC_FENCE include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" efence; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $with_electric_fence/lib$i.so && test ! -e $with_electric_fence/lib$i.a && test ! -e $with_electric_fence/$i.lib; then
     as_fn_error $? "Specifically requested ELECTRIC_FENCE library file '$with_electric_fence/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (ELECTRIC_FENCE):  electric fence library
##


  fi
fi





##  --  search for acml (optimized blas/lapack) stuff  -------------------------------------

if test "$with_acml"; then

  if test "$with_blas"; then
    as_fn_error $? "You cannot use both --with-blas and --with-acml." "$LINENO" 5
  fi
  if test "$with_atlas"; then
    as_fn_error $? "You cannot use both --with-atlas and --with-acml." "$LINENO" 5
  fi
  if test "$with_mkl"; then
    as_fn_error $? "You cannot use both --with-mkl and --with-acml." "$LINENO" 5
  fi

  if test "$with_acml" = "yes"; then
    _sci_lib=
    _sci_inc=
    _sci_optional=required
  elif test "$with_acml"; then
    _sci_lib="$with_acml/lib"
    _sci_inc="$with_acml/include"
    _sci_optional=specific
  fi

  case $host in
    *-darwin*)
       as_fn_error $? "We recommend that you don't use ACML on a Mac... use the default vecLib instead." "$LINENO" 5
       ;;
     *)

##
## SCI_TRY_LINK (BLAS):  acml version of (blas/lapack) libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : acml version of (blas/lapack) libraries and headers
## arg 3 : acml.h
## arg 4 : $_sci_inc
## arg 5 : acml acml_mv
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for acml version of (blas/lapack) libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for acml version of (blas/lapack) libraries and headers ($_sci_optional)" >&5
$as_echo_n "checking for acml version of (blas/lapack) libraries and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for acml version of (blas/lapack) libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "acml acml_mv"; then

   found_framework=no
   for lib in acml acml_mv; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" acml.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" acml.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" acml acml_mv; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  acml version of (blas/lapack) libraries and headers
##


       ;;
  esac

  HAVE_LAPACK=$HAVE_BLAS

  DEF_LAPACK="#define HAVE_LAPACK 1"
  DEF_BLAS="#define HAVE_BLAS 1"

  sci_required_blas=no
fi

##  --  search for mkl (optimized blas/lapack) stuff  -------------------------------------

if test "$with_mkl"; then

  if test "$with_blas"; then
    as_fn_error $? "You cannot use both --with-blas and --with-mkl." "$LINENO" 5
  fi
  if test "$with_atlas"; then
    as_fn_error $? "You cannot use both --with-atlas and --with-mkl." "$LINENO" 5
  fi

  if test "$with_mkl" = "yes"; then
    _sci_lib=
    _sci_inc=
    _sci_optional=required
  elif test "$with_mkl"; then
    _sci_lib="$with_mkl/lib"
    _sci_inc="$with_mkl/include"
    _sci_optional=specific
  fi

  case $host in
    *-darwin*)
       as_fn_error $? "We recommend that you don't use MKL on a Mac... use the default vecLib instead." "$LINENO" 5
       ;;
     *)

##
## SCI_TRY_LINK (BLAS):  mkl version of (blas) libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : mkl version of (blas) libraries and headers
## arg 3 : mkl_cblas.h
## arg 4 : $_sci_inc
## arg 5 : mkl mkl_core mkl_intel_lp64 guide
## arg 6 : $_sci_lib
## arg 7 : $THREAD_LIB_FLAG $M_LIB_DIR_FLAG $M_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mkl version of (blas) libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mkl version of (blas) libraries and headers ($_sci_optional)" >&5
$as_echo_n "checking for mkl version of (blas) libraries and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mkl version of (blas) libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mkl mkl_core mkl_intel_lp64 guide"; then

   found_framework=no
   for lib in mkl mkl_core mkl_intel_lp64 guide; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $THREAD_LIB_FLAG $M_LIB_DIR_FLAG $M_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mkl_cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mkl_cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mkl mkl_core mkl_intel_lp64 guide; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  mkl version of (blas) libraries and headers
##



##
## SCI_TRY_LINK (LAPACK):  mkl version of (lapack) libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : mkl version of (lapack) libraries and headers
## arg 3 : mkl_lapack.h
## arg 4 : $_sci_inc
## arg 5 : mkl mkl_def guide
## arg 6 : $_sci_lib
## arg 7 : $THREAD_LIB_FLAG $M_LIB_DIR_FLAG $M_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACK_LIB_DIR        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mkl version of (lapack) libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mkl version of (lapack) libraries and headers ($_sci_optional)" >&5
$as_echo_n "checking for mkl version of (lapack) libraries and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mkl version of (lapack) libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for LAPACK include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of LAPACK check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of LAPACK check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mkl mkl_def guide"; then

   found_framework=no
   for lib in mkl mkl_def guide; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $THREAD_LIB_FLAG $M_LIB_DIR_FLAG $M_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mkl_lapack.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACK_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACK_LIB_DIR=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mkl_lapack.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested LAPACK include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mkl mkl_def guide; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested LAPACK library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  mkl version of (lapack) libraries and headers
##


       ;;
  esac

  CBLAS_H="mkl_cblas.h"
  HAVE_CBLAS=$HAVE_BLAS
  DEF_CBLAS="#define HAVE_CBLAS 1"
  DEF_BLAS="#define HAVE_BLAS 1"
  DEF_LAPACK="#define HAVE_LAPACK 1"
  sci_required_blas=no
fi

##  --  search for atlas (optimized blas/lapack) stuff  -------------------------------------

if test ! "$HAVE_BLAS"; then
  # MKL test above did not find mkl... so look for atlas

  if test "$with_atlas" -a "$with_blas"; then
    as_fn_error $? "You cannot use both --with-blas and --with-atlas." "$LINENO" 5
  fi

  _sci_lib=
  _sci_inc=
  _sci_optional=optional

  if test "$with_atlas" = "yes"; then
    _sci_optional=required
  elif test "$with_atlas"; then
    _sci_lib="$with_atlas/lib"
    _sci_inc="$with_atlas/include"
    _sci_optional=specific
  fi

  case $host in
    *-darwin*)
       if test "$with_atlas" && test "$with_atlas" != yes ; then
         as_fn_error $? "Don't specify a path for atlas when on a Mac (we use vecLib by default.)" "$LINENO" 5
       fi

##
## SCI_TRY_LINK (BLAS):  atlas version of libraries and headers (OSX)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : atlas version of libraries and headers (OSX)
## arg 3 : vecLib/cblas.h
## arg 4 : -faltivec
## arg 5 :
## arg 6 :
## arg 7 : -framework vecLib
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers (OSX).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for atlas version of libraries and headers (OSX) ($_sci_optional)" >&5
$as_echo_n "checking for atlas version of libraries and headers (OSX) ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for atlas version of libraries and headers (OSX) must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If -faltivec (the -I paths) is blank, do nothing, else do the for statement.

for inc in -faltivec; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 (-faltivec) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 (-faltivec) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in -faltivec
  __sci_pass=false
  __sci_first_time=true
  for value in "" -faltivec; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "-faltivec" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: -faltivec).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs -framework vecLib $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vecLib/cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vecLib/cblas.h; do
    #echo looking for -faltivec/$i
    if test ! -e -faltivec/$i; then
     as_fn_error $? "Specifically requested BLAS include file '-faltivec/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  atlas version of libraries and headers (OSX)
##


       ;;
     *)

##
## SCI_TRY_LINK (BLAS):  atlas version of libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : atlas version of libraries and headers
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : cblas f77blas atlas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for atlas version of libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for atlas version of libraries and headers ($_sci_optional)" >&5
$as_echo_n "checking for atlas version of libraries and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for atlas version of libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "cblas f77blas atlas"; then

   found_framework=no
   for lib in cblas f77blas atlas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cblas f77blas atlas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  atlas version of libraries and headers
##


       ;;
  esac

  HAVE_CBLAS=$HAVE_BLAS
  DEF_CBLAS=$DEF_BLAS

  if test "$HAVE_BLAS" = "yes"; then
    DEF_BLAS="#define HAVE_BLAS 1"
    DEF_CBLAS="#define HAVE_CBLAS 1"
    CBLAS_H="cblas.h"
    sci_required_blas=no
  fi
fi




##  --  search for blas stuff  -------------------------------------------

_sci_lib=
_sci_inc=

if test "$HAVE_BLAS" != "yes"; then
  # if HAVE_BLAS is yes at this point, then atlas has been found and we
  # don't want to check for blas.

  if test "$with_blas" && test "$with_blas" != "yes"; then
    _sci_lib="$with_blas/lib"
    _sci_inc="$with_blas/include"
    _sci_specific=yes
  fi

  case $host in
    *aix*)

##
## SCI_TRY_LINK (BLAS):  essl library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : essl library
## arg 3 :
## arg 4 :
## arg 5 : essl
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for essl library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for essl library (required)" >&5
$as_echo_n "checking for essl library (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for essl library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "essl"; then

   found_framework=no
   for lib in essl; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested BLAS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" essl; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  essl library
##


       ;;
    *dec*)

##
## SCI_TRY_LINK (BLAS):  cxml library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : cxml library
## arg 3 :
## arg 4 :
## arg 5 : cxml
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : required
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for cxml library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for cxml library (required)" >&5
$as_echo_n "checking for cxml library (required)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "required" != "optional" -a "required" != "required" -a "required" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for cxml library must be: optional or required or specific.  (You had required.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "cxml"; then

   found_framework=no
   for lib in cxml; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "required" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "required" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "required" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested BLAS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cxml; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  cxml library
##


       ;;
    *)
       # Can't use the "specific" key word as we are testing for a number
       # of different configurations.

##
## SCI_TRY_LINK (BLAS):  blas and cblas libraries-1
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and cblas libraries-1
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : cblas blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for blas and cblas libraries-1 (optional)" >&5
$as_echo_n "checking for blas and cblas libraries-1 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for blas and cblas libraries-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "cblas blas"; then

   found_framework=no
   for lib in cblas blas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" cblas blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and cblas libraries-1
##


       if test "$HAVE_BLAS" = "yes"; then
          HAVE_CBLAS=yes
          CBLAS_H="cblas.h"
          DEF_CBLAS="#define HAVE_CBLAS 1"
       else

##
## SCI_TRY_LINK (BLAS):  blas and scs libraries-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and scs libraries-2
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : blas scs_mp
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for blas and scs libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for blas and scs libraries-2 (optional)" >&5
$as_echo_n "checking for blas and scs libraries-2 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for blas and scs libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "blas scs_mp"; then

   found_framework=no
   for lib in blas scs_mp; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas scs_mp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and scs libraries-2
##


          if test "$HAVE_BLAS" = "no"; then
             #scs library should be used on the SGI altix
             #SCI_TRY_LINK(BLAS,blas and scs libraries-2,cblas.h,
             #   $_sci_inc,blas scs_mp,$_sci_lib,$F_LIB_DIR_FLAG $F_LIB_FLAG,,optional)

##
## SCI_TRY_LINK (BLAS):  blas and cblas libraries-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas and cblas libraries-2
## arg 3 : cblas.h
## arg 4 : $_sci_inc
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for blas and cblas libraries-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for blas and cblas libraries-2 (optional)" >&5
$as_echo_n "checking for blas and cblas libraries-2 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for blas and cblas libraries-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for BLAS include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of BLAS check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in blas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" cblas.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" cblas.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested BLAS include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas and cblas libraries-2
##


             if test "$HAVE_BLAS" = "yes"; then
                HAVE_CBLAS=yes
                CBLAS_H="cblas.h"
                DEF_CBLAS="#define HAVE_CBLAS 1"
             else

##
## SCI_TRY_LINK (BLAS):  blas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas library
## arg 3 :
## arg 4 :
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for blas library (optional)" >&5
$as_echo_n "checking for blas library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in blas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested BLAS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas library
##


                if test "$HAVE_BLAS" = "no"; then

##
## SCI_TRY_LINK (BLAS):  optional fblas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : optional fblas library
## arg 3 :
## arg 4 :
## arg 5 : fblas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for optional fblas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for optional fblas library (optional)" >&5
$as_echo_n "checking for optional fblas library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for optional fblas library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "fblas"; then

   found_framework=no
   for lib in fblas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested BLAS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" fblas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  optional fblas library
##


                else
                   # Verify it was in the right spot
                   if test "$_sci_specific" = "yes"; then

##
## SCI_TRY_LINK (BLAS):  blas library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : BLAS
## arg 2 : blas library
## arg 3 :
## arg 4 :
## arg 5 : blas
## arg 6 : $_sci_lib
## arg 7 : $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : specific
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      BLAS_LIB_DIR        => lib path
##      BLAS_LIB_DIR_FLAG   => all the -L's
##      BLAS_LIB_FLAG       => all the -l's
##      HAVE_BLAS           => yes or no
##      INC_BLAS_H          => all the -I's
##      HAVE_BLAS_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for blas library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for blas library (specific)" >&5
$as_echo_n "checking for blas library (specific)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "specific" != "optional" -a "specific" != "required" -a "specific" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for blas library must be: optional or required or specific.  (You had specific.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "blas"; then

   found_framework=no
   for lib in blas; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of BLAS check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of BLAS check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "specific" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for BLAS only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval BLAS_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval BLAS_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval BLAS_LIB_FLAG="'$final_libs'"
eval HAVE_BLAS="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_BLAS_H="'$final_incs'"
eval HAVE_BLAS_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval BLAS_LIB_DIR=''
eval BLAS_LIB_DIR_FLAG=''
eval BLAS_LIB_FLAG=''
eval HAVE_BLAS="no"
eval INC_BLAS_H=''
eval HAVE_BLAS_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "specific" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required BLAS failed.
    To see the failed compile information, look in config.log,
    search for BLAS. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "specific" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested BLAS include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" blas; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested BLAS library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (BLAS):  blas library
##


                   fi
                fi
             fi
          else
             HAVE_CBLAS=yes
             CBLAS_H="cblas.h"
             DEF_CBLAS="#define HAVE_CBLAS 1"
          fi
       fi
       ;;
  esac

  if test "$HAVE_BLAS" = "yes"; then
    DEF_BLAS="#define HAVE_BLAS 1"
  fi

  if test "$with_blas" && test ! "$DEF_BLAS"; then
    echo
    as_fn_error $? "One or more of the BLAS components is missing." "$LINENO" 5
    echo
  fi

fi # end sci_required_blas

# these are set above by atlas check if atlas check succeeded







sci_defs_files="$sci_defs_files include/sci_defs/blas_testdefs.h"

##  --  search for lapack stuff  -----------------------------------------

if test "$HAVE_LAPACK" != "yes"; then
  # if HAVE_LAPACK is yes at this point, then atlas/mkl has been found and we
  # don't want to check for it here.

  if test "$with_lapack"; then
     _sci_lib="$with_lapack/lib"
  else
     _sci_lib="$LIB_DIR_BLAS"
  fi

  case $host in
    *-darwin*)

##
## SCI_TRY_LINK (LAPACK):  lapack version oflibraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : lapack version oflibraries and headers
## arg 3 : vecLib/clapack.h
## arg 4 :
## arg 5 :
## arg 6 :
## arg 7 : -faltivec -framework vecLib
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACK_LIB_DIR        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for lapack version oflibraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for lapack version oflibraries and headers (optional)" >&5
$as_echo_n "checking for lapack version oflibraries and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for lapack version oflibraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n ""; then

   found_framework=no
   for lib in ; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n ""; then

   for path in ; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in  (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs -faltivec -framework vecLib $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" vecLib/clapack.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACK_LIB_DIR='""'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACK_LIB_DIR=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" vecLib/clapack.h; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested LAPACK include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" ; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e /lib$i.so && test ! -e /lib$i.a && test ! -e /$i.lib; then
     as_fn_error $? "Specifically requested LAPACK library file '/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  lapack version oflibraries and headers
##


       if test "$HAVE_LAPACK" = yes ; then
          LAPACK_LIB_FLAG="-faltivec -framework vecLib"
       fi
       ;;
     *)

##
## SCI_TRY_LINK (LAPACK):  lapack library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : lapack library
## arg 3 :
## arg 4 :
## arg 5 : lapack
## arg 6 : $_sci_lib
## arg 7 : $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACK_LIB_DIR        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for lapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for lapack library (optional)" >&5
$as_echo_n "checking for lapack library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for lapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "lapack"; then

   found_framework=no
   for lib in lapack; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACK_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACK_LIB_DIR=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested LAPACK include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" lapack; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested LAPACK library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  lapack library
##


       ;;
  esac

  if test "$HAVE_LAPACK" != "yes"; then

##
## SCI_TRY_LINK (LAPACK):  flapack library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : flapack library
## arg 3 :
## arg 4 :
## arg 5 : flapack
## arg 6 : $_sci_lib
## arg 7 : $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACK_LIB_DIR        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for flapack library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for flapack library (optional)" >&5
$as_echo_n "checking for flapack library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for flapack library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "flapack"; then

   found_framework=no
   for lib in flapack; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACK_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACK_LIB_DIR=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested LAPACK include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" flapack; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested LAPACK library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  flapack library
##


  fi

  # In some cases, some files need complib.sgimath_mp for the lapack
  # library.  I have created this new var LAPACKMP to keep track of this
  # information.  If the configure script finds complib.sgimath_mp, then
  # the LAPACKMP vars will be updated.  If it does not, then the LAPACK
  # vars will be used.
  HAVE_LAPACKMP=$HAVE_LAPACK
  LAPACKMP_LIB_FLAG=$LAPACK_LIB_FLAG
  LAPACKMP_LIB_DIR_FLAG=$LAPACK_LIB_DIR_FLAG

  if test "$HAVE_LAPACK" != "yes"; then

##
## SCI_TRY_LINK (LAPACK):  complib.sgimath library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACK
## arg 2 : complib.sgimath library
## arg 3 :
## arg 4 :
## arg 5 : complib.sgimath
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACK_LIB_DIR        => lib path
##      LAPACK_LIB_DIR_FLAG   => all the -L's
##      LAPACK_LIB_FLAG       => all the -l's
##      HAVE_LAPACK           => yes or no
##      INC_LAPACK_H          => all the -I's
##      HAVE_LAPACK_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for complib.sgimath library (optional)" >&5
$as_echo_n "checking for complib.sgimath library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for complib.sgimath library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "complib.sgimath"; then

   found_framework=no
   for lib in complib.sgimath; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACK check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACK check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACK only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACK_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACK_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACK_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACK="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACK_H="'$final_incs'"
eval HAVE_LAPACK_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACK_LIB_DIR=''
eval LAPACK_LIB_DIR_FLAG=''
eval LAPACK_LIB_FLAG=''
eval HAVE_LAPACK="no"
eval INC_LAPACK_H=''
eval HAVE_LAPACK_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACK failed.
    To see the failed compile information, look in config.log,
    search for LAPACK. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested LAPACK include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" complib.sgimath; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested LAPACK library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACK):  complib.sgimath library
##


    if test "$HAVE_LAPACK" = "yes"; then
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Using complib for lapack" >&5
$as_echo "$as_me: WARNING: Using complib for lapack" >&2;}

##
## SCI_TRY_LINK (LAPACKMP):  complib.sgimath_mp library
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : LAPACKMP
## arg 2 : complib.sgimath_mp library
## arg 3 :
## arg 4 :
## arg 5 : complib.sgimath_mp
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      LAPACKMP_LIB_DIR        => lib path
##      LAPACKMP_LIB_DIR_FLAG   => all the -L's
##      LAPACKMP_LIB_FLAG       => all the -l's
##      HAVE_LAPACKMP           => yes or no
##      INC_LAPACKMP_H          => all the -I's
##      HAVE_LAPACKMP_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for complib.sgimath_mp library.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for complib.sgimath_mp library (optional)" >&5
$as_echo_n "checking for complib.sgimath_mp library (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for complib.sgimath_mp library must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If  (the -I paths) is blank, do nothing, else do the for statement.

### Take care of arg 5 (the list of libs)

if test -n "complib.sgimath_mp"; then

   found_framework=no
   for lib in complib.sgimath_mp; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of LAPACKMP check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of LAPACKMP check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of LAPACKMP check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of LAPACKMP check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACKMP only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in
  __sci_pass=false
  __sci_first_time=true
  for value in "" ; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for LAPACKMP only one include path may be specified for arg 4 (you had: ).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval LAPACKMP_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval LAPACKMP_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval LAPACKMP_LIB_FLAG="'$final_libs'"
eval HAVE_LAPACKMP="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_LAPACKMP_H="'$final_incs'"
eval HAVE_LAPACKMP_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval LAPACKMP_LIB_DIR=''
eval LAPACKMP_LIB_DIR_FLAG=''
eval LAPACKMP_LIB_FLAG=''
eval HAVE_LAPACKMP="no"
eval INC_LAPACKMP_H=''
eval HAVE_LAPACKMP_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required LAPACKMP failed.
    To see the failed compile information, look in config.log,
    search for LAPACKMP. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for /$i
    if test ! -e /$i; then
     as_fn_error $? "Specifically requested LAPACKMP include file '/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" complib.sgimath_mp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested LAPACKMP library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (LAPACKMP):  complib.sgimath_mp library
##


    fi
  fi

  if test "$HAVE_LAPACK" = "yes"; then
    DEF_LAPACK="#define HAVE_LAPACK 1"
  fi

  if test "$sci_required_lapack" = "yes" -o "$with_lapack" && test ! "$DEF_LAPACK"; then
    echo
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Could not find LAPACK in $_sci_lib" >&5
$as_echo "$as_me: WARNING: Could not find LAPACK in $_sci_lib" >&2;}
    as_fn_error $? "The required LAPACK component is missing." "$LINENO" 5
    echo
  fi

fi









sci_defs_files="$sci_defs_files include/sci_defs/lapack_testdefs.h"

##  --  allow for extra mpi libraries  -----------------------------------

# If --with-mpi-extra-libs is set, then it will be one or more
# absolute paths to additionaly libraries necessary to link MPI.  This
# code parses the given library (libraries) and adds (through the
# MPI_EXTRA flags) to the MPI test link line.

if test "$with_mpi_extra_libs"; then
   the_libs=$(echo $with_mpi_extra_libs | tr "," "\n")
   for lib in $the_libs; do
      if test ! -f "$lib"; then
         as_fn_error $? "Extra MPI lib '$lib' does not exist..." "$LINENO" 5
      else
         the_dir=`dirname $lib`
         if test "$the_dir" == "."; then
            as_fn_error $? "Extra MPI lib '$lib' must include an absolute path..." "$LINENO" 5
         fi
         the_base=`basename $lib | cut -f"1" -d"." | sed 's/lib//g'`
         MPI_EXTRA_LIB_FLAG="$MPI_EXTRA_LIB_FLAG -l$the_base"
         MPI_EXTRA_LIB_DIR="$MPI_EXTRA_LIB_DIR -L$the_dir"
      fi
   done
fi

##  --  search for mpi  --------------------------------------------------
sci_required_mpi="yes"
if test "$sci_required_mpi" = "yes"; then
  echo
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for required MPI components......" >&5
$as_echo "$as_me: checking for required MPI components......" >&6;}
  echo

  if test "$with_mpi" -a \( "$with_mpi_include" -o "$with_mpi_lib" \); then
    as_fn_error $? "Please use either --with-mpi or --with-mpi-lib/include, but not both. " "$LINENO" 5
  fi
  if test "$with_mpi_include" = "yes"; then
    as_fn_error $? "--with-mpi-include=DIR must specify a DIRectory. " "$LINENO" 5
  fi
  if test "$with_mpi_lib" = "yes"; then
    as_fn_error $? "--with-mpi-lib=DIR must specify a DIRectory. " "$LINENO" 5
  fi
  if test \( "$with_mpi_lib" -a "$with_mpi_include" = "" \) -o \( "$with_mpi_lib" = "" -a "$with_mpi_include" \); then
    as_fn_error $? "Both --with-mpi-lib=DIR and --with-mpi-include=DIR must be specified... " "$LINENO" 5
  fi
  if test "$with_mpi_include"; then
    if ! test -d "$with_mpi_include"; then
      as_fn_error $? "The directory specified with --with-mpi-include=DIR is not valid: $with_mpi_include " "$LINENO" 5
    fi
    if ! test -d "$with_mpi_lib"; then
      as_fn_error $? "The directory specified with --with-mpi-lib=DIR is not valid: $with_mpi_lib " "$LINENO" 5
    fi
  fi

  case $host in
  #  *aix*)
        # On LLNL blue pacific, the "mp" compilers (build_scripts) automagically
        # include the paths to mpi stuff...  However, if you don't want
        # them to automatically force you to run in poe (batch) mode, you
        # can comment this out and link in MPI directly yourself.
        # The resulting executable works in non-mpi mode which can be easier
        # to debug (and to get to run as you don't go through the poe system.)
        # It is possible that the executable will not work in MPI mode.
        #
        # AC_MSG_WARN(On blue pacific the mp compilers automatically specify mpi.  No check made.)
        #
        # The reason you have to specify xlC/KCC above, and change it to
        # mpxlC/mpKCC here is that configure uses the compiler to create test
        # programs to figure things out about the system.  If you use
        # the mpCC compiler, then the test programs will not run (as they
        # try to run in POE mode.)
        #
        # CC="mp$CC"
        # CXX="mp$CXX"
        # ;;
     *)
        _sci_optional=optional
        if test "$with_mpi"; then
           if test "$with_mpi" = "yes"; then
              _sci_optional=required
           else
              _sci_optional=specific
              _sci_inc="$with_mpi/include"
              # Account for lib64 or lib32 or just lib...

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$with_mpi/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$with_mpi/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$with_mpi/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$with_mpi/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$with_mpi/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

           fi
        else
          if test "$with_mpi_lib"; then
            _sci_inc="$with_mpi_include"
            _sci_lib="$with_mpi_lib"
          fi
        fi

	# After each attempt to locate mpi, we need to verify that the mpi it
	# chose is in the path we specified.  This is because some machines
	# have MPI installed in a standard location and sometimes will choose
	# that one over the one we specified.
	the_file=libmpi

        # /usr/include/mpi is the standard location of mpi on some linux dists.

##
## SCI_TRY_LINK (MPI):  mpi library and header-1
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-1
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi lam util pmpi $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-1.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpi library and header-1 (optional)" >&5
$as_echo_n "checking for mpi library and header-1 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpi library and header-1 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi lam util pmpi $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpi lam util pmpi $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi lam util pmpi $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-1
##



        if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
           test ! -e $_sci_lib/$the_file.so &&
           test ! -e $_sci_lib/$the_file.a &&
           test ! -e $_sci_lib/$the_file.dylib; then
             { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&5
$as_echo "$as_me: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&2;}
	     HAVE_MPI="no"
        fi

        if test "$HAVE_MPI" != "yes"; then
          # Try without pmpi (and with $THREAD_LIB_FLAG) for the newer version
          # of lam mpi.
          # Use -DMPIPP_H so we don't include mpi++.h where we don't want it.


##
## SCI_TRY_LINK (MPI):  mpi library and header-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-2
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi lam util $THREAD_LIB_FLAG $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpi library and header-2 (optional)" >&5
$as_echo_n "checking for mpi library and header-2 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpi library and header-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi lam util $THREAD_LIB_FLAG $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpi lam util $THREAD_LIB_FLAG $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi lam util $THREAD_LIB_FLAG $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-2
##



          # verify that it was found in the location requested.
          if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
             test ! -e $_sci_lib/$the_file.so &&
             test ! -e $_sci_lib/$the_file.a &&
             test ! -e $_sci_lib/$the_file.dylib; then
             { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&5
$as_echo "$as_me: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&2;}
	     HAVE_MPI="no"
          fi

          if test "$HAVE_MPI" != "yes"; then
             # If building with newer LAM on OSX, pthreads and util not needed.

##
## SCI_TRY_LINK (MPI):  mpi library and header-3
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-3
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : lam mpi $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-3.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpi library and header-3 (optional)" >&5
$as_echo_n "checking for mpi library and header-3 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpi library and header-3 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "lam mpi $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in lam mpi $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" lam mpi $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-3
##



             # verify that it was found in the location requested
             if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
                test ! -e $_sci_lib/$the_file.so &&
                test ! -e $_sci_lib/$the_file.a &&
                test ! -e $_sci_lib/$the_file.dylib; then
                { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Found libmpi but not in the requested directory: $_sci_lib" >&5
$as_echo "$as_me: WARNING: Found libmpi but not in the requested directory: $_sci_lib" >&2;}
                HAVE_MPI="no"
             fi

             if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpi library and header-4
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpi library and header-4
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpi $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 : -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpi library and header-4.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpi library and header-4 (optional)" >&5
$as_echo_n "checking for mpi library and header-4 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpi library and header-4 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpi $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpi $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpi $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpi library and header-4
##



                # verify that it was found in the location requested.
                if test "$HAVE_MPI" = "yes" && test "$_sci_optional" = "specific" &&
                   test ! -e $_sci_lib/$the_file.so &&
                   test ! -e $_sci_lib/$the_file.a &&
                   test ! -e $_sci_lib/$the_file.dylib; then
                   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&5
$as_echo "$as_me: WARNING: Found libmpi but not in requested directory: $_sci_lib" >&2;}
                   HAVE_MPI="no"
                fi

                if test "$HAVE_MPI" != "yes"; then
		   # try mpich with mpich_threadm and mpl library

##
## SCI_TRY_LINK (MPI):  mpich library and header-2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpich library and header-2
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpich_threadm mpl $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header-2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpich library and header-2 (optional)" >&5
$as_echo_n "checking for mpich library and header-2 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpich library and header-2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpich_threadm mpl $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpich_threadm mpl $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpich_threadm mpl $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpich library and header-2
##



                   # try mpich_threadm again without mpl library
                   if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpich library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpich library and header
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpich_threadm $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpich library and header (optional)" >&5
$as_echo_n "checking for mpich library and header (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpich library and header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpich_threadm $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpich_threadm $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpich_threadm $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpich library and header
##


                   fi
                   # try just plain mpich
                   if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpich library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpich library and header
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpich $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpich library and header (optional)" >&5
$as_echo_n "checking for mpich library and header (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpich library and header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpich $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpich $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpich $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpich library and header
##


                   fi
                   # try mpich again with pmpich
                   if test "$HAVE_MPI" != "yes"; then

##
## SCI_TRY_LINK (MPI):  mpich library and header
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI
## arg 2 : mpich library and header
## arg 3 : mpi.h
## arg 4 : $_sci_inc /usr/include/mpi
## arg 5 : mpich pmpich $MPI_EXTRA_LIB_FLAG
## arg 6 : $_sci_lib $MPI_EXTRA_LIB_DIR
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_LIB_DIR        => lib path
##      MPI_LIB_DIR_FLAG   => all the -L's
##      MPI_LIB_FLAG       => all the -l's
##      HAVE_MPI           => yes or no
##      INC_MPI_H          => all the -I's
##      HAVE_MPI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpich library and header.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpich library and header (optional)" >&5
$as_echo_n "checking for mpich library and header (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpich library and header must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/mpi (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/mpi; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/mpi) of MPI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpich pmpich $MPI_EXTRA_LIB_FLAG"; then

   found_framework=no
   for lib in mpich pmpich $MPI_EXTRA_LIB_FLAG; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib $MPI_EXTRA_LIB_DIR"; then

   for path in $_sci_lib $MPI_EXTRA_LIB_DIR; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib $MPI_EXTRA_LIB_DIR (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib $MPI_EXTRA_LIB_DIR; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one library path may be specified for arg 6 (you had: $_sci_lib $MPI_EXTRA_LIB_DIR).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/mpi
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/mpi; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/mpi" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/mpi).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_LIB_DIR='"$_sci_lib $MPI_EXTRA_LIB_DIR"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_H="'$final_incs'"
eval HAVE_MPI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_LIB_DIR=''
eval MPI_LIB_DIR_FLAG=''
eval MPI_LIB_FLAG=''
eval HAVE_MPI="no"
eval INC_MPI_H=''
eval HAVE_MPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI failed.
    To see the failed compile information, look in config.log,
    search for MPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc /usr/include/mpi/$i
    if test ! -e $_sci_inc /usr/include/mpi/$i; then
     as_fn_error $? "Specifically requested MPI include file '$_sci_inc /usr/include/mpi/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpich pmpich $MPI_EXTRA_LIB_FLAG; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.so && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/lib$i.a && test ! -e $_sci_lib $MPI_EXTRA_LIB_DIR/$i.lib; then
     as_fn_error $? "Specifically requested MPI library file '$_sci_lib $MPI_EXTRA_LIB_DIR/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI):  mpich library and header
##


                   fi
                   if test "$HAVE_MPI" = "yes"; then
                      HAVE_MPICH="yes"
                   fi
                fi
             fi
          fi
        fi

        if test "$HAVE_MPI" = "yes"; then
	   if test "$HAVE_MPICH" != "yes"; then
             ########################################################################
             ## Determine if mpi is actually mpich...
             cat > conftest-mpich.cc <<EOF
#include <mpi.h>
int main(int argc, char **argv)
{
  char * s = MPICH_VERSION;
  return 0;
}
EOF
             $CC $INC_MPI_H -c conftest-mpich.cc > /dev/null 2>&1
             if test -f conftest-mpich.o; then
		 { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Note: found what looked like mpi but was actually mpich." >&5
$as_echo "$as_me: WARNING: Note: found what looked like mpi but was actually mpich." >&2;}
                 HAVE_MPICH=yes
             fi
             rm -rf conftest-mpich*
             ########################################################################
           fi

           if test "$IS_WIN" = "yes"; then
             header=""
           else
             header="lib"
           fi
           if test "$_sci_optional" = "specific"; then
              the_file="$header"mpi
              if test "$HAVE_MPICH" = "yes"; then
                the_file="$header"mpich
              fi

              # verify that it was found in the location requested.
              if test ! -e $_sci_lib/$the_file.so &&
                 test ! -e $_sci_lib/$the_file.a &&
                 test ! -e $_sci_lib/$the_file.lib &&
                 test ! -e $_sci_lib/$the_file.dylib; then
                   echo
                   as_fn_error $? "Found libmpi but not in requested directory: $_sci_lib" "$LINENO" 5
              fi
           fi

           if test "$HAVE_MPICH" = "yes"; then
             DEF_MPI="#define HAVE_MPICH 1"
           else
             DEF_MPI="#define HAVE_MPI 1"
           fi
        fi

        if test "$with_mpi" && test ! "$DEF_MPI"; then
          echo
          as_fn_error $? "One or more of the MPI components is missing." "$LINENO" 5
          echo
        fi

  esac

  if test ! "$DEF_MPI"; then
     echo

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "one or more of the MPI components is missing." "$LINENO" 5

  fi

  MPI_LIB_FLAG="$MPI_LIB_FLAG $MALLOC_TRACE_LIB_MPI_FLAG"
  MPI_LIB_DIR_FLAG="$MPI_LIB_DIR_FLAG $MALLOC_TRACE_LIB_DIR_FLAG"
fi #end sci_required_mpi






sci_defs_files="$sci_defs_files include/sci_defs/mpi_testdefs.h"

##  --  search for petsc stuff  ------------------------------------------
# a required check for an optional library for base scirun, due to that
# fact that if MatrixSolver will utilize uni-petsc if it exists, and uni-petsc
# depends upon petsc - also check for mpi-uni as it most often exists in the
# same directory

PETSC_VERSION_DIR=petsc-2.3.2

if test -z "$PETSC_ARCH"; then
case $host in
  *linux*)
    if test "$enable_64bit" = "yes"; then
      PETSC_ARCH=linux64
    else
      PETSC_ARCH=linux
    fi
    ;;
  *-dec*)
    if test "$petsc"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "PETSC ARCH not set for Tru64.  Need to fix this." "$LINENO" 5

    else
      PETSC_ARCH=dec
    fi
    ;;
  *-aix*)
    PETSC_ARCH=aix5.1.0.0
    ;;
  *-darwin*)
      if test `uname -p` = "i386"; then
        PETSC_ARCH=i386
      else
        PETSC_ARCH=ppc
      fi
    ;;
  *-pc-mingw*)
    PETSC_ARCH=win
    ;;
  *)
    PETSC_ARCH=""
    ;;
esac
fi
# check for mpi-uni if either --with-unipetsc or --with-mpiuni,
#   check here to look in petsc's subdirs.
#  --  search for mpi-uni  --------------------------------------------
# Again required for the following uni-petsc checks, that attempt to support
# the MatrixSolver module.

_sci_lib=
_sci_inc=

if test "$with_mpiuni" = "yes"; then
  echo
  as_fn_error $? "You must specify a directory with the --with-mpiuni=dir." "$LINENO" 5
  echo
elif test "$with_unipetsc"; then

  echo
  # To fix this, just do the same thing as below for the full petsc.
  as_fn_error $? "FIX ME... configure for mpiuni is broken... need to handle the PETSC_SUB correctly." "$LINENO" 5
  echo

  _sci_lib="$with_unipetsc/lib/$PETSC_SUB/$PETSC_ARCH"
  if test ! -d "$_sci_lib" || test ! -d "$with_unipetsc/include/mpiuni" ||
     test ! -d "$with_unipetsc/bmake/$PETSC_ARCH" ; then
    echo
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Specified unipetsc directory is invalid.  One of the following dirs does not exist:" >&5
$as_echo "$as_me: WARNING: Specified unipetsc directory is invalid.  One of the following dirs does not exist:" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $_sci_lib" >&5
$as_echo "$as_me: WARNING: $_sci_lib" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $with_unipetsc/include/mpiuni" >&5
$as_echo "$as_me: WARNING: $with_unipetsc/include/mpiuni" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $with_unipetsc/bmake/$PETSC_ARCH" >&5
$as_echo "$as_me: WARNING: $with_unipetsc/bmake/$PETSC_ARCH" >&2;}
    as_fn_error $? "Please fix this problem and reconfigure." "$LINENO" 5
  fi
  _sci_inc="$with_unipetsc/include/mpiuni $with_unipetsc/bmake/$PETSC_ARCH"
fi


##
## SCI_TRY_LINK (MPI_UNI):  mpi-uni libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI_UNI
## arg 2 : mpi-uni libraries and headers
## arg 3 : mpi.h
## arg 4 : $_sci_inc
## arg 5 : mpiuni
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_UNI_LIB_DIR        => lib path
##      MPI_UNI_LIB_DIR_FLAG   => all the -L's
##      MPI_UNI_LIB_FLAG       => all the -l's
##      HAVE_MPI_UNI           => yes or no
##      INC_MPI_UNI_H          => all the -I's
##      HAVE_MPI_UNI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpi-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpi-uni libraries and headers (optional)" >&5
$as_echo_n "checking for mpi-uni libraries and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpi-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI_UNI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpiuni"; then

   found_framework=no
   for lib in mpiuni; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI_UNI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI_UNI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI_UNI only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" mpi.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_UNI_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_MPI_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_UNI_H="'$final_incs'"
eval HAVE_MPI_UNI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_UNI_LIB_DIR=''
eval MPI_UNI_LIB_DIR_FLAG=''
eval MPI_UNI_LIB_FLAG=''
eval HAVE_MPI_UNI="no"
eval INC_MPI_UNI_H=''
eval HAVE_MPI_UNI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI_UNI failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" mpi.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested MPI_UNI include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpiuni; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested MPI_UNI library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI_UNI):  mpi-uni libraries and headers
##



if test "$HAVE_MPI_UNI" != "yes"; then

##
## SCI_TRY_LINK (MPI_UNICH):  mpiunich and pmpiunich libraries
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : MPI_UNICH
## arg 2 : mpiunich and pmpiunich libraries
## arg 3 :
## arg 4 : $_sci_inc
## arg 5 : mpiunich pmpiunich
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      MPI_UNICH_LIB_DIR        => lib path
##      MPI_UNICH_LIB_DIR_FLAG   => all the -L's
##      MPI_UNICH_LIB_FLAG       => all the -l's
##      HAVE_MPI_UNICH           => yes or no
##      INC_MPI_UNICH_H          => all the -I's
##      HAVE_MPI_UNICH_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for mpiunich and pmpiunich libraries.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for mpiunich and pmpiunich libraries (optional)" >&5
$as_echo_n "checking for mpiunich and pmpiunich libraries (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for mpiunich and pmpiunich libraries must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for MPI_UNICH include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNICH check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of MPI_UNICH check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "mpiunich pmpiunich"; then

   found_framework=no
   for lib in mpiunich pmpiunich; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of MPI_UNICH check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of MPI_UNICH check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of MPI_UNICH check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of MPI_UNICH check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI_UNICH only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for MPI_UNICH only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval MPI_UNICH_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval MPI_UNICH_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval MPI_UNICH_LIB_FLAG="'$final_libs'"
eval HAVE_MPI_UNICH="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_MPI_UNICH_H="'$final_incs'"
eval HAVE_MPI_UNICH_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval MPI_UNICH_LIB_DIR=''
eval MPI_UNICH_LIB_DIR_FLAG=''
eval MPI_UNICH_LIB_FLAG=''
eval HAVE_MPI_UNICH="no"
eval INC_MPI_UNICH_H=''
eval HAVE_MPI_UNICH_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required MPI_UNICH failed.
    To see the failed compile information, look in config.log,
    search for MPI_UNICH. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested MPI_UNICH include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" mpiunich pmpiunich; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested MPI_UNICH library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (MPI_UNICH):  mpiunich and pmpiunich libraries
##



   if test "$HAVE_MPI_UNICH" = "yes"; then
     LIB_DIR_MPI_UNI="$LIB_DIR_MPI_UNICH"
     MPI_UNI_LIB_FLAG="$MPI_UNICH_LIB_FLAG"
     MPI_UNI_LIB_DIR_FLAG="$MPI_UNICH_LIB_DIR_FLAG"
   fi
fi

if test "$HAVE_MPI_UNI" = "yes"; then
   if test "$HAVE_MPI_UNICH" = "yes"; then
     DEF_MPI_UNI="#define HAVE_MPI_UNICH 1"
   else
     DEF_MPI_UNI="#define HAVE_MPI_UNI 1"
   fi
fi

if test "$with_mpiuni" && test ! "$DEF_MPI_UNI"; then
  echo
  as_fn_error $? "One or more of the MPI_UNI components is missing." "$LINENO" 5
  echo
fi

if test "$with_unipetsc" && test ! "$DEF_MPI_UNI"; then
  echo
  as_fn_error $? "One or more of the MPI_UNI components is missing." "$LINENO" 5
  echo
fi







#  --  search for PETSc  --------------------------------------------
if test -z "$PETSC_ARCH"; then
   as_fn_error $? "PETSC_ARCH environment var is not set.  Please set." "$LINENO" 5
fi

if test "$with_petsc" == "no"; then # Handle --without option
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"PETSc disabled.\" " >&5
$as_echo "$as_me: WARNING: \"PETSc disabled.\" " >&2;}
else

  if test "$with_petsc" == "built-in"; then
     HAVE_PETSC="yes"
     DEF_PETSC="#define HAVE_PETSC 1"
  else
    # Make sure we have either mpi or mpi-uni, blas, and lapack
    # It seems that under AIX and OSF, the libs that cover blas also cover lapack
    if (test "$HAVE_MPI" = "yes" || test "$HAVE_MPI_UNI" = "yes") && test "$HAVE_BLAS" = "yes" &&
       (test "$PETSC_ARCH" = "aix5.1.0.0" || test "$PETSC_ARCH" = "dec" ||
        test "$HAVE_LAPACK" = "yes"); then

      _sci_lib_dir=
      _sci_inc=

      for petsc_arch in "$PETSC_ARCH" linux-gnu linux-gnu-c-opt; do
        if test "$HAVE_PETSC" = "yes"; then
          break
        fi

        PETSC_SUB=lib/libO

        if test "$with_petsc"; then

          ####################################################
          # The newer (2.3+) versions of petsc don't use the libO anymore...
          have23=`echo "$with_petsc" | grep "2.3."`
          if test -z "$have23" ; then
             petsc_version_major=`grep PETSC_VERSION_MAJOR $with_petsc/include/petscversion.h | grep define | awk '{print $3}'`
             petsc_version_minor=`grep PETSC_VERSION_MINOR $with_petsc/include/petscversion.h | grep define | awk '{print $3}'`
             if test "$petsc_version_major" -eq 2 ; then
                if test "$petsc_version_minor" -eq 3 ; then
                   have23=true
                fi
             fi
          fi
          if test "$have23"; then
             PETSC_SUB=lib
          fi
          ####################################################

          _sci_lib_dir="$with_petsc/$PETSC_SUB/$petsc_arch"
          _sci_inc="$with_petsc/bmake/$petsc_arch $with_petsc/include"
        else
          # Modify _sci_dirs to have correct path information:
          for i in $sci_thirdparty_dir; do
            if test ! -d "$i"; then
              continue
            fi

            # This is where the lib actually lives
            if test ! -d "$i/$PETSC_VERSION_DIR/$PETSC_SUB/$petsc_arch"; then
              continue
            fi

            _sci_lib_dir="$_sci_lib_dir $i/$PETSC_VERSION_DIR/$PETSC_SUB/$petsc_arch"
            _sci_inc="$_sci_inc $i/$PETSC_VERSION_DIR/include $i/$PETSC_VERSION_DIR/bmake/$petsc_arch"
          done
        fi

        # For Petsc 2.2 use this line below:   petsc petscvec petscmat petscdm petscsnes petscts petscksp $LAPACK_LIB_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $MPI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $DL_LIB_FLAG,
        # Use -DMPIPP_H so we don't include mpi++.h where we don't want it.


##
## SCI_TRY_LINK (PETSC):  petsc libraries and headers (petsc_arch = $petsc_arch)
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC
## arg 2 : petsc libraries and headers (petsc_arch = $petsc_arch)
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts petscksp
## arg 6 : $_sci_lib_dir
## arg 7 : $INC_MPI_H -DMPIPP_H $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $MALLOC_TRACE_LIB_DIR_FLAG $MALLOC_TRACE_LIB_FLAG $M_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $DL_LIB_FLAG $THREAD_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PETSC_LIB_DIR        => lib path
##      PETSC_LIB_DIR_FLAG   => all the -L's
##      PETSC_LIB_FLAG       => all the -l's
##      HAVE_PETSC           => yes or no
##      INC_PETSC_H          => all the -I's
##      HAVE_PETSC_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers (petsc_arch = $petsc_arch).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for petsc libraries and headers (petsc_arch = $petsc_arch) (optional)" >&5
$as_echo_n "checking for petsc libraries and headers (petsc_arch = $petsc_arch) (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for petsc libraries and headers (petsc_arch = $petsc_arch) must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for PETSC include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts petscksp"; then

   found_framework=no
   for lib in petsc petscvec petscmat petscdm petscsnes petscts petscksp; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib_dir"; then

   for path in $_sci_lib_dir; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib_dir (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib_dir; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC only one library path may be specified for arg 6 (you had: $_sci_lib_dir).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $INC_MPI_H -DMPIPP_H $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $MALLOC_TRACE_LIB_DIR_FLAG $MALLOC_TRACE_LIB_FLAG $M_LIB_FLAG $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $DL_LIB_FLAG $THREAD_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PETSC_LIB_DIR='"$_sci_lib_dir"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_H="'$final_incs'"
eval HAVE_PETSC_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PETSC_LIB_DIR=''
eval PETSC_LIB_DIR_FLAG=''
eval PETSC_LIB_FLAG=''
eval HAVE_PETSC="no"
eval INC_PETSC_H=''
eval HAVE_PETSC_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PETSC failed.
    To see the failed compile information, look in config.log,
    search for PETSC. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     as_fn_error $? "Specifically requested PETSC include file '$_sci_inc /usr/include/petsc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib_dir/lib$i.so && test ! -e $_sci_lib_dir/lib$i.a && test ! -e $_sci_lib_dir/$i.lib; then
     as_fn_error $? "Specifically requested PETSC library file '$_sci_lib_dir/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC):  petsc libraries and headers (petsc_arch = $petsc_arch)
##



        if test "$HAVE_PETSC" = "yes" ; then
          DEF_PETSC="#define HAVE_PETSC 1"
        fi
      done
      if test "$with_petsc" && test ! "$DEF_PETSC"; then
        echo
        as_fn_error $? "One or more of the PETSc components is missing." "$LINENO" 5
        echo
      fi

      #  --  search for uni-petsc  --------------------------------------------

      if test "$HAVE_PETSC" != "yes" ; then

        # Only check for uni petsc if petsc not found.
        _sci_lib=""
        _sci_inc=""

        if test "$with_unipetsc"; then
          _sci_lib="$with_unipetsc/$PETSC_SUB/$PETSC_ARCH"
          _sci_inc="$with_unipetsc/bmake/$PETSC_ARCH $with_unipetsc/include"
        fi

        # For petsc 2.2 use this line below:  petsc petscvec petscmat petscdm petscsnes petscts petscksp,
        # Use -DMPIPP_H so we don't include mpi++.h where we don't want it.

##
## SCI_TRY_LINK (PETSC_UNI):  petsc-uni libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC_UNI
## arg 2 : petsc-uni libraries and headers
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts petscksp
## arg 6 : $_sci_lib
## arg 7 : $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PETSC_UNI_LIB_DIR        => lib path
##      PETSC_UNI_LIB_DIR_FLAG   => all the -L's
##      PETSC_UNI_LIB_FLAG       => all the -l's
##      HAVE_PETSC_UNI           => yes or no
##      INC_PETSC_UNI_H          => all the -I's
##      HAVE_PETSC_UNI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for petsc-uni libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for petsc-uni libraries and headers (optional)" >&5
$as_echo_n "checking for petsc-uni libraries and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for petsc-uni libraries and headers must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for PETSC_UNI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts petscksp"; then

   found_framework=no
   for lib in petsc petscvec petscmat petscdm petscsnes petscts petscksp; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PETSC_UNI_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_UNI_H="'$final_incs'"
eval HAVE_PETSC_UNI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PETSC_UNI_LIB_DIR=''
eval PETSC_UNI_LIB_DIR_FLAG=''
eval PETSC_UNI_LIB_FLAG=''
eval HAVE_PETSC_UNI="no"
eval INC_PETSC_UNI_H=''
eval HAVE_PETSC_UNI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     as_fn_error $? "Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts petscksp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested PETSC_UNI library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC_UNI):  petsc-uni libraries and headers
##



        if test "$HAVE_PETSC_UNI" = "yes" ; then
          DEF_PETSC_UNI="#define PETSC_UNI 1"
        else
          # Give it a shot on the old petsc-uni version

##
## SCI_TRY_LINK (PETSC_UNI):  petsc libraries and headers - old2
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : PETSC_UNI
## arg 2 : petsc libraries and headers - old2
## arg 3 : petsc.h
## arg 4 : $_sci_inc /usr/include/petsc
## arg 5 : petsc petscvec petscmat petscdm petscsnes petscts
## arg 6 : $_sci_lib
## arg 7 : $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG -DMPIPP_H
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PETSC_UNI_LIB_DIR        => lib path
##      PETSC_UNI_LIB_DIR_FLAG   => all the -L's
##      PETSC_UNI_LIB_FLAG       => all the -l's
##      HAVE_PETSC_UNI           => yes or no
##      INC_PETSC_UNI_H          => all the -I's
##      HAVE_PETSC_UNI_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for petsc libraries and headers - old2.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for petsc libraries and headers - old2 (optional)" >&5
$as_echo_n "checking for petsc libraries and headers - old2 (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "optional" != "optional" -a "optional" != "required" -a "optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for petsc libraries and headers - old2 must be: optional or required or specific.  (You had optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc /usr/include/petsc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc /usr/include/petsc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for PETSC_UNI include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc /usr/include/petsc) of PETSC_UNI check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "petsc petscvec petscmat petscdm petscsnes petscts"; then

   found_framework=no
   for lib in petsc petscvec petscmat petscdm petscsnes petscts; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of PETSC_UNI check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of PETSC_UNI check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC_UNI only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc /usr/include/petsc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc /usr/include/petsc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc /usr/include/petsc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for PETSC_UNI only one include path may be specified for arg 4 (you had: $_sci_inc /usr/include/petsc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $LAPACK_LIB_DIR_FLAG $LAPACK_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $M_LIB_FLAG $INC_MPI_UNI_H $MPI_UNI_LIB_DIR_FLAG $MPI_UNI_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG -DMPIPP_H $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" petsc.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval PETSC_UNI_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval PETSC_UNI_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval PETSC_UNI_LIB_FLAG="'$final_libs'"
eval HAVE_PETSC_UNI="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_PETSC_UNI_H="'$final_incs'"
eval HAVE_PETSC_UNI_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PETSC_UNI_LIB_DIR=''
eval PETSC_UNI_LIB_DIR_FLAG=''
eval PETSC_UNI_LIB_FLAG=''
eval HAVE_PETSC_UNI="no"
eval INC_PETSC_UNI_H=''
eval HAVE_PETSC_UNI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PETSC_UNI failed.
    To see the failed compile information, look in config.log,
    search for PETSC_UNI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" petsc.h; do
    #echo looking for $_sci_inc /usr/include/petsc/$i
    if test ! -e $_sci_inc /usr/include/petsc/$i; then
     as_fn_error $? "Specifically requested PETSC_UNI include file '$_sci_inc /usr/include/petsc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" petsc petscvec petscmat petscdm petscsnes petscts; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested PETSC_UNI library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (PETSC_UNI):  petsc libraries and headers - old2
##


          if test "$HAVE_PETSC_UNI" = "yes" ; then
            DEF_PETSC_UNI="#define PETSC_UNI 1"
          fi
        fi

        if test "$with_unipetsc" && test ! "$DEF_PETSC_UNI"; then
          echo
          as_fn_error $? "One or more of the UNI-PETSC components is missing." "$LINENO" 5
          echo
        fi
      fi
    else
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: One or more of MPI or BLAS or LAPACK is missing." >&5
$as_echo "$as_me: WARNING: One or more of MPI or BLAS or LAPACK is missing." >&2;}
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: HAVE_MPI: $HAVE_MPI" >&5
$as_echo "$as_me: WARNING: HAVE_MPI: $HAVE_MPI" >&2;}
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: HAVE_MPI_UNI: $HAVE_MPI_UNI" >&5
$as_echo "$as_me: WARNING: HAVE_MPI_UNI: $HAVE_MPI_UNI" >&2;}
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: HAVE_BLAS: $HAVE_BLAS" >&5
$as_echo "$as_me: WARNING: HAVE_BLAS: $HAVE_BLAS" >&2;}
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: HAVE_LAPACK: $HAVE_LAPACK" >&5
$as_echo "$as_me: WARNING: HAVE_LAPACK: $HAVE_LAPACK" >&2;}
      { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Not configuring PETSc." >&5
$as_echo "$as_me: WARNING: Not configuring PETSc." >&2;}
    fi
  fi
fi












sci_defs_files="$sci_defs_files include/sci_defs/petsc_testdefs.h"


##  --  search for xalan  ---------------------------------------------------
if test "$sci_required_xalan" ; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for xalan-j." >&5
$as_echo_n "checking for xalan-j.... " >&6; }

  if test "$with_xalan"; then
	dir="$with_xalan"
  fi
  if test -a $dir/bin/xalan.jar -a $dir/bin/xml-apis.jar -a $dir/bin/xercesImpl.jar; then
	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $dir" >&5
$as_echo "$dir" >&6; }
	XALAN_PATH="$dir/bin/xalan.jar:$dir/bin/xml-apis.jar:$dir/bin/xercesImpl.jar"
        DEF_XALAN="#define XALAN 1"
  else
	{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
  fi

  if test "$with_xalana" && test ! "$DEF_XALAN"; then
    echo
    as_fn_error $? "One or more of the XALAN components is missing." "$LINENO" 5
    echo
  fi

fi



##  --  if building uintah, search for TAU makefile  ---------------------

if test "$sci_required_tau" = "yes"; then
  if test ! -f "$with_tau" ; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "$with_tau does not exist.  Bye!" "$LINENO" 5

  fi

  { $as_echo "$as_me:${as_lineno-$LINENO}: result: Using TAU makefile: $with_tau" >&5
$as_echo "Using TAU makefile: $with_tau" >&6; }

  cat > conftest-tau.cc <<EOF

  #include <Profile/Profiler.h>

  int main(int argc, char **argv)
  {
    TAU_PROFILE("main", "int (int, char **)", TAU_DEFAULT);
    TAU_PROFILE_INIT(argc, argv);
    return 0;
  }
EOF

  cat > conftest-tau-makefile <<EOF
include $with_tau
all:
	\$(TAU_CXX) -o conftest-tau-a.out \$(TAU_DEFS) \$(TAU_INCLUDE) conftest-tau.cc \$(TAU_SHLIBS) \$(TAU_MPI_LIBS)
EOF

  ac_try="$MAKE TAU_MAKEFILE=$with_tau -f conftest-tau-makefile > conftestout1 2> conftesterr1"
  (eval $ac_try) 2>&5
  ac_status=$?
  rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
  if test "$ac_status" != 0; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "TAU libraries not working. Bye!" "$LINENO" 5

  fi

  TAU_MAKEFILE="$with_tau"
fi



##  --  search for papi stuff  -------------------------------------------
if test "$sci_required_papi" = "yes"; then

  { $as_echo "$as_me:${as_lineno-$LINENO}: checking for required PAPI components......" >&5
$as_echo "$as_me: checking for required PAPI components......" >&6;}

  if ! test -d "$with_papi"; then
    as_fn_error $? "The directory specified with --with-papi=DIR is not valid: $with_papi " "$LINENO" 5
  fi

  # the major PAPI definitions, etc
  DEF_PAPI=""
  HAVE_PAPI=""
  HAVE_PAPI_H=""
  INC_PAPI_H=""
  PAPI_LIB_DIR=""

  # all the -L's
  PAPI_LIB_DIR_FLAG=""

  # all the -l's
  PAPI_LIB_FLAG=""

  # confirm the existence/location of PAPI lib and include directories
  _papi_lib=
  _papi_inc="$with_papi/include"
  # account for lib64 or lib32 or just lib...

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$with_papi/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$with_papi/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$with_papi/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$with_papi/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$with_papi/lib
    fi
  fi
  eval _papi_lib='"$_new_lib_path"'


  ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


## arguments mean:
## arg 1 : variable base name i.e. MATH
## arg 2 : checking message
## arg 3 : includes that arg 6 needs to compile
## arg 4 : include paths -I
## arg 5 : list of libs to link against -l
## arg 6 : lib paths -L
## arg 7 : extra link flags
## arg 8 : body of code to compile. can be empty
## arg 9 : optional or not-optional required argument
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      PAPI_LIB_DIR        => lib path
##      PAPI_LIB_DIR_FLAG   => all the -L's
##      PAPI_LIB_FLAG       => all the -l's
##      HAVE_PAPI           => yes or no
##      INC_PAPI_H          => all the -I's
##      HAVE_PAPI_H         => yes or no



{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for PAPI libraries and headers (optional)" >&5
$as_echo_n "checking for PAPI libraries and headers (optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

for i in $_papi_inc; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_includes"; then
      _sci_includes=-I$i
    else
      _sci_includes="$_sci_includes -I$i"
    fi
  fi
done


for i in papi; do
  if test -z "$_sci_libs"; then
    _sci_libs=-l$i
  else
    _sci_libs="$_sci_libs -l$i"
  fi
done

_sci_lib_path=

for i in $_papi_lib; do
  # make sure it exists
  if test -d $i; then
    if test -z "$_sci_lib_path"; then
      _sci_lib_path="$LDRUN_PREFIX$i -L$i"
    else
      _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$i -L$i"
    fi
  fi
done

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
LDFLAGS="$_sci_lib_path $LDFLAGS"
LIBS="$_sci_libs  $LIBS"

cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
#include <papi.h>
                        #include <cstdlib>
int
main ()
{
int *event_set = (int*)malloc(sizeof(int));
                        *event_set = PAPI_FP_OPS;
                        long long *flops = (long long *)malloc(sizeof(long long));
                        PAPI_start_counters(event_set, 1);
                        PAPI_stop_counters(flops, 1);
                        free(event_set);
                        free(flops);
  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :

eval PAPI_LIB_DIR='"$_papi_lib"'

if test "$_papi_lib" = "$SCI_THIRDPARTY_LIB_DIR"; then
  eval PAPI_LIB_DIR_FLAG=''
else
  eval PAPI_LIB_DIR_FLAG='"$_sci_lib_path"'
fi

eval PAPI_LIB_FLAG='"$_sci_libs"'
eval HAVE_PAPI="yes"

if test "$_sci_includes" = "$INC_SCI_THIRDPARTY_H"; then
  eval INC_PAPI_H=''
else
  eval INC_PAPI_H='"$_sci_includes"'
fi

eval HAVE_PAPI_H="yes"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval PAPI_LIB_DIR=''
eval PAPI_LIB_DIR_FLAG=''
eval PAPI_LIB_FLAG=''
eval HAVE_PAPI="no"
eval INC_PAPI_H=''
eval HAVE_PAPI_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "optional" = "not-optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required PAPI failed.
    To see the failed compile information, look in config.log,
    search for PAPI. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''


  ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


if test $HAVE_PAPI="yes"; then
  DEF_PAPI="#define USE_PAPI_COUNTERS 1"
fi

fi #end sci_required_papi

# these are all defined after the call to SCI_COMPILE_LINK_TEST






sci_defs_files="$sci_defs_files include/sci_defs/papi_testdefs.h"


##  --  search for freetype stuff  -------------------------------------------
# Default values:
_sci_lib=
_sci_inc=
_sci_optional=optional

if test "$with_freetype" = "yes"; then
  # If --with-freetype is specified without a parameter, then it makes it required
  _sci_optional=required
elif test "$with_freetype"; then
  # If --with-freetype has a parameter, then use it
  _sci_lib="$with_freetype/lib"
  _sci_inc="$with_freetype/include"
  _sci_optional=specific
fi

{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for $_sci_optional freetype" >&5
$as_echo_n "checking for $_sci_optional freetype... " >&6; }

found_freetype_config="no"

if test -z "$_sci_lib"; then
   freetype_bin=/usr/bin
else
   freetype_bin=$_sci_lib/../bin
fi

if test -e $freetype_bin/freetype-config; then
    found_freetype_config="yes"
    echo
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: Using $freetype_bin/freetype-config to set freetype variables." >&5
$as_echo "Using $freetype_bin/freetype-config to set freetype variables." >&6; }

    includes=`$freetype_bin/freetype-config --cflags`
elif test -e $sci_thirdparty_dir/bin/freetype-config; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: Using $sci_thirdparty_dir/bin/freetype-config to set freetype variables." >&5
$as_echo "Using $sci_thirdparty_dir/bin/freetype-config to set freetype variables." >&6; }
    found_freetype_config="yes"
    includes=`$sci_thirdparty_dir/bin/freetype-config --cflags`
    _sci_lib="$sci_thirdparty_lib"
else
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: No 'freetype-config' file found in $freetype_bin." >&5
$as_echo "No 'freetype-config' file found in $freetype_bin." >&6; }
    # try the 3P for windows
    _sci_lib="$sci_thirdparty_lib"
    _sci_inc="$sci_thirdparty_include"
    includes=""
fi

##
## SCI_TRY_LINK (FREETYPE):  freetype library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : FREETYPE
## arg 2 : freetype library and headers
## arg 3 : ft2build.h
## arg 4 : $_sci_inc
## arg 5 : freetype
## arg 6 : $_sci_lib
## arg 7 : $includes
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      FREETYPE_LIB_DIR        => lib path
##      FREETYPE_LIB_DIR_FLAG   => all the -L's
##      FREETYPE_LIB_FLAG       => all the -l's
##      HAVE_FREETYPE           => yes or no
##      INC_FREETYPE_H          => all the -I's
##      HAVE_FREETYPE_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for freetype library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for freetype library and headers ($_sci_optional)" >&5
$as_echo_n "checking for freetype library and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for freetype library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for FREETYPE include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FREETYPE check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of FREETYPE check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "freetype"; then

   found_framework=no
   for lib in freetype; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of FREETYPE check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of FREETYPE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of FREETYPE check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of FREETYPE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for FREETYPE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for FREETYPE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $includes $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" ft2build.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval FREETYPE_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval FREETYPE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval FREETYPE_LIB_FLAG="'$final_libs'"
eval HAVE_FREETYPE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_FREETYPE_H="'$final_incs'"
eval HAVE_FREETYPE_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval FREETYPE_LIB_DIR=''
eval FREETYPE_LIB_DIR_FLAG=''
eval FREETYPE_LIB_FLAG=''
eval HAVE_FREETYPE="no"
eval INC_FREETYPE_H=''
eval HAVE_FREETYPE_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required FREETYPE failed.
    To see the failed compile information, look in config.log,
    search for FREETYPE. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" ft2build.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested FREETYPE include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" freetype; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested FREETYPE library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (FREETYPE):  freetype library and headers
##



if test "$HAVE_FREETYPE" = "yes"; then
  INC_FREETYPE_H="$INC_FREETYPE_H $includes"
  DEF_FREETYPE="#define HAVE_FREETYPE 1"
elif test "$found_freetype_config" = "no"; then
   if test "$_sci_optional" != "optional"; then
     echo
     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Cannot find a freetype-config file to get freetype variables." >&5
$as_echo "$as_me: WARNING: Cannot find a freetype-config file to get freetype variables." >&2;}
     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: This file usually resides in freetypelib_dir/../bin/freetype-config." >&5
$as_echo "$as_me: WARNING: This file usually resides in freetypelib_dir/../bin/freetype-config." >&2;}
     { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Please install freetype and then reconfigure." >&5
$as_echo "$as_me: WARNING: Please install freetype and then reconfigure." >&2;}
   fi
fi

if test "$with_freetype" && test ! "$DEF_FREETYPE"; then
  echo
  as_fn_error $? "One or more of the freetype components is missing." "$LINENO" 5
fi






##  --  search for teem  -------------------------------------------------

# Default values: (Really required, but need to give info to user if fails.)
#                 (See below.)
_sci_optional=optional
_sci_lib=
_sci_inc=

if test "$with_teem"; then
  if test "$with_teem" = "yes"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Teem is already required - you do not need to specify --with-teem." >&5
$as_echo "$as_me: WARNING: Teem is already required - you do not need to specify --with-teem." >&2;}
  else
    # If --with-teem has a parameter, then use it
    _sci_lib="$with_teem"
    _sci_inc="$with_teem/include"

##
## BASE_LIB_PATH:
##
## This macro takes the base path of a library and determines
## if there is a lib32, lib64, or just plain lib that is
## associated with it.  It sets the full path to the value of
## the first argument.
##
## eg:  if arg 2 is /usr/sci/local, and the machine has a
## /usr/sci/local/lib64, and configure is in 64 bit mode, then
## /sur/sci/local/lib64 is set as the value of arg 1.
##
## arguments mean:
## arg 1 : This argument will be written with the result
## arg 2 : library base.  I.e. /usr, /usr/local, /usr/X11R6
##
## This function assums the enable_64bit variable is in scope
##

  _new_lib_path=$_sci_lib/lib

  ## if 64 bit is enabled, check for lib64 first, otherwise use lib
  if test "$enable_64bit" = "yes"; then
    _new_lib_path=$_sci_lib/lib64
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  else
  ## We should look for lib32 (IRIX), then default to lib
    _new_lib_path=$_sci_lib/lib32
    if test ! -e $_new_lib_path; then
      _new_lib_path=$_sci_lib/lib
    fi
  fi
  eval _sci_lib='"$_new_lib_path"'

    _sci_optional=required
  fi

  # Determine if teem is using png.  Assume teem is either in the 3rd Party
  # or where the user has specified (as we are going to use nm to look at its
  # symbols and are not trying to link against it (at this point.))

  result=`nm $_sci_lib/libteem.so | grep png_write_info`
  if test _sci_optional != "optional" && test -n "$result" && test "$HAVE_PNG" != "yes"; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Teem was built with PNG support.  However the Uintah configure" >&5
$as_echo "$as_me: WARNING: Teem was built with PNG support.  However the Uintah configure" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: did not find PNG.  You need to determine where it is... as" >&5
$as_echo "$as_me: WARNING: did not find PNG.  You need to determine where it is... as" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Teem seems to have found it already.  You will most likely then need" >&5
$as_echo "$as_me: WARNING: Teem seems to have found it already.  You will most likely then need" >&2;}
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: to use --with-png=/dir/above/dir/having/libpng on your configure line." >&5
$as_echo "$as_me: WARNING: to use --with-png=/dir/above/dir/having/libpng on your configure line." >&2;}
    as_fn_error $? "Please fix this problem and then configure again." "$LINENO" 5
  fi


##
## SCI_TRY_LINK (TEEM):  teem library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : TEEM
## arg 2 : teem library and headers
## arg 3 : teem/nrrd.h teem/ten.h
## arg 4 : $_sci_inc
## arg 5 : teem
## arg 6 : $_sci_lib
## arg 7 : $M_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      TEEM_LIB_DIR        => lib path
##      TEEM_LIB_DIR_FLAG   => all the -L's
##      TEEM_LIB_FLAG       => all the -l's
##      HAVE_TEEM           => yes or no
##      INC_TEEM_H          => all the -I's
##      HAVE_TEEM_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for teem library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for teem library and headers ($_sci_optional)" >&5
$as_echo_n "checking for teem library and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for teem library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for TEEM include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TEEM check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of TEEM check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "teem"; then

   found_framework=no
   for lib in teem; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of TEEM check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of TEEM check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of TEEM check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of TEEM check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for TEEM only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for TEEM only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $M_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" teem/nrrd.h teem/ten.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

               float a[3], b[9], c[7];
               tenEigensolve_f(a,b,c);


  ;
  return 0;
}
_ACEOF
if ac_fn_c_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval TEEM_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval TEEM_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval TEEM_LIB_FLAG="'$final_libs'"
eval HAVE_TEEM="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_TEEM_H="'$final_incs'"
eval HAVE_TEEM_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval TEEM_LIB_DIR=''
eval TEEM_LIB_DIR_FLAG=''
eval TEEM_LIB_FLAG=''
eval HAVE_TEEM="no"
eval INC_TEEM_H=''
eval HAVE_TEEM_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required TEEM failed.
    To see the failed compile information, look in config.log,
    search for TEEM. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" teem/nrrd.h teem/ten.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested TEEM include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" teem; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested TEEM library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (TEEM):  teem library and headers
##



  if test "$HAVE_TEEM" = "yes"; then
     DEF_TEEM="#define HAVE_TEEM 1"
  fi
fi






sci_defs_files="$sci_defs_files include/sci_defs/teem_testdefs.h"

##  --  search for hdf5  -------------------------------------------------
ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu

# The sci_required_hdf5 could have been set to yes when using the
# with_hdf5 agument or from a package in the aclocal.m4 it.
# These are the only two locations that the sci_required_* should be set.

if test "$sci_required_hdf5" = "yes"; then

  _sci_optional=required
  if test "$with_hdf5"; then
    if test "$with_hdf5" != "yes"; then
      _sci_lib="$with_hdf5/lib"			# user defined directory
      _sci_inc="$with_hdf5/include"
      _sci_optional=specific
    fi
  fi


##
## SCI_TRY_LINK (HDF5):  hdf5 library and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : HDF5
## arg 2 : hdf5 library and headers
## arg 3 : hdf5.h H5Cpp.h
## arg 4 : $_sci_inc
## arg 5 : hdf5 hdf5_cpp
## arg 6 : $_sci_lib
## arg 7 :
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      HDF5_LIB_DIR        => lib path
##      HDF5_LIB_DIR_FLAG   => all the -L's
##      HDF5_LIB_FLAG       => all the -l's
##      HAVE_HDF5           => yes or no
##      INC_HDF5_H          => all the -I's
##      HAVE_HDF5_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for hdf5 library and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for hdf5 library and headers ($_sci_optional)" >&5
$as_echo_n "checking for hdf5 library and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for hdf5 library and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for HDF5 include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HDF5 check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HDF5 check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "hdf5 hdf5_cpp"; then

   found_framework=no
   for lib in hdf5 hdf5_cpp; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of HDF5 check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of HDF5 check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of HDF5 check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of HDF5 check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for HDF5 only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for HDF5 only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs  $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" hdf5.h H5Cpp.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval HDF5_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval HDF5_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval HDF5_LIB_FLAG="'$final_libs'"
eval HAVE_HDF5="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_HDF5_H="'$final_incs'"
eval HAVE_HDF5_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval HDF5_LIB_DIR=''
eval HDF5_LIB_DIR_FLAG=''
eval HDF5_LIB_FLAG=''
eval HAVE_HDF5="no"
eval INC_HDF5_H=''
eval HAVE_HDF5_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required HDF5 failed.
    To see the failed compile information, look in config.log,
    search for HDF5. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" hdf5.h H5Cpp.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested HDF5 include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" hdf5 hdf5_cpp; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested HDF5 library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (HDF5):  hdf5 library and headers
##



  # Set the DEF_HDF5 var which is placed in the hdf5_testdefs.h.in
  # Incude hdf5_defs.h in your code to optionally use the library.
  if test "$HAVE_HDF5" = "yes"; then
     DEF_HDF5="#define HAVE_HDF5 1"
  fi

fi #end sci_required_hdf5

		# Place this var in the hdf5_testdefs.h.in
		# Place this var in the configVars.mk.in
		# Place this var in the configVars.mk.in
	# Place this var in the configVars.mk.in
sci_defs_files="$sci_defs_files include/sci_defs/hdf5_testdefs.h"
ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


##  --  search for Boost ------------------------

if test "$with_boost"; then
  if test "$with_boost" = "yes"; then
    as_fn_error $? "--with-boost=DIR requires a DIRectory be provided. " "$LINENO" 5
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Boost files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for Boost files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_boost; then
      echo ""
      as_fn_error $? "'$with_boost' directory does not exist. " "$LINENO" 5
    fi
    # Check for header files
    BOOST_INCLUDE_DIR=$with_boost/include/boost
    for file in signal.hpp shared_ptr.hpp bind.hpp signal.hpp shared_ptr.hpp ref.hpp graph/adjacency_list.hpp graph/graph_traits.hpp \
                graph/topological_sort.hpp graph/graphviz.hpp graph/breadth_first_search.hpp graph/visitors.hpp graph/transpose_graph.hpp \
                shared_ptr.hpp any.hpp; do
      if test ! -f $BOOST_INCLUDE_DIR/$file; then
        echo ""
        as_fn_error $? "'$BOOST_INCLUDE_DIR/$file' does not exist. " "$LINENO" 5
      fi
    done
    # Check for libraries files
    BOOST_LIB_DIR=$with_boost/lib
    for file in libboost_thread-mt libboost_signals-mt libboost_serialization; do
      EXT=$SO_OR_ARCHIVE_EXTENSION
      if test ! -f $BOOST_LIB_DIR/$file.$EXT; then
        echo ""
        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $file.$EXT lib does not exist... looking for non-mt version..." >&5
$as_echo "$as_me: WARNING: $file.$EXT lib does not exist... looking for non-mt version..." >&2;}
        short_name="`echo $file | cut -f1 -d"-"`.$EXT"
        if test ! -f $BOOST_LIB_DIR/$short_name; then
            as_fn_error $? "$BOOST_LIB_DIR/$short_name lib does not exist!" "$LINENO" 5
        else
            short_name=`echo $short_name | cut -f1 -d"." | cut -c4-`
            BOOST_LIB_FLAG="$BOOST_LIB_FLAG -l$short_name"
        fi
      else
        short_name=`echo $file | cut -f1 -d"." | cut -c4-`
        BOOST_LIB_FLAG="$BOOST_LIB_FLAG -l$short_name"
      fi
    done
  fi
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: Found Boost" >&5
$as_echo "Found Boost" >&6; }
  DEF_BOOST="#define HAVE_BOOST 1"
  if test "$with_boost" != "/usr"; then
    # If with_boost points to /usr, then we don't need to explicitly point to it...
    INC_BOOST_H="-I$with_boost/include"
    BOOST_LIB_DIR_FLAG="$LDRUN_PREFIX$with_boost/lib -L$with_boost/lib"
  fi
  HAVE_BOOST="yes"
fi






##  --  Handle --enable-wasatch_3p... ------------------------

if test "$wasatch_3p" = "yes"; then

  if test "$HAVE_BOOST" != "yes"; then
      as_fn_error $? "Option --enable-wasatch_3p requires Boost... <--with-boost=DIR> " "$LINENO" 5
  fi
#  if test "$HAVE_HDF5" != "yes"; then
#      AC_MSG_ERROR( Option --enable-wasatch_3p requires HDF5... <--with-hdf5=DIR> )
#  fi
  if test "$with_tabprops"; then
     as_fn_error $? "Do NOT specify both --with-tabprops and --enable-wasatch_3p " "$LINENO" 5
  fi
  if test "$with_spatialops"; then
     as_fn_error $? "Do NOT specify both --with-spatialops and --enable-wasatch_3p " "$LINENO" 5
  fi
  if test "$with_exprlib"; then
     as_fn_error $? "Do NOT specify both --with-exprlib and --enable-wasatch_3p " "$LINENO" 5
  fi

  mkdir -p Wasatch3P

  $path_to_src/build_scripts/build_wasatch_3p.sh `$sci_pwd` "$with_boost" "$debug"

  if test $? != 0; then
     as_fn_error $? "Failed to build Wasatch 3p libraries... " "$LINENO" 5
  fi

  with_spatialops=`$sci_pwd`/Wasatch3P/install/SpatialOps
  with_exprlib=`$sci_pwd`/Wasatch3P/install/ExprLib
  with_tabprops=`$sci_pwd`/Wasatch3P/install/TabProps
fi

##  --  search for SpatialOps Library ------------------------

if test "$with_spatialops"; then
  if test "$HAVE_BOOST" != "yes"; then
    as_fn_error $? "--with-spatialops=DIR requires Boost. " "$LINENO" 5
  fi

  if test "$with_spatialops" = "yes"; then
    as_fn_error $? "--with-spatialops=DIR requires a DIRectory be provided. " "$LINENO" 5
  else

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for SpatialOps files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for SpatialOps files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_spatialops; then
      echo ""
      as_fn_error $? "'$with_spatialops' directory does not exist. " "$LINENO" 5
    fi
    SPOPS_INCLUDE_DIR="include/spatialops"
    # Check includes
    for file in FieldExpressions.h FieldFunctions.h OperatorDatabase.h \
                structured/SpatialField.h SpatialOpsConfigure.h SpatialOpsDefs.h SpatialOpsTools.h \
                particles structured; do
      if test ! -e $with_spatialops/$SPOPS_INCLUDE_DIR/$file; then
        echo ""
        as_fn_error $? "'$with_spatialops/$SPOPS_INCLUDE_DIR/$file' does not exist. " "$LINENO" 5
      fi
    done
    # Check lib
    if test ! -f $with_spatialops/lib/spatialops/libspatialops.a; then
      echo ""
      as_fn_error $? "'$with_spatialops/lib/spatialops/libspatialops.a' does not exist. " "$LINENO" 5
    fi
  fi
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  DEF_SPATIALOPS="#define HAVE_SPATIALOPS 1"
  INC_SPATIALOPS_H="-I$with_spatialops/include"
  SPATIALOPS_LIB_DIR_FLAG="-L$with_spatialops/lib/spatialops"
  SPATIALOPS_LIB_FLAG="-lspatialops -lspatialops-stencil"
  HAVE_SPATIALOPS="yes"
fi






##  --  search for Exprlib Library ------------------------

if test "$with_exprlib"; then
  if test "$HAVE_SPATIALOPS" != "yes"; then
    as_fn_error $? "--with-exprlib=DIR requires SpatialOps. " "$LINENO" 5
  fi

  if test "$with_exprlib" = "yes"; then
    as_fn_error $? "--with-exprlib=DIR requires a DIRectory be provided. " "$LINENO" 5
  else

    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for Exprlib files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for Exprlib files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_exprlib; then
      echo ""
      as_fn_error $? "'$with_exprlib' directory does not exist. " "$LINENO" 5
    fi
    SPOPS_INCLUDE_DIR="include/expression"
    # Check includes
    for file in ExprDeps.h ExprLib.h Expr_Context.h Expr_Expression.h Expr_ExpressionID.h Expr_FieldManagerList.h \
                ExpressionBase.h ExpressionFactory.h ExpressionRegistry.h ExpressionTree.h FieldDeps.h FieldManager.h FieldManagerBase.h \
                Functions.h PlaceHolderExpr.h Tag.h TransportEquation.h uintah; do
      if test ! -e $with_exprlib/$SPOPS_INCLUDE_DIR/$file; then
        echo ""
        as_fn_error $? "'$with_exprlib/$SPOPS_INCLUDE_DIR/$file' does not exist. " "$LINENO" 5
      fi
    done
    # Check lib
    if test ! -f $with_exprlib/lib/expression/libexprlib.a; then
      echo ""
      as_fn_error $? "'$with_exprlib/lib/expression/libexprlib.a' does not exist. " "$LINENO" 5
    fi
  fi
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  DEF_EXPRLIB="#define HAVE_EXPRLIB 1"
  INC_EXPRLIB_H="-I$with_exprlib/include"
  EXPRLIB_LIB_DIR_FLAG="-L$with_exprlib/lib/expression"
  EXPRLIB_LIB_FLAG="-lexprlib"
  HAVE_EXPRLIB="yes"
fi






##  --  search for TabProps ------------------------

if test "$with_tabprops"; then

  if test "$with_tabprops" = "yes"; then
    as_fn_error $? "--with-tabprops=DIR requires a DIRectory be provided. " "$LINENO" 5
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: checking for TabProps files (For now we are just verifying the existence of lib and .h files)" >&5
$as_echo_n "checking for TabProps files (For now we are just verifying the existence of lib and .h files)... " >&6; }
    if test ! -d $with_tabprops; then
      as_fn_error $? "'$with_tabprops' directory does not exist. " "$LINENO" 5
    fi
    for file in include/tabprops/BSpline.h include/tabprops/LU.h include/tabprops/StateTable.h lib/tabprops/libtabprops.a; do
      if test ! -f $with_tabprops/$file; then
        as_fn_error $? "'$with_tabprops/$file' does not exist. " "$LINENO" 5
      fi
    done
  fi
  { $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }
  DEF_TABPROPS="#define HAVE_TABPROPS 1"
  INC_TABPROPS_H="-I$with_tabprops/include"
  TABPROPS_LIB_DIR_FLAG="-L$with_tabprops/lib/tabprops"
  TABPROPS_LIB_FLAG="-ltabprops"
  HAVE_TABPROPS="yes"
fi






##  --  Determine whether we can use WASATCH OR NOT ----------------------

if test "$USE_WASATCH" = yes; then
   if test "$HAVE_BOOST" = "yes" &&
     test "$HAVE_TABPROPS" = "yes" &&
     test "$HAVE_SPATIALOPS" = "yes" &&
     test "$HAVE_EXPRLIB" = "yes"; then
    BUILD_WASATCH=yes
  else
    as_fn_error $? "You specified the use of the Wasatch component but do not have all the of the prereqs: Boost ($HAVE_BOOST); TabProps ($HAVE_TABPROPS); SpatialOps ($HAVE_SPATIALOPS); and ExprLib ($HAVE_EXPRLIB)." "$LINENO" 5
  fi
else
  if test "$HAVE_BOOST" = "yes" &&
     test "$HAVE_TABPROPS" = "yes" &&
     test "$HAVE_SPATIALOPS" = "yes" &&
     test "$HAVE_EXPRLIB" = "yes"; then
    BUILD_WASATCH=yes
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: All prereqs satisfied" >&5
$as_echo "$as_me: WARNING: All prereqs satisfied" >&2;}
  fi
fi

if test "$BUILD_WASATCH" = no; then
  DEF_WASATCH="#define NO_WASATCH";
fi


##  --  search for hypre stuff  ------------------------------------------

_sci_lib=
_sci_inc=
_sci_optional=optional

# Handle --without option
if test "$with_hypre" = "no"; then
   { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: \"Hypre is turned off.\" " >&5
$as_echo "$as_me: WARNING: \"Hypre is turned off.\" " >&2;}
else
   if test "$with_hypre" = "yes"; then
      _sci_optional=required
   elif test "$with_hypre"; then
      _sci_lib="$with_hypre/lib"
      _sci_inc="$with_hypre/include"
      _sci_optional=specific
   fi

   # # We used to also check for HYPRE_blas, but hypre 1.9 doesn't have it,
   # # so we aren't going to check for it in any version.  If the other 3
   # # libs exist, we will assume that HYPRE_blas is there if it is needed.
   # SCI_TRY_LINK(HYPRE,HYPRE libraries and headers,HYPRE.h,$_sci_inc,
   #                          HYPRE_struct_mv HYPRE_struct_ls HYPRE_sstruct_mv HYPRE_sstruct_ls HYPRE_LSI HYPRE_superlu HYPRE_utilities,
   #                          $_sci_lib,-lm,,$_sci_optional)

   # We should just be able to link vs. libHYPRE.so...
   #   Also, libHYPRE has some C++ stuff in it, so we need to be in C++ mode...
   ac_ext=cpp
ac_cpp='$CXXCPP $CPPFLAGS'
ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_cxx_compiler_gnu


##
## SCI_TRY_LINK (HYPRE):  HYPRE libraries and headers
##
## arguments mean:
## arg 1 : variable base name (e.g., MATH)
## arg 2 : checking message
## arg 3 : includes that arg 8 needs to compile (e.g., math.h)
##           If the first arg is "extern_C", then extern "C" is added around includes.
## arg 4 : include path(s). -I is appended to each path (unless it already has a -I).
##           Any other -? args are removed.  (-faltivec is ok on mac)
##           (Only one may be given if "Specific" (arg9) is chosen.)
## arg 5 : list of libs to link against
##           If the libraries do not have a '-l' on them, it is appeneded.
##           If the arg has any prefix besides '-l' (eg: -L or -D), then the arg
##           is removed completely.  (-framework is also allowed for Mac support.)
##           All the libs specified in arg 5 will be part of the <VAR>_LIB_FLAG
##           if the link is successful.
## arg 6 : lib paths
##           If the arg does not have -L on it, then -L will be added.
##           If it has any other -?, then the arg is removed.
##           (only one may be givein if "Specific" (arg9) is chosen.)
## arg 7 : extra link flags
##           This is where to put anything else you need for the compilation
##           line.  NOTE, none of these args propagate anywhere.
## arg 8 : body of code to compile. May be EMPTY, in which case a dummy routine is tried.
## arg 9 : 'optional' or 'required' or 'specific' required argument
##             If specific, then SCI_TRY_LINK will take only one lib
##             path and one include path and will verify that the
##             libs/includes are in that path.
##
## Here are the specific values for this invocation:
##
## arg 1 : HYPRE
## arg 2 : HYPRE libraries and headers
## arg 3 : HYPRE.h
## arg 4 : $_sci_inc
## arg 5 : HYPRE
## arg 6 : $_sci_lib
## arg 7 : $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG $MALLOC_TRACE_LIB_DIR_FLAG $MALLOC_TRACE_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $M_LIB_FLAG $DL_LIB_FLAG $THREAD_LIB_FLAG
## arg 8 : <Can't expand it here as it may be multiple lines and cause sh problems.>
## arg 9 : $_sci_optional
##
## after execution of macro, the following will be defined:
##      Variable            Value
##      --------            -----
##      HYPRE_LIB_DIR        => lib path
##      HYPRE_LIB_DIR_FLAG   => all the -L's
##      HYPRE_LIB_FLAG       => all the -l's
##      HAVE_HYPRE           => yes or no
##      INC_HYPRE_H          => all the -I's
##      HAVE_HYPRE_H         => yes or no

if test 9 != 9; then
     as_fn_error $? "Wrong number of parameters (9) for SCI-TRY-LINK for HYPRE libraries and headers.  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi


{ $as_echo "$as_me:${as_lineno-$LINENO}: checking for HYPRE libraries and headers ($_sci_optional)" >&5
$as_echo_n "checking for HYPRE libraries and headers ($_sci_optional)... " >&6; }
_sci_savelibs=$LIBS
_sci_saveldflags=$LDFLAGS
_sci_savecflags=$CFLAGS
_sci_savecxxflags=$CXXFLAGS

_sci_includes=

if test "$_sci_optional" != "optional" -a "$_sci_optional" != "required" -a "$_sci_optional" != "specific"; then
     echo
     as_fn_error $? "Last parameter of SCI-TRY-LINK for HYPRE libraries and headers must be: optional or required or specific.  (You had $_sci_optional.)  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
fi

# If $_sci_inc (the -I paths) is blank, do nothing, else do the for statement.

for inc in $_sci_inc; do

  if test "$inc" = "/usr/include" || test "$inc" = "-I/usr/include"; then
     echo ""
     as_fn_error $? "Please do not specify /usr/include as the location for HYPRE include files." "$LINENO" 5
  fi

  # Make sure it doesn't have any thing but -I
  #   The following "sed" replaces anything that starts with a '-' with nothing (blank).
  has_minus_faltivec=no
  has_minus=`echo $inc | sed 's/-.*//'`
  if test -z "$has_minus"; then
     has_minus_i=`echo $inc | sed 's/-I.*//'`
     has_minus_faltivec=`echo $inc | sed 's/-faltivec//'`
     if test -n "$has_minus_i" && test -n "$has_minus_faltivec"; then
        # Has some other -?.
        if test "$debugging" = "yes"; then
          echo
          { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HYPRE check.  Skipping $inc." >&5
$as_echo "$as_me: WARNING: Only -I options are allowed in arg 4 ($_sci_inc) of HYPRE check.  Skipping $inc." >&2;}
        fi
        continue
     fi
  fi

  the_inc=`echo $inc | grep "^\-I"`
  if test -z "$the_inc" && test "$has_minus_faltivec" = "no"; then
     # If the include arg does not already have -I on it.
     if test -d $inc; then
        # If the directory exists
        _sci_includes="$_sci_includes -I$inc"
     fi
  else
     # It already has -I so just add it directly.
     _sci_includes="$_sci_includes $inc"
  fi
done

### Take care of arg 5 (the list of libs)

if test -n "HYPRE"; then

   found_framework=no
   for lib in HYPRE; do

      if test "$found_framework" = "one"; then
         found_framework=two
      else
         found_framework=no
      fi

      # Make sure it doesn't have any thing but -l
      has_minus=`echo $lib | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_l=`echo $lib | sed 's/-l.*//'`
         has_minus_framework=`echo $lib | sed 's/-framework.*//'`

         if test -z "$has_minus_framework"; then
            # Two rounds for this loop with respect to frameworks.
            # First round is to skip adding -l to the beginning of -framework.
            # Second round is to not add -l to the framework lib.
            found_framework=one
         fi

         if test -n "$has_minus_l" && test -n "$has_minus_framework"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -l options are allowed in arg 5 of HYPRE check (disregarding $lib)." >&5
$as_echo "$as_me: WARNING: Only -l options are allowed in arg 5 of HYPRE check (disregarding $lib)." >&2;}
            fi
            continue
         fi
      fi

      the_lib=`echo $lib | grep "^\-l"`
      if test -z "$the_lib" && test "$found_framework" = "no"; then
         # If the lib arg does not have -l on it, then add -l.
         if test "$IS_VC" = "yes"; then
           if test -n "`echo $lib | sed 's,.*\.lib,,'`"; then
             final_lib=$lib.lib
           else
             final_lib=$lib
           fi
         else
           final_lib=-l$lib
         fi
      else
         # It already has -l so just add it directly.
         final_lib=$lib
      fi
      _sci_libs="$_sci_libs $final_lib"
   done
fi

### Take care of arg 6 (the list of lib paths)

if test -n "$_sci_lib"; then

   for path in $_sci_lib; do

      # Make sure it doesn't have any thing but -L
      has_minus=`echo $path | sed 's/-.*//'`
      if test -z "$has_minus"; then
         has_minus_L=`echo $path | sed 's/-L.*//'`
         if test -n "$has_minus_L"; then
            # Has some other -?.
            if test "$debugging" = "yes"; then
              echo
              { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Only -L options are allowed in arg 6 of HYPRE check (disregarding $path)." >&5
$as_echo "$as_me: WARNING: Only -L options are allowed in arg 6 of HYPRE check (disregarding $path)." >&2;}
            fi
            continue
         fi
      fi

      # Remove the '-L' (if it has one).
      the_path=`echo $path | sed 's/-L//'`
      if test -d "$the_path"; then
         _sci_lib_path="$_sci_lib_path $LDRUN_PREFIX$the_path -L$the_path"
      else
         echo
         { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: The path given $the_path is not a valid directory... ignoring." >&5
$as_echo "$as_me: WARNING: The path given $the_path is not a valid directory... ignoring." >&2;}
      fi
   done
fi

if test "$_sci_optional" = "specific"; then
  # If 'specific' then only one lib is allowed:
  ### Determine if there is only one item in $_sci_lib (I don't know of a better way to do this.)
  __sci_pass=false
  __sci_first_time=true

  # Must have the "" for the SGI sh.
  for value in "" $_sci_lib; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for HYPRE only one library path may be specified for arg 6 (you had: $_sci_lib).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
  # and only one include path:
  ### Determine if there is only one item in $_sci_inc
  __sci_pass=false
  __sci_first_time=true
  for value in "" $_sci_inc; do
    if test "$value" = ""; then
      continue
    fi
    if test $__sci_first_time = "true"; then
      __sci_first_time=false
      __sci_pass=true
    else
      __sci_pass=false
    fi
  done
  if test -n "$_sci_inc" && test $__sci_pass != "true"; then
       as_fn_error $? "For specific SCI-TRY-LINK test for HYPRE only one include path may be specified for arg 4 (you had: $_sci_inc).  This is an internal SCIRun configure error and should be reported to scirun-develop@sci.utah.edu." "$LINENO" 5
  fi
fi

### Debug messages:
#echo "sci_includes: $_sci_includes"
#echo "sci_libs: $_sci_libs"
#echo "sci_lib_path: $_sci_lib_path"

CFLAGS="$_sci_includes $CFLAGS"
CXXFLAGS="$_sci_includes $CXXFLAGS"
if test "$IS_VC" = "yes"; then
  oldLIB=$LIB
  export LIB="`echo $_sci_lib_path | sed 's, -LIBPATH:,;,g' | sed 's,-LIBPATH:,,g' | sed 's, -L,;,g' | sed 's,-L,,g'`;$LIB"
else
  LDFLAGS="$_sci_lib_path $LDFLAGS"
fi

LIBS="$_sci_libs $MPI_LIB_DIR_FLAG $MPI_LIB_FLAG $MALLOC_TRACE_LIB_DIR_FLAG $MALLOC_TRACE_LIB_FLAG $BLAS_LIB_DIR_FLAG $BLAS_LIB_FLAG $F_LIB_DIR_FLAG $F_LIB_FLAG $M_LIB_FLAG $DL_LIB_FLAG $THREAD_LIB_FLAG $LIBS"

# Build up a list of the #include <file> lines for use in compilation:
__extern_c="no"
__sci_pound_includes=""

for inc in "" HYPRE.h; do
    if test "$inc" = "extern_C"; then
       __sci_pound_includes="extern \"C\" {"
       __extern_c=yes
    else
      # Have to have the "" for the SGI sh.
      if test "$inc" = ""; then
        continue
      fi
      __sci_pound_includes="$__sci_pound_includes
#include <$inc>"
    fi
done

if test "$__extern_c" = "yes"; then
    __sci_pound_includes="$__sci_pound_includes
}"
fi


cat confdefs.h - <<_ACEOF >conftest.$ac_ext
/* end confdefs.h.  */
$__sci_pound_includes
int
main ()
{

  ;
  return 0;
}
_ACEOF
if ac_fn_cxx_try_link "$LINENO"; then :


if test "$IS_VC" = "yes"; then
  LIB=$oldLIB
fi

eval HYPRE_LIB_DIR='"$_sci_lib"'

# Remove any bad (/usr/lib) lib paths and the thirdparty lib path
_final_dirs=
for _dir in $_sci_lib_path; do
  if test -n "$_dir" && test "$_dir" != "-L/usr/lib" ; then
    _final_dirs="$_final_dirs $_dir"
  fi
done

# Remove the thirdparty rpath stuff (if it exists) (and /usr/lib rpath)

_final_dirs=`echo "$_final_dirs" | sed "s%$LDRUN_PREFIX/usr/lib %%g"`

# Remove leading spaces
_final_dirs=`echo "$_final_dirs" | sed "s/^ *//"`

eval HYPRE_LIB_DIR_FLAG="'$_final_dirs'"

# Remove any -L from the list of libs.  (-L's should only be in the dir path.)
final_libs=
for _lib in "" $_sci_libs; do
  bad_l_arg=`echo "$_lib" | grep "^\-L"`
  bad_i_arg=`echo "$_lib" | grep "^\-I"`
  if test -n "$_lib" && test "$_lib" != "/usr/lib" && test -z "$bad_l_arg" && test -z "$bad_i_arg"; then
    final_libs="$final_libs $_lib"
  fi
done

# Remove leading spaces
final_libs=`echo $final_libs | sed "s/^ *//"`
eval HYPRE_LIB_FLAG="'$final_libs'"
eval HAVE_HYPRE="yes"

final_incs=
for inc in "" $_sci_includes; do
   if test "$inc" != "$INC_SCI_THIRDPARTY_H"; then
      final_incs="$final_incs $inc"
   fi
done

# Remove leading spaces
final_incs=`echo $final_incs | sed "s/^ *//"`

eval INC_HYPRE_H="'$final_incs'"
eval HAVE_HYPRE_H="yes"

{ $as_echo "$as_me:${as_lineno-$LINENO}: result: yes" >&5
$as_echo "yes" >&6; }

else

eval HYPRE_LIB_DIR=''
eval HYPRE_LIB_DIR_FLAG=''
eval HYPRE_LIB_FLAG=''
eval HAVE_HYPRE="no"
eval INC_HYPRE_H=''
eval HAVE_HYPRE_H="no"
{ $as_echo "$as_me:${as_lineno-$LINENO}: result: not found" >&5
$as_echo "not found" >&6; }
if test "$_sci_optional" != "optional"; then

## SCI_MSG_ERROR
if test -z "$debugging"; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&5
$as_echo "$as_me: WARNING:
    Adding '--enable-verbosity' to configure line
    _may_ give more information about what is breaking.
    IF YOU KNOW WHAT YOU ARE DOING - TRY THIS:
    Digging through the config.log file is your best option
    for determining what went wrong.  Search for the specific lib/file
    that configured failed to find.  There should be a compile line
    and source code near that check.  If you cut the source code into
    a test.cc and then use the compile line to compile it - the true
    error most likely will show up.
  " >&2;}
fi

as_fn_error $? "Test for required HYPRE failed.
    To see the failed compile information, look in config.log,
    search for HYPRE. Please install the relevant libraries
     or specify the correct paths and try to configure again." "$LINENO" 5

fi

fi
rm -f core conftest.err conftest.$ac_objext \
    conftest$ac_exeext conftest.$ac_ext

if test "$_sci_optional" = "specific"; then
  #echo specific
  # Make sure the exact includes were found
  for i in "" HYPRE.h; do
    #echo looking for $_sci_inc/$i
    if test ! -e $_sci_inc/$i; then
     as_fn_error $? "Specifically requested HYPRE include file '$_sci_inc/$i' was not found" "$LINENO" 5
    fi
  done
  # Make sure the exact libraries were found
  for i in "" HYPRE; do
    if test -z "$i"; then
       continue
    fi
    has_minus=`echo $i | sed 's/-.*//'`
    if test -z "$has_minus"; then
       i=`echo $i | sed 's/-l//g'`
    fi
    if test ! -e $_sci_lib/lib$i.so && test ! -e $_sci_lib/lib$i.a && test ! -e $_sci_lib/$i.lib; then
     as_fn_error $? "Specifically requested HYPRE library file '$_sci_lib/lib$i' (.so or .a) was not found" "$LINENO" 5
    fi
  done
fi


#restore variables
CFLAGS=$_sci_savecflags
CXXFLAGS=$_sci_savecxxflags
LDFLAGS=$_sci_saveldflags
LIBS=$_sci_savelibs
_sci_lib_path=''
_sci_libs=''
_sci_includes=''

##
## END of SCI_TRY_LINK (HYPRE):  HYPRE libraries and headers
##


   ac_ext=c
ac_cpp='$CPP $CPPFLAGS'
ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
ac_compiler_gnu=$ac_cv_c_compiler_gnu


   if test "$HAVE_HYPRE" = "yes" ; then
      DEF_HYPRE="#define HAVE_HYPRE 1"
   fi

   if test "$with_hypre" && test ! "$DEF_HYPRE"; then
      echo
      as_fn_error $? "One or more of the HYPRE components is missing." "$LINENO" 5
   fi
fi







sci_defs_files="$sci_defs_files include/sci_defs/hypre_testdefs.h"



##  --  finis flags  ------------------------------------------------
case $host in
  *linux*)
    ;;
  *aix*)
    ;;
  *dec*)
    ;;
  *)
    ;;
esac


##  ---------------------------------------------------------------------
##  --------------------  Fix Frost config vars  ------------------------
##  ---------------------------------------------------------------------
##  Now that we have run configure with the (xlc,xlC,xlf) compilers, we
##  need to change those to (mpxlc,mpxlC,mpxlf) which automatically use
##  the mpi libraries, so we need to set the MPI variables to be blank.
##  ---------------------------------------------------------------------

  case $host in
    *aix*)
        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: Changing the compiler for AIX computers..." >&5
$as_echo "$as_me: WARNING: Changing the compiler for AIX computers..." >&2;}
        { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: ...to (probably) mpxlC" >&5
$as_echo "$as_me: WARNING: ...to (probably) mpxlC" >&2;}
	CC=`echo $CC | sed 's,x,mpx,g'`
	CXX=`echo $CXX | sed 's,x,mpx,g'`
	F77=`echo $F77 | sed 's,x,mpx,g'`
	MPI_LIB_FLAG=""
	MPI_LIB_DIR_FLAG=""
	INC_MPI_H=""
	;;
  esac


##  ---------------------------------------------------------------------
##  --------------------  generate output files  ------------------------
##  ---------------------------------------------------------------------

if test -n "$WOFF_NUMBERS"; then
  for num in $WOFF_NUMBERS; do
    if test -z "$WOFF_COMMA_LIST"; then
       WOFF_COMMA_LIST="$num"
    else
       WOFF_COMMA_LIST="$WOFF_COMMA_LIST,$num"
    fi
    WOFF_STRING="$WOFF_STRING -Wl,-woff -Wl,$num"
  done
  WOFF_STRING="-woff $WOFF_COMMA_LIST $WOFF_STRING"
fi




  sci_arg_var_list="$sci_arg_var_list CXXFLAGS"


scirun_obj_dir=`pwd`;
scirun_src_dir=`(cd ${srcdir};pwd)`

if test "$IS_WIN" = "yes"; then
  scirun_obj_dir=`echo "$scirun_obj_dir" | sed 's,/,,' | sed 's,/,:/,'`
  scirun_src_dir=`echo "$scirun_src_dir" | sed 's,/,,' | sed 's,/,:/,'`
fi




ac_config_files="$ac_config_files configVars.mk Makefile disjointPackageMakefile $sci_defs_files"


##  Add a list of Uintah specific output files.
ac_config_files="$ac_config_files tools/fspec.pl"


#  ignore --no-create and --no-recursion flags
no_create=no
no_recursion=no

# these are to alias pwd to the right thing in the config.status
# script so that pwd returns the same value for a path even if you
# get there by two different paths (symbolic links)
cat > sedscript << SCIEOF
/debug=false/i\\
alias pwd=$sci_pwd
SCIEOF




ac_config_commands="$ac_config_commands do_stamp"

cat >confcache <<\_ACEOF
# This file is a shell script that caches the results of configure
# tests run on this system so they can be shared between configure
# scripts and configure runs, see configure's option --config-cache.
# It is not useful on other systems.  If it contains results you don't
# want to keep, you may remove or edit it.
#
# config.status only pays attention to the cache file if you give it
# the --recheck option to rerun configure.
#
# `ac_cv_env_foo' variables (set or unset) will be overridden when
# loading this file, other *unset* `ac_cv_foo' will be assigned the
# following values.

_ACEOF

# The following way of writing the cache mishandles newlines in values,
# but we know of no workaround that is simple, portable, and efficient.
# So, we kill variables containing newlines.
# Ultrix sh set writes to stderr and can't be redirected directly,
# and sets the high bit in the cache file unless we assign to the vars.
(
  for ac_var in `(set) 2>&1 | sed -n 's/^\([a-zA-Z_][a-zA-Z0-9_]*\)=.*/\1/p'`; do
    eval ac_val=\$$ac_var
    case $ac_val in #(
    *${as_nl}*)
      case $ac_var in #(
      *_cv_*) { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline" >&5
$as_echo "$as_me: WARNING: cache variable $ac_var contains a newline" >&2;} ;;
      esac
      case $ac_var in #(
      _ | IFS | as_nl) ;; #(
      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(
      *) { eval $ac_var=; unset $ac_var;} ;;
      esac ;;
    esac
  done

  (set) 2>&1 |
    case $as_nl`(ac_space=' '; set) 2>&1` in #(
    *${as_nl}ac_space=\ *)
      # `set' does not quote correctly, so add quotes: double-quote
      # substitution turns \\\\ into \\, and sed turns \\ into \.
      sed -n \
	"s/'/'\\\\''/g;
	  s/^\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\)=\\(.*\\)/\\1='\\2'/p"
      ;; #(
    *)
      # `set' quotes correctly as required by POSIX, so do not add quotes.
      sed -n "/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p"
      ;;
    esac |
    sort
) |
  sed '
     /^ac_cv_env_/b end
     t clear
     :clear
     s/^\([^=]*\)=\(.*[{}].*\)$/test "${\1+set}" = set || &/
     t end
     s/^\([^=]*\)=\(.*\)$/\1=${\1=\2}/
     :end' >>confcache
if diff "$cache_file" confcache >/dev/null 2>&1; then :; else
  if test -w "$cache_file"; then
    if test "x$cache_file" != "x/dev/null"; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: updating cache $cache_file" >&5
$as_echo "$as_me: updating cache $cache_file" >&6;}
      if test ! -f "$cache_file" || test -h "$cache_file"; then
	cat confcache >"$cache_file"
      else
        case $cache_file in #(
        */* | ?:*)
	  mv -f confcache "$cache_file"$$ &&
	  mv -f "$cache_file"$$ "$cache_file" ;; #(
        *)
	  mv -f confcache "$cache_file" ;;
	esac
      fi
    fi
  else
    { $as_echo "$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file" >&5
$as_echo "$as_me: not updating unwritable cache $cache_file" >&6;}
  fi
fi
rm -f confcache

test "x$prefix" = xNONE && prefix=$ac_default_prefix
# Let make expand exec_prefix.
test "x$exec_prefix" = xNONE && exec_prefix='${prefix}'

DEFS=-DHAVE_CONFIG_H

ac_libobjs=
ac_ltlibobjs=
U=
for ac_i in : $LIBOBJS; do test "x$ac_i" = x: && continue
  # 1. Remove the extension, and $U if already installed.
  ac_script='s/\$U\././;s/\.o$//;s/\.obj$//'
  ac_i=`$as_echo "$ac_i" | sed "$ac_script"`
  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR
  #    will be set to the directory where LIBOBJS objects are built.
  as_fn_append ac_libobjs " \${LIBOBJDIR}$ac_i\$U.$ac_objext"
  as_fn_append ac_ltlibobjs " \${LIBOBJDIR}$ac_i"'$U.lo'
done
LIBOBJS=$ac_libobjs

LTLIBOBJS=$ac_ltlibobjs



: "${CONFIG_STATUS=./config.status}"
ac_write_fail=0
ac_clean_files_save=$ac_clean_files
ac_clean_files="$ac_clean_files $CONFIG_STATUS"
{ $as_echo "$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS" >&5
$as_echo "$as_me: creating $CONFIG_STATUS" >&6;}
as_write_fail=0
cat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1
#! $SHELL
# Generated by $as_me.
# Run this file to recreate the current configuration.
# Compiler output produced by configure, useful for debugging
# configure, is in config.log if it exists.

debug=false
ac_cs_recheck=false
ac_cs_silent=false

SHELL=\${CONFIG_SHELL-$SHELL}
export SHELL
_ASEOF
cat >>$CONFIG_STATUS <<\_ASEOF || as_write_fail=1
## -------------------- ##
## M4sh Initialization. ##
## -------------------- ##

# Be more Bourne compatible
DUALCASE=1; export DUALCASE # for MKS sh
if test -n "${ZSH_VERSION+set}" && (emulate sh) >/dev/null 2>&1; then :
  emulate sh
  NULLCMD=:
  # Pre-4.2 versions of Zsh do word splitting on ${1+"$@"}, which
  # is contrary to our usage.  Disable this feature.
  alias -g '${1+"$@"}'='"$@"'
  setopt NO_GLOB_SUBST
else
  case `(set -o) 2>/dev/null` in #(
  *posix*) :
    set -o posix ;; #(
  *) :
     ;;
esac
fi


as_nl='
'
export as_nl
# Printing a long string crashes Solaris 7 /usr/bin/printf.
as_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo
as_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo
# Prefer a ksh shell builtin over an external printf program on Solaris,
# but without wasting forks for bash or zsh.
if test -z "$BASH_VERSION$ZSH_VERSION" \
    && (test "X`print -r -- $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='print -r --'
  as_echo_n='print -rn --'
elif (test "X`printf %s $as_echo`" = "X$as_echo") 2>/dev/null; then
  as_echo='printf %s\n'
  as_echo_n='printf %s'
else
  if test "X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`" = "X-n $as_echo"; then
    as_echo_body='eval /usr/ucb/echo -n "$1$as_nl"'
    as_echo_n='/usr/ucb/echo -n'
  else
    as_echo_body='eval expr "X$1" : "X\\(.*\\)"'
    as_echo_n_body='eval
      arg=$1;
      case $arg in #(
      *"$as_nl"*)
	expr "X$arg" : "X\\(.*\\)$as_nl";
	arg=`expr "X$arg" : ".*$as_nl\\(.*\\)"`;;
      esac;
      expr "X$arg" : "X\\(.*\\)" | tr -d "$as_nl"
    '
    export as_echo_n_body
    as_echo_n='sh -c $as_echo_n_body as_echo'
  fi
  export as_echo_body
  as_echo='sh -c $as_echo_body as_echo'
fi

# The user is always right.
if test "${PATH_SEPARATOR+set}" != set; then
  PATH_SEPARATOR=:
  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {
    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||
      PATH_SEPARATOR=';'
  }
fi


# IFS
# We need space, tab and new line, in precisely that order.  Quoting is
# there to prevent editors from complaining about space-tab.
# (If _AS_PATH_WALK were called with IFS unset, it would disable word
# splitting by setting IFS to empty value.)
IFS=" ""	$as_nl"

# Find who we are.  Look in the path if we contain no directory separator.
as_myself=
case $0 in #((
  *[\\/]* ) as_myself=$0 ;;
  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR
for as_dir in $PATH
do
  IFS=$as_save_IFS
  test -z "$as_dir" && as_dir=.
    test -r "$as_dir/$0" && as_myself=$as_dir/$0 && break
  done
IFS=$as_save_IFS

     ;;
esac
# We did not find ourselves, most probably we were run as `sh COMMAND'
# in which case we are not to be found in the path.
if test "x$as_myself" = x; then
  as_myself=$0
fi
if test ! -f "$as_myself"; then
  $as_echo "$as_myself: error: cannot find myself; rerun with an absolute file name" >&2
  exit 1
fi

# Unset variables that we do not need and which cause bugs (e.g. in
# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the "|| exit 1"
# suppresses any "Segmentation fault" message there.  '((' could
# trigger a bug in pdksh 5.2.14.
for as_var in BASH_ENV ENV MAIL MAILPATH
do eval test x\${$as_var+set} = xset \
  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :
done
PS1='$ '
PS2='> '
PS4='+ '

# NLS nuisances.
LC_ALL=C
export LC_ALL
LANGUAGE=C
export LANGUAGE

# CDPATH.
(unset CDPATH) >/dev/null 2>&1 && unset CDPATH


# as_fn_error STATUS ERROR [LINENO LOG_FD]
# ----------------------------------------
# Output "`basename $0`: error: ERROR" to stderr. If LINENO and LOG_FD are
# provided, also output the error to LOG_FD, referencing LINENO. Then exit the
# script with STATUS, using 1 if that was 0.
as_fn_error ()
{
  as_status=$1; test $as_status -eq 0 && as_status=1
  if test "$4"; then
    as_lineno=${as_lineno-"$3"} as_lineno_stack=as_lineno_stack=$as_lineno_stack
    $as_echo "$as_me:${as_lineno-$LINENO}: error: $2" >&$4
  fi
  $as_echo "$as_me: error: $2" >&2
  as_fn_exit $as_status
} # as_fn_error


# as_fn_set_status STATUS
# -----------------------
# Set $? to STATUS, without forking.
as_fn_set_status ()
{
  return $1
} # as_fn_set_status

# as_fn_exit STATUS
# -----------------
# Exit the shell with STATUS, even in a "trap 0" or "set -e" context.
as_fn_exit ()
{
  set +e
  as_fn_set_status $1
  exit $1
} # as_fn_exit

# as_fn_unset VAR
# ---------------
# Portably unset VAR.
as_fn_unset ()
{
  { eval $1=; unset $1;}
}
as_unset=as_fn_unset
# as_fn_append VAR VALUE
# ----------------------
# Append the text in VALUE to the end of the definition contained in VAR. Take
# advantage of any shell optimizations that allow amortized linear growth over
# repeated appends, instead of the typical quadratic growth present in naive
# implementations.
if (eval "as_var=1; as_var+=2; test x\$as_var = x12") 2>/dev/null; then :
  eval 'as_fn_append ()
  {
    eval $1+=\$2
  }'
else
  as_fn_append ()
  {
    eval $1=\$$1\$2
  }
fi # as_fn_append

# as_fn_arith ARG...
# ------------------
# Perform arithmetic evaluation on the ARGs, and store the result in the
# global $as_val. Take advantage of shells that can avoid forks. The arguments
# must be portable across $(()) and expr.
if (eval "test \$(( 1 + 1 )) = 2") 2>/dev/null; then :
  eval 'as_fn_arith ()
  {
    as_val=$(( $* ))
  }'
else
  as_fn_arith ()
  {
    as_val=`expr "$@" || test $? -eq 1`
  }
fi # as_fn_arith


if expr a : '\(a\)' >/dev/null 2>&1 &&
   test "X`expr 00001 : '.*\(...\)'`" = X001; then
  as_expr=expr
else
  as_expr=false
fi

if (basename -- /) >/dev/null 2>&1 && test "X`basename -- / 2>&1`" = "X/"; then
  as_basename=basename
else
  as_basename=false
fi

if (as_dir=`dirname -- /` && test "X$as_dir" = X/) >/dev/null 2>&1; then
  as_dirname=dirname
else
  as_dirname=false
fi

as_me=`$as_basename -- "$0" ||
$as_expr X/"$0" : '.*/\([^/][^/]*\)/*$' \| \
	 X"$0" : 'X\(//\)$' \| \
	 X"$0" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X/"$0" |
    sed '/^.*\/\([^/][^/]*\)\/*$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\/\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`

# Avoid depending upon Character Ranges.
as_cr_letters='abcdefghijklmnopqrstuvwxyz'
as_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
as_cr_Letters=$as_cr_letters$as_cr_LETTERS
as_cr_digits='0123456789'
as_cr_alnum=$as_cr_Letters$as_cr_digits

ECHO_C= ECHO_N= ECHO_T=
case `echo -n x` in #(((((
-n*)
  case `echo 'xy\c'` in
  *c*) ECHO_T='	';;	# ECHO_T is single tab character.
  xy)  ECHO_C='\c';;
  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null
       ECHO_T='	';;
  esac;;
*)
  ECHO_N='-n';;
esac

rm -f conf$$ conf$$.exe conf$$.file
if test -d conf$$.dir; then
  rm -f conf$$.dir/conf$$.file
else
  rm -f conf$$.dir
  mkdir conf$$.dir 2>/dev/null
fi
if (echo >conf$$.file) 2>/dev/null; then
  if ln -s conf$$.file conf$$ 2>/dev/null; then
    as_ln_s='ln -s'
    # ... but there are two gotchas:
    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.
    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.
    # In both cases, we have to default to `cp -p'.
    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||
      as_ln_s='cp -p'
  elif ln conf$$.file conf$$ 2>/dev/null; then
    as_ln_s=ln
  else
    as_ln_s='cp -p'
  fi
else
  as_ln_s='cp -p'
fi
rm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file
rmdir conf$$.dir 2>/dev/null


# as_fn_mkdir_p
# -------------
# Create "$as_dir" as a directory, including parents if necessary.
as_fn_mkdir_p ()
{

  case $as_dir in #(
  -*) as_dir=./$as_dir;;
  esac
  test -d "$as_dir" || eval $as_mkdir_p || {
    as_dirs=
    while :; do
      case $as_dir in #(
      *\'*) as_qdir=`$as_echo "$as_dir" | sed "s/'/'\\\\\\\\''/g"`;; #'(
      *) as_qdir=$as_dir;;
      esac
      as_dirs="'$as_qdir' $as_dirs"
      as_dir=`$as_dirname -- "$as_dir" ||
$as_expr X"$as_dir" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$as_dir" : 'X\(//\)[^/]' \| \
	 X"$as_dir" : 'X\(//\)$' \| \
	 X"$as_dir" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$as_dir" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
      test -d "$as_dir" && break
    done
    test -z "$as_dirs" || eval "mkdir $as_dirs"
  } || test -d "$as_dir" || as_fn_error $? "cannot create directory $as_dir"


} # as_fn_mkdir_p
if mkdir -p . 2>/dev/null; then
  as_mkdir_p='mkdir -p "$as_dir"'
else
  test -d ./-p && rmdir ./-p
  as_mkdir_p=false
fi

if test -x / >/dev/null 2>&1; then
  as_test_x='test -x'
else
  if ls -dL / >/dev/null 2>&1; then
    as_ls_L_option=L
  else
    as_ls_L_option=
  fi
  as_test_x='
    eval sh -c '\''
      if test -d "$1"; then
	test -d "$1/.";
      else
	case $1 in #(
	-*)set "./$1";;
	esac;
	case `ls -ld'$as_ls_L_option' "$1" 2>/dev/null` in #((
	???[sx]*):;;*)false;;esac;fi
    '\'' sh
  '
fi
as_executable_p=$as_test_x

# Sed expression to map a string onto a valid CPP name.
as_tr_cpp="eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'"

# Sed expression to map a string onto a valid variable name.
as_tr_sh="eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'"


exec 6>&1
## ----------------------------------- ##
## Main body of $CONFIG_STATUS script. ##
## ----------------------------------- ##
_ASEOF
test $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# Save the log message, to keep $0 and so on meaningful, and to
# report actual input values of CONFIG_FILES etc. instead of their
# values after options handling.
ac_log="
This file was extended by Uintah $as_me 1.31, which was
generated by GNU Autoconf 2.68.  Invocation command line was

  CONFIG_FILES    = $CONFIG_FILES
  CONFIG_HEADERS  = $CONFIG_HEADERS
  CONFIG_LINKS    = $CONFIG_LINKS
  CONFIG_COMMANDS = $CONFIG_COMMANDS
  $ $0 $@

on `(hostname || uname -n) 2>/dev/null | sed 1q`
"

_ACEOF

case $ac_config_files in *"
"*) set x $ac_config_files; shift; ac_config_files=$*;;
esac

case $ac_config_headers in *"
"*) set x $ac_config_headers; shift; ac_config_headers=$*;;
esac


cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
# Files that config.status was made for.
config_files="$ac_config_files"
config_headers="$ac_config_headers"
config_commands="$ac_config_commands"

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
ac_cs_usage="\
\`$as_me' instantiates files and other configuration actions
from templates according to the current configuration.  Unless the files
and actions are specified as TAGs, all are instantiated by default.

Usage: $0 [OPTION]... [TAG]...

  -h, --help       print this help, then exit
  -V, --version    print version number and configuration settings, then exit
      --config     print configuration, then exit
  -q, --quiet, --silent
                   do not print progress messages
  -d, --debug      don't remove temporary files
      --recheck    update $as_me by reconfiguring in the same conditions
      --file=FILE[:TEMPLATE]
                   instantiate the configuration file FILE
      --header=FILE[:TEMPLATE]
                   instantiate the configuration header FILE

Configuration files:
$config_files

Configuration headers:
$config_headers

Configuration commands:
$config_commands

Report bugs to <csafe-homebrew@cs.utah.edu>."

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_cs_config="`$as_echo "$ac_configure_args" | sed 's/^ //; s/[\\""\`\$]/\\\\&/g'`"
ac_cs_version="\\
Uintah config.status 1.31
configured by $0, generated by GNU Autoconf 2.68,
  with options \\"\$ac_cs_config\\"

Copyright (C) 2010 Free Software Foundation, Inc.
This config.status script is free software; the Free Software Foundation
gives unlimited permission to copy, distribute and modify it."

ac_pwd='$ac_pwd'
srcdir='$srcdir'
AWK='$AWK'
test -n "\$AWK" || AWK=awk
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# The default lists apply if the user does not specify any file.
ac_need_defaults=:
while test $# != 0
do
  case $1 in
  --*=?*)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=`expr "X$1" : 'X[^=]*=\(.*\)'`
    ac_shift=:
    ;;
  --*=)
    ac_option=`expr "X$1" : 'X\([^=]*\)='`
    ac_optarg=
    ac_shift=:
    ;;
  *)
    ac_option=$1
    ac_optarg=$2
    ac_shift=shift
    ;;
  esac

  case $ac_option in
  # Handling of the options.
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
    ac_cs_recheck=: ;;
  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )
    $as_echo "$ac_cs_version"; exit ;;
  --config | --confi | --conf | --con | --co | --c )
    $as_echo "$ac_cs_config"; exit ;;
  --debug | --debu | --deb | --de | --d | -d )
    debug=: ;;
  --file | --fil | --fi | --f )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    '') as_fn_error $? "missing file argument" ;;
    esac
    as_fn_append CONFIG_FILES " '$ac_optarg'"
    ac_need_defaults=false;;
  --header | --heade | --head | --hea )
    $ac_shift
    case $ac_optarg in
    *\'*) ac_optarg=`$as_echo "$ac_optarg" | sed "s/'/'\\\\\\\\''/g"` ;;
    esac
    as_fn_append CONFIG_HEADERS " '$ac_optarg'"
    ac_need_defaults=false;;
  --he | --h)
    # Conflict between --help and --header
    as_fn_error $? "ambiguous option: \`$1'
Try \`$0 --help' for more information.";;
  --help | --hel | -h )
    $as_echo "$ac_cs_usage"; exit ;;
  -q | -quiet | --quiet | --quie | --qui | --qu | --q \
  | -silent | --silent | --silen | --sile | --sil | --si | --s)
    ac_cs_silent=: ;;

  # This is an error.
  -*) as_fn_error $? "unrecognized option: \`$1'
Try \`$0 --help' for more information." ;;

  *) as_fn_append ac_config_targets " $1"
     ac_need_defaults=false ;;

  esac
  shift
done

ac_configure_extra_args=

if $ac_cs_silent; then
  exec 6>/dev/null
  ac_configure_extra_args="$ac_configure_extra_args --silent"
fi

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
if \$ac_cs_recheck; then
  set X '$SHELL' '$0' $ac_configure_args \$ac_configure_extra_args --no-create --no-recursion
  shift
  \$as_echo "running CONFIG_SHELL=$SHELL \$*" >&6
  CONFIG_SHELL='$SHELL'
  export CONFIG_SHELL
  exec "\$@"
fi

_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
exec 5>>config.log
{
  echo
  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX
## Running $as_me. ##
_ASBOX
  $as_echo "$ac_log"
} >&5

_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1

# Handling of arguments.
for ac_config_target in $ac_config_targets
do
  case $ac_config_target in
    "include/sci_defs/config_testdefs.h") CONFIG_HEADERS="$CONFIG_HEADERS include/sci_defs/config_testdefs.h" ;;
    "configVars.mk") CONFIG_FILES="$CONFIG_FILES configVars.mk" ;;
    "Makefile") CONFIG_FILES="$CONFIG_FILES Makefile" ;;
    "disjointPackageMakefile") CONFIG_FILES="$CONFIG_FILES disjointPackageMakefile" ;;
    "$sci_defs_files") CONFIG_FILES="$CONFIG_FILES $sci_defs_files" ;;
    "tools/fspec.pl") CONFIG_FILES="$CONFIG_FILES tools/fspec.pl" ;;
    "do_stamp") CONFIG_COMMANDS="$CONFIG_COMMANDS do_stamp" ;;

  *) as_fn_error $? "invalid argument: \`$ac_config_target'" "$LINENO" 5;;
  esac
done


# If the user did not use the arguments to specify the items to instantiate,
# then the envvar interface is used.  Set only those that are not.
# We use the long form for the default assignment because of an extremely
# bizarre bug on SunOS 4.1.3.
if $ac_need_defaults; then
  test "${CONFIG_FILES+set}" = set || CONFIG_FILES=$config_files
  test "${CONFIG_HEADERS+set}" = set || CONFIG_HEADERS=$config_headers
  test "${CONFIG_COMMANDS+set}" = set || CONFIG_COMMANDS=$config_commands
fi

# Have a temporary directory for convenience.  Make it in the build tree
# simply because there is no reason against having it here, and in addition,
# creating and moving files from /tmp can sometimes cause problems.
# Hook for its removal unless debugging.
# Note that there is a small window in which the directory will not be cleaned:
# after its creation but before its name has been assigned to `$tmp'.
$debug ||
{
  tmp= ac_tmp=
  trap 'exit_status=$?
  : "${ac_tmp:=$tmp}"
  { test ! -d "$ac_tmp" || rm -fr "$ac_tmp"; } && exit $exit_status
' 0
  trap 'as_fn_exit 1' 1 2 13 15
}
# Create a (secure) tmp directory for tmp files.

{
  tmp=`(umask 077 && mktemp -d "./confXXXXXX") 2>/dev/null` &&
  test -d "$tmp"
}  ||
{
  tmp=./conf$$-$RANDOM
  (umask 077 && mkdir "$tmp")
} || as_fn_error $? "cannot create a temporary directory in ." "$LINENO" 5
ac_tmp=$tmp

# Set up the scripts for CONFIG_FILES section.
# No need to generate them if there are no CONFIG_FILES.
# This happens for instance with `./config.status config.h'.
if test -n "$CONFIG_FILES"; then


ac_cr=`echo X | tr X '\015'`
# On cygwin, bash can eat \r inside `` if the user requested igncr.
# But we know of no other shell where ac_cr would be empty at this
# point, so we can use a bashism as a fallback.
if test "x$ac_cr" = x; then
  eval ac_cr=\$\'\\r\'
fi
ac_cs_awk_cr=`$AWK 'BEGIN { print "a\rb" }' </dev/null 2>/dev/null`
if test "$ac_cs_awk_cr" = "a${ac_cr}b"; then
  ac_cs_awk_cr='\\r'
else
  ac_cs_awk_cr=$ac_cr
fi

echo 'BEGIN {' >"$ac_tmp/subs1.awk" &&
_ACEOF


{
  echo "cat >conf$$subs.awk <<_ACEOF" &&
  echo "$ac_subst_vars" | sed 's/.*/&!$&$ac_delim/' &&
  echo "_ACEOF"
} >conf$$subs.sh ||
  as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
ac_delim_num=`echo "$ac_subst_vars" | grep -c '^'`
ac_delim='%!_!# '
for ac_last_try in false false false false false :; do
  . ./conf$$subs.sh ||
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5

  ac_delim_n=`sed -n "s/.*$ac_delim\$/X/p" conf$$subs.awk | grep -c X`
  if test $ac_delim_n = $ac_delim_num; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_STATUS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done
rm -f conf$$subs.sh

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
cat >>"\$ac_tmp/subs1.awk" <<\\_ACAWK &&
_ACEOF
sed -n '
h
s/^/S["/; s/!.*/"]=/
p
g
s/^[^!]*!//
:repl
t repl
s/'"$ac_delim"'$//
t delim
:nl
h
s/\(.\{148\}\)..*/\1/
t more1
s/["\\]/\\&/g; s/^/"/; s/$/\\n"\\/
p
n
b repl
:more1
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t nl
:delim
h
s/\(.\{148\}\)..*/\1/
t more2
s/["\\]/\\&/g; s/^/"/; s/$/"/
p
b
:more2
s/["\\]/\\&/g; s/^/"/; s/$/"\\/
p
g
s/.\{148\}//
t delim
' <conf$$subs.awk | sed '
/^[^""]/{
  N
  s/\n//
}
' >>$CONFIG_STATUS || ac_write_fail=1
rm -f conf$$subs.awk
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
_ACAWK
cat >>"\$ac_tmp/subs1.awk" <<_ACAWK &&
  for (key in S) S_is_set[key] = 1
  FS = ""

}
{
  line = $ 0
  nfields = split(line, field, "@")
  substed = 0
  len = length(field[1])
  for (i = 2; i < nfields; i++) {
    key = field[i]
    keylen = length(key)
    if (S_is_set[key]) {
      value = S[key]
      line = substr(line, 1, len) "" value "" substr(line, len + keylen + 3)
      len += length(value) + length(field[++i])
      substed = 1
    } else
      len += 1 + keylen
  }

  print line
}

_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
if sed "s/$ac_cr//" < /dev/null > /dev/null 2>&1; then
  sed "s/$ac_cr\$//; s/$ac_cr/$ac_cs_awk_cr/g"
else
  cat
fi < "$ac_tmp/subs1.awk" > "$ac_tmp/subs.awk" \
  || as_fn_error $? "could not setup config files machinery" "$LINENO" 5
_ACEOF

# VPATH may cause trouble with some makes, so we remove sole $(srcdir),
# ${srcdir} and @srcdir@ entries from VPATH if srcdir is ".", strip leading and
# trailing colons and then remove the whole line if VPATH becomes empty
# (actually we leave an empty line to preserve line numbers).
if test "x$srcdir" = x.; then
  ac_vpsub='/^[	 ]*VPATH[	 ]*=[	 ]*/{
h
s///
s/^/:/
s/[	 ]*$/:/
s/:\$(srcdir):/:/g
s/:\${srcdir}:/:/g
s/:@srcdir@:/:/g
s/^:*//
s/:*$//
x
s/\(=[	 ]*\).*/\1/
G
s/\n//
s/^[^=]*=[	 ]*$//
}'
fi

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
fi # test -n "$CONFIG_FILES"

# Set up the scripts for CONFIG_HEADERS section.
# No need to generate them if there are no CONFIG_HEADERS.
# This happens for instance with `./config.status Makefile'.
if test -n "$CONFIG_HEADERS"; then
cat >"$ac_tmp/defines.awk" <<\_ACAWK ||
BEGIN {
_ACEOF

# Transform confdefs.h into an awk script `defines.awk', embedded as
# here-document in config.status, that substitutes the proper values into
# config.h.in to produce config.h.

# Create a delimiter string that does not exist in confdefs.h, to ease
# handling of long lines.
ac_delim='%!_!# '
for ac_last_try in false false :; do
  ac_tt=`sed -n "/$ac_delim/p" confdefs.h`
  if test -z "$ac_tt"; then
    break
  elif $ac_last_try; then
    as_fn_error $? "could not make $CONFIG_HEADERS" "$LINENO" 5
  else
    ac_delim="$ac_delim!$ac_delim _$ac_delim!! "
  fi
done

# For the awk script, D is an array of macro values keyed by name,
# likewise P contains macro parameters if any.  Preserve backslash
# newline sequences.

ac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*
sed -n '
s/.\{148\}/&'"$ac_delim"'/g
t rset
:rset
s/^[	 ]*#[	 ]*define[	 ][	 ]*/ /
t def
d
:def
s/\\$//
t bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3"/p
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2"/p
d
:bsnl
s/["\\]/\\&/g
s/^ \('"$ac_word_re"'\)\(([^()]*)\)[	 ]*\(.*\)/P["\1"]="\2"\
D["\1"]=" \3\\\\\\n"\\/p
t cont
s/^ \('"$ac_word_re"'\)[	 ]*\(.*\)/D["\1"]=" \2\\\\\\n"\\/p
t cont
d
:cont
n
s/.\{148\}/&'"$ac_delim"'/g
t clear
:clear
s/\\$//
t bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/"/p
d
:bsnlc
s/["\\]/\\&/g; s/^/"/; s/$/\\\\\\n"\\/p
b cont
' <confdefs.h | sed '
s/'"$ac_delim"'/"\\\
"/g' >>$CONFIG_STATUS || ac_write_fail=1

cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  for (key in D) D_is_set[key] = 1
  FS = ""
}
/^[\t ]*#[\t ]*(define|undef)[\t ]+$ac_word_re([\t (]|\$)/ {
  line = \$ 0
  split(line, arg, " ")
  if (arg[1] == "#") {
    defundef = arg[2]
    mac1 = arg[3]
  } else {
    defundef = substr(arg[1], 2)
    mac1 = arg[2]
  }
  split(mac1, mac2, "(") #)
  macro = mac2[1]
  prefix = substr(line, 1, index(line, defundef) - 1)
  if (D_is_set[macro]) {
    # Preserve the white space surrounding the "#".
    print prefix "define", macro P[macro] D[macro]
    next
  } else {
    # Replace #undef with comments.  This is necessary, for example,
    # in the case of _POSIX_SOURCE, which is predefined and required
    # on some systems where configure will not decide to define it.
    if (defundef == "undef") {
      print "/*", prefix defundef, macro, "*/"
      next
    }
  }
}
{ print }
_ACAWK
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
  as_fn_error $? "could not setup config headers machinery" "$LINENO" 5
fi # test -n "$CONFIG_HEADERS"


eval set X "  :F $CONFIG_FILES  :H $CONFIG_HEADERS    :C $CONFIG_COMMANDS"
shift
for ac_tag
do
  case $ac_tag in
  :[FHLC]) ac_mode=$ac_tag; continue;;
  esac
  case $ac_mode$ac_tag in
  :[FHL]*:*);;
  :L* | :C*:*) as_fn_error $? "invalid tag \`$ac_tag'" "$LINENO" 5;;
  :[FH]-) ac_tag=-:-;;
  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;
  esac
  ac_save_IFS=$IFS
  IFS=:
  set x $ac_tag
  IFS=$ac_save_IFS
  shift
  ac_file=$1
  shift

  case $ac_mode in
  :L) ac_source=$1;;
  :[FH])
    ac_file_inputs=
    for ac_f
    do
      case $ac_f in
      -) ac_f="$ac_tmp/stdin";;
      *) # Look for the file first in the build tree, then in the source tree
	 # (if the path is not absolute).  The absolute path cannot be DOS-style,
	 # because $ac_f cannot contain `:'.
	 test -f "$ac_f" ||
	   case $ac_f in
	   [\\/$]*) false;;
	   *) test -f "$srcdir/$ac_f" && ac_f="$srcdir/$ac_f";;
	   esac ||
	   as_fn_error 1 "cannot find input file: \`$ac_f'" "$LINENO" 5;;
      esac
      case $ac_f in *\'*) ac_f=`$as_echo "$ac_f" | sed "s/'/'\\\\\\\\''/g"`;; esac
      as_fn_append ac_file_inputs " '$ac_f'"
    done

    # Let's still pretend it is `configure' which instantiates (i.e., don't
    # use $as_me), people would be surprised to read:
    #    /* config.h.  Generated by config.status.  */
    configure_input='Generated from '`
	  $as_echo "$*" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'
	`' by configure.'
    if test x"$ac_file" != x-; then
      configure_input="$ac_file.  $configure_input"
      { $as_echo "$as_me:${as_lineno-$LINENO}: creating $ac_file" >&5
$as_echo "$as_me: creating $ac_file" >&6;}
    fi
    # Neutralize special characters interpreted by sed in replacement strings.
    case $configure_input in #(
    *\&* | *\|* | *\\* )
       ac_sed_conf_input=`$as_echo "$configure_input" |
       sed 's/[\\\\&|]/\\\\&/g'`;; #(
    *) ac_sed_conf_input=$configure_input;;
    esac

    case $ac_tag in
    *:-:* | *:-) cat >"$ac_tmp/stdin" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5 ;;
    esac
    ;;
  esac

  ac_dir=`$as_dirname -- "$ac_file" ||
$as_expr X"$ac_file" : 'X\(.*[^/]\)//*[^/][^/]*/*$' \| \
	 X"$ac_file" : 'X\(//\)[^/]' \| \
	 X"$ac_file" : 'X\(//\)$' \| \
	 X"$ac_file" : 'X\(/\)' \| . 2>/dev/null ||
$as_echo X"$ac_file" |
    sed '/^X\(.*[^/]\)\/\/*[^/][^/]*\/*$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)[^/].*/{
	    s//\1/
	    q
	  }
	  /^X\(\/\/\)$/{
	    s//\1/
	    q
	  }
	  /^X\(\/\).*/{
	    s//\1/
	    q
	  }
	  s/.*/./; q'`
  as_dir="$ac_dir"; as_fn_mkdir_p
  ac_builddir=.

case "$ac_dir" in
.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;
*)
  ac_dir_suffix=/`$as_echo "$ac_dir" | sed 's|^\.[\\/]||'`
  # A ".." for each directory in $ac_dir_suffix.
  ac_top_builddir_sub=`$as_echo "$ac_dir_suffix" | sed 's|/[^\\/]*|/..|g;s|/||'`
  case $ac_top_builddir_sub in
  "") ac_top_builddir_sub=. ac_top_build_prefix= ;;
  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;
  esac ;;
esac
ac_abs_top_builddir=$ac_pwd
ac_abs_builddir=$ac_pwd$ac_dir_suffix
# for backward compatibility:
ac_top_builddir=$ac_top_build_prefix

case $srcdir in
  .)  # We are building in place.
    ac_srcdir=.
    ac_top_srcdir=$ac_top_builddir_sub
    ac_abs_top_srcdir=$ac_pwd ;;
  [\\/]* | ?:[\\/]* )  # Absolute name.
    ac_srcdir=$srcdir$ac_dir_suffix;
    ac_top_srcdir=$srcdir
    ac_abs_top_srcdir=$srcdir ;;
  *) # Relative name.
    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix
    ac_top_srcdir=$ac_top_build_prefix$srcdir
    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;
esac
ac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix


  case $ac_mode in
  :F)
  #
  # CONFIG_FILE
  #

_ACEOF

cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
# If the template does not know about datarootdir, expand it.
# FIXME: This hack should be removed a few years after 2.60.
ac_datarootdir_hack=; ac_datarootdir_seen=
ac_sed_dataroot='
/datarootdir/ {
  p
  q
}
/@datadir@/p
/@docdir@/p
/@infodir@/p
/@localedir@/p
/@mandir@/p'
case `eval "sed -n \"\$ac_sed_dataroot\" $ac_file_inputs"` in
*datarootdir*) ac_datarootdir_seen=yes;;
*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&5
$as_echo "$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting" >&2;}
_ACEOF
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
  ac_datarootdir_hack='
  s&@datadir@&$datadir&g
  s&@docdir@&$docdir&g
  s&@infodir@&$infodir&g
  s&@localedir@&$localedir&g
  s&@mandir@&$mandir&g
  s&\\\${datarootdir}&$datarootdir&g' ;;
esac
_ACEOF

# Neutralize VPATH when `$srcdir' = `.'.
# Shell code in configure.ac might set extrasub.
# FIXME: do we really want to maintain this feature?
cat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1
ac_sed_extra="$ac_vpsub
$extrasub
_ACEOF
cat >>$CONFIG_STATUS <<\_ACEOF || ac_write_fail=1
:t
/@[a-zA-Z_][a-zA-Z_0-9]*@/!b
s|@configure_input@|$ac_sed_conf_input|;t t
s&@top_builddir@&$ac_top_builddir_sub&;t t
s&@top_build_prefix@&$ac_top_build_prefix&;t t
s&@srcdir@&$ac_srcdir&;t t
s&@abs_srcdir@&$ac_abs_srcdir&;t t
s&@top_srcdir@&$ac_top_srcdir&;t t
s&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t
s&@builddir@&$ac_builddir&;t t
s&@abs_builddir@&$ac_abs_builddir&;t t
s&@abs_top_builddir@&$ac_abs_top_builddir&;t t
$ac_datarootdir_hack
"
eval sed \"\$ac_sed_extra\" "$ac_file_inputs" | $AWK -f "$ac_tmp/subs.awk" \
  >$ac_tmp/out || as_fn_error $? "could not create $ac_file" "$LINENO" 5

test -z "$ac_datarootdir_hack$ac_datarootdir_seen" &&
  { ac_out=`sed -n '/\${datarootdir}/p' "$ac_tmp/out"`; test -n "$ac_out"; } &&
  { ac_out=`sed -n '/^[	 ]*datarootdir[	 ]*:*=/p' \
      "$ac_tmp/out"`; test -z "$ac_out"; } &&
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&5
$as_echo "$as_me: WARNING: $ac_file contains a reference to the variable \`datarootdir'
which seems to be undefined.  Please make sure it is defined" >&2;}

  rm -f "$ac_tmp/stdin"
  case $ac_file in
  -) cat "$ac_tmp/out" && rm -f "$ac_tmp/out";;
  *) rm -f "$ac_file" && mv "$ac_tmp/out" "$ac_file";;
  esac \
  || as_fn_error $? "could not create $ac_file" "$LINENO" 5
 ;;
  :H)
  #
  # CONFIG_HEADER
  #
  if test x"$ac_file" != x-; then
    {
      $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs"
    } >"$ac_tmp/config.h" \
      || as_fn_error $? "could not create $ac_file" "$LINENO" 5
    if diff "$ac_file" "$ac_tmp/config.h" >/dev/null 2>&1; then
      { $as_echo "$as_me:${as_lineno-$LINENO}: $ac_file is unchanged" >&5
$as_echo "$as_me: $ac_file is unchanged" >&6;}
    else
      rm -f "$ac_file"
      mv "$ac_tmp/config.h" "$ac_file" \
	|| as_fn_error $? "could not create $ac_file" "$LINENO" 5
    fi
  else
    $as_echo "/* $configure_input  */" \
      && eval '$AWK -f "$ac_tmp/defines.awk"' "$ac_file_inputs" \
      || as_fn_error $? "could not create -" "$LINENO" 5
  fi
 ;;

  :C)  { $as_echo "$as_me:${as_lineno-$LINENO}: executing $ac_file commands" >&5
$as_echo "$as_me: executing $ac_file commands" >&6;}
 ;;
  esac


  case $ac_file$ac_mode in
    "do_stamp":C) echo timestamp > stamp-h  ;;

  esac
done # for ac_tag


as_fn_exit 0
_ACEOF
ac_clean_files=$ac_clean_files_save

test $ac_write_fail = 0 ||
  as_fn_error $? "write failure creating $CONFIG_STATUS" "$LINENO" 5

sed -f sedscript < config.status > config_test.status;\
			    mv config_test.status config.status ;\
			    chmod 755 config.status

# configure is writing to config.log, and then calls config.status.
# config.status does its own redirection, appending to config.log.
# Unfortunately, on DOS this fails, as config.log is still kept open
# by configure, so config.status won't be able to write to it; its
# output is simply discarded.  So we exec the FD to /dev/null,
# effectively closing config.log, so it can be properly (re)opened and
# appended to by config.status.  When coming back to configure, we
# need to make the FD available again.
if test "$no_create" != yes; then
  ac_cs_success=:
  ac_config_status_args=
  test "$silent" = yes &&
    ac_config_status_args="$ac_config_status_args --quiet"
  exec 5>/dev/null
  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false
  exec 5>>config.log
  # Use ||, not &&, to avoid exiting from the if with $? = 1, which
  # would make configure fail if this is the last instruction.
  $ac_cs_success || as_fn_exit 1
fi
if test -n "$ac_unrecognized_opts" && test "$enable_option_checking" != no; then
  { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts" >&5
$as_echo "$as_me: WARNING: unrecognized options: $ac_unrecognized_opts" >&2;}
fi



for testfile in $sci_defs_files; do
  file=`echo $testfile | sed 's/test//'`

  if cmp -s $file $testfile 2>/dev/null; then
    { $as_echo "$as_me:${as_lineno-$LINENO}: result: $file is unchanged." >&5
$as_echo "$file is unchanged." >&6; }
    rm -f $testfile
  else
    mv $testfile $file
    { $as_echo "$as_me:${as_lineno-$LINENO}: WARNING: $file has changed." >&5
$as_echo "$as_me: WARNING: $file has changed." >&2;}

    # Because the make system isn't smart enough to notice when a new
    # petsc or hypre is specified to configure, these checks help clean up the code.
    # The "-d StandAlone" is used to skip these checks if this is the first time
    # we have run configure.

    if test -d StandAlone -a "$file" = "include/sci_defs/petsc_defs.h"; then
       echo "WARNING: petsc dependent .o files are probably out of date... removing..."
       $path_to_src/build_scripts/repair.sh -quiet petsc
    fi

    if test -d StandAlone -a "$file" = "include/sci_defs/hypre_defs.h"; then
       echo "WARNING: hypre dependent .o files are probably out of date... removing..."
       $path_to_src/build_scripts/repair.sh -quiet hypre
    fi

  fi
done

###############
## Re-display any IMPORTANT_WARNINGS that have been collected during configure in hopes
## that the user actually sees them.

if (( $NUM_IMPORTANT_WARNINGS > 0 )); then

   echo ""
   echo "!!! IMPORTANT WARNINGS - Please Read: !!!"
   echo ""
   echo "NOTE: Some IMPORTANT WARNINGS were generated during configuration.  A summary of"
   echo "these messages can be found below:"
   echo

   # Note: need '[[' below to get autoconf to create a single '[' in the actual configure file.
   for (( i=0; i < $NUM_IMPORTANT_WARNINGS; i++ )); do
      echo " - " ${IMPORTANT_WARNINGS[${i}]}
   done
   echo
fi

#### Clean up: ####
## Possible temporary template directories
rm -rf ii_files
## sedscript
rm -f sedscript
