#
#  The contents of this file are subject to the University of Utah Public
#  License (the "License"); you may not use this file except in compliance
#  with the License.
#  
#  Software distributed under the License is distributed on an "AS IS"
#  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
#  License for the specific language governing rights and limitations under
#  the License.
#  
#  The Original Source Code is SCIRun, released March 12, 2001.
#  
#  The Original Source Code was developed by the University of Utah.
#  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
#  University of Utah. All Rights Reserved.
#

## XXX: Should probably set AC_PREFIX_DEFAULT to something good some day.
## TODO:
##  - Automatically detect TEMPLATE_BOX and TEMPLATE_TAG variables

AC_INIT(README.PSE)
AC_CONFIG_HEADER(sci_config.h)
AC_CONFIG_AUX_DIR(scripts)
AC_PREREQ(2.0)
AC_PROG_CC
AC_PROG_CXX
AC_LANG_CPLUSPLUS 

##-- Check for different versions --------------------------------------------

AC_ARG_ENABLE(package,
	[  --enable-package		Build the specified packages],
	[package="$enableval"])
AC_ARG_ENABLE(exename,
	[  --enable-exename		Override the default executable name],
	[exename="$enableval"],
	[exename=${exename='default'}])

# Make sure that the gmake being used is at least 3.78.1
gmake_version=`gmake -version | grep version | cut -f4 -d" "`

if test -z "$gmake_version"; then
    AC_MSG_WARN(Cannot tell which version of gmake you are using!)
    AC_MSG_WARN()
    AC_MSG_ERROR(You must be using gmake version 3.78.1!)
    exit 1
else

    gmake_too_old="false"
    # cut the "," off the end
    gmake_version=`echo $gmake_version | cut -f1 -d","`

    major=`echo $gmake_version | cut -f1 -d"."`
    minor=`echo $gmake_version | cut -f2 -d"."`
    subversion=`echo $gmake_version | cut -f3 -d"."`  

    if test $major -lt 3; then
	gmake_too_old="true"
    elif test $minor -lt 78; then
	gmake_too_old="true"
    elif test $subversion -lt 1; then
	gmake_too_old="true"
    fi

    if test "$gmake_too_old" = "true"; then
        AC_MSG_ERROR(gmake version ($gmake_version) is too old.  Need at least 3.78.1)
    fi
fi

#if test "$package" = ""; then
#  echo "--enable-package requires an argument, such as:"
#  echo "  --enable-package=\"Uintah BioPSE\""
#  exit 1
#fi

PACKAGE_DIRS=

for i in $package; do
 PACKAGE_DIRS=$PACKAGE_DIRS" Packages/$i"
done

LOAD_PACKAGE="SCIRun"
for i in $package; do
 LOAD_PACKAGE=$LOAD_PACKAGE,"$i"
done

##-- check for user supplied tcl paths --------------------------------------

AC_ARG_WITH(thirdparty,
	[  --with-thirdparty=<path-to-thirdparty>    <path-to-thirdparty>/{itcltk-8.3.2,xerces-1.3.0,...}],
	[thirdparty="$withval"],
	[thirdparty="/res/sci/data1/SCIRun_Thirdparty_32"])
AC_ARG_WITH(tcl,
        [  --with-tcl=<path-to-tcl>      <path-to-tcl>/bin/tclsh8.?],
        [tcl="$withval"],
        [tcl=""])
AC_ARG_WITH(tk,
        [  --with-tk=<path-to-tk>        <path-to-tk>/bin/wish8.?],
        [tk="$withval"],
        [tk=""])
AC_ARG_WITH(itcl,
        [  --with-itcl=<path-to-itcl>    <path-to-itcl>/bin/itkwish3.?],
        [itcl="$withval"],
        [itcl=""])
AC_ARG_WITH(blt,
        [  --with-blt=<path-to-btl>      <path-to-blt>/bin/bltwish24],
        [blt="$withval"],
        [blt=""])


if test "$exename" = "default"; then
  EXENAME=scirun
else
  EXENAME=$exename
fi

AC_SUBST(PACKAGE_DIRS)
AC_SUBST(LOAD_PACKAGE)
AC_SUBST(EXENAME)

##-- check for supplied xerces path ------------------------------------------

AC_ARG_WITH(xerces,
	[  --with-xerces=<path-to-xerces>  <path-to-xerces>],
	[xerces="$withval"],
	[xerces=""])

##-- Canonical Host Type -----------------------------------------------------
AC_CANONICAL_HOST

##-- Thread libraries --------------------------------------------------------

AC_ARG_ENABLE(threads,
	[  --enable-threads		Specify a thread implementation (pthreads, irix)],
	[threads="$enableval"],
	[threads=${threads='unknown'}])
AC_SUBST(THREAD_IMPL)
AC_SUBST(TIME_IMPL)

##-- Check for TAU --------------------------------------------------------
AC_ARG_WITH(tau,
	  [  --with-tau=<tau-makefile>  Specify Tau Makefile],
	  [tau="$withval"],
	  [tau=""])

##-- Compiler options --------------------------------------------------------
AC_ARG_ENABLE(debug,
	  [ --enable-debug		Turn on debugging (usually -g flag)],
	  [debug="$enableval"],
	  [debug="no"])

AC_ARG_ENABLE(optimize,
	  [  --enable-optimize		Turn on optimize (usually -O2 flag)],
	  [optimize="$enableval"],
	  [optimize=${optimize='no'}])

AC_ARG_ENABLE(output-avg-walltime,
	[  --enable-output-avg-walltime	Output ellapsed wall-times between timesteps],
	[output_avg_walltime="$enableval"],
	[output_avg_walltime=${output_avg_walltime='no'}])

extra_cflags="";
if test "$debug" = "no"; then
  AC_MSG_RESULT(   No debug flags.)
elif test "$debug" = "yes"; then
  extra_cflags="-g ${extra_cflags}";
  AC_MSG_RESULT(   -g debug flag.)
else
  extra_cflags="$debug ${extra_cflags}";
  AC_MSG_RESULT(   $debug debug flags.)
fi

if test "$optimize" = "no"; then
  if test "$debug" = "no"; then
    extra_cflags="-O2 ${extra_cflags}";
    AC_MSG_RESULT(     -O2 optimize flag.)
  else
    AC_MSG_RESULT(     No optimize flags.)
  fi
elif test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}";
  AC_MSG_RESULT(     -O2 optimize flag.)
else
  extra_cflags="$optimize ${extra_cflags}";
  AC_MSG_RESULT(     " $optimize" optimize flags.)
fi


if ! test "$output_avg_walltime" = "no"; then
  extra_cflags="-DOUTPUT_AVG_ELAPSED_WALLTIME ${extra_cflags}"
fi

AC_ARG_ENABLE(largesos,
	[  --enable-largesos		Build one .so per directory],
	[largesos="$enableval"],
	[largesos=${largesos='no'}])
LARGESOS=$largesos
AC_SUBST(LARGESOS)

##-- Host-Specific Defaults --------------------------------------------------

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(AS)
AC_SUBST(LD)
AC_SUBST(CFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ASFLAGS)
AC_SUBST(LDRUN_PREFIX)
AC_SUBST(BINARYFLAGS)

AC_ARG_ENABLE(64bit,
	[  --enable-64bit		Compile in 64 bit mode],
	[is_64bit="$enableval"],
	[is_64bit=$i{is_64bit='no'}])

u=`echo $package | sed 's/.*Uintah.*/Uintah/'`
if test "$u" = "Uintah" ; then
   AC_PROG_F77
   uintah=yes
else
   uintah=no
fi

NEED_SONAME=no
case $host in
  *-irix*) AC_MSG_CHECKING(/opt/MIPSpro/bin/cc)
	   if test "$is_64bit" = "yes" ; then
             BINARYFLAGS="-64 -mips4"
	     if test "$thirdparty" = "/res/sci/data1/SCIRun_Thirdparty_32"; then
	       thirdparty="/res/sci/data1/SCIRun_Thirdparty_64"
	     fi
           else
             BINARYFLAGS="-n32 -mips4"
           fi
           if test -f /opt/MIPSpro/bin/cc; then
             AC_MSG_RESULT(yes)
             AC_MSG_RESULT(  Using MIPSpro compilers instead of gcc; they're better)
             CC=/opt/MIPSpro/bin/cc
             CXX=/opt/MIPSpro/bin/CC
             AS=/opt/MIPSpro/bin/as
             LD=/opt/MIPSpro/bin/ld
           else
             AC_MSG_RESULT(no)
           fi
#           if test "${CC}" = "" ; then
             if type CC | sed 's/^.* //' > /dev/null 2>&1 ; then
               CXX=`type CC | sed 's/^.* //' `
               AC_MSG_RESULT(Using C++ compiler ${CXX})
             fi
             if type cc | sed 's/^.* //' > /dev/null 2>&1 ; then
               CC=`type cc | sed 's/^.* //' `
               AC_MSG_RESULT(Using C compiler ${CC})
             fi
             if type as | sed 's/^.* //' > /dev/null 2>&1 ; then
               AS=`type as | sed 's/^.* //' `
               AC_MSG_RESULT(Using Assembler ${AS})
             fi
#           fi
	   F77=f77
	   FFLAGS="$BINARYFLAGS $extra_cflags"
           CFLAGS="-fullwarn -xansi -LANG:std $BINARYFLAGS $extra_cflags"
	   ASFLAGS="$BINARYFLAGS ${ASFLAGS}"
           SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(LIBDIR)so_locations $(TLINK) ${SOFLAGS}"
           LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved"
           LDRUN_PREFIX="-Wl,-rpath -Wl,"
	   TEMPLATE_TAG=
	   TEMPLATE_BOX="<>"
           if test "$threads" = "unknown"; then
             threads="irix"
           fi
	   TIME_IMPL=Time_irix.cc
	   if test "$is_64bit" = "yes" ; then
             IMAGE_LIBS="-lifl"
           else
             IMAGE_LIBS="-lifl -lcl"
           fi
	   TRACEBACK_LIB=-lexc
           ;;
  *-linux-gnu)
     CFLAGS="-Wall $extra_cflags"
     FFLAGS="$extra_cflags"
     TEMPLATE_TAG=
     TEMPLATE_BOX="<>"
     SOFLAGS="-shared ${SOFLAGS}"
     NEED_SONAME=yes
     LDRUN_PREFIX="-Wl,-rpath -Wl,"
     TIME_IMPL=Time_unix.cc
     PLATFORM_LDFLAGS="-ldl"
     TRACEBACK_LIB=""
     IMAGE_LIBS=""
     AC_CHECK_HEADER(sstream, SSTREAM_COMPAT="no", SSTREAM_COMPAT="yes")
           ;;
  *-aix*)
     AC_MSG_WARN(WARNING: AIX is not completely supported!)
     TIME_IMPL=Time_unix.cc
           ;;
  *)
     AC_MSG_WARN(WARNING: Untested configuration - you are on your own!)
     ;;
esac

AC_SUBST(F77)
AC_SUBST(FFLAGS)
AC_SUBST(PLATFORM_LDFLAGS)
AC_SUBST(NEED_SONAME)
AC_SUBST(SSTREAM_COMPAT)
AC_SUBST(TRACEBACK_LIB)
AC_SUBST(IMAGE_LIBS)

##-- Find dlopen -------------------------------------------------------------

AC_CHECK_LIB(c, dlopen, DL_LIBRARY="", AC_CHECK_LIB(dl, dlopen, DL_LIBRARY="-ldl"))
AC_SUBST(DL_LIBRARY)

##-- Find gzopen (and related) -----------------------------------------------

AC_CHECK_LIB(z,gzopen,GZ_LIBRARY="-lz")
AC_SUBST(GZ_LIBRARY)

##-- Find MPI ----------------------------------------------------------------

AC_ARG_WITH(mpi,
	[  --with-mpi=<path-to-mpi>  <path-to-mpi>],
	[mpi="$withval"],
	[mpi=""])

if test -z "$mpi"; then
  MPI_INCLUDE_DIR=""
  oldcppflags=$CPPFLAGS
  CPPFLAGS="$CPPFLAGS -DMPIPP_H"
  for trylib in mpi mpich; do
     AC_MSG_CHECKING(for MPI in -l$trylib)
     LIBS="$oldLibs -l$trylib"
     AC_TRY_LINK(
#include <mpi.h>
,
     int argc;
     char** argv;
     MPI_Init(&argc, &argv);
, mpi_dir=""; mpi_lib=$trylib; echo "found"; break, echo "not found")
  done
  CPPFLAGS=$oldcppflags
else
  oldcppflags=$CPPFLAGS
  MPI_INCLUDE_DIR=$mpi/include
  CPPFLAGS="$CPPFLAGS -I$MPI_INCLUDE_DIR -DMPIPP_H"
  oldLibs=$LIBS
  for trydir in lib lib32 lib64; do
     for trylib in mpi mpich; do
        AC_MSG_CHECKING(for MPI in -L$mpi/$trydir -l$trylib)
        LIBS="$oldLibs -L$mpi/$trydir -l$trylib"
        AC_TRY_LINK(
#include <mpi.h>
,
	int argc;
	char** argv;
	MPI_Init(&argc, &argv);
, mpi_dir=$mpi/$trydir; mpi_lib=$trylib; 
	AC_MSG_RESULT(found); break 2, AC_MSG_RESULT(not found))
     done
  done
  LIBS=$oldLibs
  CPPFLAGS=$oldcppflags
fi

if test "$uintah" = "yes" ; then

  # Create the Packages/Uintah/tools dir for later use.
  if ! test -d "Packages/Uintah/tools"; then
	echo "Creating Packages/Uintah/tools directory"; 	
	mkdir -p "Packages/Uintah/tools"
  fi

  if test "no$mpi_lib" = "no" ; then
    AC_MSG_ERROR("MPI Required for Uintah")
  fi
  if test "$ac_cv_prog_g77" = "yes" ; then
     G77=1
  else
     G77=0
  fi
else
  G77="not applicable"
fi
AC_SUBST(G77)

MPI_LIB_DIR=$mpi_dir
MPI_LIB_FLAG="-l$mpi_lib"

AC_SUBST(MPI_LIB_DIR)
AC_SUBST(MPI_LIB_FLAG)
AC_SUBST(MPI_INCLUDE_DIR)

##-- Finish LD flags --------------------------------------------
## These cannot be in the first case block, because the $() variables
## confuse configure
case $host in
  *-irix*)
           LDFLAGS="$LDFLAGS -J\$(MAKE_PARALLELISM) $(TLINK)"
           ;;
  *-linux-gnu)
           ;;
  *)
     ;;
esac

##-- Part II thread configuration --------------------------------------------

if test "$threads" = "unknown"; then
   threads="pthreads"
fi
case $threads in
  pthreads*) THREAD_LIBS="-lpthread"
	     THREAD_DEFINE="#define SCI_PTHREAD"
  ;;
  irix)     THREAD_LIBS="-lfetchop"
	    CFLAGS="$CFLAGS -DSTL_SGI_THREADS"
	    THREAD_DEFINE=""
  ;;  
  *)
    AC_MSG_ERROR(Unknown thread implementation: $threads)
  ;;
esac
AC_SUBST(THREAD_LIBS)
AC_SUBST(THREAD_DEFINE)
THREAD_IMPL="Thread_"$threads".cc"

##-- Find a C Compiler -------------------------------------------------------
## AC_PROG_CC
## AC_PROG_CXX

##-- Find Perl ---------------------------------------------------------------

AC_PATH_PROG(PERL, perl, none)
if test "${PERL}" = "none" ; then
  AC_MSG_ERROR(  You must have perl on your path for configure to succeed.)
fi
AC_SUBST(PERL)

##-- Twitty SGI License Chatter ----------------------------------------------

AC_MSG_CHECKING(if ${CC} talks too much)
touch wow.c
if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
  AC_MSG_RESULT(yes)
  AC_MSG_WARN(  Using cc and CC wrappers in scripts/cc and scripts/CC to remove)
  AC_MSG_WARN(  irritating license verbosity from SGI's Varsity Pack MIPSpro)
  AC_MSG_WARN(  compilers.)

  mkdir -p scripts
  sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
  sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
  chmod 755 scripts/cc scripts/CC

  CC="$(OBJTOP)/scripts/cc"
  CXX="$(OBJTOP)/scripts/CC"
else
  AC_MSG_RESULT(no)
fi
rm -f wow.c wow.o

##-- Dependency Regen Switch -------------------------------------------------

AC_MSG_CHECKING($CC dependency regen switch)
rm -f configure-test.*
echo "#include <stdio.h>" > configure-test.c
mkdir configure-test-dir
CC_DEPEND_REGEN=''
CC_DEPEND_REGEN_MOVE='y'

# GCC just puts the dependency info in a .d when you provide the -MD switch.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MD -c configure-test.c > /dev/null 2>&1
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MD'
    ${CC} -MD -c configure-test.c -o configure-test-dir/configure-test.o > /dev/null 2>&1
    if test -f configure-test-dir/configure-test.d ; then
      CC_DEPEND_REGEN_MOVE='n'
    fi
  fi
fi

# SGI cc wants -MDupdate <filename>.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MDupdate configure-test.d -c configure-test.c 2> /dev/null
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
  fi
fi

# IBM/AIX KCC wants "-M > filename"
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -M -c configure-test.c > configure-test.d 2> /dev/null
  if test -s configure-test.d ; then
    CC_DEPEND_REGEN='-M'
  fi
fi

rm -f configure-test.*
rm -rf configure-test-dir

if test "${CC_DEPEND_REGEN}" = "" ; then
  AC_MSG_RESULT(unknown)
  AC_MSG_WARN(Dependency information will not be maintained.)
else
  AC_MSG_RESULT($CC_DEPEND_REGEN)
fi
AC_SUBST(CC_DEPEND_REGEN)
AC_SUBST(CC_DEPEND_REGEN_MOVE)
F77_DEPEND_REGEN=$CC_DEPEND_REGEN
AC_SUBST(F77_DEPEND_REGEN)

##-- How Many Processors -----------------------------------------------------

unset NUM_CPUS
AC_MSG_CHECKING(physical processor count)
case $host in
  *-irix*) NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"
           ;;
  *linux*) NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
           ;;
  *)       NUM_CPUS="1"
           ;;
esac
if ! NUM_CPUS="`expr $NUM_CPUS + 0 2> /dev/null`" ; then
  NUM_CPUS="1"
fi
AC_MSG_RESULT($NUM_CPUS)

MAKE_PARALLELISM="`expr ${NUM_CPUS} \* 2`"
export MAKE_PARALLELISM
AC_SUBST(MAKE_PARALLELISM)

##-- Find TAU ----------------------------------------------------------------

if test "$tau" ; then
  if ! test -f "$tau" ; then
	AC_MSG_ERROR('$tau' does not exist.  Bye!)
  fi

  AC_MSG_RESULT(Using TAU makefile: $tau)

  TAU_MAKEFILE=${tau}
  
  cat > conftest-tau.cc <<EOF

#include <Profile/Profiler.h>

int main(int argc, char **argv)
{
  TAU_PROFILE("main", "int (int, char **)", TAU_DEFAULT);
  TAU_PROFILE_INIT(argc, argv);
  return 0;
}
EOF

  cat > conftest-tau-makefile <<EOF
include $(TAU_MAKEFILE)
all:
	$(TAU_CXX) -o conftest-tau-a.out $(TAU_DEFS) $(TAU_INCLUDE) conftest-tau.cc $(TAU_SHLIBS) $(TAU_MPI_LIBS)
EOF

  if ! (make TAU_MAKEFILE=${tau} -f conftest-tau-makefile > conftestout1) 2> conftesterr1 ; then
	rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
  	AC_MSG_ERROR(TAU libraries not working. Bye!)
  fi
  rm -f conftest-tau.cc conftest-tau-makefile conftest-tau-a.out conftestout1 conftesterr1
fi

AC_SUBST(TAU_MAKEFILE)

##-- Find TCL ----------------------------------------------------------------

AC_MSG_CHECKING(for Tcl 8.X)

# try the user supplied path first
if test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

# if not found try the default
if test -z "$TCL_MAJOR_VERSION" ; then
  unset cfsh
  cfsh="$thirdparty/lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

# if still not found try some standard locations
if test -z "$TCL_MAJOR_VERSION" ; then
  unset cfsh
  cfsh="/usr/local/lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  else
    cfsh="/usr/lib/tclConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
    fi
  fi
fi

if test "$TCL_MAJOR_VERSION" = "8" ; then
  # TCL_PREFIX set by tclConfig.sh
  TCL_INCLUDE_DIR="${TCL_PREFIX}/include"
  TCL_LIB_DIR="${TCL_PREFIX}/lib"
  # TCL_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TCL_LIB_FLAG="`eval echo $TCL_LIB_FLAG`"
  TCL_INIT_DIR="${TCL_LIB_DIR}/tcl${TCL_VERSION}"
  AC_MSG_RESULT(-L$TCL_LIB_DIR $TCL_LIB_FLAG)

  if test "$TCL_LD_FLAGS" != "" ; then
    if test "$host" = "*-irix*"; then
      AC_MSG_WARN(  XXX: Check SGI ABI)
    fi
  fi
else
  if test -z "TCL_MAJOR_VERSION" ; then
    AC_MSG_ERROR(not found -- must build.  Implement me.)
  else
    AC_MSG_ERROR(incorrect tcl version $TCL_MAJOR_VERSION$TCL_MINOR_VERSION$TCL_PATCH_LEVEL found)
  fi
fi

# These are headers we need to build our custom widgets.
if test ! -d "$TCL_SRC_DIR/generic" ||
   test ! -f "$TCL_SRC_DIR/generic/tcl.h" ||
   test ! -f "$TCL_SRC_DIR/generic/tclPort.h" ||
   test ! -f "$TCL_SRC_DIR/generic/tclMath.h" ||
   test ! -f "$TCL_SRC_DIR/generic/tclInt.h"; then
  AC_MSG_WARN(Couldn't find the necessary Tcl include files.)
  AC_MSG_ERROR(The full Tcl source is required.  exiting.)
fi

AC_SUBST(TCL_INCLUDE_DIR)
AC_SUBST(TCL_SRC_DIR)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_LIB_FLAG)
AC_SUBST(TCL_INIT_DIR)

##-- Find Tk -----------------------------------------------------------------

AC_MSG_CHECKING(for Tk 8.X)

if test "$tk" ; then
  unset cfsh
  cfsh="$tk/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
elif test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

# if not found try the default
if test -z "$TK_MAJOR_VERSION" ; then
  unset cfsh
  cfsh="$thirdparty/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

# if still not found try some standard locations
if test -z "$TK_MAJOR_VERSION" ; then
  unset cfsh
  cfsh="/usr/local/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  else
    cfsh="/usr/lib/tkConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
    fi
  fi
fi

if test "$TK_MAJOR_VERSION" = "8" ; then
  # TK_PREFIX set by tclConfig.sh
  TK_INCLUDE_DIR="${TK_PREFIX}/include"
  TK_LIB_DIR="${TK_PREFIX}/lib"
  # TK_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TK_LIB_FLAG="`eval echo $TK_LIB_FLAG`"
  TK_LIB_SPEC="`eval echo $TK_LIB_SPEC`"

  AC_MSG_RESULT(-L$TK_LIB_DIR $TK_LIB_FLAG)

  # Can't check the SGI ABI 'cause LD_FLAGS doesn't get def'd in tkConfig.sh;
  # just assume the tk we find matches the tcl we find.

  if ! test "$TCL_PREFIX" = "$TK_PREFIX" ; then
    AC_MSG_WARN(Tcl and Tk not colocated; this might indicate a problem)
  fi

  if ! test "$TCL_VERSION" = "$TK_VERSION" -a \
            "$TCL_PATCH_LEVEL" = "$TK_PATCH_LEVEL" ; then
    AC_MSG_ERROR(Tcl and Tk are not the same version & patch level; this is Wrong)
  fi

else
  AC_MSG_ERROR(not found -- must build.  Implement me.)
fi

# These are headers we need to build our custom widgets.
if test ! -d "$TK_SRC_DIR/generic" ||
   test ! -f "$TK_SRC_DIR/generic/tk.h" ||
   test ! -f "$TK_SRC_DIR/generic/tk3d.h" ||
   test ! -f "$TK_SRC_DIR/generic/tkPort.h" ; then
  AC_MSG_WARN(Couldn't find the necessary Tk include files.)
  AC_MSG_ERROR(The full Tk source is required.  exiting.)
fi

AC_SUBST(TK_INCLUDE_DIR)
AC_SUBST(TK_SRC_DIR)
AC_SUBST(TK_LIB_DIR)
AC_SUBST(TK_LIB_FLAG)
AC_SUBST(TK_LIB_SPEC)
AC_SUBST(TK_VERSION)

##-- Find iTcl ---------------------------------------------------------------

AC_MSG_CHECKING([for [[incr Tcl/Tk]] 3.X])

if test "$BUILDING_TK" = "" ; then

if test "$itcl" ; then
  unset cfsh
  cfsh="$itcl/lib/itclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh;
    ITCL_PREFIX="$itcl"
  fi
  cfsh="$itcl/lib/itkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
elif test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/itclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh;
    ITCL_PREFIX="$tcl"
  fi
  cfsh="$tcl/lib/itkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

# if not found try the SCI group defaults (we're lazy ;)
if test -z "$ITCL_MAJOR_VERSION" ; then

  unset cfsh
  cfsh="$thirdparty/lib/itclConfig.sh"
  ITCL_PREFIX="$thirdparty"
  if test -f $cfsh ; then
    . $cfsh
  else
    ITCL_PREFIX=""
  fi  

  unset cfsh
  cfsh="$thirdparty/lib/itkConfig.sh"
  ITK_PREFIX="$thirdparty"
  if test -f $cfsh ; then
    . $cfsh
  else
    ITK_PREFIX=""
  fi  
fi

# if still not found try some standard locations
if test -z "$ITCL_MAJOR_VERSION" ; then
  unset cfsh
  cfsh="/usr/local/lib/itclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
    ITCL_PREFIX="/usr/local"
  else
    cfsh="/usr/lib/itclConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
      ITCL_PREFIX="/usr"
    fi
  fi
  cfsh="/usr/local/lib/itkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  else
    cfsh="/usr/lib/itkConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
    fi
  fi
fi

fi # end BUILDING_TK

if test "$ITCL_MAJOR_VERSION" = "3" ; then
  if test -z "$ITCL_PREFIX" ; then
   ITCL_PREFIX="`cd $shdir/.. ; pwd`"
  fi
  ITCL_INCLUDE_DIR="${ITCL_PREFIX}/include"
  ITCL_SRC_DIR="`eval echo $ITCL_SRC_DIR`"
  ITCL_LIB_SPEC="`eval echo $ITCL_LIB_SPEC`"
  ITK_SRC_DIR="`eval echo $ITK_SRC_DIR`"
  ITK_LIB_SPEC="`eval echo $ITK_LIB_SPEC`"
  ITCL_LIB_DIR="${ITCL_PREFIX}/lib"
  ITK_LIB_DIR="${ITCL_PREFIX}/lib"
  ITCL_BIN_DIR="${ITCL_PREFIX}/bin"
  ITCLSH="${ITCL_BIN_DIR}/itclsh${ITCL_VERSION}"
  ITCL_WIDGETS="${ITCL_LIB_DIR}/iwidgets/scripts"
  ITCL_INIT_DIR="${ITCL_LIB_DIR}/itcl${ITCL_VERSION}"
  result="${ITCL_LIB_SPEC} -l`basename $ITK_LIB_FILE | sed -e 's,lib,,g' -e 's,.so,,g'`"
  AC_MSG_RESULT($result)
else
  if test -z "$ITCL_VERSION" ; then
    AC_MSG_ERROR(not found -- must build.  Implement me.)
  else
    AC_MSG_ERROR(incorrect itcl/itk version $ITCL_VERSION$ITCL_PATCH_LEVEL found)
  fi
fi

if test ! -d "$ITCL_SRC_DIR/generic" ||
   test ! -f "$ITCL_SRC_DIR/generic/itcl.h" ||
   test ! -f "$ITK_SRC_DIR/generic/itk.h" ; then
  AC_MSG_ERROR(Couldn't find the [[incr Tcl/Tk]] include files.  exiting.)
fi

AC_SUBST(ITCLSH)
AC_SUBST(ITCL_INCLUDE_DIR)
AC_SUBST(ITCL_LIB_DIR)
AC_SUBST(ITCL_BIN_DIR)
#AC_SUBST(ITCL_LIB_FLAG)
AC_SUBST(ITCL_WIDGETS)
AC_SUBST(ITCL_INIT_DIR)
AC_SUBST(ITCL_SRC_DIR)
AC_SUBST(ITCL_LIB_SPEC)

AC_SUBST(ITK_SRC_DIR)
AC_SUBST(ITK_LIB_DIR)
AC_SUBST(ITK_LIB_SPEC)

##-- Find BLT ---------------------------------------------------------------
AC_MSG_CHECKING(for BLT 2.4x)

if test "$blt" &&
      ( test -f "$blt/lib/libBLT24.so" || test -f "$blt/lib/libBLT24.a" ); then
  BLT_PREFIX=$blt
elif test "$tcl" && 
      ( test -f "$tcl/lib/libBLT24.so" || test -f "$tcl/lib/libBLT24.a" ); then
  BLT_PREFIX=$tcl
fi

if test -z "$BLT_PREFIX" ; then
  if test -f "$thirdparty/lib/libBLT24.so" || 
     test -f "$thirdparty/lib/libBLT24.a"; then
    BLT_PREFIX="$thirdparty"
  elif test -f "/usr/local/lib/libBLT24.so" || 
       test -f "/usr/local/lib/libBLT24.a";  then
    BLT_PREFIX=/usr/local
  elif test -f "/usr/lib/libBLT24.so" || test -f "/usr/lib/libBLT24.a"; then
    BLT_PREFIX=/usr
  fi
fi

if test "$BLT_PREFIX" ; then
  BLT_INCLUDE_DIR="$BLT_PREFIX/include"
  BLT_LIB_DIR="$BLT_PREFIX/lib"
  BLT_LIB_FLAG="-lBLT24"
  AC_MSG_RESULT(-L$BLT_LIB_DIR $BLT_LIB_FLAG -I$BLT_INCLUDE_DIR)
else
  AC_MSG_ERROR(not found -- must build.  Implement me.)
fi

if test ! -d "$BLT_INCLUDE_DIR" ||
   test ! -f "$BLT_INCLUDE_DIR/blt.h" ; then
  AC_MSG_ERROR(Couldn't find the BLT include file in $BLT_INCLUDE_DIR.  Exiting.)
fi

AC_SUBST(BLT_INCLUDE_DIR)
AC_SUBST(BLT_LIB_DIR)
AC_SUBST(BLT_LIB_FLAG)

##-- Find Xerces-C  ------------------------------------------------------

AC_MSG_CHECKING(for Xerces-C 1.X)

if test "$xerces" &&
   test -n "`ls -1r $xerces/lib/libxerces-c1_?.so 2> /dev/null | head -n 1`"; then
  XML_LIB_DIR=$xerces/lib
fi

if test -z "$XML_LIB_DIR"; then
  if test -n "`ls -1r $thirdparty/lib/libxerces-c1_?.so 2> /dev/null | head -n 1`"; then
    XML_LIB_DIR="$thirdparty/lib"
  elif test -n "`ls -1r /usr/local/lib/libxerces-c1_?.so 2> /dev/null | head -n 1`"; then 
    XML_LIB_DIR="/usr/local/lib"
  elif test -n "`ls -1r /usr/lib/libxerces-c1_?.so 2> /dev/null | head -n 1`"; then 
    XML_LIB_DIR="/usr/lib"
  fi
fi

if test -z "$XML_LIB_DIR"; then
  AC_MSG_ERROR(Could not find a Xerces-C library.  exiting.)
fi

AC_MSG_RESULT($XML_LIB_DIR)


if (test $XML_LIB_DIR &&
    test -d "$XML_LIB_DIR/../include/xercesc/util" &&
    test -d "$XML_LIB_DIR/../include/xercesc/sax" &&
    test -d "$XML_LIB_DIR/../include/xercesc/dom" &&
    test -d "$XML_LIB_DIR/../include/xercesc/parsers") ; then
  XML_INCLUDE_DIR="$XML_LIB_DIR/../include/xercesc"
else
  AC_MSG_ERROR(Couldn't find the Xerces-C headers.  exiting.)
fi

XML_LIB_FLAG="`ls -1 $XML_LIB_DIR/libxerces-c1_?.so |\
	      sort -r | head -n 1 |  sed -e's,lib,,g' -e 's,.so,,g'`"
XML_LIB_FLAG="-l`basename $XML_LIB_FLAG`"

AC_MSG_RESULT(-L$XML_LIB_DIR $XML_LIB_FLAG)

AC_SUBST(XML_LIB_DIR)
AC_SUBST(XML_LIB_FLAG)
AC_SUBST(XML_INCLUDE_DIR)


##-- Find Teem ------------------------------------------------------

teem_pkg="no"
for i in $package; do
  if test "$i" = "Teem" ; then
    teem_pkg="yes"
    if test -e "$thirdparty/include/nrrd.h" ; then
      TEEM_PREFIX=$thirdparty
    fi
  fi
done

if test "${teem_pkg}" = "yes" ; then
  if test "${with_teem+set}" = set; then
    withval="$with_teem"
    if test "$withval" != "yes" ; then
      if test -e "${withval}/include/nrrd.h"; then
        TEEM_PREFIX="$withval"
      else
        AC_MSG_ERROR(could not find ${withval}/include/nrrd.h)
        teem_pkg="no"
      fi
    else
      AC_MSG_WARN(ignoring pathless with-teem flag)
    fi
  fi
fi

if test "${teem_pkg}" = "yes" ; then
  AC_MSG_CHECKING(for teem)
  if test "$TEEM_PREFIX" ; then
    TEEM_INCLUDE="-I${TEEM_PREFIX}/include"
    TEEM_LIB_DIR="${TEEM_PREFIX}/lib"
    AC_MSG_RESULT(${TEEM_PREFIX})
  else
    AC_MSG_RESULT(no)
  fi
fi

AC_SUBST(TEEM_INCLUDE)
AC_SUBST(TEEM_LIB_DIR)


##-- Find MPEG ---------------------------------------------------------------

MPEG_DEF_FLAG=""
MPEG_PREFIX=""
if test "${with_mpeg+set}" = set; then
  withval="$with_mpeg"
  if test "$withval" != "yes" ; then
    if test -e "${withval}/include/mpege.h"; then
      MPEG_PREFIX="$withval"
    else
      echo "\n*** Error - could not find MPEG in ${withval}/include/mpege.h\n"
    fi
  else
    if test -e "$thirdparty/include/mpege.h" ; then
      MPEG_PREFIX=$thirdparty
    else
      echo "\n*** Error - could not find MPEG in $thirdparty/include/mpege.h\n";
    fi
  fi
fi

if test "$MPEG_PREFIX" != "" ; then
  AC_MSG_CHECKING(for mpeg)
  MPEG_DEF_FLAG="-DMPEG"
  MPEG_INCLUDE="-I${MPEG_PREFIX}/include"
  MPEG_LIBRARY="-L${MPEG_PREFIX}/lib -lmpege"
  echo "${MPEG_PREFIX}"
fi

AC_SUBST(MPEG_INCLUDE)
AC_SUBST(MPEG_LIBRARY)
AC_SUBST(MPEG_DEF_FLAG)


##-- Find libimage -----------------------------------------------------------

LIBIMAGE_DEF_FLAG=""
LIBIMAGE_PREFIX=""
if test "${with_libimage+set}" = set; then
  withval="$with_libimage"
  if test "$withval" != "yes" ; then
    if test -e "${withval}/include/image.h"; then
      LIBIMAGE_PREFIX="$withval"
    else
      echo "\n*** Error - could not find libimage at ${withval}/include/image.h\n"
    fi
  else
    if test -e "$thirdparty/include/image.h" ; then
      LIBIMAGE_PREFIX=$thirdparty
    else
      echo "\n*** Error - could not find libimage in $thirdparty/include/image.h\n";
    fi
  fi
fi

if test "$LIBIMAGE_PREFIX" != "" ; then
  AC_MSG_CHECKING(for libimage)
  LIBIMAGE_DEF_FLAG="-DLIBIMAGE"
  LIBIMAGE_INCLUDE="-I${LIBIMAGE_PREFIX}/include"
  LIBIMAGE_LIBRARY="-L${LIBIMAGE_PREFIX}/lib -limage"
  echo "${LIBIMAGE_PREFIX}"
fi

AC_SUBST(LIBIMAGE_INCLUDE)
AC_SUBST(LIBIMAGE_LIBRARY)
AC_SUBST(LIBIMAGE_DEF_FLAG)



##-- Find Nektar--------------------------------------------------------------

AC_ARG_WITH(with_nektar,
	[  --with-nektar=DIR		Use the nektar installation in DIR],
	[with_nektar="$withval"],
	[with_nektar=${with_nektar='no'}])


if ! test "${with_nektar}" = "no"; then
  NEKTAR_PREFIX=${with_nektar}
  NEKTAR_INCLUDE_DIR="${NEKTAR_PREFIX}/include"
  NEKTAR_LIB_DIR="${NEKTAR_PREFIX}/lib"
  NEKTAR_LIB_FLAG="-lhybridopt -lvec"
  echo "with Nektar at ${NEKTAR_PREFIX}"
fi

AC_SUBST(NEKTAR_INCLUDE_DIR)
AC_SUBST(NEKTAR_LIB_DIR)
AC_SUBST(NEKTAR_LIB_FLAG)


##-- Find etags ------------------------------------------------------------

AC_PATH_PROG(ETAGS, etags, notfound)
if test "$ETAGS" = "notfound" ; then
  echo "\tetags not found"
fi
 

##-- Find location of OpenGL -----------------------------------------------

AC_MSG_CHECKING(for OpenGL)

if test -e /usr/include/GL; then
  #GL_INCLUDE_FLAG="-I/usr/include"
  # using -I/usr/include is a bad idea... compilers should
  # be looking there anyway.  If they are not then we have
  # a problem as KCC cannot be told to use /usr/include
  GL_INCLUDE_FLAG=""
elif test -e /usr/X11R6/include/GL; then
  GL_INCLUDE_FLAG="-I/usr/X11R6/include"
elif test -e /usr/local/include/GL; then
  GL_INCLUDE_FLAG="-I/usr/local/include"
else
  AC_MSG_WARN(could not find the location of the GL headers.)
  AC_MSG_ERROR(by standard convention, they should be in /usr/include/GL)
fi

if test -e /usr/lib/libGL.so; then
  GL_LIB_DIR="/usr/lib"
elif test -e /usr/X11R6/lib/libGL.so; then
  GL_LIB_DIR="/usr/X11R6/lib"
elif test -e /usr/local/lib/libGL.so; then
  GL_LIB_DIR="/usr/local/lib"
fi

AC_MSG_RESULT(-l$GL_LIB_DIR -L$GL_INCLUDE_FLAG)

AC_SUBST(GL_INCLUDE_FLAG)
AC_SUBST(GL_LIB_DIR)


##-- Other paths for Uintah ------------------------------------------

AC_ARG_ENABLE(enable_sci_malloc,
	[  --enable-sci-malloc		Use SCI malloc checker],
	[enable_sci_malloc="$enableval"],
	[enable_sci_malloc=${enable_sci_malloc='yes'}])

if test "$enable_sci_malloc" = "yes"; then
	MALLOC_DEFINE=""
else
	MALLOC_DEFINE="#define DISABLE_SCI_MALLOC"
fi
AC_SUBST(MALLOC_DEFINE)

##-- Other paths for Uintah ------------------------------------------

AC_ARG_WITH(petsc,
	[  --with-petsc=<path-to-petsc>  <path-to-petsc>],
	[withpetsc="$withval"],
	[withpetsc=""])
if test "$optimize" = "yes"; then
   PETSC_SUB="libO"
else
   PETSC_SUB="libg"
fi
PETSC_DIR=$withpetsc
if test "xx$withpetsc" != "xx"; then
   PETSC_ARCH=`$withpetsc/bin/petscarch`
   if test "$is_64bit" != "yes" -a "$PETSC_ARCH" = "IRIX64"; then
      PETSC_ARCH="IRIX"
   fi
fi
AC_SUBST(PETSC_DIR)
AC_SUBST(PETSC_SUB)
AC_SUBST(PETSC_ARCH)

##-- Check for a uni-PETSc -----------------------------------------

AC_ARG_WITH(unipetsc,
        [  --with-unipetsc=<path-to-unipetsc>  <path-to-unipetsc>],
        [unipetsc="$withval"],
	[unipetsc=""])

AC_MSG_CHECKING(for uni-PETSc)

UNI_PETSC_LIB_DIR=""
UNI_PETSC_INC_DIR=""
UNI_PETSC_INC=""

if test "$unipetsc" &&
   test -e "$unipetsc/bin/petscarch"; then
   PETSC_ARCH=`$unipetsc/bin/petscarch`
   if test "$is_64bit" != "yes" &&
      test "$PETSC_ARCH" = "IRIX64"; then
      PETSC_ARCH="IRIX"
   fi
fi

# try the user supplied path first
if test "$unipetsc"; then
  if test -e "$unipetsc/lib/$PETSC_SUB/$PETSC_ARCH/libpetsc.so"; then
    UNI_PETSC_LIB_DIR="-L$unipetsc/lib/$PETSC_SUB/$PETSC_ARCH"
    UNI_PETSC_INC_DIR="$unipetsc/include"
    UNI_PETSC_INC="-I$unipetsc/bmake/linux -I$unipetsc/include"
  elif test -e "$unipetsc/lib/libpetsc.so"; then
    UNI_PETSC_LIB_DIR="-L$unipetsc/lib"
    UNI_PETSC_INC_DIR="$unipetsc/include"
    UNI_PETSC_INC="-I$unipetsc/include"
  fi
fi

# if not found try the default
if test -z "$UNI_PETSC_LIB_DIR" ; then
  if test -e "$thirdparty/$PETSC_SUB/libpetsc.so"; then
    UNI_PETSC_LIB_DIR=-L$thirdparty/$PETSC_SUB
    UNI_PETSC_INC_DIR="$thirdparty/include"
    UNI_PETSC_INC="-I$thirdparty/include"
  elif test -e "$thirdparty/lib/libpetsc.so"; then
    UNI_PETSC_LIB_DIR=-L$thirdparty/lib
    UNI_PETSC_INC_DIR="$thirdparty/include"
    UNI_PETSC_INC="-I$thirdparty/include"
  fi
fi

# if still not found try a standard location
if test -z "$UNI_PETSC_LIB_DIR" ; then
  if test -e /usr/lib/libpetsc.so; then
    UNI_PETSC_LIB_DIR=-L/usr/lib
    UNI_PETSC_INC_DIR=/usr/include
    UNI_PETSC_INC=-I/usr/include
  fi
fi

if test "$unipetsc" &&
   test "$UNI_PETSC_LIB_DIR" == ""; then
  AC_MSG_RESULT(no)
  AC_MSG_WARN(uni-PETSc libraries not found)
  AC_MSG_ERROR(Stopping.)
fi

if test "$UNI_PETSC_LIB_DIR"; then
  UNI_PETSC_DEF="#define UNI_PETSC"
  UNI_PETSC_LIBS="-lpetsc -lpetscsles -lpetscmat -lpetscvec \
                   -lpetscdm -lpetsccontrib -llapack -lblas -lg2c -lmpiuni"
fi

if test "$UNI_PETSC_LIB_DIR"; then
  if test ! -f "$UNI_PETSC_INC_DIR/petsc.h" ||
     test ! -f "$UNI_PETSC_INC_DIR/petscsles.h"; then
    AC_MSG_RESULT(no)
    AC_MSG_WARN(Found: uni-PETSc libs; not found: uni-PETSc include files.)
    UNI_PETSC_LIB_DIR=""
    UNI_PETSC_INC_DIR=""
    UNI_PETSC_DEF=""
    UNI_PETSC_LIBS=""
    AC_MSG_ERROR(Stopping.)
  else
    AC_MSG_RESULT($UNI_PETSC_LIB_DIR -lpetsc)
  fi
else
  AC_MSG_RESULT(no)
fi

AC_SUBST(UNI_PETSC_INC)
AC_SUBST(UNI_PETSC_LIB_DIR)
AC_SUBST(UNI_PETSC_DEF)
AC_SUBST(UNI_PETSC_LIBS)

##-- Emit local configuration file -------------------------------------------

if test "$is_64bit" = "yes"; then
  NBITS=64
else
  NBITS=32
fi
AC_SUBST(NBITS)

AC_ARG_ENABLE(assertion-level,
	[  --enable-assertion-level=N   Use assertion level N (0-3)],
	[enable_assertion_level="$enableval"],
	[enable_assertion_level=${enable_assertion_level=3}])
ASSERTION_LEVEL=$enable_assertion_level
AC_SUBST(ASSERTION_LEVEL)

AC_SUBST(TEMPLATE_BOX)
AC_SUBST(TEMPLATE_TAG)

##-- Check for option to build new parallel (distributed memory) SCIRun ------

AC_ARG_ENABLE(enable_parallel,
	[  --enable-parallel		Compile experimental distributed memory version],
	[enable_parallel="$enableval"],
	[enable_parallel=${enable_parallel='no'}])
AC_ARG_WITH(with_globus,
	[  --with-globus=DIR		Use the globus installation in DIR],
	[with_globus="$withval"],
	[with_globus=${with_globus='no'}])

if test "$enable_parallel" = "yes"; then
  if test "$with_globus" = "no"; then
    echo "Must include --with-globus with --enable-parallel"
    exit 1
  fi

  PARALLEL_DEFINE="#define SCI_PARALLEL"
  parallel_output="
	        Base/Core/globus_threads/Makefile \
	      Component/Makefile \
	        Component/CIA/Makefile \
	        Component/PIDL/Makefile \
	        Base/Dataflow/Interface/Makefile \
	        Base/Dataflow/Controller/Makefile \
	        Base/Dataflow/Builder/Makefile \
	      newmain/Makefile \
	        tools/sidl/Makefile \
		testprograms/Component/Makefile \
		  testprograms/Component/argtest/Makefile \
		  testprograms/Component/memstress/Makefile \
		  testprograms/Component/mitest/Makefile \
		  testprograms/Component/objects/Makefile \
		  testprograms/Component/pingpong/Makefile \
		"
  BUILD_PARALLEL="yes"
  GLOBUS_INCLUDE="-I$with_globus/include"
  GLOBUS_LIB="$with_globus/lib$NBITS"
else
  PARALLEL_DEFINE=""
  BUILD_PARALLEL="no"
  GLOBUS_INCLUDE=""
  GLOBUS_LIB=""
fi
AC_SUBST(GLOBUS_INCLUDE)
AC_SUBST(GLOBUS_LIB)
AC_SUBST(PARALLEL_DEFINE)
AC_SUBST(BUILD_PARALLEL)

##-- Check enterleave flag ---------------------------------------------------

AC_ARG_ENABLE(enterleave,
	[  --enable-enterleave		Make gmake print out entering/leaving statements],
	[enterleave="$enableval"],
	[enterleave=${enterleave='no'}])

if test "$enterleave" = "yes" ; then
	NOPRINTDIR=EMPTY
else
	NOPRINTDIR="--no-print-directory"
fi
AC_SUBST(NOPRINTDIR)

##-- Check for header files --------------------------------------------------

AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(sys/time.h)
AC_PATH_XTRA()
if test x"$X_LIBS" = x"-L/usr/lib" -o x"$X_LIBS" = x" -L/usr/lib"; then
  X_LIBS=""
fi

if ! test x"$X_LIBS" = x; then
  X_LIBS="-Wl,-rpath,$x_libraries $X_LIBS"
fi

##-- Check for programs ------------------------------------------------------

# Yacc - for sidl
AC_PROG_YACC()
AC_SUBST(YACC)

# Lex - for sidl
AC_PROG_LEX()
AC_SUBST(LEX)
AC_SUBST(LEXLIB)

##-------- check/create subdirs that have special Makefiles ---------

AC_CHECK_FILE(Dataflow/Modules/Fields/Manip, 
	echo "found it";, 
	echo "creating Dataflow/Modules/Fields/Manip..."; 	
	mkdir -p "Dataflow/Modules/Fields/Manip")

AC_CHECK_FILE(Dataflow/Modules/Math/Manip, 
	echo "found it";, 
	echo "creating Dataflow/Modules/Math/Manip..."; 	
	mkdir -p "Dataflow/Modules/Math/Manip")

AC_CHECK_FILE(on-the-fly-libs, 
	echo "found it";, 
	echo "creating on-the-fly-libs..."; 	
	mkdir -p "on-the-fly-libs")

abs_conftop_dir=`pwd`;
AC_SUBST(abs_conftop_dir)

output_files="configVars.mk \
		Makefile \
		on-the-fly-libs/Makefile\
		disjointPackageMakefile \
                Dataflow/Modules/Fields/Manip/Makefile\
		Dataflow/Modules/Math/Manip/Makefile\
		sci_testdefs.h"

# Only do the following if configuring with Uintah
# - Add a list of Uintah specific output files. 
if test "$uintah" = "yes" ; then
   output_files="$output_files \
		Packages/Uintah/tools/fspec.pl"
fi

##-- Generate Output Files ---------------------------------------------------
AC_OUTPUT( $output_files )

## I tried adding these after a "," to the AC_OUTPUT list...
#  Then I tried using AC_OUTPUT_COMMANDS to do them.
#  For whatever reason, when added to AC_OUTPUT, it just
#  create files ",", "echo", "755" etc.
#  When used in AC_OUTPUT_COMMANDS, the echo used the entire
#  line as an argument to echo, instead of running all the
#  commands.  If someone knows what is going on, please
#  feel free to fix this back.  Dd.

echo timestamp > stamp-h

# Only do the following if configuring with Uintah
# - Uintah specific shell commands.
if test "$uintah" = "yes" ; then
   chmod 755 Packages/Uintah/tools/fspec.pl
fi

if cmp -s sci_defs.h sci_testdefs.h 2>/dev/null; then
  echo "sci_defs.h is unchanged"
  rm -f sci_testdefs.h
else
  mv sci_testdefs.h sci_defs.h
  echo "sci_defs.h is changed"
fi
