// -*- C++ -*-
//
// $Id$

// ****  Code generated by the The ACE ORB (TAO) IDL Compiler ****
// TAO and the TAO IDL Compiler have been developed by:
//       Center for Distributed Object Computing
//       Washington University
//       St. Louis, MO
//       USA
//       http://www.cs.wustl.edu/~schmidt/doc-center.html
// and
//       Distributed Object Computing Laboratory
//       University of California at Irvine
//       Irvine, CA
//       USA
//       http://doc.ece.uci.edu/
// and
//       Institute for Software Integrated Systems
//       Vanderbilt University
//       Nashville, TN
//       USA
//       http://www.isis.vanderbilt.edu/
//
// Information about TAO is available at:
//     http://www.cs.wustl.edu/~schmidt/TAO.html

// TAO_IDL - Generated from
// be/be_codegen.cpp:186

#ifndef _TAO_IDL_TESTC_H_
#define _TAO_IDL_TESTC_H_

#include "tao/ORB.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */

#include "tao/CDR.h"
#include "tao/Environment.h"
#include "tao/Object.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO 

#if defined (TAO_EXPORT_NESTED_CLASSES)
#  if defined (TAO_EXPORT_NESTED_MACRO)
#    undef TAO_EXPORT_NESTED_MACRO
#  endif /* defined (TAO_EXPORT_NESTED_MACRO) */
#  define TAO_EXPORT_NESTED_MACRO 
#endif /* TAO_EXPORT_NESTED_CLASSES */

#if defined(_MSC_VER)
#if (_MSC_VER >= 1200)
#pragma warning(push)
#endif /* _MSC_VER >= 1200 */
#pragma warning(disable:4250)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option push -w-rvl -w-rch -w-ccc -w-inl
#endif /* __BORLANDC__ */

// TAO_IDL - Generated from 
// be/be_visitor_root/root_ch.cpp:63

namespace TAO
{
  class Collocation_Proxy_Broker;
  
  template<typename T> class Narrow_Utils;
  template<typename T> class AbstractBase_Narrow_Utils;
}

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:48

namespace Test
{
  
  // TAO_IDL - Generated from
  // be/be_interface.cpp:611

#if !defined (_TEST_FILEREADER__VAR_OUT_CH_)
#define _TEST_FILEREADER__VAR_OUT_CH_
  
  class FileReader;
  typedef FileReader *FileReader_ptr;
  
  typedef
    TAO_Objref_Var_T<
        FileReader
      >
    FileReader_var;
  
  typedef
    TAO_Objref_Out_T<
        FileReader
      >
    FileReader_out;

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:54

#if !defined (_TEST_FILEREADER_CH_)
#define _TEST_FILEREADER_CH_
  
  class  FileReader
    : public virtual CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<FileReader>;
    typedef FileReader_ptr _ptr_type;
    typedef FileReader_var _var_type;
    
    // The static operations.
    static FileReader_ptr _duplicate (FileReader_ptr obj);
    
    static FileReader_ptr _narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static FileReader_ptr _unchecked_narrow (
        CORBA::Object_ptr obj
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    static FileReader_ptr _nil (void)
    {
      return (FileReader_ptr)0;
    }
    
    static void _tao_any_destructor (void *);
    
    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TEST_FILEREADER_DOUBLE_ARRAY_CH_)
#define _TEST_FILEREADER_DOUBLE_ARRAY_CH_
    
    class double_array;
    
    typedef
      TAO_FixedSeq_Var_T<
          double_array,
          CORBA::Double
        >
      double_array_var;
    
    typedef
      TAO_Seq_Out_T<
          double_array,
          double_array_var,
          CORBA::Double
        >
      double_array_out;
    
    class  double_array
      : public
          TAO_Unbounded_Sequence<
              CORBA::Double
            >
    {
    public:
      double_array (void);
      double_array (CORBA::ULong max);
      double_array (
          CORBA::ULong max,
          CORBA::ULong length,
          CORBA::Double* buffer, 
          CORBA::Boolean release = 0
        );
      double_array (const double_array &);
      ~double_array (void);
      
      static void _tao_any_destructor (void *);
      
      typedef double_array_var _var_type;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_double_array;
    
    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:101

#if !defined (_TEST_FILEREADER_LONG_ARRAY_CH_)
#define _TEST_FILEREADER_LONG_ARRAY_CH_
    
    class long_array;
    
    typedef
      TAO_FixedSeq_Var_T<
          long_array,
          CORBA::Long
        >
      long_array_var;
    
    typedef
      TAO_Seq_Out_T<
          long_array,
          long_array_var,
          CORBA::Long
        >
      long_array_out;
    
    class  long_array
      : public
          TAO_Unbounded_Sequence<
              CORBA::Long
            >
    {
    public:
      long_array (void);
      long_array (CORBA::ULong max);
      long_array (
          CORBA::ULong max,
          CORBA::ULong length,
          CORBA::Long* buffer, 
          CORBA::Boolean release = 0
        );
      long_array (const long_array &);
      ~long_array (void);
      
      static void _tao_any_destructor (void *);
      
      typedef long_array_var _var_type;
    };

#endif /* end #if !defined */
    
    // TAO_IDL - Generated from
    // be/be_visitor_typecode/typecode_decl.cpp:44
    
    static ::CORBA::TypeCode_ptr _tc_long_array;
    
    // TAO_IDL - Generated from
    // be/be_visitor_operation/operation_ch.cpp:46
    
    virtual CORBA::Long getPDEdescription (
        Test::FileReader::double_array_out nodes,
        Test::FileReader::long_array_out boundaries,
        Test::FileReader::long_array_out dirichletNodes,
        Test::FileReader::double_array_out dirichletValues
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      )
      ACE_THROW_SPEC ((
        CORBA::SystemException
      ));
    
    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:196
    
    virtual CORBA::Boolean _is_a (
        const char *type_id
        ACE_ENV_ARG_DECL_WITH_DEFAULTS
      );
    
    virtual const char* _interface_repository_id (void) const;
    virtual CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  private:
    TAO::Collocation_Proxy_Broker *the_TAO_FileReader_Proxy_Broker_;
  
  protected:
    // Concrete interface only.
    FileReader (int collocated = 0);
    
    // These methods travese the inheritance tree and set the
    // parents piece of the given class in the right mode.
    virtual void Test_FileReader_setup_collocation (int collocated);
    
    // Concrete non-local interface only.
    FileReader (
        IOP::IOR *ior,
        TAO_ORB_Core *orb_core = 0
      );
    
    // Non-local interface only.
    FileReader (
        TAO_Stub *objref,
        CORBA::Boolean _tao_collocated = 0,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0
      );
    
    virtual ~FileReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    FileReader (const FileReader &);
    
    void operator= (const FileReader &);
  };

#endif /* end #if !defined */
  
  // TAO_IDL - Generated from
  // be/be_visitor_typecode/typecode_decl.cpp:44
  
  TAO_NAMESPACE_STORAGE_CLASS ::CORBA::TypeCode_ptr _tc_FileReader;

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:66

} // module Test

// Proxy Broker Factory function pointer declarations.

// TAO_IDL - Generated from
// be/be_visitor_root/root.cpp:120

extern 
TAO::Collocation_Proxy_Broker *
(*Test__TAO_FileReader_Proxy_Broker_Factory_function_pointer) (
    CORBA::Object_ptr obj
  );

// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:59

// Traits specializations.
namespace TAO
{

#if !defined (_TEST_FILEREADER__TRAITS_CH_)
#define _TEST_FILEREADER__TRAITS_CH_
  
  ACE_TEMPLATE_SPECIALIZATION
  struct  Objref_Traits<Test::FileReader>
  {
    static Test::FileReader_ptr tao_duplicate (
        Test::FileReader_ptr
      );
    static void tao_release (
        Test::FileReader_ptr
      );
    static Test::FileReader_ptr tao_nil (void);
    static CORBA::Boolean tao_marshal (
        Test::FileReader_ptr p,
        TAO_OutputCDR & cdr
      );
  };

#endif /* end #if !defined */
}

// TAO_IDL - Generated from
// be/be_visitor_interface/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, Test::FileReader_ptr); // copying
 void operator<<= (CORBA::Any &, Test::FileReader_ptr *); // non-copying
 CORBA::Boolean operator>>= (const CORBA::Any &, Test::FileReader_ptr &);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const Test::FileReader::double_array &); // copying version
 void operator<<= (CORBA::Any &, Test::FileReader::double_array*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, Test::FileReader::double_array *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const Test::FileReader::double_array *&);

// TAO_IDL - Generated from
// be/be_visitor_sequence/any_op_ch.cpp:52

 void operator<<= (CORBA::Any &, const Test::FileReader::long_array &); // copying version
 void operator<<= (CORBA::Any &, Test::FileReader::long_array*); // noncopying version
 CORBA::Boolean operator>>= (const CORBA::Any &, Test::FileReader::long_array *&); // deprecated
 CORBA::Boolean operator>>= (const CORBA::Any &, const Test::FileReader::long_array *&);

// TAO_IDL - Generated from
// be/be_visitor_root/cdr_op.cpp:48

#ifndef __ACE_INLINE__

// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:55

 CORBA::Boolean operator<< (TAO_OutputCDR &, const Test::FileReader_ptr );
 CORBA::Boolean operator>> (TAO_InputCDR &, Test::FileReader_ptr &);

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_Test_FileReader_double_array_H_
#define _TAO_CDR_OP_Test_FileReader_double_array_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Test::FileReader::double_array &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Test::FileReader::double_array &
  );

#endif /* _TAO_CDR_OP_Test_FileReader_double_array_H_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:70

#if !defined _TAO_CDR_OP_Test_FileReader_long_array_H_
#define _TAO_CDR_OP_Test_FileReader_long_array_H_

 CORBA::Boolean operator<< (
    TAO_OutputCDR &,
    const Test::FileReader::long_array &
  );
 CORBA::Boolean operator>> (
    TAO_InputCDR &,
    Test::FileReader::long_array &
  );

#endif /* _TAO_CDR_OP_Test_FileReader_long_array_H_ */

// TAO_IDL - Generated from
// be/be_visitor_root/cdr_op.cpp:64

#endif /* __ACE_INLINE__ */

// TAO_IDL - Generated from
// be/be_codegen.cpp:1060

#if defined (__ACE_INLINE__)
#include "TestC.i"
#endif /* defined INLINE */

#if defined(_MSC_VER) && (_MSC_VER >= 1200)
#pragma warning(pop)
#endif /* _MSC_VER */

#if defined (__BORLANDC__)
#pragma option pop
#endif /* __BORLANDC__ */

#endif /* ifndef */

