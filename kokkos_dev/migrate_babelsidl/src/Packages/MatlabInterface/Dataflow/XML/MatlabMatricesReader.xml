<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">
<?xml-stylesheet href="../../../../Dataflow/XML/package-component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->

<component name="MatlabMatricesReader" category="DataIO">
  <overview>
    <authors>
      <author>Jeroen Stinstra</author>
    </authors>
	
    <summary> The MatlabMatricesReader module reads a matrix from a
MATLAB file
	</summary>
	
    <description>
	
      <section>
	<title>Module description</title>
	<p>
	This module imports matrices from MATLAB .mat files. Currently
only files from matlab version 5 and higher are supported by this
module. The module reads both dense and sparse matrices of any of the
supported data classes in matlab (short, int, double, etc.). Currently
the SCIRun matrix class only supports doubles, hence every matrix is
casted into a double matrix. In order to facilitate the selection
process the module will list all matrices in the file that are
compatible with the SCIRun matrix class and will select the most
obvious one as a default. </p>  
	
	<p> Follow the next two steps in order to setup the GUI
properly: </p>
	
	<orderedlist>
	  <listitem>
	    <p>Choose the MATLAB file that contains the matrix data.
You can either use the BROWSE button to select a file or enter the
filename in the filename entry on top of the GUI and press the OPEN
button to list the contents of the file in the listbox in the center
of the GUI.</p>
	  </listitem>
	  <listitem>
	    <p>Next the MATLAB matrices in the file need to be
connected to an output port. In order to do this click on one of the
PORT buttons and then select the MATLAB matrix you want to load on
that outport. Note that for convenience the first suitable matrix in
the file is automatically connected to port 1, when a MATLAB file is
opened. Hence, if your file only contains one field, you can skip this
step as the matrix will be selected automatically. </p>
	  </listitem>
	</orderedlist>
      </section>
	
      <section>
	<title>See Also </title>
	<p>
	<modref package="MatlabInterface" name="Matlab" />, <modref
package="MatlabInterface" name="MatlabBundelsReader" />, <modref
package="MatlabInterface" name="MatlabBundlesWriter" />, <modref
package="MatlabInterface" name="MatlabDataReader" />, <modref
package="MatlabInterface" name="MatlabDataWriter" />, <modref
package="MatlabInterface" name="MatlabFieldsReader" />, <modref
package="MatlabInterface" name="MatlabFieldsWriter" />, <modref
package="MatlabInterface" name="MatlabMatricesReader" />, <modref
package="MatlabInterface" name="MatlabMatricesReader" />, <modref
package="MatlabInterface" name="MatlabNrrdsWriter" />, <modref
package="MatlabInterface" name="MatlabNrrdsReader" />	
	</p>
      </section>
	
    </description>   
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Filename</name>
        <datatype>SCIRun::String</datatype>
      </port>         
    </inputs>
    <outputs>
      <port>
        <name>Matrix1</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Matrix2</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Matrix3</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Matrix4</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Matrix5</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Matrix6</name>
	<datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Filename</name>
        <datatype>SCIRun::String</datatype>
      </port>            
    </outputs>
  </io>
 
  <gui>

    <parameter>
      <widget> Entry </widget>
      <label> .mat file </label>
      <description>
	<p> The name of the MATLAB file </p>
      </description>
    </parameter>

    <parameter>
      <widget> Button </widget>
      <label> Open </label>
      <description>
	<p> Opens the file specified in the MATLAB file entrybox </p>
      </description>
    </parameter>

    <parameter>
      <widget> Button </widget>
      <label> Browse </label>
      <description>
	<p> Open a filesectionbox and choose a MATLAB file </p>
      </description>
    </parameter>

    <parameter>
      <widget> Listbox </widget>
      <label> matlab matrix selector </label>
      <description>
	<p> Displays the matrices that are stored in the MATLAB file
and an information string describing the data in the matrix</p>
      </description>
    </parameter>

    <parameter>
      <widget> Button </widget>
      <label> Port N </label>
      <description>
	<p> Button for selecting which output port is used to export
the data. The button highlighted white is currently selected one.
Selecting a matrix from the list below will put that matrix on the
port whose label is highlighted in white. </p>
      </description>
    </parameter>
	
    <parameter>
      <widget>  Checkbox </widget>
      <label> Disable Matlab to C++ conversion (data will be
transposed) </label>
      <description>
	<p>Large dataset are often ordered such that the first
dimension is the one that is accessed most. For example the dimension
time is often the last one. Because Matlab and C++ use different
ordering, a favorable ordering may get lost by importing a matrix
directly. By switching on this option the matrix is transposed, but
the ordering in memory stays the same. This often saves a lot of
swapping to virtual memory for large datasets.</p>
 
      </description>
    </parameter>

  </gui>
 
  <nets>
    <net id="network">
      <title>Loading Cardiac data using the MatlabInterface</title>
  
      <p> This network demonstrates how to use the MatlabInterface
modules when the data is stored in matlab and how it can be used in
SCIRun. This example makes use of two example MATLAB files stored in
SCIRunData/Matlab. The first file called "geometry.mat" describes the
geometry of the epicardium and contains a structured matrix with a
field called .node containing the position of all the nodes and a
field called .face containing the connectivity of the geometry. The
data itself is contained in a second MATLAB file called
"timeseries.mat" this file contains a plain dense matrix with a
timeseries for each node. Each row in this matrix represents a time
signal of a different electrode. In figure <xref target="network"/>
the basic network is shown for displaying the data on top of the
geometry using SCIRun.
   </p>
  
      <figure id="network">
	<img>../Modules/DataIO/doc/Example_Network.jpg</img>
	<caption>Network for displaying epicardial
potentials</caption>
      </figure>
  
      <p> The settings of both the MATLAB file readers are shown in
figures <xref target="GUI1"/> and <xref target="GUI2"/>. Set the
ChangeFieldDataAt to "Nodes" in its GUI and execute the network. By
changing the selected column vector in the MatrixSelectVector GUI
different time instances of a heatbeat can be depicted in the
epicardial surface.</p>
  
      <figure id="GUI1">
	<img>../Modules/DataIO/doc/MatlabFieldsReaderGUI.jpg</img>
	<caption>MatlabFieldsReader GUI showing the selection of the
"geometry.mat" file</caption>
      </figure>

      <figure id="GUI2">
	<img>../Modules/DataIO/doc/MatlabMatricesReaderGUI.jpg</img>
	<caption>MatlabMatricesReader GUI showing the selection of the
"timeseries.mat" file</caption>
      </figure>
  
    </net>
  </nets>
</component>