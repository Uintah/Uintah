#ifndef xyz_h
#define xyz_h

namespace DaveW {
namespace Datatypes {

// data from Paul Bourke - http://www.mhri.edu.au/~pdb/colour/conversion.html
//                  x       y
//        Red     0.628   0.346           call these xr and yr
//        Green   0.268   0.588            "     "   xg and yg
//        Blue    0.150   0.070            "     "   xb and yb
//        White   0.313   0.329            "     "   xw and yw
//
/* REFERENCED */
static float NTSC_rgb[3][3] = {
    {2.739, -1.145, -0.424},  // R
    {-1.119, 2.029, 0.033},   // G
    {0.138, -0.333, 1.105}};  // B
//




// data from Steve and Glassner (102)
//
//    toRGB[0][0]=1.73; toRGB[0][1]=-0.4823; toRGB[0][2]=-0.2611;
//    toRGB[1][0]=-0.8135; toRGB[1][1]=1.652; toRGB[1][2]=-.02339;
//    toRGB[2][0]=0.08344; toRGB[2][1]=-0.1694; toRGB[2][2]=1.2845;
//
//                  x       y
//        Red     0.670   0.330
//        Green   0.210   0.710
//        Blue    0.140   0.080
//        White   0.313   0.329

/* REFERENCED */
static int xSpacing = 5;
/* REFERENCED */
static int ySpacing = 5;
/* REFERENCED */
static int zSpacing = 5;
/* REFERENCED */
static int xMinWavelength = 375;
/* REFERENCED */
static int yMinWavelength = 380;
/* REFERENCED */
static int zMinWavelength = 375;
/* REFERENCED */
static int xNumEntries = 82;
/* REFERENCED */
static int yNumEntries = 78;
/* REFERENCED */
static int zNumEntries = 52;

// data from Peter Shirley

/* REFERENCED */
static float xWavelengths[82] = {
375,
380,
385,
390,
395,

400,
405,
410,
415,
420,
425,
430,
435,
440,
445,
450,
455,
460,
465,
470,
475,
480,
485,
490,
495,

500,
505,
510,
515,
520,
525,
530,
535,
540,
545,
550,
555,
560,
565,
570,
575,
580,
585,
590,
595,

600,
605,
610,
615,
620,
625,
630,
635,
640,
645,
650,
655,
660,
665,
670,
675,
680,
685,
690,
695,

700,
705,
710,
715,
720,
725,
730,
735,
740,
745,
750,
755,
760,
765,
770,
775,
780

};

static float xAmplitudes[82] = {
0.0000,
0.0014,
0.0022,
0.0042,
0.0076,

0.0143,
0.0232,
0.0435,
0.0776,
0.1344,
0.2148,
0.2839,
0.3285,
0.3483,
0.3481,

0.3362,
0.3187,
0.2908,
0.2511,
0.1954,
0.1421,
0.0956,
0.0580,
0.0320,
0.0147,

0.0049,
0.0024,
0.0093,
0.0291,
0.0633,
0.1096,
0.1655,
0.2257,
0.2904,
0.3597,

0.4334,
0.5121,
0.5945,
0.6784,
0.7621,
0.8425,
0.9163,
0.9786,
1.0263,
1.0567,

1.0622,
1.0456,
1.0026,
0.9384,
0.8544,
0.7514,
0.6424,
0.5419,
0.4479,
0.3608,

0.2835,
0.2187,
0.1649,
0.1212,
0.0874,
0.0636,
0.0468,
0.0329,
0.0227,
0.0158,

0.0114,
0.0081,
0.0058,
0.0041,
0.0029,
0.0020,
0.0014,
0.0010,
0.0007,
0.0005,

0.0003,
0.0002,
0.0002,
0.0001,
0.0001,
0.0001,
0.0000

};

/* REFERENCED */
static float yWavelengths[78] = {

380,
385,
390,
395,

400,
405,
410,
415,
420,
425,
430,
435,
440,
445,
450,
455,
460,
465,
470,
475,
480,
485,
490,
495,

500,
505,
510,
515,
520,
525,
530,
535,
540,
545,
550,
555,
560,
565,
570,
575,
580,
585,
590,
595,

600,
605,
610,
615,
620,
625,
630,
635,
640,
645,
650,
655,
660,
665,
670,
675,
680,
685,
690,
695,

700,
705,
710,
715,
720,
725,
730,
735,
740,
745,
750,
755,
760,
765

};

static float yAmplitudes[78] = {
0.0000,
0.0001,
0.0001,
0.0002,

0.0004,
0.0006,
0.0012,
0.0022,
0.0040,
0.0073,
0.0116,
0.0168,
0.0230,
0.0298,
0.0380,
0.0480,
0.0600,
0.0739,
0.0910,
0.1126,
0.1390,
0.1693,
0.2080,
0.2586,

0.3230,
0.4073,
0.5030,
0.6082,
0.7100,
0.7932,
0.8620,
0.9149,
0.9540,
0.9803,
0.9950,
1.0000,
0.9950,
0.9786,
0.9520,
0.9154,
0.8700,
0.8163,
0.7570,
0.6949,

0.6310,
0.5668,
0.5030,
0.4412,
0.3810,
0.3210,
0.2650,
0.2170,
0.1750,
0.1382,
0.1070,
0.0816,
0.0610,
0.0446,
0.0320,
0.0232,
0.0170,
0.0119,
0.0082,
0.0057,

0.0041,
0.0029,
0.0021,
0.0015,
0.0010,
0.0007,
0.0005,
0.0004,
0.0002,
0.0002,

0.0001,
0.0001,
0.0001,
0.0000
};



/* REFERENCED */
static float zWavelengths[52] = {
375,
380,
385,
390,
395,

400,
405,
410,
415,
420,
425,
430,
435,
440,
445,
450,
455,
460,
465,
470,
475,
480,
485,
490,
495,

500,
505,
510,
515,
520,
525,
530,
535,
540,
545,
550,
555,
560,
565,
570,
575,
580,
585,
590,
595,

600,
605,
610,
615,
620,
625,
630
};

static float zAmplitudes[52] = {
0.0000,
0.0065,
0.0105,
0.0201,
0.0362,

0.0679,
0.1102,
0.2074,
0.3713,
0.6456,
1.0391,
1.3856,
1.6230,
1.7471,
1.7826,
1.7721,
1.7441,
1.6692,
1.5281,
1.2876,
1.0419,
0.8310,
0.6162,
0.4652,
0.3533,

0.2720,
0.2123,
0.1582,
0.1117,
0.0782,
0.0573,
0.0422,
0.0298,
0.0203,
0.0134,
0.0087,
0.0057,
0.0039,
0.0027,
0.0021,
0.0018,
0.0017,
0.0014,
0.0011,
0.0010,

0.0008,
0.0006,
0.0003,
0.0002,
0.0002,
0.0001,
0.0000

};

} // End namespace Datatypes
} // End namespace DaveW

//
// $Log$
// Revision 1.2  1999/10/07 02:06:19  sparker
// use standard iostreams and complex type
//
// Revision 1.1  1999/08/23 02:52:59  dmw
// Dave's Datatypes
//
// Revision 1.2  1999/05/03 04:52:08  dmw
// Added and updated DaveW Datatypes/Modules
//
//

#endif

