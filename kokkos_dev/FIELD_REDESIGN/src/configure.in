## $Id$
## XXX: Should probably set AC_PREFIX_DEFAULT to something good some day.
## TODO:
##  - Automatically detect TEMPLATE_BOX and TEMPLATE_TAG variables

AC_INIT(README.PSE)
AC_CONFIG_HEADER(sci_config.h)
AC_CONFIG_AUX_DIR(scripts)
AC_PREREQ(2.0)

##-- Check for different versions --------------------------------------------

AC_ARG_ENABLE(package,
	[  --enable-package		Build the specified packages],
	[package="$enableval"],
	[package=${package='SCIRun'}])
AC_ARG_ENABLE(exename,
	[  --enable-exename		Override the default executable name],
	[exename="$enableval"],
	[exename=${exename='default'}])

if test "$package" = ""; then
  echo "--enable-package requires an argument, such as:"
  echo "  --enable-package=\"Uintah SCIRun\""
  exit 1
fi

PACKAGE_DIRS=$package
PACKAGE_PATH="\$(SRCTOP_ABS)/PSECommon"
for i in $package; do
 PACKAGE_PATH=$PACKAGE_PATH,"\$(SRCTOP_ABS)/$i"
done

##-- check for user supplied tcl paths --------------------------------------

AC_ARG_WITH(tcl,
        [  --with-tcl=<path-to-tcl>      <path-to-tcl>/bin/tclsh8.0],
        [tcl="$withval"],
        [tcl=""])
AC_ARG_WITH(tk,
        [  --with-tk=<path-to-tk>        <path-to-tk>/bin/wish8.0],
        [tk="$withval"],
        [tk=""])
AC_ARG_WITH(itcl,
        [  --with-itcl=<path-to-itcl>    <path-to-itcl>/bin/itkwish3.0],
        [itcl="$withval"],
        [itcl=""])
AC_ARG_WITH(blt,
        [  --with-blt=<path-to-btl>      <path-to-blt>/bin/bltwish24],
        [blt="$withval"],
        [blt=""])


if test "$exename" = "default"; then
  EXENAME=pse
else
  EXENAME=$exename
fi

AC_SUBST(PACKAGE_DIRS)
AC_SUBST(PACKAGE_PATH)
AC_SUBST(EXENAME)

##-- check for supplied xerces path ------------------------------------------

AC_ARG_WITH(xerces,
	[  --with-xerces=<path-to-xerces>  <path-to-xerces>],
	[xerces="$withval"],
	[xerces=""])

##-- Canonical Host Type -----------------------------------------------------

AC_CANONICAL_HOST

##-- Thread libraries --------------------------------------------------------

AC_ARG_ENABLE(threads,
	[  --enable-threads		Specify a thread implementation (pthreads, irix)],
	[threads="$enableval"],
	[threads=${threads='unknown'}])
AC_SUBST(LOCK_IMPL)
AC_SUBST(THREAD_IMPL)
AC_SUBST(TIME_IMPL)

##-- Compiler options --------------------------------------------------------
AC_ARG_ENABLE(debug,
	[  --enable-debug		Turn on debugging (usually -g flag)],
	[debug="$enableval"],
	[debug=${debug='no'}])
AC_ARG_ENABLE(optimize,
	[  --enable-optimize		Turn on debugging (usually -O2 flag)],
	[optimize="$enableval"],
	[optimize=${optimize='no'}])

extra_cflags="";
if test "$debug" = "yes"; then
  extra_cflags="-g ${extra_cflags}";
elif ! test "$debug" = "no"; then
  extra_cflags="$debug ${extra_cflags}";
fi
if test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}";
elif ! test "$optimize" = "no"; then
  extra_cflags="$optimize ${extra_cflags}";
fi

AC_ARG_ENABLE(largesos,
	[  --enable-largesos		Build one .so per directory],
	[largesos="$enableval"],
	[largesos=${largesos='no'}])
LARGESOS=$largesos
AC_SUBST(LARGESOS)

##-- Host-Specific Defaults --------------------------------------------------

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(AS)
AC_SUBST(LD)
AC_SUBST(CFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ASFLAGS)
AC_SUBST(LDRUN_PREFIX)
AC_SUBST(BINARYFLAGS)

AC_ARG_ENABLE(64bit,
	[  --enable-64bit		Compile in 64 bit mode],
	[is_64bit="$enableval"],
	[is_64bit=$i{is_64bit='no'}])

NEED_SONAME=no
case $host in
  *-irix*) echo -n "Checking for /opt/MIPSpro/bin/cc... "
	   if test "$is_64bit" = "yes" ; then
             BINARYFLAGS="-64 -mips4"
           else
             BINARYFLAGS="-n32 -mips4"
           fi
           if test -f /opt/MIPSpro/bin/cc; then
             echo "yes"
             echo "  Using MIPSpro compilers instead of gcc; they're better"
             CC=/opt/MIPSpro/bin/cc
             CXX=/opt/MIPSpro/bin/CC
             AS=/opt/MIPSpro/bin/as
             LD=/opt/MIPSpro/bin/ld
           else
             echo "no"
           fi
           if test "${CC}" = "" ; then
             if type CC | sed 's/^.* //' > /dev/null 2>&1 ; then
               CXX=`type CC | sed 's/^.* //' `
               echo "Using C++ compiler ${CXX}"
             fi
             if type cc | sed 's/^.* //' > /dev/null 2>&1 ; then
               CC=`type cc | sed 's/^.* //' `
               echo "Using C compiler ${CC}"
             fi
             if type as | sed 's/^.* //' > /dev/null 2>&1 ; then
               AS=`type as | sed 's/^.* //' `
               echo "Using Assembler ${AS}"
             fi
           fi
	   F77=f77
	   FFLAGS="$BINARYFLAGS ${FFLAGS}"
           CFLAGS="-fullwarn -xansi -LANG:std ${CFLAGS} $BINARYFLAGS $extra_cflags"
	   ASFLAGS="$BINARYFLAGS ${ASFLAGS}"
           SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(LIBDIR)so_locations $(TLINK) ${SOFLAGS}"
           LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) $(TLINK)"
           LDRUN_PREFIX="-Wl,-rpath -Wl,"
	   TEMPLATE_TAG=
	   TEMPLATE_BOX="<>"
	   LOCK_IMPL=lock_mips.s
           if test "$threads" = "unknown"; then
             threads="irix"
           fi
	   TIME_IMPL=Time_irix.cc
	   if test "$is_64bit" = "yes" ; then
             IMAGE_LIBS="-lifl"
           else
             IMAGE_LIBS="-lifl -lcl"
           fi
	   TRACEBACK_LIB=-lexc
           ;;
  *-linux-gnu)
     AC_PROG_CC
     AC_PROG_CXX
#     AC_PROG_F77
     CFLAGS="-Wall ${CFLAGS}"
     TEMPLATE_TAG=
     TEMPLATE_BOX="<>"
     LOCK_IMPL=""
     SOFLAGS="-shared ${SOFLAGS}"
     NEED_SONAME=yes
     LDRUN_PREFIX="-Wl,-rpath -Wl,"
     TIME_IMPL=Time_unix.cc
     PLATFORM_LDFLAGS="-ldl"
     TRACEBACK_LIB=""
     IMAGE_LIBS=""
     echo "checking for sstream"
     AC_CHECK_HEADER(sstream, SSTREAM_COMPAT="no", SSTREAM_COMPAT="yes")
           ;;
  *)
     echo "WARNING: Untested configuration - you are on your own!"
     AC_PROG_CC
     AC_PROG_CXX
     ;;
esac
AC_SUBST(F77)
AC_SUBST(FFLAGS)
AC_SUBST(PLATFORM_LDFLAGS)
AC_SUBST(NEED_SONAME)
AC_SUBST(SSTREAM_COMPAT)
AC_SUBST(TRACEBACK_LIB)
AC_SUBST(IMAGE_LIBS)
##-- Part II thread configuration --------------------------------------------

if test "$threads" = "unknown"; then
   threads="pthreads"
fi
case $threads in
  pthreads*) THREAD_LIBS="-lpthread"
	     THREAD_DEFINE="#define SCI_PTHREAD"
  ;;
  irix)     THREAD_LIBS="-lfetchop"
	    CFLAGS="$CFLAGS -DSTL_SGI_THREADS"
	    THREAD_DEFINE=""
  ;;  
  *)
    echo "Unknown thread implementation: $threads"
    exit 1
  ;;
esac
AC_SUBST(THREAD_LIBS)
AC_SUBST(THREAD_DEFINE)
THREAD_IMPL="Thread_"$threads".cc"

##-- Find a C Compiler -------------------------------------------------------
## AC_PROG_CC
## AC_PROG_CXX

##-- Find Perl ---------------------------------------------------------------

AC_PATH_PROG(PERL, perl, none)
if test "${PERL}" = "none" ; then
  echo "  You must have perl on your path for configure to succeed."
  exit 1
fi

##-- Twitty SGI License Chatter ----------------------------------------------

echo -n "Checking if ${CC} talks too much... "
touch wow.c
if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
  echo "yes"
  echo "  Using cc and CC wrappers in scripts/cc and scripts/CC to remove"
  echo "  irritating license verbosity from SGI's Varsity Pack MIPSpro"
  echo "  compilers."

  mkdir -p scripts
  sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
  sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
  chmod 755 scripts/cc scripts/CC

  CC="$(OBJTOP)/scripts/cc"
  CXX="$(OBJTOP)/scripts/CC"
else
  echo "no"
fi
rm -f wow.c wow.o

##-- One Rarely Finds This ---------------------------------------------------

AC_CHECK_LIB(Kenny,life_signs,true,
             echo "  Oh my God!  They killed Kenny!  You bastards!")

##-- Dependency Regen Switch -------------------------------------------------

echo -n "Determining cc dependency regen switch: "
rm -f configure-test.*
echo "#include <stdio.h>" > configure-test.c
CC_DEPEND_REGEN=''

# GCC just puts the dependency info in a .d when you provide the -MD switch.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MD -c configure-test.c > /dev/null 2>&1
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MD'
  fi
fi

# SGI cc wants -MDupdate <filename>.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MDupdate configure-test.d -c configure-test.c
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MDupdate $(dir $@)depend.mk'
  fi
fi

rm -f configure-test.*

if test "${CC_DEPEND_REGEN}" = "" ; then
  echo unknown
  echo "  Warning: Dependency information will not be maintained."
else
  echo $CC_DEPEND_REGEN
fi
AC_SUBST(CC_DEPEND_REGEN)
F77_DEPEND_REGEN=$CC_DEPEND_REGEN
AC_SUBST(F77_DEPEND_REGEN)

##-- How Many Processors -----------------------------------------------------

unset NUM_CPUS
echo -n "Determining physical processor count: "
case $host in
  *-irix*) NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"
           ;;
  *linux*) NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
           ;;
  *)       NUM_CPUS="1"
           ;;
esac
if ! NUM_CPUS="`expr $NUM_CPUS + 0 2> /dev/null`" ; then
  NUM_CPUS="1"
fi
echo $NUM_CPUS

MAKE_PARALLELISM="`expr ${NUM_CPUS} \* 2`"
export MAKE_PARALLELISM
AC_SUBST(MAKE_PARALLELISM)

##-- Find TCL ----------------------------------------------------------------

echo -n "Looking for Pre-built TCL 8.0.4... "

if test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

if test -z "$TCL_VERSION" ; then
unset Wish80
if Wish80="`type tclsh8.0 | sed 's/^.* //'`" ; then
  unset cfsh
  cfsh="`dirname $Wish80`/../lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi
fi

if test "$TCL_VERSION" = "8.0" -a "$TCL_PATCH_LEVEL" = ".4" ; then
  # TCL_PREFIX set by tclConfig.sh
  TCL_INCLUDE_DIR="${TCL_PREFIX}/include"
  TCL_LIB_DIR="${TCL_PREFIX}/lib"
  # TCL_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TCL_LIB_FLAG="`eval echo $TCL_LIB_FLAG`"

  echo -L$TCL_LIB_DIR $TCL_LIB_FLAG

  if test "$TCL_LD_FLAGS" != "" ; then
    if test "$host" = "*-irix*"; then
      echo "  XXX: Check SGI ABI"
    fi
  fi

else
  if test -z "TCL_VERSION" ; then
    echo "not found -- must build"
    echo "  Implement me."
  else
    echo "incorrect tcl version $TCL_VERSION$TCL_PATCH_LEVEL found"
  fi
  exit 1
fi

AC_SUBST(TCL_INCLUDE_DIR)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_LIB_FLAG)

##-- Find Tk -----------------------------------------------------------------

echo -n "Looking for Pre-built Tk 8.0.4... "

if test "$tk" ; then
  unset cfsh
  cfsh="$tk/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
    echo -n --with-tk gives $TK_VERSION$TK_PATCH_LEVEL
  fi
elif test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi

if test -z "$TK_VERSION" ; then
unset Wish80
if Wish80="`type wish8.0 | sed 's/^.* //'`" ; then
  unset cfsh
  cfsh="`dirname $Wish80`/../lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi
fi

if test "$TK_VERSION" = "8.0" -a "$TK_PATCH_LEVEL" = ".4" ; then
  # TK_PREFIX set by tclConfig.sh
  TK_INCLUDE_DIR="${TK_PREFIX}/include"
  TK_LIB_DIR="${TK_PREFIX}/lib"
  # TK_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TK_LIB_FLAG="`eval echo $TK_LIB_FLAG`"

  echo -L$TK_LIB_DIR $TK_LIB_FLAG

  # Can't check the SGI ABI 'cause LD_FLAGS doesn't get def'd in tkConfig.sh;
  # just assume the tk we find matches the tcl we find.

  if ! test "$TCL_PREFIX" = "$TK_PREFIX" ; then
    echo "  WARNING: Tcl and Tk not colocated; this might indicate a problem"
  fi

  if ! test "$TCL_VERSION" = "$TK_VERSION" -a \
            "$TCL_PATCH_LEVEL" = "$TK_PATCH_LEVEL" ; then
    echo "  ERROR: Tcl and Tk are not the same version & patch level; this is Wrong"
    exit 1
  fi

else
  echo "not found -- must build"
  BUILDING_TK=1
  echo "  Implement me."
  exit 1
fi

AC_SUBST(TK_INCLUDE_DIR)
AC_SUBST(TK_LIB_DIR)
AC_SUBST(TK_LIB_FLAG)

##-- Find iTcl ---------------------------------------------------------------

echo -n "Looking for Pre-built iTk 3.0... "

if test "$BUILDING_TK" = "" ; then

if test "$itcl" ; then
  unset cfsh
  cfsh="$itcl/lib/itkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
    ITCL_PREFIX=$itcl
  fi
elif test "$tcl" ; then
  unset cfsh
  cfsh="$tcl/lib/itkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
    ITCL_PREFIX=$tcl
  fi
fi

if test -z "$ITCL_VERSION" ; then
  unset Wish80
  if sh="`type itkwish3.0 | sed 's/^.* //'`" ; then
    unset cfsh
    shdir="`dirname $sh`"
    cfsh="$shdir/../lib/itkConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
    fi
  fi
fi
fi # end BUILDING_TK

if test "$ITCL_VERSION" = "3.0" ; then
  if test -z "$ITCL_PREFIX" ; then
   ITCL_PREFIX="`cd $shdir/.. ; pwd`"
  fi
  ITCL_INCLUDE_DIR="${ITCL_PREFIX}/include"
  ITCL_LIB_DIR="${ITCL_PREFIX}/lib"
  ITCL_BIN_DIR="${ITCL_PREFIX}/bin"
  ITCL_LIB_FLAG="-litk3.0 -litcl3.0"
  ITCL_WIDGETS="${ITCL_LIB_DIR}/iwidgets/scripts"

  #echo -L$ITCL_PREFIX $ITCL_LIB_FLAG
  echo -L$ITCL_LIB_DIR $ITCL_LIB_FLAG
else
  if test -z "$ITCL_VERSION" ; then
    echo "not found -- must build"
    echo "  Implement me."
  else
    echo "incorrect itcl/itk version $ITCL_VERSION$ITCL_PATCH_LEVEL found"
  fi
  exit 1
fi

AC_SUBST(ITCL_INCLUDE_DIR)
AC_SUBST(ITCL_LIB_DIR)
AC_SUBST(ITCL_BIN_DIR)
AC_SUBST(ITCL_LIB_FLAG)
AC_SUBST(ITCL_WIDGETS)

##-- Find BLT ---------------------------------------------------------------
echo -n "Looking for Pre-built blt 2.4... "

if test "$blt" ; then
  BLT_PREFIX=$blt
elif test "$tcl" ; then
  BLT_PREFIX=$tcl
fi

if test -z "$BLT_PREFIX" ; then
if sh="`type bltwish24 | sed 's/^.* //'`" ; then
  shdir="`dirname $sh`"
  BLT_PREFIX="`cd $shdir/.. ; pwd`"
fi
fi

if test "$BLT_PREFIX" ; then
  BLT_INCLUDE_DIR="${BLT_PREFIX}/include"
  BLT_LIB_DIR="${BLT_PREFIX}/lib"
  BLT_LIB_FLAG="-lBLT24"
  #echo -L$BLT_PREFIX $BLT_LIB_FLAG
  echo -L$BLT_LIB_DIR $BLT_LIB_FLAG
else
  echo "not found -- must build"
  echo "  Implement me."
  exit 1
fi

AC_SUBST(BLT_INCLUDE_DIR)
AC_SUBST(BLT_LIB_DIR)
AC_SUBST(BLT_LIB_FLAG)

##-- Find Xerces-c  ------------------------------------------------------

echo -n "Looking for Pre-built Xerces-c... "

if test "$xerces"; then
  XML_LIB_DIR=$xerces
fi

if test -z "$XML_LIB_DIR"; then
  case $host in
  *-irix*)
    if test "$is_64bit" = "yes"; then
      if test -e /res/sci/data6/sparker/xerces-c/lib64/libxerces-c1_?.so; then
        XML_LIB_DIR="/res/sci/data6/sparker/xerces-c/lib64"
      elif test -e /usr/lib64/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/lib64"
      elif test -e /usr/local/lib64/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/local/lib64"
      elif test -e /usr/lib/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/lib"
      elif test -e /usr/local/lib/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/local/lib"
      fi
    else
      if test -e /res/sci/data6/sparker/xerces-c/lib32/libxerces-c1_?.so; then
        XML_LIB_DIR="/res/sci/data6/sparker/xerces-c/lib32"
      elif test -e /usr/lib32/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/lib32"
      elif test -e /usr/local/lib32/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/local/lib32"
      elif test -e /usr/lib/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/lib"
      elif test -e /usr/local/lib/libxerces-c1_?.so; then
	XML_LIB_DIR="/usr/local/lib"
      fi
    fi
    ;;
  *linux*)
    if test -e /tmp/opt/xerces-1.1/lib/libxerces-c1_?.so; then
      XML_LIB_DIR="/tmp/opt/xerces-1.1/lib"
    elif test -e /usr/lib/libxerces-c1_?.so; then
      XML_LIB_DIR="/usr/lib"
    elif test -e /usr/local/lib/libxerces-c1_?.so; then
      XML_LIB_DIR="/usr/local/lib"
    fi
    ;;
  *)
    if test -e /usr/lib/libxerces-c1_?.so; then
      XML_LIB_DIR="/usr/lib"
    elif test -e /usr/local/lib/libxerces-c1_?.so; then
      XML_LIB_DIR="/usr/local/lib"
    fi
    ;;
  esac
fi

if test -z "$XML_LIB_DIR"; then
  echo "Couldn't find libxerces-c1_?.so.  exiting."
  exit 1
fi

XML_INCLUDE_DIR=$XML_LIB_DIR/../include

XML_LIB_FLAG="-l`basename $XML_LIB_DIR/libxerces-c1_?.so |\
	      sed -e's,lib,,g' -e 's,.so,,g'`"

echo "-L$XML_LIB_DIR $XML_LIB_FLAG"

AC_SUBST(XML_LIB_DIR)
AC_SUBST(XML_LIB_FLAG)
AC_SUBST(XML_INCLUDE_DIR)

##-- Find Nektar--------------------------------------------------------------

AC_ARG_WITH(with_nektar,
	[  --with-nektar=DIR		Use the nektar installation in DIR],
	[with_nektar="$withval"],
	[with_nektar=${with_nektar='no'}])


if ! test "${with_nektar}" = "no"; then
  NEKTAR_PREFIX=${with_nektar}
  NEKTAR_INCLUDE_DIR="${NEKTAR_PREFIX}/include"
  NEKTAR_LIB_DIR="${NEKTAR_PREFIX}/lib"
  NEKTAR_LIB_FLAG="-lhybridopt -lvec"
  echo "with Nektar at ${NEKTAR_PREFIX}"
fi

AC_SUBST(NEKTAR_INCLUDE_DIR)
AC_SUBST(NEKTAR_LIB_DIR)
AC_SUBST(NEKTAR_LIB_FLAG)


##-- Find etags ------------------------------------------------------------

AC_PATH_PROG(ETAGS, etags, notfound)
if test "$ETAGS" = "notfound" ; then
  echo "\tetags not found"
fi
 

##-- Find location of OpenGL -----------------------------------------------

echo -n "checking for OpenGL... "

if test -e /usr/include/GL; then
  GL_INCLUDE_DIR="/usr/include"
elif test -e /usr/X11R6/include/GL; then
  GL_INCLUDE_DIR="/usr/X11R6/include"
fi

if test -c /usr/lib/libGL.so; then
  GL_LIB_DIR="/usr/lib"
elif test -e /usr/X11R6/lib/libGL.so; then
  GL_LIB_DIR="/usr/X11R6/lib"
fi

if test "$GL_INCLUDE_DIR" = ""; then
  echo "couldn't find the location of the GL headers."
  echo "by standard convention, they should be in /usr/include/GL"
  echo ""
  exit 1
else
  echo libraries $GL_LIB_DIR, headers $GL_INCLUDE_DIR/GL
fi

AC_SUBST(GL_INCLUDE_DIR)
AC_SUBST(GL_LIB_DIR)


##-- Other paths for Uintah ------------------------------------------

AC_ARG_ENABLE(enable_sci_malloc,
	[  --enable-sci-malloc		Use SCI malloc checker],
	[enable_sci_malloc="$enableval"],
	[enable_sci_malloc=${enable_sci_malloc='yes'}])

if test "$enable_sci_malloc" = "yes"; then
	MALLOC_DEFINE=""
else
	MALLOC_DEFINE="#define DISABLE_SCI_MALLOC"
fi
AC_SUBST(MALLOC_DEFINE)
	
##-- Other paths for Uintah ------------------------------------------

AC_ARG_WITH(petsc,
	[  --with-petsc=<path-to-petsc>  <path-to-petsc>],
	[withpetsc="$withval"],
	[withpetsc=""])
if test "$optimize" = "yes"; then
   PETSC_SUB="libO"
else
   PETSC_SUB="libg"
fi
PETSC_DIR=$withpetsc
if test "$withpetsc" = "yes"; then
   PETSC_ARCH=`$(PETSC_DIR)/bin/petscarch`
   if test "$is_64bit" != "yes" -a "$PETSC_ARCH" = "IRIX64"; then
      PETSC_ARCH="IRIX"
   fi
fi
AC_SUBST(PETSC_DIR)
AC_SUBST(PETSC_SUB)
AC_SUBST(PETSC_ARCH)

##-- Check for option to build new parallel (distributed memory) SCIRun ------

AC_ARG_ENABLE(enable_parallel,
	[  --enable-parallel		Compile experimental distributed memory version],
	[enable_parallel="$enableval"],
	[enable_parallel=${enable_parallel='no'}])
AC_ARG_WITH(with_globus,
	[  --with-globus=DIR		Use the globus installation in DIR],
	[with_globus="$withval"],
	[with_globus=${with_globus='no'}])

if test "$enable_parallel" = "yes"; then
  if test "$with_globus" = "no"; then
    echo "Must include --with-globus with --enable-parallel"
    exit 1
  fi

  PARALLEL_DEFINE="#define SCI_PARALLEL"
  parallel_output="
	        SCICore/globus_threads/Makefile \
	      Component/Makefile \
	        Component/CIA/Makefile \
	        Component/PIDL/Makefile \
	        PSECore/Interface/Makefile \
	        PSECore/Controller/Makefile \
	        PSECore/Builder/Makefile \
	      newmain/Makefile \
	        tools/sidl/Makefile \
		testprograms/Component/Makefile \
		  testprograms/Component/argtest/Makefile \
		  testprograms/Component/memstress/Makefile \
		  testprograms/Component/mitest/Makefile \
		  testprograms/Component/objects/Makefile \
		  testprograms/Component/pingpong/Makefile \
		"
  BUILD_PARALLEL="yes"
  GLOBUS_INCLUDE="-I$with_globus/include"
  GLOBUS_LIB="$with_globus/lib"
else
  PARALLEL_DEFINE=""
  BUILD_PARALLEL="no"
  GLOBUS_INCLUDE=""
  GLOBUS_LIB=""
fi
AC_SUBST(GLOBUS_INCLUDE)
AC_SUBST(GLOBUS_LIB)
AC_SUBST(PARALLEL_DEFINE)
AC_SUBST(BUILD_PARALLEL)

##-- Emit local configuration file -------------------------------------------

if test "$is_64bit" = "yes"; then
  NBITS=64
else
  NBITS=32
fi
AC_SUBST(NBITS)

AC_ARG_ENABLE(assertion-level,
	[  --enable-assertion-level=N   Use assertion level N (0-3)],
	[enable_assertion_level="$enableval"],
	[enable_assertion_level=${enable_assertion_level=3}])
ASSERTION_LEVEL=$enable_assertion_level
AC_SUBST(ASSERTION_LEVEL)

AC_SUBST(TEMPLATE_BOX)
AC_SUBST(TEMPLATE_TAG)

##-- Check enterleave flag ---------------------------------------------------

AC_ARG_ENABLE(enterleave,
	[  --enable-enterleave		Make gmake print out entering/leaving statements],
	[enterleave="$enableval"],
	[enterleave=${enterleave='no'}])

if test "$enterleave" = "yes" ; then
	NOPRINTDIR=EMPTY
else
	NOPRINTDIR="--no-print-directory"
fi
AC_SUBST(NOPRINTDIR)

##-- Check for header files --------------------------------------------------

AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(sys/time.h)
AC_PATH_XTRA()
if test x"$X_LIBS" = x"-L/usr/lib" -o x"$X_LIBS" = x" -L/usr/lib"; then
  X_LIBS=""
fi

if ! test x"$X_LIBS" = x; then
  X_LIBS="-Wl,-rpath,$x_libraries $X_LIBS"
fi

##-- Check for programs ------------------------------------------------------

# Yacc - for sidl
AC_PROG_YACC()
AC_SUBST(YACC)

# Lex - for sidl
AC_PROG_LEX()
AC_SUBST(LEX)
AC_SUBST(LEXLIB)

##-- Generate Output Files ---------------------------------------------------

AC_OUTPUT(Makefile \
	  sci_defs.h \
	      , echo timestamp > stamp-h
         )

#
# $Log$
# Revision 1.53.2.4  2000/12/04 04:22:08  moulding
# moved fixes for newer xerces version from HEAD to FIELD_REDESIGN
#
# Revision 1.53.2.3  2000/10/26 13:16:58  moulding
# merge HEAD into FIELD_REDESIGN
#
# Revision 1.71  2000/10/24 05:57:05  moulding
# new module maker Phase 2: new module maker goes online
#
# These changes clean out the last remnants of the old module maker and
# bring the new module maker online.
#
# Revision 1.70  2000/10/21 19:17:42  moulding
# added some comment lines that will be un-commented when the new module maker
# comes on line.
#
# Revision 1.69  2000/09/14 15:33:47  sparker
# Added a configure flag --disable-sci-malloc
#
# Revision 1.68  2000/09/12 15:48:02  sparker
# Added --with-petsc configuration flag
#
# Revision 1.67  2000/09/05 17:26:54  moulding
#
#
# removed hardcoding for xerces stuff.  It now looks for xerces in Utah locations
# first ('cuz we're lazy) and then some standard locations (/usr/lib,
# /usr/local/lib).  And to top it off, there's a --with-xerces switch in case
# it's somewhere else.
#
# Revision 1.66  2000/09/04 06:20:03  moulding
#
#
# fixed execute permissions for createTclIndex
#
# Revision 1.65  2000/09/03 23:47:17  moulding
# added stuff to allow executables to be assigned as well as libraries for the --with-tcl configure option
#
# Revision 1.64  2000/08/10 15:22:55  kirby
#
# nektar fixes
#
# Revision 1.63  2000/08/10 14:29:34  jehall
# Minor fixes to Nektar section of configure
#
# Revision 1.62  2000/08/10 03:33:36  yarden
# add --with-nektar
#
# Revision 1.61  2000/08/01 19:17:37  moulding
#
#
# Added Todd Miller's "-with-tcl" stuff
#
# Revision 1.60  2000/07/11 20:21:56  yarden
# add -rpath if the x_libraries are not in the standard place.
#
# Revision 1.59  2000/06/12 20:23:31  sparker
# Commented out f77 config on linux - for now
#
# Revision 1.58  2000/06/12 18:39:00  sparker
# Added F77 configuration
#
# Revision 1.57  2000/06/10 04:18:22  moulding
# added a section to search for GL headers
#
# Revision 1.56  2000/06/09 17:46:16  kuzimmer
# Modified so that linux and 64bit compiles won't choke on the new image
# and compression libraries
#
# Revision 1.55  2000/06/08 22:29:51  kuzimmer
# fixed an error in IMAGE_LIBS
#
# Revision 1.54  2000/06/08 20:32:48  kuzimmer
#  modified so that linux will compile without SGI specific image and compression libraries
#
# Revision 1.53  2000/05/11 20:26:05  mcole
# add etags generation to build system
#
# Revision 1.52  2000/03/23 10:33:10  sparker
# Configure new exception facility (using libexc on SGI)
#
# Revision 1.51  2000/03/20 23:07:06  yarden
#  enable compilation in any subdir (sparker)
#  fix sstream include
#
# Revision 1.50  2000/03/20 19:35:41  sparker
# Added VPATH support
#
# Revision 1.49  2000/03/17 09:25:08  sparker
# New makefile scheme: sub.mk instead of Makefile.in
# Use XML-based files for module repository
# Plus many other changes to make these two things work
#
#
