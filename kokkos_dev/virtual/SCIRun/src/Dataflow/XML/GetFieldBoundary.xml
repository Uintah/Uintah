<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->



<component name="GetFieldBoundary" category="NewField">
  <overview>
    <authors>
      <author>Martin Cole</author>
    </authors>
    <summary>The GetFieldBoundary module extracts a boundary surface from
a volume field.</summary>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <!-- one of (device port file) -->
      <port>
	<name>Field</name>
	<description>
	  <p>
             Accepts any field. Only useful with fields that have
faces.
          </p>
	</description>
	<datatype>SCIRun::Field</datatype>
	<componentname>FieldReader</componentname>
      </port>
    </inputs>
    <outputs>
      <!-- one of (device port file) -->
      <port>
	<name>BoundaryField</name>
	<description>
	  <p>A TriSurfField or QuadSurfField of doubles.</p>
	</description>
	<datatype>SCIRun::Field</datatype>
	<componentname>ShowField</componentname>
      </port>
      <port>
	<name>Mapping</name>
	<description>
	  <p>Outputs a mapping from the input volume to the
BoundaryField.</p>
	</description>
	<datatype>SCIRun::Matrix</datatype>
	<componentname>ShowField</componentname>
      </port>
    </outputs>
  </io>
  <nets>
    <net id="GetFieldBoundary">
      <title>GetFieldBoundary Regression Test</title>

      <p>Use the GetFieldBoundary module to extract just the outside
shell of the sphere module, then use <modref package="SCIRun"
name="ApplyMappingMatrix"/> to put the values from the original field
onto the boundary.</p>

      <p>This network can be found at
src/nets/Modules/NewField/GetFieldBoundary.net.</p>

    </net>
    <net id="GetFieldBoundary-quadtest">
      <title>GetFieldBoundary-quadtest Regression Test</title>

      <p>Convert the sphere data set into a HexVol, then test
GetFieldBoundary on that HexVol to make sure that a QuadSurf is created
successfully. Then chop a chunk of that closed QuadSurf boundary out
and test GetFieldBoundary on that to make sure that the edge of the cut
is properly clipped out.  See also GetFieldBoundary-tritest.net</p>

      <p>This network can be found at
src/nets/Modules/NewField/GetFieldBoundary-quadtest.net.</p>

    </net>
    <net id="GetFieldBoundary-tritest">
      <title>GetFieldBoundary-tritest Regression Test</title>

      <p>Test out the GetFieldBoundary module on a TetVolMesh, then clip
out a chunk of that closed sphere and test GetFieldBoundary on the
resulting TriSurfMesh to make sure that it is detected properly.  See
also GetFieldBoundary-quadtest.net</p>

      <p>This network can be found at
src/nets/Modules/NewField/GetFieldBoundary-tritest.net.</p>

    </net>
  </nets>
  <testing>
    <plan>
      <description>
	<p>Feed the module a volume mesh and render the output.</p>
      </description>
      <step>
	<p>Load ./doc/GetFieldBoundary_test.net</p>
      </step>
      <step>
	<p>Execute the net.</p>
      </step>
      <step>
	<p>The user should see the correct Gouraud shaded faces, along
with normals and edges.</p>
      </step>
      <step>
	<p>Select wireframe in the viewer.  There should be no
interior faces, although this could be caused by bad input
(unconnected volume)</p>
      </step>
    </plan>
  </testing>
</component>
