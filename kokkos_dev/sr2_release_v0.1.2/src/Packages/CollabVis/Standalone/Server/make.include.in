#
# Directory variables
#
SRCTOP  := @top_srcdir@

#
# Libraries and other flags
#
THREAD_LIBS := @THREAD_LIBS@
PLATFORM_LDFLAGS := @PLATFORM_LDFLAGS@
TRACEBACK_LIB := @TRACEBACK_LIB@

# XML
XML_LIB_DIR := @XML_LIB_DIR@
XML_LIB_FLAG := @XML_LIB_FLAG@
XML_LIBRARY := $(LDRUN_PREFIX)$(XML_LIB_DIR) -L$(XML_LIB_DIR) $(XML_LIB_FLAG)
XML_INCLUDE := -I@XML_INCLUDE_DIR@

# OpenGL
GL_INCLUDE := -I@GL_INCLUDE_DIR@ -I@GLUT_INCLUDE_DIR@
GL_LIB     := @GLUT_LIB_DIR@ -lglut -lGL -lGLU @GLUT_AUX_LIBS@ -lm

INCLUDES += -I$(SRCTOP) $(XML_INCLUDE)

INCLUDES := $(sort $(INCLUDES))

# variables and suffix rules for module transformation
#------------------------------------------------------------------------------

CC              := @CC@
CXX             := @CXX@
AS              := @AS@
AR		:= @AR@
LD              := ld
CFLAGS          := @CFLAGS@ $(CFLAGS) -DSCICORESHARE=""
SOFLAGS         := @SOFLAGS@
ASFLAGS         := @ASFLAGS@  $(ASFLAGS)
CC_DEPEND_REGEN = @CC_DEPEND_REGEN@
NEED_SONAME	:= @NEED_SONAME@
F77		:= @F77@
FFLAGS		:= @FFLAGS@ $(FFLAGS)
F77_DEPEND_REGEN = @F77_DEPEND_REGEN@
ifeq ($(NEED_SONAME),yes)
SONAMEFLAG = -Wl,-soname,$(notdir $@)
else
SONAMEFLAG = 
endif
LINKER_ARCHIVE  = @LINKER_ARCHIVE@

.SUFFIXES: .cc .c .cpp

.cc.o: $<
	$(CXX) $(CFLAGS) $(INCLUDES) $(CC_DEPEND_REGEN) -c $< -o $@
#ifeq ($(CC_DEPEND_REGEN),-MD)
#	mv $(basename $(notdir $@)).d $(basename $@).d
#endif

.c.o: $<
	$(CC) $(CFLAGS) $(INCLUDES) $(CC_DEPEND_REGEN) -c $< -o $@
#ifeq ($(CC_DEPEND_REGEN),-MD)
#	mv $(basename $(notdir $@)).d $(basename $@).d
#endif

.cpp.o: $<
	$(CXX) $(CFLAGS) $(INCLUDES) $(CC_DEPEND_REGEN) -c $< -o $@
