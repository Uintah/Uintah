How to build and run a kokkos enabled example.

1) Export CC, CXX, and LINK (these need to be exported since the included kokkos version
   is fragile and does not correctly propagate these variables).

  export CC=gcc
  export CXX=g++
  export LINK=g++

2) Create the directories the build and third-party-libraries (TPLS)

  mkdir opt
  mkdir -p opt/TPLS
  mkdir -p opt/TPLS_src
  mkdir -p opt/TPLS_src/kokkos
  mkdir -p opt/TPLS_src/kokkos-build

3) Export TPLS_PATH and the path to the Kokkos source
  cd opt
  export TPLS_PATH=`pwd`/TPLS
  export KOKKOS_PATH=`pwd`/TPLS_src/kokkos


4) Clone the kokkos repo
  cd TPLS_src
  git clone https://github.com/kokkos/kokkos.git
  

5) Configure and build Kokkos

  cd kokkos-build
  $KOKKOS_PATH/generate_makefile.bash \
    --prefix=$TPLS_PATH \
    --kokkos-path=$KOKKOS_PATH \
    --with-openmp \
    --with-serial

  make -j CC=$CC CXX=$CXX LINK=$LINK
  make install CC=$CC CXX=$CXX LINK=$LINK

  # To test Kokkos run the following make commands
  # make -j build-test CC=$CC CXX=$CXX LINK=$LINK
  # make test CC=$CC CXX=$CXX LINK=$LINK

6) Configure and build Uintah

  cd ../..
  ../src/configure \
    --enable-64bit \
    --enable-optimize \
    CXXFLAGS="-I$TPLS_PATH/include -DUINTAH_ENABLE_KOKKOS -std=c++11" \
    LDFLAGS="-L$TPLS_PATH/lib -l:libkokkos.a"

  make -j sus

NOTE: When using this directory structure, the Kokkos Programming Guide can be found in the "KOKKOS_PATH/doc/" directory.