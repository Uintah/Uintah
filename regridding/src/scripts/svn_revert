#!/bin/bash

#usage
#assumes unmodified code

#svn_safe_up -r revision      updates current directory to revision number
#svn_safe_up -r revision target        updates target to revision number

usage="svn_safe_up -r revision# target"

RESDONE=43545
RESSTART=43465
if [ $# -ne 3 ]; then
  echo "$usage"
  exit
fi

#1st parameter is revision number
if [ "$1" != "-r" ]; then
  echo "$usage"
  exit
fi

torevision=`echo $2 | grep "^[0-9]*$"`

if [ "$torevision" == "" ]; then
  echo "Invalid revision number"
  echo "$usage"
  exit
fi

if [ -e $3 ]; then
  echo "Error target '$3' does not exist"
fi
target="$3"

if [ -d $target ]; then
  svntype=checkout
else
  svntype=export
fi

svn_revision=`svn info $target | grep Revision | cut -f 2 -d " "`
echo "Current svn revision: $svn_revision"
echo "Target svn revision number: $torevision"

#make Packages directory and symbolic link for Uintah
pwd &>.test
path=`sed -e 's/src\/.*/src/g' .test`

mkdir $path/Packages &> /dev/null
ln -s $path $path/Packages/Uintah &> /dev/null

#compute svn paths
svn_path=`svn info $target | grep URL | cut -f2 -d " "`
echo "$svn_path" &> .test
old_svn_path=`sed -e 's/src/src\/Packages\/Uintah/g' .test`
rm -f .test

#echo $svn_path
#echo $old_svn_path

echo "WARNING this script will delete any changes to files within the target"

#remove current target
rm -Rf $target

if [ $? -ne 0 ]; then
  echo "Error deleting target"
  exit
fi

#attempt to checkout target in old path
echo "svn $svntype -r $torevision $old_svn_path@$torevision"
svn $svntype -r $torevision $old_svn_path@$torevision
    
#if not successful
if [ $? -ne 0 ]; then
  #attempt to checkout target in new path
  echo "svn $svntype -r $torevision $svn_path@$torevision"
  svn $svntype -r $torevision $svn_path@$torevision
fi


