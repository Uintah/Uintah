#! /bin/csh
#
#.......................................................................
# pscp
#
# pscp <num Processors>  <login@Machine>:<remote dir> < localDirectory>
# You must be able to ssh onto the remote machine without a password
# or it won't work... On some systems you may need to use 
# a different 'ssh'... You may set the SSH environment variable to this
# ssh (eg: setenv SSH rssh) to use the specified SSH.
# 
#.......................................................................

#------------------
# unalias commands
unalias ssh
unalias rm
unalias cd

#------------------
# error checking
if ($#argv != 3 && $#argv != 4 && $#argv != 5 ) then
  echo ""
  echo "Error: Wrong number of args..."
  echo ""
  echo "Usage: pscp_pull [-v] [-verify] <# of Processors> <login@Remote Machine>:<remote dir> <local dir>"
  echo ""
  echo "             -v - optional verbose flag"
  echo ""
  echo "             -verify  verify data that has already been received"
  echo ""
  echo "       [Note, you can setenv SSH to use a specific 'ssh' if necessary."
  echo ""
  exit 1
endif

# Verify that /bin/ls exists
if ( ! -f /bin/ls ) then
  echo ""
  echo "ERROR: /bin/ls does not exist.  Please determine where the 'ls' program"
  echo "       lives and update the pscp_pull_driver script."
  echo ""
  exit 1
endif

set beVerbose = false
if ($argv[1] == "-v") then
  set beVerbose = true
  shift
endif

set verifyData = false
if ($argv[1] == "-verify") then
  set verifyData = true
  shift
endif

set nproc         = $argv[1]
set mac_and_dir   = $argv[2]
set localDir      = $argv[3]

set remote_machine = `echo $mac_and_dir |cut -d\@ -f2 | cut -d\: -f1`
set user_test      = `echo $mac_and_dir |cut  -s -d\@ -f1`

if ( $user_test == "" ) then
  set user_test = $USER
endif

setenv LOGIN              $user_test@$remote_machine
setenv REMOTEDIR_TMP      `echo $mac_and_dir |cut -d\: -f2`
setenv LOCALDIR           $localDir
setenv REMOTEDIR          $REMOTEDIR_TMP

if( $beVerbose == "true" ) then
  echo ""
  echo "Basic settings:"
  echo ""
  echo "login:       $LOGIN"
  echo "nprocessors: $nproc"
  echo "localDir:    $localDir"
  echo "remoteDir:   $REMOTEDIR"
  echo ""
  if( $verifyData == "true") then
    echo "Data will be verified"
  endif
endif

#------------------
# Bulletproofing

echo ""
echo "Running Bulletproofing tests..."
echo ""

if( $beVerbose == "true" ) then
  echo "Verify pscp_pull_driver exists..."
endif

set PSCP_PULL_DRIVER = `dirname $0`/pscp_pull_driver
if( ! -e $PSCP_PULL_DRIVER ) then
  echo ""
  echo "ERROR: pscp_pull_driver ('$PSCP_PULL_DRIVER') not found... Goodbye."
  echo ""
  exit 1
endif

if( $verifyData == "true") then
  set DATAVERIFY_PULL_DRIVER = `dirname $0`/dataVerify_pull_driver
  if( ! -e $PSCP_PULL_DRIVER ) then
    echo ""
    echo "ERROR: dataVerify_pull_driver ('$DATAVERIFY_PULL_DRIVER') not found... Goodbye."
    echo ""
    exit 1
  endif
endif



if( $beVerbose == "true" ) then
  echo "Verify local directory..."
endif

if ( ! -e $localDir ) then
  echo ""
  echo "ERROR: Local directory '$localDir' does not exist."
  echo "       Please create it... Goodbye."
  echo ""
  exit 1
endif

if( $beVerbose == "true" ) then
  echo "Verify password'less access..."
endif

if( ! $?SSH ) then
  setenv SSH ssh
endif

if( $beVerbose == "true" ) then
  echo "Using SSH of $SSH"
endif

set test = `$SSH -x $LOGIN "echo 'password_access_works'"`

if ( $test != "password_access_works" ) then
  echo ""
  echo "ERROR:  Password-less access is not working. You must be able to login"
  echo "        into '$remote_machine' without a password for this script to work..."
  echo "        Goodbye."
  echo ""
  exit 1
endif

if( $beVerbose == "true" ) then
  echo "Verify remote directory..."
endif

set REMOTE_DIR_VALID = `$SSH $LOGIN "if ( -d $REMOTEDIR ) echo yes"`

if ( $REMOTE_DIR_VALID != "yes" ) then
  echo ""
  echo "ERROR: Remote directory '$REMOTEDIR' does not appear to exist."
  echo "       Please verify that you have the correct path.  Goodbye."
  echo ""
  echo "       (If it does, it is possible that the problem is you don't run csh"
  echo "        on the remote machine... if this is the case, contact Dav.)"
  echo ""
  exit 1
endif

#------------------
# Now do the work

echo ""
echo "Fetch the data..."
echo ""

if( $verifyData == "true") then
  /usr/bin/time -p gmake -f $DATAVERIFY_PULL_DRIVER -j $nproc
else
  /usr/bin/time -p gmake -f $PSCP_PULL_DRIVER -j $nproc
endif
echo ""
echo "Done..."
echo ""
