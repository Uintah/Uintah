void uvelcoef(constSFCXVariable<double> uu, SFCXVariable<double> cesav,
     SFCXVariable<double> cwsav, SFCXVariable<double> cnsav,
     SFCXVariable<double> cssav, SFCXVariable<double> ctsav,
     SFCXVariable<double> cbsav, SFCXVariable<double> ap,
     SFCXVariable<double> ae, SFCXVariable<double> aw,
     SFCXVariable<double> an, SFCXVariable<double> as,
     SFCXVariable<double> at, SFCXVariable<double> ab,
     constSFCYVariable<double> vv, constSFCZVariable<double> ww,
     constCCVariable<double> den, constCCVariable<double> vis,
     constCCVariable<double> den_ref, SFCXVariable<double> SU,
     constCCVariable<double> old_den, constSFCXVariable<double> old_UU,
     constCCVariable<double> eps,
     double deltat, double grav,
     bool lcend,
     OffsetArray1<double> ceeu, OffsetArray1<double> cweu,
     OffsetArray1<double> cwwu, OffsetArray1<double> cnn,
     OffsetArray1<double> csn, OffsetArray1<double> css,
     OffsetArray1<double> ctt, OffsetArray1<double> cbt,
     OffsetArray1<double> cbb, OffsetArray1<double> sewu,
     OffsetArray1<double> sew, OffsetArray1<double> sns,
     OffsetArray1<double> stb, OffsetArray1<double> dxepu,
     OffsetArray1<double> dxpwu, OffsetArray1<double> dxpw,
     OffsetArray1<double> dynp, OffsetArray1<double> dyps,
     OffsetArray1<double> dztp, OffsetArray1<double> dzpb,
     OffsetArray1<double> fac1u, OffsetArray1<double> fac2u,
     OffsetArray1<double> fac3u, OffsetArray1<double> fac4u,
     OffsetArray1<int> iesdu, OffsetArray1<int> iwsdu,
     OffsetArray1<double> nfac, OffsetArray1<double> sfac,
     OffsetArray1<double> tfac, OffsetArray1<double> bfac,
     OffsetArray1<double> fac1ns, OffsetArray1<double> fac2ns,
     OffsetArray1<double> fac3ns, OffsetArray1<double> fac4ns,
     OffsetArray1<int> n_shift, OffsetArray1<int> s_shift,
     OffsetArray1<double> fac1tb, OffsetArray1<double> fac2tb,
     OffsetArray1<double> fac3tb, OffsetArray1<double> fac4tb,
     OffsetArray1<int> t_shift, OffsetArray1<int> b_shift,
     IntVector idxLoU, IntVector idxHiU);
