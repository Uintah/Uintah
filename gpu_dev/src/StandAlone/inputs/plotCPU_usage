#!/bin/csh -f
#______________________________________________________________________
#  plotCPU_usage
#
#  Look for any file that contains the phrase "delT=" and parse it
#  to compute the cpu_usage.
#
#  Usage:
#      --maxdepth  <1,2,3...>   :recursion depth
#      --hardcopy  <y/n>        : do you want to produce a jpg file
#______________________________________________________________________

getopt -Q -q --long maxdepth,hardcopy -- $argv:q >& /dev/null

if($#argv == 0) then
  echo "Usage: $0 "
  echo "   --maxdepth recursive depth"
  echo "   --hardcopy <y/n>"
  exit 1
endif

set hardcopy = "n"
set depth = 1
while ($#argv)
   switch ($1:q)
     case --maxdepth:
        set depth = $2
        shift; shift;
        breaksw
     case --hardcopy:
        set hardcopy = "$2"
        shift; shift
        breaksw
     case " ":
        shift
        break
     default:
        echo "Usage: $0 "
        echo "   --maxdepth recursive depth"
        echo "   --hardcopy <y/n>"
        exit 1
   endsw
end


#__________________________________
set f = `find -maxdepth $depth -type f | xargs grep -l delT= | sort`

echo "examining each of these output files"
echo $f
#__________________________________
/bin/rm -f .procs .date .elapsedTime .data
touch .procs .date .elapsedTime

foreach X ($f[*]:q)
 grep Date $X -m 1| cut -d":" -f2-4 >> .date
 grep "processors (using MPI)" $X | cut -d" " -f 2 >> .procs
 grep Time= $X |tail -n 1  | cut -d"=" -f4 | cut -d"," -f1 >> .elapsedTime
end

#__________________________________
# convert the date into something gnuplot can handle
# Tue Jul 10 13:23:34 2007 -> 07/10/07_13:23
# put quotes around the date
# use the date command to reformat it
awk -F, '{printf("\"%s\" \n",$1)}' <.date >&.date2
awk -F, '{time=system("date +%D_%H:%M -d"$1)}'<.date2 >& .date
# sort by date
paste -d "," .date .procs .elapsedTime |sort -t/ -n -k1.8  >& .data

#__________________________________
# compute number of cpu hours
awk -F, ' {hr=$2 * $3/3600 ; printf( "%s, %g, %g, %g \n",$1, $2, $3, hr) }' < .data >& .data.tmp
awk -F, 'NR==1 {sum=$4; printf( "%s %g %g %g %g \n",$1, $2, $3, $4, sum )} ; NR>1 {sum=sum + $4; printf( "%s %g %g %g %g \n",$1, $2, $3, $4, sum )}' <.data.tmp >& .data

echo "Extracted data"
echo "date #procs  #elapsed Time  cpu hrs  cum cpu hrs"
more .data
/bin/rm .procs .date .date2 .elapsedTime .data.tmp

/bin/rm -f gp
#__________________________________
# if making a hardcopy
if( $hardcopy == "y" || $hardcopy == "Y" ) then 
echo "Generating the postscript file cpu_usage.jpg"
/bin/rm -f gp
cat > gp << fin
set terminal postscript color solid "Times-Roman" 12
set output "cpu_usage.jpg"
fin
else
cat > gp << fin
set terminal x11 font "fixed,bold,12" size 1024,768
fin
#__________________________________
# generate the  plot script
cat >> gp << fin

set multiplot
set size 1.0,0.66 # for three plots
set origin 0.0,0.33

set grid xtics ytics 
set y2tics
set xdata time
set format x "%b-%d \n %a \n"
set timefmt "%m/%d/%y_%H:%M"
set ylabel 'CPU Hours'         textcolor lt 1
set y2label 'Total CPU Hours'  textcolor lt 2
set xlabel 'Date

plot '.data' using 1:4 lw 3 t           'CPU hrs' with impulse,\
     '.data' using 1:5 axis x1y2 t 'Cum. CPU hrs' with step
#__________________________________
set size 1.0,0.33 
set origin 0.0,0.0
unset y2label
set ylabel 'Processors' textcolor lt 1
plot '.data' using 1:2 lw 3 t           'CPUs' with impulse
set nomultiplot

fin
if( $hardcopy == "n") then
  echo "pause -1 'Hit return to exit'" >> gp
endif
#__________________________________
# plot it up
gnuplot gp

if($hardcopy == "y" || $hardcopy == "Y") then
  mogrify -rotate 90 cpu_usage.jpg
endif

/bin/rm .data gp

exit
