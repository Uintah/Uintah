#!/bin/csh -f
#______________________________________________________________________
#  validateUda:
#
#   usage:  validateUda  <udas>
#
#  This scripts performs the following tests on a uda:
#    0)  does index.xml exist
#    1)  does each timestep listed in the index.xml file exist
#    2)  Does timestep/timestep.xml file exist
#    3)  Does a level directory for each level exist
#    4)  for each level directory does a pxxxx.xml file exist
#    5)  for each level directory does a pxxxx.data file exist and is size > 0 
#    6)  Does each pxxxxx.data file contain data (RAID stripes exist)
#______________________________________________________________________

# defaults
set runTest6 = "1"

set STAT = "stat --format %s"
if ( `uname` == "Darwin" ) then
  set STAT = "stat -f %z"
endif


# bulletproofing
if ($#argv == 0) then
  echo "Usage validateUda  -6 <udas>"
  echo "     -6:   Skip do RAID strips exist test"
  exit
endif

# parse the user inputs
set temp=(`getopt --shell tcsh --unquoted --options 6:: -- $argv:q`)

if ($status != 0) then 
  echo "Terminating..." >/dev/stderr
  exit 1
endif

eval set argv=\($temp:q\)

while (1)
  switch($1:q)  # $1 is first argument
  case -6:
    echo "skip test 6" ; shift
    set runTest6 = "0"
    breaksw;           
  case --:
    shift    
    break    
  endsw
end


set udas = ""
while ($#argv > 0)
  set udas = ($udas "$1:q" )
  shift
end

echo "udas: $udas"

# bulletproofing
foreach U ($udas[*]:q)
  if(! -d $U) then
    echo " ERROR: The uda $U does not exist. Now exiting"
    exit
  endif
end

date


#__________________________________
foreach U ($udas[*]:q)
  echo " "
  echo "---------------------------------"
  echo "$U"
  cd $U
  
  echo -n "Test 0:  Does index.xml exist?"

  set passed0 = true
  if ( ! -e index.xml ) then
    set passed0 = false
  endif
  echo "                                        $passed0"
  
  if ($passed0 == "false") then
    goto bottom
  endif
  
  #__________________________________
  # Test 1:  does each timestep directory exist 
  echo -n "Test 1:  Does each timestep in index.xml exist?"
  set timesteps = (`grep "timestep href=" index.xml | awk -F '[=/"]' '{print $3}'`)
 
  set passed1 = true
  set missingTimesteps
  foreach T ($timesteps[*]:q)
    if ( ! -d $T ) then
      set passed1 = false
      set missingTimesteps = ($missingTimesteps $T)
    endif
  end

  echo "                       $passed1"
  if ( $passed1 == "false" ) then
    echo""
    foreach T ($missingTimesteps[*])
      echo "          Missing directory:  $T"
    end
  endif
  #__________________________________
  #Test 2: 
  echo -n "Test 2:  Do all timesteps.xml files exist?"
  set passed2 = true
  foreach T ($timesteps[*]:q)
    if ( -d $T ) then
      
      if ( ! -e $T/timestep.xml ) then
        set passed2 = false
        echo "           Missing $T/timestep.xml"
      endif
      
    endif
  end
  echo "                            $passed2"
  
  #__________________________________
  #Test 3:  does a level directory exist for each level
  echo -n "Test 3:  Do all the level directories exist?"    
  set passed3 = true
  foreach T ($timesteps[*]:q)
    if( -d $T && -e $T/timestep.xml ) then
      
      set nLevels = `grep numLevels $T/timestep.xml | awk -F '[><]' '{print $3}' `
      @ l = 0
      while( $l< $nLevels)
        set level = "l$l"
        
        if ( ! -d $T/$level ) then
          echo "        Missing $T/$level"
          set passed3 = false
        endif
        
        @ l ++
      end
    endif
  end
  echo "                          $passed3"    
  
  echo "Test 4:  Do all of the pxxxx.xml  files exist and have size > 0?      "  
  echo "Test 5:  Do all of the pxxxx.data files exist and have size > 0?      "
  set passed4 = true
  set passed5 = true
  
  if( $runTest6 == "1") then 
    echo "Test 6:  Does each pxxxxx.data file contain data (RAID stripes exist)?"
    set passed6 = true
  endif 

  
  
  foreach T ($timesteps[*]:q)
  
    
    if ( -e $T/timestep.xml ) then

      
      #__________________________________
      #Test 4:  do the pxxxx.xml files for each level
      set pxxx_xml = `grep Datafile $T/timestep.xml | awk -F '[="]' '{print $3}'`
      
      foreach D ($pxxx_xml[*]:q)
        set here = "$T/$D"
        
        if( ! -e $here ) then
          echo "           Missing $here"
          set passed4 = false
        endif
        
        if ( -e $here ) then 
          set bytes = `$STAT $here`
          if ( $bytes == "0" ) then
            echo "            $here has 0 bytes"
            set passed4 = false
          endif
        endif
      end   
      
      #__________________________________
      # do all pxxxx.data files exist and have size > 0
      set pxxx_data = `grep Datafile $T/timestep.xml | awk -F '[=."]' '{print $3".data"}'`
      
      foreach D ($pxxx_data[*]:q)
        set here = "$T/$D"
        
        if( ! -e $here ) then
          echo "           Missing $here"
        endif
        
        if ( -e $here ) then 
          set bytes = `$STAT $here`                 
                                                    
          if ( $bytes == "0" ) then                 
            echo "            $here has 0 bytes"    
            set passed5 = false                     
          endif                                     
        endif
      
      end
      
      #__________________________________
      #  Test 6:  Does each pxxxxx.data file contain data (RAID stripes exist)?
      foreach D ($pxxx_data[*]:q)
        set here = "$T/$D"

        if ( -e $here && $runTest6 == 1) then 
        
          set bytes = `$STAT $here`               
          @ middle = $bytes / 2                                                             
          @ endoff = $bytes - 16             
                                                         
          set first_bytes =  "`xxd -ps -l 16 $here`"                                        
          set middle_bytes = "`xxd -ps -l 16 -seek $middle $here`"                          
          set endoff_bytes = "`xxd -ps -l 16 -seek $endoff $here`"                          

          #Ignore t00000 since most data is low-entropy (zero) on the first timestep.       
          #If middle and (first or last) are empty, stripe missing                          
          
          if ( $T != "t00000" &&  $middle_bytes == "00000000000000000000000000000000" \
                              && ($first_bytes  == "00000000000000000000000000000000" ||  $endoff_bytes == "00000000000000000000000000000000" ) ) then

            #Only fail the test if datafiles are gzip-compressed.                           
            grep gzip `echo $here | sed -e 's/data$/xml/'`                                  
            if ( $? == "0" ) then                                                            
              set passed6 = false                                                           
              echo "            $here is empty (possible missing RAID stripe)"              
            endif
             
          endif
                                                                        
        endif
        
      end  # pxxx_data loop
      
    endif  # if timestep exists
    
  end  # timestep loop
  echo "                                                         Test 4:      $passed4"  
  echo "                                                         Test 5:      $passed5"
  
  if( $runTest6 == "1") then
    echo "                                                         Test 6:      $passed6"
  endif
bottom:  
  cd ..
end
exit
