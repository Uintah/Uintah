#!/bin/csh -f
#______________________________________________________________________
#  This script pulls out data from sus 
#   output and plot it using gnuplot.
#  Usage:
#     plotStat <sus output file> < output postScript and pdf files (y/Y), default is no>
#
#  This requires gnuplot 3.8 or greater.
#______________________________________________________________________


set tmp = (`which gnuplot`)

if ( $status ) then
  echo " ERROR: Could not find one of gnuplot"
  exit(0)
endif

if( $#argv == 0 ) then
  echo "plotStat <sus output file> <dump postScript File (y/Y), default is no>"
  exit(1)
endif
set out = $argv[1]
if ( !(-e $out) ) then
    echo "Couldn't find your file $out"
  exit(1)
endif

set hardcopy = "n"
if ( $#argv == 2 ) then
  set hardcopy = $argv[2]
endif 

unalias rm
#__________________________________
# ake a copy of the output file

mkdir scraps >&/dev/null
cp $out scraps/tmp
cd scraps

grep Time= tmp |grep Mem >& rawData.clean

#__________________________________
# Parse the output file.  This is gross
echo "Now extracting the data"


echo "?">&meanTime
echo "?">>meanTime  # mean time data isn't collect the first 4 timestps
echo "?">>meanTime
echo "?">>meanTime

grep elap rawData.clean | cut -d"=" -f4 | cut -d"," -f1 >& elapsedTime
grep mean rawData.clean | cut -d":" -f2 | cut -d" " -f2 >> meanTime
grep elap rawData.clean | cut -d"=" -f2 | cut -d" " -f1 >& physicalTime
grep delT rawData.clean | cut -d"=" -f3 | cut -d"," -f1 >& delT

grep delT rawData.clean | cut -d"=" -f5 | cut -d" " -f2  > memAve
grep delT rawData.clean | cut -d"=" -f5 | cut -d" " -f5  > memMax
paste -d "  " elapsedTime meanTime physicalTime delT memAve memMax>& data

set procs   = `grep processors tmp | cut -d" " -f 2`
set machine = `grep Machine    tmp | cut -d":" -f 2`
set date    = `grep -m1 Date   tmp | cut -d" " -f2-8,10`

echo "Done extracting data"

#______________________________________________________________________
#  create the gnuplot script

echo "" > gp

#__________________________________
# if making a hardcopy
if( $hardcopy == "y" || $hardcopy == "Y" ) then 
echo "Generating the postscript file plotStats.ps"
/bin/rm gp
cat > gp << fin
set terminal x11 1
set terminal postscript color solid "Times-Roman" 12
set output "plotStat.ps"
fin
endif


cat >> gp << fin

#__________________________________
# compute stats this version of gnuplot is > 3.8
haveStats =0
# does this version have the stats patch 
if ( strstrt(GPVAL_COMPILE_OPTIONS,"+STATS") ) print "Computing the statistics of the mean time per timestep"; haveStats = 1
if(haveStats == 1) stats 'data' using 3 name "A"; 
if(haveStats == 1) stats 'data' using 2 name "B"; 


set multiplot
set size 1.0,0.33 # for three plots
set autoscale
set grid xtics ytics
set y2tics     

#__________________________________ TOP
set size   1.0, 0.33       
set origin 0.0, 0.66
set title "$date : $machine : $procs Processors"
set ylabel 'Delt'           textcolor lt 1
set y2label 'Physical Time' textcolor lt 2

set y2range[A_mean - 2*A_stddev:A_mean + 2*A_stddev]

plot 'data' using 1:4           t 'Delt' with lines, \
     'data' using 1:3 axes x1y2 t 'Physical Time' with lines

#__________________________________ Middle
set origin 0.0,0.33
set title ''
set ylabel 'Physical Time'       textcolor lt 1
set y2label 'Mean Time/timestep' textcolor lt 2

set y2range[B_mean - 2*B_stddev:B_mean + 2*B_stddev]

plot 'data' using 1:3           t 'Physical Time' with lines,\
     'data' using 1:2 axes x1y2 t 'meanTime/timestep' with lines


#__________________________________Bottom   
set origin 0.0,0.0
set title ''
set xlabel "ElapsedTime"
set ylabel "Memory useage [MB]"
unset y2label
unset y2tics

plot 'data' using 1:5   t 'ave' with lines, \
     'data' using 1:6   t 'max' with lines
set nomultiplot
pause -1 "Hit return to exit"
fin


#__________________________________
# plot it up
gnuplot gp


if($hardcopy == "y" || $hardcopy == "Y") then
  echo "converting PostScript files to PDF"
  ps2pdf plotStat.ps
  mv plotStat* ../.
endif

#__________________________________
# clean up
/bin/rm -rf scraps

exit(0)
